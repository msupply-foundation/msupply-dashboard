"use strict";(self.webpackChunkgrafana=self.webpackChunkgrafana||[]).push([[7537],{"./public/app/plugins/datasource/grafana/module.ts":(e,a,t)=>{t.r(a),t.d(a,{plugin:()=>L});var n=t("./packages/grafana-data/src/index.ts"),s=t("./.yarn/cache/rxjs-npm-7.5.1-ce59cbb6a3-78e3eecb16.zip/node_modules/rxjs/dist/esm5/internal/observable/from.js"),r=t("./.yarn/cache/rxjs-npm-7.5.1-ce59cbb6a3-78e3eecb16.zip/node_modules/rxjs/dist/esm5/internal/observable/merge.js"),l=t("./.yarn/cache/rxjs-npm-7.5.1-ce59cbb6a3-78e3eecb16.zip/node_modules/rxjs/dist/esm5/internal/observable/of.js"),i=t("./packages/grafana-runtime/src/index.ts");let o;!function(e){e.LiveMeasurements="measurements",e.Annotations="annotations",e.RandomWalk="randomWalk",e.List="list",e.Read="read"}(o||(o={}));const d={refId:"A",queryType:o.RandomWalk};let u;!function(e){e.Dashboard="dashboard",e.Tags="tags"}(u||(u={}));var c=t("./.yarn/cache/react-npm-17.0.2-99ba37d931-b254cc17ce.zip/node_modules/react/index.js"),h=t("./packages/grafana-ui/src/index.ts"),p=t("./.yarn/__virtual__/@emotion-css-virtual-72c314ddb1/0/cache/@emotion-css-npm-11.7.1-25ff8755a7-ac1f56656f.zip/node_modules/@emotion/css/dist/emotion-css.esm.js"),m=t("./public/app/core/components/TagFilter/TagFilter.tsx"),g=t("./public/app/features/annotations/api.ts"),f=t("./.yarn/cache/react-npm-17.0.2-99ba37d931-b254cc17ce.zip/node_modules/react/jsx-runtime.js");const b=(0,f.jsx)("div",{children:"Specify a list of tags to match. To specify a key and value tag use `key:value` syntax."}),v=[{label:"Dashboard",value:u.Dashboard,description:"Query for events created on this dashboard and show them in the panels where they where created"},{label:"Tags",value:u.Tags,description:"This will fetch any annotation events that match the tags filter"}],y=[10,50,100,200,300,500,1e3,2e3].map((e=>({label:String(e),value:e})));function j(e){let{query:a,onChange:t}=e;const n=a,{limit:s,matchAny:r,tags:l,type:i}=n,o=x();return(0,f.jsxs)(h.FieldSet,{className:o.container,children:[(0,f.jsx)(h.Field,{label:"Filter by",children:(0,f.jsx)(h.Select,{menuShouldPortal:!0,inputId:"grafana-annotations__filter-by",options:v,value:i,onChange:e=>t(Object.assign({},n,{type:e.value}))})}),(0,f.jsx)(h.Field,{label:"Max limit",children:(0,f.jsx)(h.Select,{menuShouldPortal:!0,inputId:"grafana-annotations__limit",width:16,options:y,value:s,onChange:e=>t(Object.assign({},n,{limit:e.value}))})}),i===u.Tags&&l&&(0,f.jsxs)(f.Fragment,{children:[(0,f.jsx)(h.Field,{label:"Match any",description:"Enabling this returns annotations that match any of the tags specified below",children:(0,f.jsx)(h.Switch,{id:"grafana-annotations__match-any",value:r,onChange:e=>t(Object.assign({},n,{matchAny:e.target.checked}))})}),(0,f.jsx)(h.Field,{label:"Tags",description:b,children:(0,f.jsx)(m.D,{allowCustomValue:!0,formatCreateLabel:e=>`Use custom value: ${e}`,inputId:"grafana-annotations__tags",onChange:e=>t(Object.assign({},n,{tags:e})),tagOptions:g.lK,tags:l})})]})]})}const x=()=>({container:p.css`
      max-width: 600px;
    `});var C=t("./public/app/features/dashboard/services/DashboardSrv.ts"),F=t("./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js"),S=t("./public/app/features/dashboard/state/DashboardMigrator.ts"),w=t("./.yarn/cache/rxjs-npm-7.5.1-ce59cbb6a3-78e3eecb16.zip/node_modules/rxjs/dist/esm5/internal/operators/map.js");let T=100;class q extends i.DataSourceWithBackend{constructor(e){super(e),this.annotations={QueryEditor:j,prepareAnnotation(e){var a,t,n,s,r;return e.target=null!==(a=e.target)&&void 0!==a?a:{type:null!==(t=e.type)&&void 0!==t?t:u.Dashboard,limit:null!==(n=e.limit)&&void 0!==n?n:100,tags:null!==(s=e.tags)&&void 0!==s?s:[],matchAny:null!==(r=e.matchAny)&&void 0!==r&&r},e},prepareQuery(e){let a;if((0,F.isString)(e.datasource)){const t=(0,S.p)(e.datasource);t&&(a=t)}else a=e.datasource;return Object.assign({},e,{refId:e.name,queryType:o.Annotations,datasource:a})}}}query(e){const a=[],t=[],d=(0,i.getTemplateSrv)();for(const r of e.targets){if(r.queryType===o.Annotations)return(0,s.D)(this.getAnnotations({range:e.range,rangeRaw:e.range.raw,annotation:r,dashboard:(0,C.h4)().getCurrent()}));if(!r.hide)if(r.queryType===o.LiveMeasurements){var u,c;let t=d.replace(r.channel,e.scopedVars);const{filter:s}=r;t&&t.startsWith("telegraf/")&&(t="stream/"+t,r.channel=t);const l=(0,n.parseLiveChannelAddress)(t);if(!(0,n.isValidLiveChannelAddress)(l))continue;const o={maxLength:null!==(u=e.maxDataPoints)&&void 0!==u?u:500};r.buffer?(o.maxDelta=r.buffer,o.maxLength=2*o.maxLength):"now"===(null===(c=e.rangeRaw)||void 0===c?void 0:c.to)&&(o.maxDelta=e.range.to.valueOf()-e.range.from.valueOf()),a.push((0,i.getGrafanaLiveSrv)().getDataStream({key:`${e.requestId}.${T++}`,addr:l,filter:s,buffer:o}))}else r.queryType||(r.queryType=o.RandomWalk),t.push(r)}return t.length&&a.push(super.query(Object.assign({},e,{targets:t}))),a.length?1===a.length?a[0]:(0,r.T)(...a):(0,l.of)()}listFiles(e){return this.query({targets:[{refId:"A",queryType:o.List,path:e}]}).pipe((0,w.U)((e=>{var a;const t=null!==(a=e.data[0])&&void 0!==a?a:new n.MutableDataFrame;return new n.DataFrameView(t)})))}metricFindQuery(e){return Promise.resolve([])}async getAnnotations(e){var a;const t=(0,i.getTemplateSrv)(),s=e.annotation,r=s.target,l={from:e.range.from.valueOf(),to:e.range.to.valueOf(),limit:r.limit,tags:r.tags,matchAny:r.matchAny};if(r.type===u.Dashboard){if(!e.dashboard.id)return Promise.resolve({data:[]});l.dashboardId=e.dashboard.id,delete l.tags}else{if(!Array.isArray(r.tags)||0===r.tags.length)return Promise.resolve({data:[]});const e="__delimiter__",a=[];for(const n of l.tags){const s=t.replace(n,{},(a=>"string"==typeof a?a:a.join(e)));for(const t of s.split(e))a.push(t)}l.tags=a}const o=await(0,i.getBackendSrv)().get("/api/annotations",l,`grafana-data-source-annotations-${s.name}-${null===(a=e.dashboard)||void 0===a?void 0:a.id}`);return{data:[(0,n.toDataFrame)(o)]}}testDatasource(){return Promise.resolve()}}var A;function k(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}class _ extends c.PureComponent{constructor(){super(...arguments),k(this,"state",{channels:[],channelFields:{}}),k(this,"queryTypes",[{label:"Random Walk",value:o.RandomWalk,description:"Random signal within the selected time range"},{label:"Live Measurements",value:o.LiveMeasurements,description:"Stream real-time measurements from Grafana"},{label:"List public files",value:o.List,description:"Show directory listings for public resources"}]),k(this,"onQueryTypeChange",(e=>{const{onChange:a,query:t,onRunQuery:n}=this.props;a(Object.assign({},t,{queryType:e.value})),n(),this.loadChannelInfo()})),k(this,"onChannelChange",(e=>{const{onChange:a,query:t,onRunQuery:n}=this.props;a(Object.assign({},t,{channel:null==e?void 0:e.value})),n()})),k(this,"onFieldNamesChange",(e=>{var a,t;const{onChange:n,query:s,onRunQuery:r}=this.props;let l=[];if(Array.isArray(e)?l=e.map((e=>e.value)):e.value&&(l=[e.value]),1===l.length&&(null===(a=s.filter)||void 0===a||null===(t=a.fields)||void 0===t||!t.length)&&s.channel){var i;const e=(null!==(i=this.state.channelFields[s.channel])&&void 0!==i?i:[]).find((e=>"time"===e.value||"Time"===e.value));e&&e.value&&e.value!==l[0]&&(l=[e.value,...l])}n(Object.assign({},s,{filter:Object.assign({},s.filter,{fields:l})})),r()})),k(this,"checkAndUpdateBuffer",(e=>{const{onChange:a,query:t,onRunQuery:s}=this.props;let r;if(e)try{r=1e3*n.rangeUtil.intervalToSeconds(e)}catch(e){console.warn("ERROR",e)}a(Object.assign({},t,{buffer:r})),s()})),k(this,"handleEnterKey",(e=>{"Enter"===e.key&&this.checkAndUpdateBuffer(e.target.value)})),k(this,"handleBlur",(e=>{this.checkAndUpdateBuffer(e.target.value)})),k(this,"onFolderChanged",(e=>{const{onChange:a,query:t,onRunQuery:n}=this.props;a(Object.assign({},t,{path:null==e?void 0:e.value})),n()}))}loadChannelInfo(){(0,i.getBackendSrv)().fetch({url:"api/live/list"}).subscribe({next:e=>{var a;const t=null===(a=e.data)||void 0===a?void 0:a.channels;if(null!=t&&t.length){const e={},a=t.map((a=>{if(a.data){const t=new Set,s=(0,n.dataFrameFromJSON)(a.data);for(const e of s.fields)t.add(e.name);e[a.channel]=Array.from(t).map((e=>({value:e,label:e})))}return{value:a.channel,label:a.channel+" ["+a.minute_rate+" msg/min]"}}));this.setState({channelFields:e,channels:a})}}})}loadFolderInfo(){const e={targets:[{queryType:o.List,refId:"A"}]};(0,i.getDataSourceSrv)().get("-- Grafana --").then((a=>{a.query(e).subscribe({next:e=>{if(e.data.length){const a=e.data[0].fields[0].values.toArray().map((e=>({value:e,label:e})));this.setState({folders:a})}}})}))}componentDidMount(){this.loadChannelInfo()}renderMeasurementsQuery(){var e;let{channel:a,filter:t,buffer:s}=this.props.query,{channels:r,channelFields:l}=this.state,i=r.find((e=>e.value===a));a&&!i&&(i={value:a,label:a,description:`Connected to ${a}`},r=[i,...r]);const o=new Set,d=a&&null!==(e=l[a])&&void 0!==e?e:[];if(null!=t&&t.fields)for(const e of t.fields)o.has(e)||(d.push({value:e,label:`${e} (not loaded)`,description:"Configured, but not found in the query results"}),o.add(e));let u="";return s&&(u=n.rangeUtil.secondsToHms(s/1e3)),(0,f.jsxs)(f.Fragment,{children:[(0,f.jsx)("div",{className:"gf-form",children:(0,f.jsx)(h.InlineField,{label:"Channel",grow:!0,labelWidth:12,children:(0,f.jsx)(h.Select,{menuShouldPortal:!0,options:r,value:i||"",onChange:this.onChannelChange,allowCustomValue:!0,backspaceRemovesValue:!0,placeholder:"Select measurements channel",isClearable:!0,noOptionsMessage:"Enter channel name",formatCreateLabel:e=>`Connect to: ${e}`})})}),a&&(0,f.jsxs)("div",{className:"gf-form",children:[(0,f.jsx)(h.InlineField,{label:"Fields",grow:!0,labelWidth:12,children:(0,f.jsx)(h.Select,{menuShouldPortal:!0,options:d,value:(null==t?void 0:t.fields)||[],onChange:this.onFieldNamesChange,allowCustomValue:!0,backspaceRemovesValue:!0,placeholder:"All fields",isClearable:!0,noOptionsMessage:"Unable to list all fields",formatCreateLabel:e=>`Field: ${e}`,isSearchable:!0,isMulti:!0})}),(0,f.jsx)(h.InlineField,{label:"Buffer",children:(0,f.jsx)(h.Input,{placeholder:"Auto",width:12,defaultValue:u,onKeyDown:this.handleEnterKey,onBlur:this.handleBlur,spellCheck:!1})})]}),A||(A=(0,f.jsx)(h.Alert,{title:"Grafana Live - Measurements",severity:"info",children:"This supports real-time event streams in Grafana core. This feature is under heavy development. Expect the interfaces and structures to change as this becomes more production ready."}))]})}renderListPublicFiles(){let{path:e}=this.props.query,{folders:a}=this.state;a||(a=[],this.loadFolderInfo());const t=a.find((a=>a.value===e));return e&&!t&&(a=[...a,{value:e,label:e}]),(0,f.jsx)(h.InlineFieldRow,{children:(0,f.jsx)(h.InlineField,{label:"Path",grow:!0,labelWidth:12,children:(0,f.jsx)(h.Select,{menuShouldPortal:!0,options:a,value:t||"",onChange:this.onFolderChanged,allowCustomValue:!0,backspaceRemovesValue:!0,placeholder:"Select folder",isClearable:!0,formatCreateLabel:e=>`Folder: ${e}`})})})}render(){const e=Object.assign({},d,this.props.query);return(0,f.jsxs)(f.Fragment,{children:[(0,f.jsx)(h.InlineFieldRow,{children:(0,f.jsx)(h.InlineField,{label:"Query type",grow:!0,labelWidth:12,children:(0,f.jsx)(h.Select,{menuShouldPortal:!0,options:this.queryTypes,value:this.queryTypes.find((a=>a.value===e.queryType))||this.queryTypes[0],onChange:this.onQueryTypeChange})})}),e.queryType===o.LiveMeasurements&&this.renderMeasurementsQuery(),e.queryType===o.List&&this.renderListPublicFiles()]})}}const L=new n.DataSourcePlugin(q).setQueryEditor(_)}}]);
//# sourceMappingURL=grafanaPlugin.e65e3aa10981aa98e7a1.js.map