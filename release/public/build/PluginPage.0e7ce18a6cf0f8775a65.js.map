{"version":3,"file":"PluginPage.0e7ce18a6cf0f8775a65.js","mappings":"mXAMO,SAASA,GAAoB,MAAEC,IACpC,MAAMC,EAIR,SAA4BD,GAC1B,OAAQA,GACN,KAAKE,EAAAA,gBAAAA,kBACH,MAAO,0CACT,KAAKA,EAAAA,gBAAAA,iBACH,MAAO,kDACT,KAAKA,EAAAA,gBAAAA,iBACH,MAAO,kDACT,QACE,MAAQ,wCAAuCF,KAbnCG,CAAmBH,GACnC,OAAO,SAAC,EAAAI,MAAD,CAAOC,KAAK,uBAAuBC,KAAK,WAAWC,MAAM,MAAMN,QAASA,I,+DCL1E,MAAMO,EAAiBC,GAAyBC,EAAAA,GAAI;gBAC3CD,EAAME,OAAOC,WAAWC;kBACtBJ,EAAME,OAAOG,OAAOC;WAC3BN,EAAME,OAAOL,KAAKU;ECFtB,SAASC,IACd,MAAMC,GAAoBC,EAAAA,EAAAA,YAAWX,GACrC,OAAO,SAAC,EAAAJ,MAAD,CAAOE,KAAK,YAAYC,MAAM,SAASa,UAAWF,I,qDCEpD,SAASG,GAAsB,OAAEC,IAAqC,MAC3E,MAAMJ,GAAoBC,EAAAA,EAAAA,YAAWX,GAUrC,iBAAIe,EAAAA,OAAAA,mBAAJ,OAAI,EAAoBC,gBACtB,OAAO,SAAC,EAAApB,MAAD,CAAOE,KAAK,aAAaC,MAAM,WAItC,UAAC,EAAAkB,gBAAD,YACE,SAAC,EAAAC,qBAAD,CAAsBC,OAAQL,EAAOM,aACrC,SAAC,EAAAxB,MAAD,CAAOC,KAAK,OAAO,aAAW,YAAYC,KAAK,aAAaC,MAAM,OAAOa,UAAWF,KACpF,SAAC,EAAAW,OAAD,CAAQC,KAAK,KAAKC,KAAK,OAAO1B,KAAK,oBAAoB2B,QAjB1CC,IACfA,EAAGC,iBACHC,OAAOC,KACJ,uCAAsCd,EAAOe,2CAC9C,SACA,wBAYA,2BCjBC,SAASC,GAA2B,OAAEhB,IAC3C,MAAMiB,GAASpB,EAAAA,EAAAA,YAAWqB,GAE1B,OAAIlB,EAAOmB,YAAcnB,EAAOoB,QAE5B,SAAC,EAAAC,QAAD,CAASC,QAAStB,EAAOuB,QAAzB,UACE,cAAGzB,UAAWmB,EAAOE,UAArB,iCAKC,KAGF,MAAMD,EAAa/B,IACjB,CACLgC,UAAW/B,EAAAA,GAAI;eACJD,EAAME,OAAOL,KAAKU;mBACdP,EAAMqC,WAAWC,UAAUC;;2RCpBvC,MAAMC,EAAS,EAAG3C,KAAAA,EAAO,iBAE5B,SAAC,IAAD,WACE,gBAAKc,UAAU,sBAAf,UACE,SAAC,EAAA8B,mBAAD,CAAoB5C,KAAMA,S,4QCP3B,MAAM6C,EAAiB,EAAGC,SAAAA,MAC/B,MAAMb,GAASpB,EAAAA,EAAAA,YAAWqB,GAC1B,OACE,gBAAKpB,UAAU,iBAAf,UACE,gBAAKA,UAAWmB,EAAhB,SAAyBa,OAKzBZ,EAAa/B,GACjBC,EAAAA,GAAI;qBACeD,EAAM4C,QAAQ;kLCP5B,SAASC,GAAW,IAAEC,EAAF,UAAOnC,EAAP,IAAkBoC,EAAlB,OAAuBC,IAEhD,OAAO,gBAAKD,IAAKA,EAAKpC,UAAWA,EAAWmC,IAAKA,EAAKG,QAAQ,OAAOD,OAAQA,M,wmBCCxE,SAASE,GAAuB,UAAEvC,EAAF,OAAaE,IAClD,MAAMsC,EAAmBtC,EAAOM,YAAciC,EAAAA,sBAAAA,MACxCnB,EAASpB,EAAOM,YAAciC,EAAAA,sBAAAA,SAGpC,OAAID,GAAoBlB,EACf,MAIP,UAAC,EAAAoB,MAAD,CACEC,SAAS,UACTC,MAAM,2BACN,aAAYC,EAAAA,GAAAA,MAAAA,WAAAA,cACZ7C,UAAWA,EAJb,iBAME,8UANF,OAYE,cACE8C,KAAK,qEACL9C,UAAU,gBACV+C,OAAO,SACPC,IAAI,aAJN,kD,oJCxBC,SAASC,GAAwB,SAAEC,EAAF,aAAYC,IAClD,MAAMC,GAAqBC,EAAAA,EAAAA,IAAsBH,GAEjD,OAAIC,IAAiBG,EAAAA,GAAAA,QAEjB,UAAC,EAAAjD,gBAAD,CAAiBgC,OAAO,OAAxB,WACE,SAAC,EAAAkB,WAAD,CAAYT,KAAMM,EAAoBL,OAAO,SAASC,IAAI,sBAA1D,qCAGA,SAAC,EAAAO,WAAD,CAAYC,QAAQ,cAAcV,KAAMM,EAAoBL,OAAO,SAASC,IAAI,sBAAhF,0CAOFG,IAAiBG,EAAAA,GAAAA,WAEjB,SAAC,EAAAC,WAAD,CAAYC,QAAQ,cAAcV,KAAMM,EAAoBL,OAAO,SAASC,IAAI,sBAAhF,wCAOF,SAAC,EAAAO,WAAD,CAAYT,KAAMM,EAAoBL,OAAO,SAASC,IAAI,sBAA1D,qC,uGCtBG,SAASS,GAAsB,OAAEvD,EAAF,aAAUiD,IAA4C,MAC1F,MAAM,aAAEO,EAAc9E,MAAO+E,IAAoBC,EAAAA,EAAAA,OAC3C,eAAEC,EAAgBjF,MAAOkF,IAAsBC,EAAAA,EAAAA,MAC/CC,GAAUC,EAAAA,EAAAA,MACVC,GAAYC,EAAAA,EAAAA,OACXC,EAAuBC,IAA4BC,EAAAA,EAAAA,WAAS,GAC7DC,EAAmB,IAAMF,GAAyB,GAClDG,EAAmB,IAAMH,GAAyB,GAClDI,EAAmBZ,EAAiB,eAAiB,YASrDa,EAAcC,UAClBH,UACMN,EAAUhE,EAAOe,IAClB6C,GACHc,EAAAA,EAAAA,KAAeC,EAAAA,UAAAA,aAAwB,CAAE,eAAc3E,EAAO4E,UAI5DC,EAAWJ,gBACTX,EAAQ9D,EAAOe,GAAIf,EAAOuB,SAAS,GACpCkC,GACHiB,EAAAA,EAAAA,KAAeC,EAAAA,UAAAA,aAAwB,CAAE,WAAU3E,EAAO4E,UAI9D,OAAI3B,IAAiBG,EAAAA,GAAAA,WAEjB,iCACE,SAAC,EAAA0B,aAAD,CACEC,OAAQb,EACRxB,MAAQ,aAAY1C,EAAO4E,OAC3BI,KAAK,kDACLC,YAAY,UACZlG,KAAK,uBACLmG,UAAWV,EACXW,UAAWb,KAEb,SAAC,EAAAnE,gBAAD,CAAiBgC,OAAO,OAAxB,UACE,SAAC,EAAA5B,OAAD,CAAQ+C,QAAQ,cAAc8B,SAAUzB,EAAgBjD,QAAS2D,EAAjE,SACGE,SAOPtB,IAAiBG,EAAAA,GAAAA,QAEjB,UAAC,EAAAjD,gBAAD,CAAiBgC,OAAO,OAAxB,WACE,SAAC,EAAA5B,OAAD,CAAQ6E,SAAU5B,EAAc9C,QAASmE,EAAzC,SACGrB,EAAe,WAAa,WAFjC,OAIE,SAAC,EAAAjD,OAAD,CAAQ+C,QAAQ,cAAc8B,SAAUzB,EAAgBjD,QAAS8D,EAAjE,SACGD,SAOP,SAAC,EAAAhE,OAAD,CAAQ6E,SAAU5B,EAAc9C,QAzDhB+D,gBACVX,EAAQ9D,EAAOe,GAAIf,EAAOuB,SAC3BkC,GACHiB,EAAAA,EAAAA,KAAeC,EAAAA,UAAAA,aAAwB,CAAE,aAAY3E,EAAO4E,UAsD9D,SACGpB,EAAe,aAAe,YC/D9B,MAAM6B,EAAkB,EAAGrF,OAAAA,MAAoB,QACpD,MAAMiB,GAASpB,EAAAA,EAAAA,YAAWqB,GACpBoE,EAAsBrF,EAAAA,OAAAA,iCACtBsF,GAAgBC,EAAAA,EAAAA,MAChBC,EAAiB,UAAGzF,EAAO0F,eAAV,aAAG,EAAgBD,kBACpCE,GAA2BC,EAAAA,EAAAA,MAC3BC,IAA4BJ,KAC7BK,EAAAA,EAAAA,WAAU7F,EAAAA,OAAAA,UAAAA,QAA0BwF,EAAmB,CAEtDM,mBAAmB,IAGnB9C,EAAejD,EAAOgG,YACxBhG,EAAOmB,UACLiC,EAAAA,GAAAA,OACAA,EAAAA,GAAAA,UACFA,EAAAA,GAAAA,QAEJ,GAAIpD,EAAOoB,QAAUpB,EAAOiG,WAC1B,OAAO,KAGT,GAAIjG,EAAOkG,eAAgB,UAACjG,EAAAA,OAAAA,mBAAD,QAAC,EAAoBC,iBAC9C,OACE,UAAC,EAAAC,gBAAD,CAAiBgC,OAAO,OAAOgE,MAAM,SAArC,WACE,iBAAMrG,UAAWmB,EAAOmF,QAAxB,4DACA,SAAC,EAAA/C,WAAD,CACET,KAAO,IAAEO,EAAAA,EAAAA,IAAsBnD,EAAOe,4CACtC8B,OAAO,SACPC,IAAI,sBACJtC,KAAK,KACLC,KAAK,OACL1B,KAAK,oBANP,2BAcN,GAAIiB,EAAOqG,MACT,OACE,gBAAKvG,UAAWmB,EAAOmF,QAAvB,iFAIJ,IAAKb,IAAkBD,EAAqB,CAC1C,MAAMc,EAAW,iCAAgCnD,iBACjD,OAAO,gBAAKnD,UAAWmB,EAAOmF,QAAvB,SAAiCA,IAG1C,OAAIP,GAEA,iBAAK/F,UAAWmB,EAAOmF,QAAvB,iBACE,SAAC,EAAAE,KAAD,CAAM1B,KAAK,0BADb,2DAOAU,GACK,SAACvC,EAAD,CAAyBC,SAAUhD,EAAOe,GAAIkC,aAAcA,IAGhE0C,GAQE,SAACpC,EAAD,CAAuBvD,OAAQA,EAAQiD,aAAcA,KANxD,gBAAKnD,UAAWmB,EAAOmF,QAAvB,4GASOlF,EAAa/B,IACjB,CACLiH,QAAShH,EAAAA,GAAI;eACFD,EAAME,OAAOL,KAAKU;mDC1FjC,MAAM6G,EAA4C,CAChD,CAACC,EAAAA,oBAAAA,SAA8B,UAC/B,CAACA,EAAAA,oBAAAA,YAAiC,SAClC,CAACA,EAAAA,oBAAAA,WAAgC,SACjCC,QAAS,sBASJ,SAASC,GAA4B,cAAEC,EAAF,aAAiBC,EAAe,KAC1E,MAAM3F,GAASpB,EAAAA,EAAAA,YAAWqB,GAE1B,IAAKyF,IAAkBC,EACrB,OAAO,KAGT,MAAMC,EAAoBF,IAAkBH,EAAAA,oBAAAA,QAA8B,gBAAiBM,EAAAA,EAAAA,YAAWH,GAChGI,EAAgBR,EAAgBI,GAAiB,KAAOJ,EAAgBE,QAE9E,OACE,iCACE,UAACO,EAAD,YACE,mBAAQlH,UAAWmB,EAAOxB,OAA1B,sBACA,SAAC,EAAA6G,KAAD,CAAM9F,KAAK,KAAKoE,KAAMmC,IAFxB,IAIGF,MAGH,UAACG,EAAD,YACE,mBAAQlH,UAAWmB,EAAOxB,OAA1B,wBADF,IACyDmH,QAMxD,MAAMI,EAAyB,EAAGlF,SAAAA,MACvC,MAAMb,GAASpB,EAAAA,EAAAA,YAAWqB,GAE1B,OAAO,SAAC,EAAApC,MAAD,CAAOG,MAAM,QAAQa,UAAWmB,EAAOgG,MAAOjI,MAAM,8BAAG8C,OAG1DZ,EAAa/B,IAAD,CAChB8H,MAAO7H,EAAAA,GAAI;wBACWD,EAAME,OAAOC,WAAW4H;oBAC5B/H,EAAME,OAAOG,OAAOC;aAC3BN,EAAME,OAAOL,KAAKU;mBACZP,EAAM4C;IAEvBtC,OAAQL,EAAAA,GAAI;aACDD,EAAME,OAAOL,KAAKO;IAE7BR,KAAMK,EAAAA,GAAI;oBACQD,EAAM4C,QAAQ;MCnD3B,SAASoF,GAA6B,OAAEnH,IAC7C,MAAMsC,EAAmBtC,EAAOM,YAAciC,EAAAA,sBAAAA,MAE9C,OACE,4BACE,cAAGK,KAAK,qEAAqEC,OAAO,SAASC,IAAI,aAAjG,UACE,SAAC,EAAA1C,qBAAD,CAAsBC,OAAQL,EAAOM,cAGtCgC,IACC,SAACoE,EAAD,CAA6BC,cAAe3G,EAAO2G,cAAeC,aAAc5G,EAAO4G,kBCVxF,SAASQ,GAAgC,OAAEpH,EAAF,UAAUF,IAA+C,QACvG,MAAMmB,GAASpB,EAAAA,EAAAA,YAAWqB,GACpBmG,EAAkB,UAAGrH,EAAO0F,eAAV,aAAG,EAAgB2B,mBACrC5B,EAAiB,UAAGzF,EAAO0F,eAAV,aAAG,EAAgBD,kBAG1C,QAF6BA,GAAuB4B,GAAuBA,EAAmBC,QAGrF,MAIP,iBAAKxH,UAAWA,EAAhB,WACE,gBAAKA,UAAWmB,EAAOsG,gBAAvB,2BAGCC,QAAQ/B,KACP,4BACE,SAAC,EAAAa,KAAD,CAAM1B,KAAK,UAAU9E,UAAWmB,EAAOlC,OADzC,WAEW0G,KAKZ4B,GAAsBA,EAAmBC,OAAS,IACjD,yBACGD,EAAmBI,KAAKC,IAErB,6BACE,SAAC,EAAApB,KAAD,CAAM1B,KAAM+C,EAAAA,GAAeD,EAAEE,MAAO9H,UAAWmB,EAAOlC,OACrD2I,EAAE9C,KAFL,IAEY8C,EAAEnG,UAFHmG,EAAE9C,aAYpB,MAAM1D,EAAa/B,IACjB,CACLoI,gBAAiBnI,EAAAA,GAAI;qBACJD,EAAMqC,WAAWqG;sBAChB1I,EAAM4C,QAAQ;;;;;;MAOhChD,KAAMK,EAAAA,GAAI;eACCD,EAAME,OAAOL,KAAKU;sBACXP,EAAM4C,QAAQ;yJC7C7B,SAAS+F,GAAoB,OAAE9H,EAAF,WAAU+H,EAAV,UAAsBC,IAAwC,MAChG,MAAM/G,GAASpB,EAAAA,EAAAA,YAAWqB,GAE1B,OACE,iBAAKpB,UAAWmB,EAAOgH,gBAAvB,WACE,SAACjG,EAAA,EAAD,CACEC,IAAM,GAAEjC,EAAO4E,YACf1C,IAAKlC,EAAOkI,KAAKC,MAAMC,MACvBtI,UAAWV,EAAAA,GAAI;;;;;aAQjB,iBAAKU,UAAWmB,EAAOoH,cAAvB,WAEE,gBAAKvI,UAAWmB,EAAOqH,WAAY,aAAW,aAA9C,UACE,2BACE,yBACE,cAAGxI,UAAWmB,EAAOsH,cAAe3F,KAAMoF,EAA1C,wBAIF,yBACE,cAAGpF,KAAMmF,EAAY,eAAa,OAAlC,SACG/H,EAAO4E,eAMhB,iBAAK9E,UAAWmB,EAAOuH,qBAAvB,WAEE,0BAAOxI,EAAOyI,UAFhB,UAKGzI,EAAO0F,eALV,aAKG,EAAgBgD,MAAMjB,KAAKkB,IAC1B,cAAmB/F,KAAM+F,EAAKC,IAA9B,SACGD,EAAK/D,MADA+D,EAAK/D,QAMd5E,EAAO6I,UAAY,IAClB,mCACE,SAAC,EAAAvC,KAAD,CAAM1B,KAAK,oBACT,KAAG,IAAIkE,KAAKC,cAAeC,OAAOhJ,EAAO6I,aAAc,OAK5D7I,EAAOuB,UAAW,0BAAOvB,EAAOuB,WAGjC,SAAC4F,EAAD,CAA8BnH,OAAQA,IAErCA,EAAOiG,aAAc,SAAC,KAAD,CAAqBvH,MAAOsB,EAAOtB,YAG3D,SAAC0I,EAAD,CACEpH,OAAQA,EACRF,WAAWmJ,EAAAA,EAAAA,IAAGhI,EAAOuH,qBAAsBvH,EAAOiI,kCAGpD,uBAAIlJ,EAAOmJ,eAEX,SAAC9D,EAAD,CAAiBrF,OAAQA,UAM1B,MAAMkB,EAAa/B,IACjB,CACL8I,gBAAiB7I,EAAAA,GAAI;;uBAEFD,EAAM4C,QAAQ;oBACjB5C,EAAM4C,QAAQ;;MAG9BsG,cAAejJ,EAAAA,GAAI;qBACFD,EAAM4C,QAAQ;MAE/BuG,WAAYlJ,EAAAA,GAAI;mBACDD,EAAMqC,WAAW4H,GAAG1H;;;;;;;;;;;;MAanC8G,qBAAsBpJ,EAAAA,GAAI;;;oBAGVD,EAAM4C;uBACH5C,EAAM4C;;;;;uBAKN5C,EAAM4C;;;;;;;mBAOV5C,EAAMqC,WAAW6H,GAAG3H;MAEnCwH,8BAA+B9J,EAAAA,GAAI;mBACpBD,EAAMqC,WAAWwD,KAAKtD;MAErC4H,cAAelK,EAAAA,GAAI;mBACJD,EAAMqC,WAAW6H,GAAG3H;MAEnCpB,UAAWlB,EAAAA,GAAI;gBACHD,EAAM4C,QAAQ;;MAG1BwG,cAAenJ,EAAAA,GAAI;;gBCtIhB,MAAMmK,EAAc,EAAGC,SAAAA,EAAW,OACvC,MAAMvI,GAASpB,EAAAA,EAAAA,YAAWqB,GAE1B,OAAwB,IAApBsI,EAASlC,OACX,OAAO,2DAIP,mBAAOxH,UAAWmB,EAAOwI,MAAzB,iBACE,4BACE,2BACE,qCACA,gDAGJ,2BACGD,EAAS/B,KAAKlG,IAEX,2BACE,wBAAKA,EAAQA,WACb,yBAAKmI,EAAAA,EAAAA,uBAAsBnI,EAAQoI,eAF5BpI,EAAQA,iBAWvBL,EAAa/B,IAAD,CAChByK,UAAWxK,EAAAA,GAAI;eACFD,EAAM4C,QAAQ,EAAG,EAAG;IAEjC0H,MAAOrK,EAAAA,GAAI;;;;iBAIID,EAAM4C;;;mBAGJ5C,EAAMqC,WAAWqI,GAAGnI;;8GC/ChC,MAAMoI,EAAmB9J,IACvB+J,EAAAA,EAAAA,IAAStF,SACTzE,GAIDA,EAAOgG,cAAgBhG,EAAOiG,YACzB+D,EAAAA,EAAAA,YAAWhK,EAAOe,IAJlB,MAOR,CAACf,MAAAA,OAAD,EAACA,EAAQe,GAAIf,MAAAA,OAAb,EAAaA,EAAQgG,YAAahG,MAAAA,OAAlC,EAAkCA,EAAQiG,a,mICGxC,SAASgE,GAAkB,OAAEjK,EAAF,YAAUkK,IAC1C,MAAMjJ,GAASpB,EAAAA,EAAAA,YAAWqB,IAClBiJ,MAAOC,GAAiBN,EAAgB9J,GAC1CqK,EAASH,EAAYI,KAEW,QAWA,EAXtC,GAAID,IAAWE,EAAAA,GAAAA,SACb,OACE,gBACEzK,WAAWmJ,EAAAA,EAAAA,IAAGhI,EAAOuJ,OAAQvJ,EAAO2I,WACpCa,wBAAyB,CACvBC,OAAM,oBAAE1K,EAAO0F,eAAT,aAAE,EAAgB8E,cAAlB,QAA4B,sDAM1C,GAAIH,IAAWE,EAAAA,GAAAA,SACb,OACE,gBAAKzK,UAAWmB,EAAO2I,UAAvB,UACE,SAACL,EAAD,CAAaC,SAAQ,UAAExJ,EAAO0F,eAAT,aAAE,EAAgB8D,aAK7C,GAAIa,IAAWE,EAAAA,GAAAA,QAAXF,MAAkCD,GAAAA,EAAcO,kBAClD,OACE,gBAAK7K,UAAWmB,EAAO2I,UAAvB,UACE,SAAC,IAAD,CAAsBgB,IAAKR,MAKjC,GAAIA,MAAAA,GAAAA,EAAcS,YAChB,IAAK,MAAMC,KAAcV,EAAaS,YAAa,OACjD,GAAIR,IAAWS,EAAW/J,GACxB,OACE,gBAAKjB,UAAWmB,EAAO2I,UAAvB,gBACE,SAACkB,EAAW9F,KAAZ,CAAiBhF,OAAQoK,EAAcW,MAAOb,OAOxD,OAAIG,IAAWE,EAAAA,GAAAA,YAA2BH,GAEtC,gBAAKtK,UAAWmB,EAAO2I,UAAvB,UACE,SAACoB,EAAA,EAAD,CAAkBhL,OAAQoK,MAAAA,OAAF,EAAEA,EAAca,UAM5C,gBAAKnL,UAAWmB,EAAO2I,UAAvB,gBACE,8CAKC,MAAM1I,EAAa/B,IAAD,CACvByK,UAAWxK,EAAAA,GAAI;eACFD,EAAM4C,QAAQ,EAAG;IAE9ByI,OAAQpL,EAAAA,GAAI;;;;;;;;oBAQMD,EAAM4C,QAAQ;uBACX5C,EAAM4C,QAAQ;;;;;;;;qBAQhB5C,EAAM4C,QAAQ;;kBAEjB5C,EAAM4C;;;iQCxFjB,SAASmJ,IAA2B,UAAEpL,EAAF,OAAaE,IACtD,OAAKA,EAAOiG,YAKV,UAAC,EAAAzD,MAAD,CACEC,SAAS,QACTC,MAAM,kBACN5C,UAAWA,EACX,aAAY6C,EAAAA,GAAAA,MAAAA,WAAAA,aAJd,UAMGwI,GAA2BnL,EAAOtB,OANrC,SAOE,2FAPF,SAQE,cACEkE,KAAK,+EACL9C,UAAU,gBACV+C,OAAO,SACPC,IAAI,aAJN,kDAZK,KAwBX,SAASqI,GAA2BzM,GAClC,OAAQA,GACN,KAAKE,EAAAA,gBAAAA,kBACH,gBACE,wYAOJ,KAAKA,EAAAA,gBAAAA,iBACH,gBACE,+VAOJ,KAAKA,EAAAA,gBAAAA,iBACH,gBACE,sXAOJ,QACE,gBACE,yNC9CO,SAASwM,IAAc,MAAEC,EAAF,YAASnB,IAA0C,MACvF,MACEoB,QAAQ,SAAEtI,EAAW,IADjB,IAEJ4F,GACEyC,EACEhB,EAAUH,EAAYI,MAAyBC,EAAAA,GAAAA,SAC/CvC,EAAYY,EAAI2C,UAAU,EAAG3C,EAAI4C,YAAY,MAC7CC,EAAkC,CACtC,CACEC,MAAOC,EAAAA,GAAAA,SACP5M,KAAM,WACNgC,GAAIwJ,EAAAA,GAAAA,SACJ3H,KAAO,GAAEgG,UAAY2B,EAAAA,GAAAA,YAEvB,CACEmB,MAAOC,EAAAA,GAAAA,SACP5M,KAAM,UACNgC,GAAIwJ,EAAAA,GAAAA,SACJ3H,KAAO,GAAEgG,UAAY2B,EAAAA,GAAAA,aAGnBvK,GAAS4L,EAAAA,EAAAA,IAAa5I,IACtB,KAAE6I,GC/B0B,EAAC7L,EAAwByL,EAAkC,MAC7F,MAAM,QAAErJ,EAAF,MAAW1D,EAAOyL,MAAOC,GAAiBN,EAAgB9J,IAC1D,SAAE8L,IAAaC,EAAAA,EAAAA,MA8CrB,MAAO,CACLrN,MAAAA,EACA0D,QAAAA,EACAyJ,MAhDWG,EAAAA,EAAAA,UAAQ,KACnB,MAAMC,GAAsBC,EAAAA,EAAAA,MACtBL,EAA2B,IAAIJ,GAGrC,IAAKrB,EACH,OAAOyB,EAGT,GAAII,GACE7B,EAAaa,KAAKrD,OAASuE,EAAAA,WAAAA,IAAgB,OAU7C,GATI/B,EAAaO,mBACfkB,EAAKO,KAAK,CACRV,MAAO,SACP3M,KAAM,MACNgC,GAAIwJ,EAAAA,GAAAA,OACJ3H,KAAO,GAAEkJ,UAAiBvB,EAAAA,GAAAA,WAI1BH,EAAaS,YACf,IAAK,MAAMP,KAAQF,EAAaS,YAC9BgB,EAAKO,KAAK,CACRV,MAAOpB,EAAK5H,MACZ3D,KAAMuL,EAAKvL,KACXgC,GAAIuJ,EAAKvJ,GACT6B,KAAO,GAAEkJ,UAAiBxB,EAAKvJ,OAKrC,UAAIqJ,EAAaa,KAAKoB,gBAAtB,OAAI,EAA4BC,MAAMC,GAAYA,EAAQ3E,OAAS4E,EAAAA,kBAAAA,aACjEX,EAAKO,KAAK,CACRV,MAAO,aACP3M,KAAM,OACNgC,GAAIwJ,EAAAA,GAAAA,WACJ3H,KAAO,GAAEkJ,UAAiBvB,EAAAA,GAAAA,eAMlC,OAAOsB,IACN,CAACzB,EAAcqB,EAAaK,MDfdW,CAAqBzM,EAAQyL,IACtCiB,UAAWC,IAAmBC,EAAAA,EAAAA,OAC9BF,UAAWG,IAA0BC,EAAAA,EAAAA,MACvC7L,GAASpB,EAAAA,EAAAA,YAAWqB,IACpB6L,GAAWC,EAAAA,EAAAA,GAAYnB,GAY7B,OATAoB,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAgCH,GAAYA,EAASzF,OAASuE,EAAKvE,OACnE6F,EAAuB9C,IAAWE,EAAAA,GAAAA,UAAyBF,IAAWE,EAAAA,GAAAA,SAExE2C,GAAiCC,GACnCC,EAAAA,gBAAAA,QAAyB,GAAExE,UAAY2B,EAAAA,GAAAA,cAExC,CAACF,EAAQzB,EAAKiD,EAAMkB,IAEnBJ,GAAkBE,EACpB,SACE,SAAChL,EAAA,EAAD,WACE,SAACF,EAAA,EAAD,OAKD3B,GAYH,SAAC6B,EAAA,EAAD,WACE,UAAC,IAAD,YACE,SAACiG,EAAD,CAAqBC,WAAa,GAAEa,UAAYyB,IAAUrC,UAAWA,EAAWhI,OAAQA,KAGxF,SAAC,EAAAqN,QAAD,UACGxB,EAAKpE,KAAK6F,IAEP,SAAC,EAAAC,IAAD,CAEE7B,MAAO4B,EAAI5B,MACX9I,KAAM0K,EAAI1K,KACV7D,KAAMuO,EAAIvO,KACVyO,OAAQF,EAAIvM,KAAOsJ,GAJdiD,EAAI5B,YAWjB,UAAC,EAAA+B,WAAD,CAAY3N,UAAWmB,EAAOyM,WAA9B,WACE,SAACxC,GAAD,CAA4BlL,OAAQA,EAAQF,UAAWmB,EAAO0M,SAC9D,SAACtL,EAAD,CAAwBrC,OAAQA,EAAQF,UAAWmB,EAAO0M,SAC1D,SAAC1D,EAAD,CAAmBC,YAAaA,EAAalK,OAAQA,aAjCzD,SAAC4N,EAAA,GAAD,CAAQC,QAAQ,SAAS1H,MAAM,SAA/B,UACE,UAAC,EAAA3D,MAAD,CAAOC,SAAUqL,GAAAA,GAAAA,QAAiCpL,MAAM,mBAAxD,sFACkE,mBADlE,oBAEY,cAAGE,KAAMoF,EAAT,6BAFZ,SAuCD,MAAM9G,GAAa/B,IACjB,CACLwO,MAAOvO,EAAAA,GAAI;gBACCD,EAAM4C,QAAQ;;MAI1B2L,WAAYtO,EAAAA,GAAI;;ydEjHb,MAAM2O,EAAcC,GAAmCA,EAAMC,QAEvDC,GAAcC,EAAAA,EAAAA,IAAeJ,GAAY,EAAGK,MAAAA,KAAYA,IAExDC,GAAoBF,EAAAA,EAAAA,IAAeJ,GAAY,EAAGO,SAAAA,KAAeA,EAASC,eAExEC,UAAF,aAAaC,GAAeC,EAAAA,GAAAA,aAA4BR,GAO/DS,EAAuB,CAACC,EAAkBC,KAC9CV,EAAAA,EAAAA,IANuBS,CAAAA,IACvBT,EAAAA,EAAAA,IAAeK,GAAYP,GACzBA,EAAQa,QAAQ9O,GAAyB,cAAb4O,EAA2B5O,EAAOgG,aAAehG,EAAOoB,WAIvE2N,CAAgBH,IAAYX,GACzCA,EAAQa,QAAQ9O,GAA4B,QAAjB6O,GAA0B7O,EAAO4H,OAASiH,MAuB5DvC,EAAO,CAAC0C,EAAkBJ,EAAkBC,KACvDV,EAAAA,EAAAA,IACEQ,EAAqBC,EAAUC,GAtBZG,CAAAA,IACrBb,EAAAA,EAAAA,IAAeK,GAAYP,GACR,KAAbe,EACK,GAGFf,EAAQa,QAAQ9O,IACrB,MAAMiP,EAAmB,GASzB,OARIjP,EAAO4E,MACTqK,EAAO7C,KAAKpM,EAAO4E,KAAKsK,eAGtBlP,EAAOyI,SACTwG,EAAO7C,KAAKpM,EAAOyI,QAAQyG,eAGtBD,EAAOE,MAAMC,GAAMA,EAAE/C,SAAS2C,EAASE,sBAOhDG,CAAcL,IACd,CAACM,EAAiBC,IACI,KAAbP,EAAkBM,EAAkBC,IAIpCC,EAAiBC,IAC5BtB,EAAAA,EAAAA,IAAeJ,GAAY,EAAG2B,SAAAA,EAAW,MAASA,EAASD,KAEhDE,EAA0BF,IACrCtB,EAAAA,EAAAA,IAAeqB,EAAcC,IAAcG,IAAYA,MAAAA,OAAA,EAAAA,EAASvP,UAAWwP,EAAAA,GAAAA,UAEhEC,EAAsBL,IACjCtB,EAAAA,EAAAA,IAAeqB,EAAcC,IAAcG,IACzCA,MAAAA,OAAA,EAAAA,EAASvP,UAAWwP,EAAAA,GAAAA,SAAyBD,MAAAA,OAA7C,EAA6CA,EAASlR,MAAQ,O,0DCpC3D,MAAMqR,EAAuB,EAClChF,MAAAA,EAAQ,GACR6D,SAAAA,EAAW,YACXC,aAAAA,EAAe,MACfmB,OAAAA,EAASC,EAAAA,GAAAA,YAETC,IAEA,MAAMC,GAAWC,EAAAA,EAAAA,aAAY9D,EAAKvB,EAAO6D,EAAUC,KAC7C,UAAEnC,EAAF,MAAahO,GAAUkO,IAG7B,MAAO,CACLF,UAAAA,EACAhO,MAAAA,EACAuP,SALwBoC,EAAAA,EAAAA,IAAYF,EAAUH,KAerCpE,EAAgB7K,IAC3BmP,IACAI,EAAgBvP,IAETqP,EAAAA,EAAAA,cAAapC,GAAmCS,EAAWT,EAAOjN,MAG9DgD,EAAa,KACxB,MAAMwM,GAAWC,EAAAA,EAAAA,eAEjB,MAAO,CAACzP,EAAYQ,EAAiBkP,IAAyBF,GAASzM,EAAAA,EAAAA,IAAQ,CAAE/C,GAAAA,EAAIQ,QAAAA,EAASkP,WAAAA,MAGnFxM,EAAe,KAC1B,MAAMsM,GAAWC,EAAAA,EAAAA,eAEjB,OAAQzP,GAAewP,GAASvM,EAAAA,EAAAA,IAAUjD,KAG/B6E,EAA8B,IAExB,QADHwK,EAAAA,EAAAA,aAAYN,EAAmBY,EAAAA,GAAAA,aAIlC9D,EAAiB,KAIrB,CAAEF,WAHS0D,EAAAA,EAAAA,aAAYT,EAAuBgB,EAAAA,GAAAA,aAGjCjS,OAFN0R,EAAAA,EAAAA,aAAYN,EAAmBa,EAAAA,GAAAA,eAKlC7D,EAAwB,KAI5B,CAAEJ,WAHS0D,EAAAA,EAAAA,aAAYT,EAAuBiB,EAAAA,GAAAA,aAGjClS,OAFN0R,EAAAA,EAAAA,aAAYN,EAAmBc,EAAAA,GAAAA,eAKlClN,EAAmB,KAIvB,CAAEF,cAHY4M,EAAAA,EAAAA,aAAYT,EAAuB7L,EAAAA,GAAAA,aAGjCpF,OAFT0R,EAAAA,EAAAA,aAAYN,EAAmBhM,EAAAA,GAAAA,eAKlCD,EAAqB,KAIzB,CAAEF,gBAHcyM,EAAAA,EAAAA,aAAYT,EAAuB3L,EAAAA,GAAAA,aAGjCtF,OAFX0R,EAAAA,EAAAA,aAAYN,EAAmB9L,EAAAA,GAAAA,eAMlCkM,EAAc,KACzB,MAAMK,GAAWC,EAAAA,EAAAA,eACXK,GAAeT,EAAAA,EAAAA,cDzCmBX,ECyCmBkB,EAAAA,GAAAA,YDxC3DxC,EAAAA,EAAAA,IAAeqB,EAAcC,IAAcG,QAAwBkB,IAAZlB,MADfH,IAAAA,GC2CxCxC,EAAAA,EAAAA,YAAU,KACR4D,GAAgBN,GAASI,EAAAA,EAAAA,SACxB,KAGQL,EAAmBvP,IAC9B,MAAMwP,GAAWC,EAAAA,EAAAA,eACXxQ,GAASoQ,EAAAA,EAAAA,cAAapC,GAAmCS,EAAWT,EAAOjN,KAE3EgQ,IADiBX,EAAAA,EAAAA,aAAYT,EAAuBiB,EAAAA,GAAAA,cACrB5Q,IAAWA,EAAO0F,SAEvDuH,EAAAA,EAAAA,YAAU,KACR8D,GAAeR,GAASK,EAAAA,EAAAA,IAAa7P,MACpC,CAACf,KAGOgR,EAAiB,KAC5B,MAAMT,GAAWC,EAAAA,EAAAA,eAGjB,MAAO,CACLjC,aAHkB6B,EAAAA,EAAAA,aAAY/B,GAI9B4C,eAAiBC,GAA6BX,GAASU,EAAAA,EAAAA,IAAeC,O,kHC9H3D,SAASlE,EAAYgB,GAChC,IAAImD,GAAM,IAAAC,UAIV,OAHA,IAAAnE,YAAU,WACNkE,EAAIE,QAAUrD,KAEXmD,EAAIE","sources":["webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginDisabledBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/sharedStyles.ts","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginInstallBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginEnterpriseBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginUpdateAvailableBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Loader.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Page.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginLogo.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsSignature.tsx","webpack://grafana/./public/app/features/plugins/admin/components/InstallControls/ExternallyManagedButton.tsx","webpack://grafana/./public/app/features/plugins/admin/components/InstallControls/InstallControlsButton.tsx","webpack://grafana/./public/app/features/plugins/admin/components/InstallControls/index.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginSignatureDetailsBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsHeaderSignature.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsHeaderDependencies.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsHeader.tsx","webpack://grafana/./public/app/features/plugins/admin/components/VersionList.tsx","webpack://grafana/./public/app/features/plugins/admin/hooks/usePluginConfig.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsBody.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsDisabledError.tsx","webpack://grafana/./public/app/features/plugins/admin/pages/PluginDetails.tsx","webpack://grafana/./public/app/features/plugins/admin/hooks/usePluginDetailsTabs.tsx","webpack://grafana/./public/app/features/plugins/admin/state/selectors.ts","webpack://grafana/./public/app/features/plugins/admin/state/hooks.ts","webpack://grafana/./node_modules/react-use/esm/usePrevious.js"],"sourcesContent":["import React from 'react';\nimport { PluginErrorCode } from '@grafana/data';\nimport { Badge } from '@grafana/ui';\n\ntype Props = { error?: PluginErrorCode };\n\nexport function PluginDisabledBadge({ error }: Props): React.ReactElement {\n  const tooltip = errorCodeToTooltip(error);\n  return <Badge icon=\"exclamation-triangle\" text=\"Disabled\" color=\"red\" tooltip={tooltip} />;\n}\n\nfunction errorCodeToTooltip(error?: PluginErrorCode): string | undefined {\n  switch (error) {\n    case PluginErrorCode.modifiedSignature:\n      return 'Plugin disabled due to modified content';\n    case PluginErrorCode.invalidSignature:\n      return 'Plugin disabled due to invalid plugin signature';\n    case PluginErrorCode.missingSignature:\n      return 'Plugin disabled due to missing plugin signature';\n    default:\n      return `Plugin disabled due to unkown error: ${error}`;\n  }\n}\n","import { css } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport const getBadgeColor = (theme: GrafanaTheme2) => css`\n  background: ${theme.colors.background.primary};\n  border-color: ${theme.colors.border.strong};\n  color: ${theme.colors.text.secondary};\n`;\n","import React from 'react';\nimport { Badge, useStyles2 } from '@grafana/ui';\nimport { getBadgeColor } from './sharedStyles';\n\nexport function PluginInstalledBadge(): React.ReactElement {\n  const customBadgeStyles = useStyles2(getBadgeColor);\n  return <Badge text=\"Installed\" color=\"orange\" className={customBadgeStyles} />;\n}\n","import React from 'react';\nimport { Badge, Button, HorizontalGroup, PluginSignatureBadge, useStyles2 } from '@grafana/ui';\nimport { CatalogPlugin } from '../../types';\nimport { getBadgeColor } from './sharedStyles';\nimport { config } from '@grafana/runtime';\n\ntype Props = { plugin: CatalogPlugin };\n\nexport function PluginEnterpriseBadge({ plugin }: Props): React.ReactElement {\n  const customBadgeStyles = useStyles2(getBadgeColor);\n  const onClick = (ev: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    ev.preventDefault();\n    window.open(\n      `https://grafana.com/grafana/plugins/${plugin.id}?utm_source=grafana_catalog_learn_more`,\n      '_blank',\n      'noopener,noreferrer'\n    );\n  };\n\n  if (config.licenseInfo?.hasValidLicense) {\n    return <Badge text=\"Enterprise\" color=\"blue\" />;\n  }\n\n  return (\n    <HorizontalGroup>\n      <PluginSignatureBadge status={plugin.signature} />\n      <Badge icon=\"lock\" aria-label=\"lock icon\" text=\"Enterprise\" color=\"blue\" className={customBadgeStyles} />\n      <Button size=\"sm\" fill=\"text\" icon=\"external-link-alt\" onClick={onClick}>\n        Learn more\n      </Button>\n    </HorizontalGroup>\n  );\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Tooltip, useStyles2 } from '@grafana/ui';\nimport { CatalogPlugin } from '../../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\nexport function PluginUpdateAvailableBadge({ plugin }: Props): React.ReactElement | null {\n  const styles = useStyles2(getStyles);\n\n  if (plugin.hasUpdate && !plugin.isCore) {\n    return (\n      <Tooltip content={plugin.version}>\n        <p className={styles.hasUpdate}>Update available!</p>\n      </Tooltip>\n    );\n  }\n\n  return null;\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    hasUpdate: css`\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      margin-bottom: 0;\n    `,\n  };\n};\n","import React from 'react';\nimport { LoadingPlaceholder } from '@grafana/ui';\nimport { Page } from './Page';\n\nexport interface Props {\n  text?: string;\n}\n\nexport const Loader = ({ text = 'Loading...' }: Props) => {\n  return (\n    <Page>\n      <div className=\"page-loader-wrapper\">\n        <LoadingPlaceholder text={text} />\n      </div>\n    </Page>\n  );\n};\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport const Page: React.FC = ({ children }) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <div className=\"page-container\">\n      <div className={styles}>{children}</div>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) =>\n  css`\n    margin-bottom: ${theme.spacing(3)};\n  `;\n","import React from 'react';\n\ntype PluginLogoProps = {\n  alt: string;\n  className?: string;\n  src: string;\n  height?: string | number;\n};\n\nexport function PluginLogo({ alt, className, src, height }: PluginLogoProps): React.ReactElement {\n  // @ts-ignore - react doesn't know about loading attr.\n  return <img src={src} className={className} alt={alt} loading=\"lazy\" height={height} />;\n}\n","import React from 'react';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { PluginSignatureStatus } from '@grafana/data';\nimport { Alert } from '@grafana/ui';\nimport { CatalogPlugin } from '../types';\n\ntype Props = {\n  className?: string;\n  plugin: CatalogPlugin;\n};\n\n// Designed to show signature information inside the active tab on the plugin's details page\nexport function PluginDetailsSignature({ className, plugin }: Props): React.ReactElement | null {\n  const isSignatureValid = plugin.signature === PluginSignatureStatus.valid;\n  const isCore = plugin.signature === PluginSignatureStatus.internal;\n\n  // The basic information is already available in the header\n  if (isSignatureValid || isCore) {\n    return null;\n  }\n\n  return (\n    <Alert\n      severity=\"warning\"\n      title=\"Invalid plugin signature\"\n      aria-label={selectors.pages.PluginPage.signatureInfo}\n      className={className}\n    >\n      <p>\n        Grafana Labs checks each plugin to verify that it has a valid digital signature. Plugin signature verification\n        is part of our security measures to ensure plugins are safe and trustworthy. Grafana Labs can’t guarantee the\n        integrity of this unsigned plugin. Ask the plugin author to request it to be signed.\n      </p>\n\n      <a\n        href=\"https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/\"\n        className=\"external-link\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Read more about plugins signing.\n      </a>\n    </Alert>\n  );\n}\n","import React from 'react';\nimport { HorizontalGroup, LinkButton } from '@grafana/ui';\nimport { getExternalManageLink } from '../../helpers';\nimport { PluginStatus } from '../../types';\n\ntype ExternallyManagedButtonProps = {\n  pluginId: string;\n  pluginStatus: PluginStatus;\n};\n\nexport function ExternallyManagedButton({ pluginId, pluginStatus }: ExternallyManagedButtonProps) {\n  const externalManageLink = getExternalManageLink(pluginId);\n\n  if (pluginStatus === PluginStatus.UPDATE) {\n    return (\n      <HorizontalGroup height=\"auto\">\n        <LinkButton href={externalManageLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          Update via grafana.com\n        </LinkButton>\n        <LinkButton variant=\"destructive\" href={externalManageLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          Uninstall via grafana.com\n        </LinkButton>\n      </HorizontalGroup>\n    );\n  }\n\n  if (pluginStatus === PluginStatus.UNINSTALL) {\n    return (\n      <LinkButton variant=\"destructive\" href={externalManageLink} target=\"_blank\" rel=\"noopener noreferrer\">\n        Uninstall via grafana.com\n      </LinkButton>\n    );\n  }\n\n  return (\n    <LinkButton href={externalManageLink} target=\"_blank\" rel=\"noopener noreferrer\">\n      Install via grafana.com\n    </LinkButton>\n  );\n}\n","import React, { useState } from 'react';\nimport { AppEvents } from '@grafana/data';\nimport { Button, HorizontalGroup, ConfirmModal } from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\n\nimport { CatalogPlugin, PluginStatus } from '../../types';\nimport { useInstallStatus, useUninstallStatus, useInstall, useUninstall } from '../../state/hooks';\n\ntype InstallControlsButtonProps = {\n  plugin: CatalogPlugin;\n  pluginStatus: PluginStatus;\n};\n\nexport function InstallControlsButton({ plugin, pluginStatus }: InstallControlsButtonProps) {\n  const { isInstalling, error: errorInstalling } = useInstallStatus();\n  const { isUninstalling, error: errorUninstalling } = useUninstallStatus();\n  const install = useInstall();\n  const uninstall = useUninstall();\n  const [isConfirmModalVisible, setIsConfirmModalVisible] = useState(false);\n  const showConfirmModal = () => setIsConfirmModalVisible(true);\n  const hideConfirmModal = () => setIsConfirmModalVisible(false);\n  const uninstallBtnText = isUninstalling ? 'Uninstalling' : 'Uninstall';\n\n  const onInstall = async () => {\n    await install(plugin.id, plugin.version);\n    if (!errorInstalling) {\n      appEvents.emit(AppEvents.alertSuccess, [`Installed ${plugin.name}`]);\n    }\n  };\n\n  const onUninstall = async () => {\n    hideConfirmModal();\n    await uninstall(plugin.id);\n    if (!errorUninstalling) {\n      appEvents.emit(AppEvents.alertSuccess, [`Uninstalled ${plugin.name}`]);\n    }\n  };\n\n  const onUpdate = async () => {\n    await install(plugin.id, plugin.version, true);\n    if (!errorInstalling) {\n      appEvents.emit(AppEvents.alertSuccess, [`Updated ${plugin.name}`]);\n    }\n  };\n\n  if (pluginStatus === PluginStatus.UNINSTALL) {\n    return (\n      <>\n        <ConfirmModal\n          isOpen={isConfirmModalVisible}\n          title={`Uninstall ${plugin.name}`}\n          body=\"Are you sure you want to uninstall this plugin?\"\n          confirmText=\"Confirm\"\n          icon=\"exclamation-triangle\"\n          onConfirm={onUninstall}\n          onDismiss={hideConfirmModal}\n        />\n        <HorizontalGroup height=\"auto\">\n          <Button variant=\"destructive\" disabled={isUninstalling} onClick={showConfirmModal}>\n            {uninstallBtnText}\n          </Button>\n        </HorizontalGroup>\n      </>\n    );\n  }\n\n  if (pluginStatus === PluginStatus.UPDATE) {\n    return (\n      <HorizontalGroup height=\"auto\">\n        <Button disabled={isInstalling} onClick={onUpdate}>\n          {isInstalling ? 'Updating' : 'Update'}\n        </Button>\n        <Button variant=\"destructive\" disabled={isUninstalling} onClick={onUninstall}>\n          {uninstallBtnText}\n        </Button>\n      </HorizontalGroup>\n    );\n  }\n\n  return (\n    <Button disabled={isInstalling} onClick={onInstall}>\n      {isInstalling ? 'Installing' : 'Install'}\n    </Button>\n  );\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { satisfies } from 'semver';\n\nimport { config } from '@grafana/runtime';\nimport { HorizontalGroup, Icon, LinkButton, useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { ExternallyManagedButton } from './ExternallyManagedButton';\nimport { InstallControlsButton } from './InstallControlsButton';\nimport { CatalogPlugin, PluginStatus } from '../../types';\nimport { isGrafanaAdmin, getExternalManageLink } from '../../helpers';\nimport { useIsRemotePluginsAvailable } from '../../state/hooks';\n\ninterface Props {\n  plugin: CatalogPlugin;\n}\n\nexport const InstallControls = ({ plugin }: Props) => {\n  const styles = useStyles2(getStyles);\n  const isExternallyManaged = config.pluginAdminExternalManageEnabled;\n  const hasPermission = isGrafanaAdmin();\n  const grafanaDependency = plugin.details?.grafanaDependency;\n  const isRemotePluginsAvailable = useIsRemotePluginsAvailable();\n  const unsupportedGrafanaVersion = grafanaDependency\n    ? !satisfies(config.buildInfo.version, grafanaDependency, {\n        // needed for when running against main\n        includePrerelease: true,\n      })\n    : false;\n  const pluginStatus = plugin.isInstalled\n    ? plugin.hasUpdate\n      ? PluginStatus.UPDATE\n      : PluginStatus.UNINSTALL\n    : PluginStatus.INSTALL;\n\n  if (plugin.isCore || plugin.isDisabled) {\n    return null;\n  }\n\n  if (plugin.isEnterprise && !config.licenseInfo?.hasValidLicense) {\n    return (\n      <HorizontalGroup height=\"auto\" align=\"center\">\n        <span className={styles.message}>No valid Grafana Enterprise license detected.</span>\n        <LinkButton\n          href={`${getExternalManageLink(plugin.id)}?utm_source=grafana_catalog_learn_more`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          size=\"sm\"\n          fill=\"text\"\n          icon=\"external-link-alt\"\n        >\n          Learn more\n        </LinkButton>\n      </HorizontalGroup>\n    );\n  }\n\n  if (plugin.isDev) {\n    return (\n      <div className={styles.message}>This is a development build of the plugin and can&#39;t be uninstalled.</div>\n    );\n  }\n\n  if (!hasPermission && !isExternallyManaged) {\n    const message = `You do not have permission to ${pluginStatus} this plugin.`;\n    return <div className={styles.message}>{message}</div>;\n  }\n\n  if (unsupportedGrafanaVersion) {\n    return (\n      <div className={styles.message}>\n        <Icon name=\"exclamation-triangle\" />\n        &nbsp;This plugin doesn&#39;t support your version of Grafana.\n      </div>\n    );\n  }\n\n  if (isExternallyManaged) {\n    return <ExternallyManagedButton pluginId={plugin.id} pluginStatus={pluginStatus} />;\n  }\n\n  if (!isRemotePluginsAvailable) {\n    return (\n      <div className={styles.message}>\n        The install controls have been disabled because the Grafana server cannot access grafana.com.\n      </div>\n    );\n  }\n\n  return <InstallControlsButton plugin={plugin} pluginStatus={pluginStatus} />;\n};\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    message: css`\n      color: ${theme.colors.text.secondary};\n    `,\n  };\n};\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { capitalize } from 'lodash';\nimport { GrafanaTheme2, PluginSignatureType } from '@grafana/data';\nimport { useStyles2, Icon, Badge, IconName } from '@grafana/ui';\n\nconst SIGNATURE_ICONS: Record<string, IconName> = {\n  [PluginSignatureType.grafana]: 'grafana',\n  [PluginSignatureType.commercial]: 'shield',\n  [PluginSignatureType.community]: 'shield',\n  DEFAULT: 'shield-exclamation',\n};\n\ntype Props = {\n  signatureType?: PluginSignatureType;\n  signatureOrg?: string;\n};\n\n// Shows more information about a valid signature\nexport function PluginSignatureDetailsBadge({ signatureType, signatureOrg = '' }: Props): React.ReactElement | null {\n  const styles = useStyles2(getStyles);\n\n  if (!signatureType && !signatureOrg) {\n    return null;\n  }\n\n  const signatureTypeText = signatureType === PluginSignatureType.grafana ? 'Grafana Labs' : capitalize(signatureType);\n  const signatureIcon = SIGNATURE_ICONS[signatureType || ''] || SIGNATURE_ICONS.DEFAULT;\n\n  return (\n    <>\n      <DetailsBadge>\n        <strong className={styles.strong}>Level:&nbsp;</strong>\n        <Icon size=\"xs\" name={signatureIcon} />\n        &nbsp;\n        {signatureTypeText}\n      </DetailsBadge>\n\n      <DetailsBadge>\n        <strong className={styles.strong}>Signed by:</strong> {signatureOrg}\n      </DetailsBadge>\n    </>\n  );\n}\n\nexport const DetailsBadge: React.FC = ({ children }) => {\n  const styles = useStyles2(getStyles);\n\n  return <Badge color=\"green\" className={styles.badge} text={<>{children}</>} />;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  badge: css`\n    background-color: ${theme.colors.background.canvas};\n    border-color: ${theme.colors.border.strong};\n    color: ${theme.colors.text.secondary};\n    margin-left: ${theme.spacing()};\n  `,\n  strong: css`\n    color: ${theme.colors.text.primary};\n  `,\n  icon: css`\n    margin-right: ${theme.spacing(0.5)};\n  `,\n});\n","import React from 'react';\nimport { PluginSignatureStatus } from '@grafana/data';\nimport { PluginSignatureBadge } from '@grafana/ui';\nimport { PluginSignatureDetailsBadge } from './PluginSignatureDetailsBadge';\nimport { CatalogPlugin } from '../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\n// Designed to show plugin signature information in the header on the plugin's details page\nexport function PluginDetailsHeaderSignature({ plugin }: Props): React.ReactElement {\n  const isSignatureValid = plugin.signature === PluginSignatureStatus.valid;\n\n  return (\n    <div>\n      <a href=\"https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/\" target=\"_blank\" rel=\"noreferrer\">\n        <PluginSignatureBadge status={plugin.signature} />\n      </a>\n\n      {isSignatureValid && (\n        <PluginSignatureDetailsBadge signatureType={plugin.signatureType} signatureOrg={plugin.signatureOrg} />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2, Icon } from '@grafana/ui';\nimport { CatalogPlugin, PluginIconName } from '../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n  className?: string;\n};\n\nexport function PluginDetailsHeaderDependencies({ plugin, className }: Props): React.ReactElement | null {\n  const styles = useStyles2(getStyles);\n  const pluginDependencies = plugin.details?.pluginDependencies;\n  const grafanaDependency = plugin.details?.grafanaDependency;\n  const hasNoDependencyInfo = !grafanaDependency && (!pluginDependencies || !pluginDependencies.length);\n\n  if (hasNoDependencyInfo) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <div className={styles.dependencyTitle}>Dependencies:</div>\n\n      {/* Grafana dependency */}\n      {Boolean(grafanaDependency) && (\n        <div>\n          <Icon name=\"grafana\" className={styles.icon} />\n          Grafana {grafanaDependency}\n        </div>\n      )}\n\n      {/* Plugin dependencies */}\n      {pluginDependencies && pluginDependencies.length > 0 && (\n        <div>\n          {pluginDependencies.map((p) => {\n            return (\n              <span key={p.name}>\n                <Icon name={PluginIconName[p.type]} className={styles.icon} />\n                {p.name} {p.version}\n              </span>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    dependencyTitle: css`\n      font-weight: ${theme.typography.fontWeightBold};\n      margin-right: ${theme.spacing(0.5)};\n\n      &::after {\n        content: '';\n        padding: 0;\n      }\n    `,\n    icon: css`\n      color: ${theme.colors.text.secondary};\n      margin-right: ${theme.spacing(0.5)};\n    `,\n  };\n};\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2, Icon } from '@grafana/ui';\n\nimport { InstallControls } from './InstallControls';\nimport { PluginDetailsHeaderSignature } from './PluginDetailsHeaderSignature';\nimport { PluginDetailsHeaderDependencies } from './PluginDetailsHeaderDependencies';\nimport { PluginLogo } from './PluginLogo';\nimport { CatalogPlugin } from '../types';\nimport { PluginDisabledBadge } from './Badges';\n\ntype Props = {\n  currentUrl: string;\n  parentUrl: string;\n  plugin: CatalogPlugin;\n};\n\nexport function PluginDetailsHeader({ plugin, currentUrl, parentUrl }: Props): React.ReactElement {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.headerContainer}>\n      <PluginLogo\n        alt={`${plugin.name} logo`}\n        src={plugin.info.logos.small}\n        className={css`\n          object-fit: contain;\n          width: 100%;\n          height: 68px;\n          max-width: 68px;\n        `}\n      />\n\n      <div className={styles.headerWrapper}>\n        {/* Title & navigation */}\n        <nav className={styles.breadcrumb} aria-label=\"Breadcrumb\">\n          <ol>\n            <li>\n              <a className={styles.textUnderline} href={parentUrl}>\n                Plugins\n              </a>\n            </li>\n            <li>\n              <a href={currentUrl} aria-current=\"page\">\n                {plugin.name}\n              </a>\n            </li>\n          </ol>\n        </nav>\n\n        <div className={styles.headerInformationRow}>\n          {/* Org name */}\n          <span>{plugin.orgName}</span>\n\n          {/* Links */}\n          {plugin.details?.links.map((link: any) => (\n            <a key={link.name} href={link.url}>\n              {link.name}\n            </a>\n          ))}\n\n          {/* Downloads */}\n          {plugin.downloads > 0 && (\n            <span>\n              <Icon name=\"cloud-download\" />\n              {` ${new Intl.NumberFormat().format(plugin.downloads)}`}{' '}\n            </span>\n          )}\n\n          {/* Latest version */}\n          {plugin.version && <span>{plugin.version}</span>}\n\n          {/* Signature information */}\n          <PluginDetailsHeaderSignature plugin={plugin} />\n\n          {plugin.isDisabled && <PluginDisabledBadge error={plugin.error!} />}\n        </div>\n\n        <PluginDetailsHeaderDependencies\n          plugin={plugin}\n          className={cx(styles.headerInformationRow, styles.headerInformationRowSecondary)}\n        />\n\n        <p>{plugin.description}</p>\n\n        <InstallControls plugin={plugin} />\n      </div>\n    </div>\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    headerContainer: css`\n      display: flex;\n      margin-bottom: ${theme.spacing(3)};\n      margin-top: ${theme.spacing(3)};\n      min-height: 120px;\n    `,\n    headerWrapper: css`\n      margin-left: ${theme.spacing(3)};\n    `,\n    breadcrumb: css`\n      font-size: ${theme.typography.h2.fontSize};\n      li {\n        display: inline;\n        list-style: none;\n        &::after {\n          content: '/';\n          padding: 0 0.25ch;\n        }\n        &:last-child::after {\n          content: '';\n        }\n      }\n    `,\n    headerInformationRow: css`\n      display: flex;\n      align-items: center;\n      margin-top: ${theme.spacing()};\n      margin-bottom: ${theme.spacing()};\n\n      & > * {\n        &::after {\n          content: '|';\n          padding: 0 ${theme.spacing()};\n        }\n        &:last-child::after {\n          content: '';\n          padding-right: 0;\n        }\n      }\n      font-size: ${theme.typography.h4.fontSize};\n    `,\n    headerInformationRowSecondary: css`\n      font-size: ${theme.typography.body.fontSize};\n    `,\n    headerOrgName: css`\n      font-size: ${theme.typography.h4.fontSize};\n    `,\n    signature: css`\n      margin: ${theme.spacing(3)};\n      margin-bottom: 0;\n    `,\n    textUnderline: css`\n      text-decoration: underline;\n    `,\n  };\n};\n","import React from 'react';\nimport { css } from '@emotion/css';\n\nimport { dateTimeFormatTimeAgo, GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\nimport { Version } from '../types';\n\ninterface Props {\n  versions?: Version[];\n}\n\nexport const VersionList = ({ versions = [] }: Props) => {\n  const styles = useStyles2(getStyles);\n\n  if (versions.length === 0) {\n    return <p>No version history was found.</p>;\n  }\n\n  return (\n    <table className={styles.table}>\n      <thead>\n        <tr>\n          <th>Version</th>\n          <th>Last updated</th>\n        </tr>\n      </thead>\n      <tbody>\n        {versions.map((version) => {\n          return (\n            <tr key={version.version}>\n              <td>{version.version}</td>\n              <td>{dateTimeFormatTimeAgo(version.createdAt)}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    padding: ${theme.spacing(2, 4, 3)};\n  `,\n  table: css`\n    width: 100%;\n    td,\n    th {\n      padding: ${theme.spacing()} 0;\n    }\n    th {\n      font-size: ${theme.typography.h5.fontSize};\n    }\n  `,\n});\n","import { useAsync } from 'react-use';\nimport { CatalogPlugin } from '../types';\nimport { loadPlugin } from '../../PluginPage';\n\nexport const usePluginConfig = (plugin?: CatalogPlugin) => {\n  return useAsync(async () => {\n    if (!plugin) {\n      return null;\n    }\n\n    if (plugin.isInstalled && !plugin.isDisabled) {\n      return loadPlugin(plugin.id);\n    }\n    return null;\n  }, [plugin?.id, plugin?.isInstalled, plugin?.isDisabled]);\n};\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\n\nimport { AppPlugin, GrafanaTheme2, UrlQueryMap } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { CatalogPlugin, PluginTabIds } from '../types';\nimport { VersionList } from '../components/VersionList';\nimport { usePluginConfig } from '../hooks/usePluginConfig';\nimport { AppConfigCtrlWrapper } from '../../wrappers/AppConfigWrapper';\nimport { PluginDashboards } from '../../PluginDashboards';\n\ntype Props = {\n  plugin: CatalogPlugin;\n  queryParams: UrlQueryMap;\n};\n\nexport function PluginDetailsBody({ plugin, queryParams }: Props): JSX.Element {\n  const styles = useStyles2(getStyles);\n  const { value: pluginConfig } = usePluginConfig(plugin);\n  const pageId = queryParams.page;\n\n  if (pageId === PluginTabIds.OVERVIEW) {\n    return (\n      <div\n        className={cx(styles.readme, styles.container)}\n        dangerouslySetInnerHTML={{\n          __html: plugin.details?.readme ?? 'No plugin help or readme markdown file was found',\n        }}\n      />\n    );\n  }\n\n  if (pageId === PluginTabIds.VERSIONS) {\n    return (\n      <div className={styles.container}>\n        <VersionList versions={plugin.details?.versions} />\n      </div>\n    );\n  }\n\n  if (pageId === PluginTabIds.CONFIG && pluginConfig?.angularConfigCtrl) {\n    return (\n      <div className={styles.container}>\n        <AppConfigCtrlWrapper app={pluginConfig as AppPlugin} />\n      </div>\n    );\n  }\n\n  if (pluginConfig?.configPages) {\n    for (const configPage of pluginConfig.configPages) {\n      if (pageId === configPage.id) {\n        return (\n          <div className={styles.container}>\n            <configPage.body plugin={pluginConfig} query={queryParams} />\n          </div>\n        );\n      }\n    }\n  }\n\n  if (pageId === PluginTabIds.DASHBOARDS && pluginConfig) {\n    return (\n      <div className={styles.container}>\n        <PluginDashboards plugin={pluginConfig?.meta} />\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.container}>\n      <p>Page not found.</p>\n    </div>\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    padding: ${theme.spacing(3, 4)};\n  `,\n  readme: css`\n    & img {\n      max-width: 100%;\n    }\n\n    h1,\n    h2,\n    h3 {\n      margin-top: ${theme.spacing(3)};\n      margin-bottom: ${theme.spacing(2)};\n    }\n\n    *:first-child {\n      margin-top: 0;\n    }\n\n    li {\n      margin-left: ${theme.spacing(2)};\n      & > p {\n        margin: ${theme.spacing()} 0;\n      }\n    }\n  `,\n});\n","import React from 'react';\nimport { PluginErrorCode } from '@grafana/data';\nimport { Alert } from '@grafana/ui';\nimport { CatalogPlugin } from '../types';\nimport { selectors } from '@grafana/e2e-selectors';\n\ntype Props = {\n  className?: string;\n  plugin: CatalogPlugin;\n};\n\nexport function PluginDetailsDisabledError({ className, plugin }: Props): React.ReactElement | null {\n  if (!plugin.isDisabled) {\n    return null;\n  }\n\n  return (\n    <Alert\n      severity=\"error\"\n      title=\"Plugin disabled\"\n      className={className}\n      aria-label={selectors.pages.PluginPage.disabledInfo}\n    >\n      {renderDescriptionFromError(plugin.error)}\n      <p>Please contact your server administrator to get this resolved.</p>\n      <a\n        href=\"https://grafana.com/docs/grafana/latest/administration/cli/#plugins-commands\"\n        className=\"external-link\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Read more about managing plugins\n      </a>\n    </Alert>\n  );\n}\n\nfunction renderDescriptionFromError(error?: PluginErrorCode): React.ReactElement {\n  switch (error) {\n    case PluginErrorCode.modifiedSignature:\n      return (\n        <p>\n          Grafana Labs checks each plugin to verify that it has a valid digital signature. While doing this, we\n          discovered that the content of this plugin does not match its signature. We can not guarantee the trustworthy\n          of this plugin and have therefore disabled it. We recommend you to reinstall the plugin to make sure you are\n          running a verified version of this plugin.\n        </p>\n      );\n    case PluginErrorCode.invalidSignature:\n      return (\n        <p>\n          Grafana Labs checks each plugin to verify that it has a valid digital signature. While doing this, we\n          discovered that it was invalid. We can not guarantee the trustworthy of this plugin and have therefore\n          disabled it. We recommend you to reinstall the plugin to make sure you are running a verified version of this\n          plugin.\n        </p>\n      );\n    case PluginErrorCode.missingSignature:\n      return (\n        <p>\n          Grafana Labs checks each plugin to verify that it has a valid digital signature. While doing this, we\n          discovered that there is no signature for this plugin. We can not guarantee the trustworthy of this plugin and\n          have therefore disabled it. We recommend you to reinstall the plugin to make sure you are running a verified\n          version of this plugin.\n        </p>\n      );\n    default:\n      return (\n        <p>\n          We failed to run this plugin due to an unkown reason and have therefor disabled it. We recommend you to\n          reinstall the plugin to make sure you are running a working version of this plugin.\n        </p>\n      );\n  }\n}\n","import React, { useEffect } from 'react';\nimport { css } from '@emotion/css';\nimport { usePrevious } from 'react-use';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2, TabsBar, TabContent, Tab, Alert, IconName } from '@grafana/ui';\nimport { locationService } from '@grafana/runtime';\nimport { Layout } from '@grafana/ui/src/components/Layout/Layout';\nimport { Page } from 'app/core/components/Page/Page';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { PluginDetailsSignature } from '../components/PluginDetailsSignature';\nimport { PluginDetailsHeader } from '../components/PluginDetailsHeader';\nimport { PluginDetailsBody } from '../components/PluginDetailsBody';\nimport { Page as PluginPage } from '../components/Page';\nimport { Loader } from '../components/Loader';\nimport { PluginTabLabels, PluginTabIds, PluginDetailsTab } from '../types';\nimport { useGetSingle, useFetchStatus, useFetchDetailsStatus } from '../state/hooks';\nimport { usePluginDetailsTabs } from '../hooks/usePluginDetailsTabs';\nimport { AppNotificationSeverity } from 'app/types';\nimport { PluginDetailsDisabledError } from '../components/PluginDetailsDisabledError';\n\ntype Props = GrafanaRouteComponentProps<{ pluginId?: string }>;\n\nexport default function PluginDetails({ match, queryParams }: Props): JSX.Element | null {\n  const {\n    params: { pluginId = '' },\n    url,\n  } = match;\n  const pageId = (queryParams.page as PluginTabIds) || PluginTabIds.OVERVIEW;\n  const parentUrl = url.substring(0, url.lastIndexOf('/'));\n  const defaultTabs: PluginDetailsTab[] = [\n    {\n      label: PluginTabLabels.OVERVIEW,\n      icon: 'file-alt',\n      id: PluginTabIds.OVERVIEW,\n      href: `${url}?page=${PluginTabIds.OVERVIEW}`,\n    },\n    {\n      label: PluginTabLabels.VERSIONS,\n      icon: 'history',\n      id: PluginTabIds.VERSIONS,\n      href: `${url}?page=${PluginTabIds.VERSIONS}`,\n    },\n  ];\n  const plugin = useGetSingle(pluginId); // fetches the localplugin settings\n  const { tabs } = usePluginDetailsTabs(plugin, defaultTabs);\n  const { isLoading: isFetchLoading } = useFetchStatus();\n  const { isLoading: isFetchDetailsLoading } = useFetchDetailsStatus();\n  const styles = useStyles2(getStyles);\n  const prevTabs = usePrevious(tabs);\n\n  // If an app plugin is uninstalled we need to reset the active tab when the config / dashboards tabs are removed.\n  useEffect(() => {\n    const hasUninstalledWithConfigPages = prevTabs && prevTabs.length > tabs.length;\n    const isViewingAConfigPage = pageId !== PluginTabIds.OVERVIEW && pageId !== PluginTabIds.VERSIONS;\n\n    if (hasUninstalledWithConfigPages && isViewingAConfigPage) {\n      locationService.replace(`${url}?page=${PluginTabIds.OVERVIEW}`);\n    }\n  }, [pageId, url, tabs, prevTabs]);\n\n  if (isFetchLoading || isFetchDetailsLoading) {\n    return (\n      <Page>\n        <Loader />\n      </Page>\n    );\n  }\n\n  if (!plugin) {\n    return (\n      <Layout justify=\"center\" align=\"center\">\n        <Alert severity={AppNotificationSeverity.Warning} title=\"Plugin not found\">\n          That plugin cannot be found. Please check the url is correct or <br />\n          go to the <a href={parentUrl}>plugin catalog</a>.\n        </Alert>\n      </Layout>\n    );\n  }\n\n  return (\n    <Page>\n      <PluginPage>\n        <PluginDetailsHeader currentUrl={`${url}?page=${pageId}`} parentUrl={parentUrl} plugin={plugin} />\n\n        {/* Tab navigation */}\n        <TabsBar>\n          {tabs.map((tab: PluginDetailsTab) => {\n            return (\n              <Tab\n                key={tab.label}\n                label={tab.label}\n                href={tab.href}\n                icon={tab.icon as IconName}\n                active={tab.id === pageId}\n              />\n            );\n          })}\n        </TabsBar>\n\n        {/* Active tab */}\n        <TabContent className={styles.tabContent}>\n          <PluginDetailsDisabledError plugin={plugin} className={styles.alert} />\n          <PluginDetailsSignature plugin={plugin} className={styles.alert} />\n          <PluginDetailsBody queryParams={queryParams} plugin={plugin} />\n        </TabContent>\n      </PluginPage>\n    </Page>\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    alert: css`\n      margin: ${theme.spacing(3)};\n      margin-bottom: 0;\n    `,\n    // Needed due to block formatting context\n    tabContent: css`\n      overflow: auto;\n    `,\n  };\n};\n","import { useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { PluginIncludeType, PluginType } from '@grafana/data';\nimport { CatalogPlugin, PluginDetailsTab, PluginTabIds } from '../types';\nimport { isOrgAdmin } from '../helpers';\nimport { usePluginConfig } from '../hooks/usePluginConfig';\n\ntype ReturnType = {\n  error: Error | undefined;\n  loading: boolean;\n  tabs: PluginDetailsTab[];\n};\n\nexport const usePluginDetailsTabs = (plugin?: CatalogPlugin, defaultTabs: PluginDetailsTab[] = []): ReturnType => {\n  const { loading, error, value: pluginConfig } = usePluginConfig(plugin);\n  const { pathname } = useLocation();\n  const tabs = useMemo(() => {\n    const canConfigurePlugins = isOrgAdmin();\n    const tabs: PluginDetailsTab[] = [...defaultTabs];\n\n    // Not extending the tabs with the config pages if the plugin is not installed\n    if (!pluginConfig) {\n      return tabs;\n    }\n\n    if (canConfigurePlugins) {\n      if (pluginConfig.meta.type === PluginType.app) {\n        if (pluginConfig.angularConfigCtrl) {\n          tabs.push({\n            label: 'Config',\n            icon: 'cog',\n            id: PluginTabIds.CONFIG,\n            href: `${pathname}?page=${PluginTabIds.CONFIG}`,\n          });\n        }\n\n        if (pluginConfig.configPages) {\n          for (const page of pluginConfig.configPages) {\n            tabs.push({\n              label: page.title,\n              icon: page.icon,\n              id: page.id,\n              href: `${pathname}?page=${page.id}`,\n            });\n          }\n        }\n\n        if (pluginConfig.meta.includes?.find((include) => include.type === PluginIncludeType.dashboard)) {\n          tabs.push({\n            label: 'Dashboards',\n            icon: 'apps',\n            id: PluginTabIds.DASHBOARDS,\n            href: `${pathname}?page=${PluginTabIds.DASHBOARDS}`,\n          });\n        }\n      }\n    }\n\n    return tabs;\n  }, [pluginConfig, defaultTabs, pathname]);\n\n  return {\n    error,\n    loading,\n    tabs,\n  };\n};\n","import { createSelector } from 'reselect';\nimport { RequestStatus, PluginCatalogStoreState } from '../types';\nimport { pluginsAdapter } from './reducer';\n\nexport const selectRoot = (state: PluginCatalogStoreState) => state.plugins;\n\nexport const selectItems = createSelector(selectRoot, ({ items }) => items);\n\nexport const selectDisplayMode = createSelector(selectRoot, ({ settings }) => settings.displayMode);\n\nexport const { selectAll, selectById } = pluginsAdapter.getSelectors(selectItems);\n\nconst selectInstalled = (filterBy: string) =>\n  createSelector(selectAll, (plugins) =>\n    plugins.filter((plugin) => (filterBy === 'installed' ? plugin.isInstalled : !plugin.isCore))\n  );\n\nconst findByInstallAndType = (filterBy: string, filterByType: string) =>\n  createSelector(selectInstalled(filterBy), (plugins) =>\n    plugins.filter((plugin) => filterByType === 'all' || plugin.type === filterByType)\n  );\n\nconst findByKeyword = (searchBy: string) =>\n  createSelector(selectAll, (plugins) => {\n    if (searchBy === '') {\n      return [];\n    }\n\n    return plugins.filter((plugin) => {\n      const fields: String[] = [];\n      if (plugin.name) {\n        fields.push(plugin.name.toLowerCase());\n      }\n\n      if (plugin.orgName) {\n        fields.push(plugin.orgName.toLowerCase());\n      }\n\n      return fields.some((f) => f.includes(searchBy.toLowerCase()));\n    });\n  });\n\nexport const find = (searchBy: string, filterBy: string, filterByType: string) =>\n  createSelector(\n    findByInstallAndType(filterBy, filterByType),\n    findByKeyword(searchBy),\n    (filteredPlugins, searchedPlugins) => {\n      return searchBy === '' ? filteredPlugins : searchedPlugins;\n    }\n  );\n\nexport const selectRequest = (actionType: string) =>\n  createSelector(selectRoot, ({ requests = {} }) => requests[actionType]);\n\nexport const selectIsRequestPending = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) => request?.status === RequestStatus.Pending);\n\nexport const selectRequestError = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) =>\n    request?.status === RequestStatus.Rejected ? request?.error : null\n  );\n\nexport const selectIsRequestNotFetched = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) => request === undefined);\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setDisplayMode } from './reducer';\nimport { fetchAll, fetchDetails, fetchRemotePlugins, install, uninstall } from './actions';\nimport { CatalogPlugin, PluginCatalogStoreState, PluginListDisplayMode } from '../types';\nimport {\n  find,\n  selectAll,\n  selectById,\n  selectIsRequestPending,\n  selectRequestError,\n  selectIsRequestNotFetched,\n  selectDisplayMode,\n} from './selectors';\nimport { sortPlugins, Sorters } from '../helpers';\n\ntype Filters = {\n  query?: string;\n  filterBy?: string;\n  filterByType?: string;\n  sortBy?: Sorters;\n};\n\nexport const useGetAllWithFilters = ({\n  query = '',\n  filterBy = 'installed',\n  filterByType = 'all',\n  sortBy = Sorters.nameAsc,\n}: Filters) => {\n  useFetchAll();\n\n  const filtered = useSelector(find(query, filterBy, filterByType));\n  const { isLoading, error } = useFetchStatus();\n  const sortedAndFiltered = sortPlugins(filtered, sortBy);\n\n  return {\n    isLoading,\n    error,\n    plugins: sortedAndFiltered,\n  };\n};\n\nexport const useGetAll = (): CatalogPlugin[] => {\n  useFetchAll();\n\n  return useSelector(selectAll);\n};\n\nexport const useGetSingle = (id: string): CatalogPlugin | undefined => {\n  useFetchAll();\n  useFetchDetails(id);\n\n  return useSelector((state: PluginCatalogStoreState) => selectById(state, id));\n};\n\nexport const useInstall = () => {\n  const dispatch = useDispatch();\n\n  return (id: string, version: string, isUpdating?: boolean) => dispatch(install({ id, version, isUpdating }));\n};\n\nexport const useUninstall = () => {\n  const dispatch = useDispatch();\n\n  return (id: string) => dispatch(uninstall(id));\n};\n\nexport const useIsRemotePluginsAvailable = () => {\n  const error = useSelector(selectRequestError(fetchRemotePlugins.typePrefix));\n  return error === null;\n};\n\nexport const useFetchStatus = () => {\n  const isLoading = useSelector(selectIsRequestPending(fetchAll.typePrefix));\n  const error = useSelector(selectRequestError(fetchAll.typePrefix));\n\n  return { isLoading, error };\n};\n\nexport const useFetchDetailsStatus = () => {\n  const isLoading = useSelector(selectIsRequestPending(fetchDetails.typePrefix));\n  const error = useSelector(selectRequestError(fetchDetails.typePrefix));\n\n  return { isLoading, error };\n};\n\nexport const useInstallStatus = () => {\n  const isInstalling = useSelector(selectIsRequestPending(install.typePrefix));\n  const error = useSelector(selectRequestError(install.typePrefix));\n\n  return { isInstalling, error };\n};\n\nexport const useUninstallStatus = () => {\n  const isUninstalling = useSelector(selectIsRequestPending(uninstall.typePrefix));\n  const error = useSelector(selectRequestError(uninstall.typePrefix));\n\n  return { isUninstalling, error };\n};\n\n// Only fetches in case they were not fetched yet\nexport const useFetchAll = () => {\n  const dispatch = useDispatch();\n  const isNotFetched = useSelector(selectIsRequestNotFetched(fetchAll.typePrefix));\n\n  useEffect(() => {\n    isNotFetched && dispatch(fetchAll());\n  }, []); // eslint-disable-line\n};\n\nexport const useFetchDetails = (id: string) => {\n  const dispatch = useDispatch();\n  const plugin = useSelector((state: PluginCatalogStoreState) => selectById(state, id));\n  const isNotFetching = !useSelector(selectIsRequestPending(fetchDetails.typePrefix));\n  const shouldFetch = isNotFetching && plugin && !plugin.details;\n\n  useEffect(() => {\n    shouldFetch && dispatch(fetchDetails(id));\n  }, [plugin]); // eslint-disable-line\n};\n\nexport const useDisplayMode = () => {\n  const dispatch = useDispatch();\n  const displayMode = useSelector(selectDisplayMode);\n\n  return {\n    displayMode,\n    setDisplayMode: (v: PluginListDisplayMode) => dispatch(setDisplayMode(v)),\n  };\n};\n","import { useEffect, useRef } from 'react';\nexport default function usePrevious(state) {\n    var ref = useRef();\n    useEffect(function () {\n        ref.current = state;\n    });\n    return ref.current;\n}\n"],"names":["PluginDisabledBadge","error","tooltip","PluginErrorCode","errorCodeToTooltip","Badge","icon","text","color","getBadgeColor","theme","css","colors","background","primary","border","strong","secondary","PluginInstalledBadge","customBadgeStyles","useStyles2","className","PluginEnterpriseBadge","plugin","config","hasValidLicense","HorizontalGroup","PluginSignatureBadge","status","signature","Button","size","fill","onClick","ev","preventDefault","window","open","id","PluginUpdateAvailableBadge","styles","getStyles","hasUpdate","isCore","Tooltip","content","version","typography","bodySmall","fontSize","Loader","LoadingPlaceholder","Page","children","spacing","PluginLogo","alt","src","height","loading","PluginDetailsSignature","isSignatureValid","PluginSignatureStatus","Alert","severity","title","selectors","href","target","rel","ExternallyManagedButton","pluginId","pluginStatus","externalManageLink","getExternalManageLink","PluginStatus","LinkButton","variant","InstallControlsButton","isInstalling","errorInstalling","useInstallStatus","isUninstalling","errorUninstalling","useUninstallStatus","install","useInstall","uninstall","useUninstall","isConfirmModalVisible","setIsConfirmModalVisible","useState","showConfirmModal","hideConfirmModal","uninstallBtnText","onUninstall","async","appEvents","AppEvents","name","onUpdate","ConfirmModal","isOpen","body","confirmText","onConfirm","onDismiss","disabled","InstallControls","isExternallyManaged","hasPermission","isGrafanaAdmin","grafanaDependency","details","isRemotePluginsAvailable","useIsRemotePluginsAvailable","unsupportedGrafanaVersion","satisfies","includePrerelease","isInstalled","isDisabled","isEnterprise","align","message","isDev","Icon","SIGNATURE_ICONS","PluginSignatureType","DEFAULT","PluginSignatureDetailsBadge","signatureType","signatureOrg","signatureTypeText","capitalize","signatureIcon","DetailsBadge","badge","canvas","PluginDetailsHeaderSignature","PluginDetailsHeaderDependencies","pluginDependencies","length","dependencyTitle","Boolean","map","p","PluginIconName","type","fontWeightBold","PluginDetailsHeader","currentUrl","parentUrl","headerContainer","info","logos","small","headerWrapper","breadcrumb","textUnderline","headerInformationRow","orgName","links","link","url","downloads","Intl","NumberFormat","format","cx","headerInformationRowSecondary","description","h2","h4","headerOrgName","VersionList","versions","table","dateTimeFormatTimeAgo","createdAt","container","h5","usePluginConfig","useAsync","loadPlugin","PluginDetailsBody","queryParams","value","pluginConfig","pageId","page","PluginTabIds","readme","dangerouslySetInnerHTML","__html","angularConfigCtrl","app","configPages","configPage","query","PluginDashboards","meta","PluginDetailsDisabledError","renderDescriptionFromError","PluginDetails","match","params","substring","lastIndexOf","defaultTabs","label","PluginTabLabels","useGetSingle","tabs","pathname","useLocation","useMemo","canConfigurePlugins","isOrgAdmin","PluginType","push","includes","find","include","PluginIncludeType","usePluginDetailsTabs","isLoading","isFetchLoading","useFetchStatus","isFetchDetailsLoading","useFetchDetailsStatus","prevTabs","usePrevious","useEffect","hasUninstalledWithConfigPages","isViewingAConfigPage","locationService","TabsBar","tab","Tab","active","TabContent","tabContent","alert","Layout","justify","AppNotificationSeverity","selectRoot","state","plugins","selectItems","createSelector","items","selectDisplayMode","settings","displayMode","selectAll","selectById","pluginsAdapter","findByInstallAndType","filterBy","filterByType","filter","selectInstalled","searchBy","fields","toLowerCase","some","f","findByKeyword","filteredPlugins","searchedPlugins","selectRequest","actionType","requests","selectIsRequestPending","request","RequestStatus","selectRequestError","useGetAllWithFilters","sortBy","Sorters","useFetchAll","filtered","useSelector","sortPlugins","useFetchDetails","dispatch","useDispatch","isUpdating","fetchRemotePlugins","fetchAll","fetchDetails","isNotFetched","undefined","shouldFetch","useDisplayMode","setDisplayMode","v","ref","useRef","current"],"sourceRoot":""}