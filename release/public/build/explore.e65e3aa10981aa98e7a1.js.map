{"version":3,"file":"explore.e65e3aa10981aa98e7a1.js","mappings":"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","sources":["webpack://grafana/./public/app/features/dashboard/dashgrid/SeriesVisibilityConfigFactory.ts","webpack://grafana/./.yarn/__virtual__/react-use-virtual-00326e70ba/0/cache/react-use-npm-17.3.2-a032cbeb01-7379460f51.zip/node_modules/react-use/esm/useInterval.js","webpack://grafana/./public/app/features/explore/Time.tsx","webpack://grafana/./public/app/features/explore/ElapsedTime.tsx","webpack://grafana/./public/app/features/explore/LiveLogs.tsx","webpack://grafana/./public/app/features/explore/MetaInfoText.tsx","webpack://grafana/./public/app/features/explore/LogsMetaRow.tsx","webpack://grafana/./public/app/features/explore/LogsNavigationPages.tsx","webpack://grafana/./public/app/features/explore/LogsNavigation.tsx","webpack://grafana/./public/app/features/explore/ExploreGraph.tsx","webpack://grafana/./public/app/features/explore/exploreGraphStyleUtils.ts","webpack://grafana/./public/app/features/explore/Logs.tsx","webpack://grafana/./public/app/features/explore/utils/LogsCrossFadeTransition.tsx","webpack://grafana/./public/app/features/explore/useLiveTailControls.ts","webpack://grafana/./public/app/features/explore/LogsContainer.tsx","webpack://grafana/./public/app/features/explore/state/selectors.ts","webpack://grafana/./public/app/features/explore/QueryRows.tsx","webpack://grafana/./public/app/features/explore/TableContainer.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistorySettings.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryCard.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryQueriesTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryStarredTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistory.tsx","webpack://grafana/./.yarn/__virtual__/re-resizable-virtual-ea246c6580/0/cache/re-resizable-npm-6.9.1-79ca365a45-b164f6b956.zip/node_modules/re-resizable/lib/resizer.js","webpack://grafana/./.yarn/__virtual__/re-resizable-virtual-ea246c6580/0/cache/re-resizable-npm-6.9.1-79ca365a45-b164f6b956.zip/node_modules/re-resizable/lib/index.js","webpack://grafana/./public/app/features/explore/ExploreDrawer.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryContainer.tsx","webpack://grafana/./public/app/features/explore/ExploreQueryInspector.tsx","webpack://grafana/./public/app/features/explore/TimeSyncButton.tsx","webpack://grafana/./public/app/features/explore/ExploreTimeControls.tsx","webpack://grafana/./public/app/features/explore/LiveTailButton.tsx","webpack://grafana/./public/app/features/explore/RunButton.tsx","webpack://grafana/./public/app/features/explore/ReturnToDashboardButton.tsx","webpack://grafana/./public/app/features/explore/ExploreToolbar.tsx","webpack://grafana/./public/app/features/explore/NoDataSourceCallToAction.tsx","webpack://grafana/./public/app/features/explore/SecondaryActions.tsx","webpack://grafana/./public/app/features/explore/NodeGraphContainer.tsx","webpack://grafana/./public/app/core/components/Animations/FadeIn.tsx","webpack://grafana/./public/app/features/explore/ErrorContainer.tsx","webpack://grafana/./public/app/features/explore/ResponseErrorContainer.tsx","webpack://grafana/./public/app/features/explore/TraceView/createSpanLink.tsx","webpack://grafana/./public/app/features/explore/TraceView/uiElements.tsx","webpack://grafana/./public/app/features/explore/TraceView/useChildrenState.ts","webpack://grafana/./public/app/features/explore/TraceView/useDetailState.ts","webpack://grafana/./public/app/features/explore/TraceView/TraceView.tsx","webpack://grafana/./public/app/features/explore/TraceView/useHoverIndentGuide.ts","webpack://grafana/./public/app/features/explore/TraceView/useViewRange.ts","webpack://grafana/./public/app/features/explore/TraceView/useSearch.ts","webpack://grafana/./public/app/features/explore/TraceView/TraceViewContainer.tsx","webpack://grafana/./public/app/features/explore/LogsVolumePanel.tsx","webpack://grafana/./public/app/features/explore/ExploreGraphLabel.tsx","webpack://grafana/./public/app/features/explore/Explore.tsx","webpack://grafana/./public/app/features/explore/ExplorePaneContainer.tsx","webpack://grafana/./public/app/features/explore/Wrapper.tsx","webpack://grafana/./.yarn/__virtual__/react-use-virtual-00326e70ba/0/cache/react-use-npm-17.3.2-a032cbeb01-7379460f51.zip/node_modules/react-use/esm/usePrevious.js","webpack://grafana/./.yarn/cache/fast-memoize-npm-2.5.2-f42a7c6940-79fa759719.zip/node_modules/fast-memoize/src/index.js"],"sourcesContent":["import {\n  ByNamesMatcherMode,\n  DataFrame,\n  DynamicConfigValue,\n  FieldConfigSource,\n  FieldMatcherID,\n  FieldType,\n  getFieldDisplayName,\n  isSystemOverrideWithRef,\n  SystemConfigOverrideRule,\n} from '@grafana/data';\nimport { SeriesVisibilityChangeMode } from '@grafana/ui';\n\nconst displayOverrideRef = 'hideSeriesFrom';\nconst isHideSeriesOverride = isSystemOverrideWithRef(displayOverrideRef);\n\nexport function seriesVisibilityConfigFactory(\n  label: string,\n  mode: SeriesVisibilityChangeMode,\n  fieldConfig: FieldConfigSource,\n  data: DataFrame[]\n) {\n  const { overrides } = fieldConfig;\n\n  const displayName = label;\n  const currentIndex = overrides.findIndex(isHideSeriesOverride);\n\n  if (currentIndex < 0) {\n    if (mode === SeriesVisibilityChangeMode.ToggleSelection) {\n      const override = createOverride([displayName]);\n\n      return {\n        ...fieldConfig,\n        overrides: [...fieldConfig.overrides, override],\n      };\n    }\n\n    const displayNames = getDisplayNames(data, displayName);\n    const override = createOverride(displayNames);\n\n    return {\n      ...fieldConfig,\n      overrides: [...fieldConfig.overrides, override],\n    };\n  }\n\n  const overridesCopy = Array.from(overrides);\n  const [current] = overridesCopy.splice(currentIndex, 1) as SystemConfigOverrideRule[];\n\n  if (mode === SeriesVisibilityChangeMode.ToggleSelection) {\n    const existing = getExistingDisplayNames(current);\n\n    if (existing[0] === displayName && existing.length === 1) {\n      return {\n        ...fieldConfig,\n        overrides: overridesCopy,\n      };\n    }\n\n    const override = createOverride([displayName]);\n\n    return {\n      ...fieldConfig,\n      overrides: [...overridesCopy, override],\n    };\n  }\n\n  const override = createExtendedOverride(current, displayName);\n\n  if (allFieldsAreExcluded(override, data)) {\n    return {\n      ...fieldConfig,\n      overrides: overridesCopy,\n    };\n  }\n\n  return {\n    ...fieldConfig,\n    overrides: [...overridesCopy, override],\n  };\n}\n\nfunction createOverride(\n  names: string[],\n  mode = ByNamesMatcherMode.exclude,\n  property?: DynamicConfigValue\n): SystemConfigOverrideRule {\n  property = property ?? {\n    id: 'custom.hideFrom',\n    value: {\n      viz: true,\n      legend: false,\n      tooltip: false,\n    },\n  };\n\n  return {\n    __systemRef: displayOverrideRef,\n    matcher: {\n      id: FieldMatcherID.byNames,\n      options: {\n        mode: mode,\n        names: names,\n        prefix: mode === ByNamesMatcherMode.exclude ? 'All except:' : undefined,\n        readOnly: true,\n      },\n    },\n    properties: [\n      {\n        ...property,\n        value: {\n          viz: true,\n          legend: false,\n          tooltip: false,\n        },\n      },\n    ],\n  };\n}\n\nconst createExtendedOverride = (\n  current: SystemConfigOverrideRule,\n  displayName: string,\n  mode = ByNamesMatcherMode.exclude\n): SystemConfigOverrideRule => {\n  const property = current.properties.find((p) => p.id === 'custom.hideFrom');\n  const existing = getExistingDisplayNames(current);\n  const index = existing.findIndex((name) => name === displayName);\n\n  if (index < 0) {\n    existing.push(displayName);\n  } else {\n    existing.splice(index, 1);\n  }\n\n  return createOverride(existing, mode, property);\n};\n\nconst getExistingDisplayNames = (rule: SystemConfigOverrideRule): string[] => {\n  const names = rule.matcher.options?.names;\n  if (!Array.isArray(names)) {\n    return [];\n  }\n  return names;\n};\n\nconst allFieldsAreExcluded = (override: SystemConfigOverrideRule, data: DataFrame[]): boolean => {\n  return getExistingDisplayNames(override).length === getDisplayNames(data).length;\n};\n\nconst getDisplayNames = (data: DataFrame[], excludeName?: string): string[] => {\n  const unique = new Set<string>();\n\n  for (const frame of data) {\n    for (const field of frame.fields) {\n      if (field.type !== FieldType.number) {\n        continue;\n      }\n\n      const name = getFieldDisplayName(field, frame, data);\n\n      if (name === excludeName) {\n        continue;\n      }\n\n      unique.add(name);\n    }\n  }\n\n  return Array.from(unique);\n};\n","import { useEffect, useRef } from 'react';\nvar useInterval = function (callback, delay) {\n    var savedCallback = useRef(function () { });\n    useEffect(function () {\n        savedCallback.current = callback;\n    });\n    useEffect(function () {\n        if (delay !== null) {\n            var interval_1 = setInterval(function () { return savedCallback.current(); }, delay || 0);\n            return function () { return clearInterval(interval_1); };\n        }\n        return undefined;\n    }, [delay]);\n};\nexport default useInterval;\n","import React, { FC } from 'react';\nimport { toDuration } from '@grafana/data';\n\nexport interface TimeProps {\n  timeInMs: number;\n  className?: string;\n  humanize?: boolean;\n}\n\nexport const Time: FC<TimeProps> = ({ timeInMs, className, humanize }) => {\n  return <span className={`elapsed-time ${className}`}>{formatTime(timeInMs, humanize)}</span>;\n};\n\nconst formatTime = (timeInMs: number, humanize = false): string => {\n  const inSeconds = timeInMs / 1000;\n\n  if (!humanize) {\n    return `${inSeconds.toFixed(1)}s`;\n  }\n\n  const duration = toDuration(inSeconds, 'seconds');\n  const hours = duration.hours();\n  const minutes = duration.minutes();\n  const seconds = duration.seconds();\n\n  if (hours) {\n    return `${hours}h ${minutes}m ${seconds}s`;\n  }\n\n  if (minutes) {\n    return `${minutes}m ${seconds}s`;\n  }\n\n  return `${seconds}s`;\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport { useInterval } from 'react-use';\nimport { Time, TimeProps } from './Time';\n\nconst INTERVAL = 150;\n\nexport interface ElapsedTimeProps extends Omit<TimeProps, 'timeInMs'> {\n  // Use this to reset the timer. Any value is allowed just need to be !== from the previous.\n  // Keep in mind things like [] !== [] or {} !== {}.\n  resetKey?: any;\n}\n\nexport const ElapsedTime: FC<ElapsedTimeProps> = ({ resetKey, humanize, className }) => {\n  const [elapsed, setElapsed] = useState(0); // the current value of elapsed\n\n  // hook that will schedule a interval and then update the elapsed value on every tick.\n  useInterval(() => setElapsed(elapsed + INTERVAL), INTERVAL);\n  // this effect will only be run when resetKey changes. This will reset the elapsed to 0.\n  useEffect(() => setElapsed(0), [resetKey]);\n\n  return <Time timeInMs={elapsed} className={className} humanize={humanize} />;\n};\n","import React, { PureComponent } from 'react';\nimport { css, cx } from '@emotion/css';\nimport tinycolor from 'tinycolor2';\n\nimport { LogMessageAnsi, getLogRowStyles, Icon, Button, Themeable2, withTheme2 } from '@grafana/ui';\nimport { LogRowModel, TimeZone, dateTimeFormat, GrafanaTheme2 } from '@grafana/data';\n\nimport { ElapsedTime } from './ElapsedTime';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  logsRowsLive: css`\n    label: logs-rows-live;\n    font-family: ${theme.typography.fontFamilyMonospace};\n    font-size: ${theme.typography.bodySmall.fontSize};\n    display: flex;\n    flex-flow: column nowrap;\n    height: 60vh;\n    overflow-y: scroll;\n    :first-child {\n      margin-top: auto !important;\n    }\n  `,\n  logsRowFade: css`\n    label: logs-row-fresh;\n    color: ${theme.colors.text};\n    background-color: ${tinycolor(theme.colors.info.transparent).setAlpha(0.25).toString()};\n    animation: fade 1s ease-out 1s 1 normal forwards;\n    @keyframes fade {\n      from {\n        background-color: ${tinycolor(theme.colors.info.transparent).setAlpha(0.25).toString()};\n      }\n      to {\n        background-color: transparent;\n      }\n    }\n  `,\n  logsRowsIndicator: css`\n    font-size: ${theme.typography.h6.fontSize};\n    padding-top: ${theme.spacing(1)};\n    display: flex;\n    align-items: center;\n  `,\n  button: css`\n    margin-right: ${theme.spacing(1)};\n  `,\n  fullWidth: css`\n    width: 100%;\n  `,\n});\n\nexport interface Props extends Themeable2 {\n  logRows?: LogRowModel[];\n  timeZone: TimeZone;\n  stopLive: () => void;\n  onPause: () => void;\n  onResume: () => void;\n  isPaused: boolean;\n}\n\ninterface State {\n  logRowsToRender?: LogRowModel[];\n}\n\nclass LiveLogs extends PureComponent<Props, State> {\n  private liveEndDiv: HTMLDivElement | null = null;\n  private scrollContainerRef = React.createRef<HTMLTableSectionElement>();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logRowsToRender: props.logRows,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: Props, state: State) {\n    if (!nextProps.isPaused) {\n      return {\n        // We update what we show only if not paused. We keep any background subscriptions running and keep updating\n        // our state, but we do not show the updates, this allows us start again showing correct result after resuming\n        // without creating a gap in the log results.\n        logRowsToRender: nextProps.logRows,\n      };\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Handle pausing when user scrolls up so that we stop resetting his position to the bottom when new row arrives.\n   * We do not need to throttle it here much, adding new rows should be throttled/buffered itself in the query epics\n   * and after you pause we remove the handler and add it after you manually resume, so this should not be fired often.\n   */\n  onScroll = (event: React.SyntheticEvent) => {\n    const { isPaused, onPause } = this.props;\n    const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;\n    const distanceFromBottom = scrollHeight - (scrollTop + clientHeight);\n    if (distanceFromBottom >= 5 && !isPaused) {\n      onPause();\n    }\n  };\n\n  rowsToRender = () => {\n    const { isPaused } = this.props;\n    let { logRowsToRender: rowsToRender = [] } = this.state;\n    if (!isPaused) {\n      // A perf optimisation here. Show just 100 rows when streaming and full length when the streaming is paused.\n      rowsToRender = rowsToRender.slice(-100);\n    }\n    return rowsToRender;\n  };\n\n  render() {\n    const { theme, timeZone, onPause, onResume, isPaused } = this.props;\n    const styles = getStyles(theme);\n    const { logsRow, logsRowLocalTime, logsRowMessage } = getLogRowStyles(theme);\n\n    return (\n      <div>\n        <table className={styles.fullWidth}>\n          <tbody\n            onScroll={isPaused ? undefined : this.onScroll}\n            className={cx(['logs-rows', styles.logsRowsLive])}\n            ref={this.scrollContainerRef}\n          >\n            {this.rowsToRender().map((row: LogRowModel) => {\n              return (\n                <tr className={cx(logsRow, styles.logsRowFade)} key={row.uid}>\n                  <td className={cx(logsRowLocalTime)}>{dateTimeFormat(row.timeEpochMs, { timeZone })}</td>\n                  <td className={cx(logsRowMessage)}>{row.hasAnsi ? <LogMessageAnsi value={row.raw} /> : row.entry}</td>\n                </tr>\n              );\n            })}\n            <tr\n              ref={(element) => {\n                this.liveEndDiv = element;\n                // This is triggered on every update so on every new row. It keeps the view scrolled at the bottom by\n                // default.\n                if (this.liveEndDiv && !isPaused) {\n                  this.scrollContainerRef.current?.scrollTo(0, this.scrollContainerRef.current.scrollHeight);\n                }\n              }}\n            />\n          </tbody>\n        </table>\n        <div className={styles.logsRowsIndicator}>\n          <Button variant=\"secondary\" onClick={isPaused ? onResume : onPause} className={styles.button}>\n            <Icon name={isPaused ? 'play' : 'pause'} />\n            &nbsp;\n            {isPaused ? 'Resume' : 'Pause'}\n          </Button>\n          <Button variant=\"secondary\" onClick={this.props.stopLive} className={styles.button}>\n            <Icon name=\"square-shape\" size=\"lg\" type=\"mono\" />\n            &nbsp; Exit live mode\n          </Button>\n          {isPaused || (\n            <span>\n              Last line received: <ElapsedTime resetKey={this.props.logRows} humanize={true} /> ago\n            </span>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const LiveLogsWithTheme = withTheme2(LiveLogs);\n","import React, { memo } from 'react';\nimport { css } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  metaContainer: css`\n    flex: 1;\n    color: ${theme.colors.text.secondary};\n    margin-bottom: ${theme.spacing(2)};\n    min-width: 30%;\n    display: flex;\n    flex-wrap: wrap;\n  `,\n  metaItem: css`\n    margin-right: ${theme.spacing(2)};\n    margin-top: ${theme.spacing(0.5)};\n    display: flex;\n    align-items: baseline;\n\n    .logs-meta-item__error {\n      color: ${theme.colors.error.text};\n    }\n  `,\n  metaLabel: css`\n    margin-right: calc(${theme.spacing(2)} / 2);\n    font-size: ${theme.typography.bodySmall.fontSize};\n    font-weight: ${theme.typography.fontWeightMedium};\n  `,\n  metaValue: css`\n    font-family: ${theme.typography.fontFamilyMonospace};\n    font-size: ${theme.typography.bodySmall.fontSize};\n  `,\n});\n\nexport interface MetaItemProps {\n  label?: string;\n  value: string | JSX.Element;\n}\n\nconst MetaInfoItem = memo(function MetaInfoItem(props: MetaItemProps) {\n  const style = useStyles2(getStyles);\n  const { label, value } = props;\n\n  return (\n    <div className={style.metaItem}>\n      {label && <span className={style.metaLabel}>{label}:</span>}\n      <span className={style.metaValue}>{value}</span>\n    </div>\n  );\n});\n\ninterface MetaInfoTextProps {\n  metaItems: MetaItemProps[];\n}\n\nexport const MetaInfoText = memo(function MetaInfoText(props: MetaInfoTextProps) {\n  const style = useStyles2(getStyles);\n  const { metaItems } = props;\n\n  return (\n    <div className={style.metaContainer}>\n      {metaItems.map((item, index) => (\n        <MetaInfoItem key={`${index}-${item.label}`} label={item.label} value={item.value} />\n      ))}\n    </div>\n  );\n});\n","import React from 'react';\nimport { LogsDedupStrategy, LogsMetaItem, LogsMetaKind, LogRowModel } from '@grafana/data';\nimport { Button, Tooltip, Icon, LogLabels } from '@grafana/ui';\nimport { MAX_CHARACTERS } from '@grafana/ui/src/components/Logs/LogRowMessage';\nimport { MetaInfoText, MetaItemProps } from './MetaInfoText';\n\nexport type Props = {\n  meta: LogsMetaItem[];\n  dedupStrategy: LogsDedupStrategy;\n  dedupCount: number;\n  showDetectedFields: string[];\n  hasUnescapedContent: boolean;\n  forceEscape: boolean;\n  logRows: LogRowModel[];\n  onEscapeNewlines: () => void;\n  clearDetectedFields: () => void;\n};\n\nexport const LogsMetaRow: React.FC<Props> = React.memo(\n  ({\n    meta,\n    dedupStrategy,\n    dedupCount,\n    showDetectedFields,\n    clearDetectedFields,\n    hasUnescapedContent,\n    forceEscape,\n    onEscapeNewlines,\n    logRows,\n  }) => {\n    const logsMetaItem: Array<LogsMetaItem | MetaItemProps> = [...meta];\n\n    // Add deduplication info\n    if (dedupStrategy !== LogsDedupStrategy.none) {\n      logsMetaItem.push({\n        label: 'Dedup count',\n        value: dedupCount,\n        kind: LogsMetaKind.Number,\n      });\n    }\n    // Add info about limit for highlighting\n    if (logRows.some((r) => r.entry.length > MAX_CHARACTERS)) {\n      logsMetaItem.push({\n        label: 'Info',\n        value: 'Logs with more than 100,000 characters could not be parsed and highlighted',\n        kind: LogsMetaKind.String,\n      });\n    }\n\n    // Add detected fields info\n    if (showDetectedFields?.length > 0) {\n      logsMetaItem.push(\n        {\n          label: 'Showing only detected fields',\n          value: renderMetaItem(showDetectedFields, LogsMetaKind.LabelsMap),\n        },\n        {\n          label: '',\n          value: (\n            <Button variant=\"secondary\" size=\"sm\" onClick={clearDetectedFields}>\n              Show all detected fields\n            </Button>\n          ),\n        }\n      );\n    }\n\n    // Add unescaped content info\n    if (hasUnescapedContent) {\n      logsMetaItem.push({\n        label: 'Your logs might have incorrectly escaped content',\n        value: (\n          <Tooltip\n            content=\"We suggest to try to fix the escaping of your log lines first. This is an experimental feature, your logs might not be correctly escaped.\"\n            placement=\"right\"\n          >\n            <Button variant=\"secondary\" size=\"sm\" onClick={onEscapeNewlines}>\n              <span>{forceEscape ? 'Remove escaping' : 'Escape newlines'}&nbsp;</span>\n              <Icon name=\"exclamation-triangle\" className=\"muted\" size=\"sm\" />\n            </Button>\n          </Tooltip>\n        ),\n      });\n    }\n\n    return (\n      <>\n        {logsMetaItem && (\n          <MetaInfoText\n            metaItems={logsMetaItem.map((item) => {\n              return {\n                label: item.label,\n                value: 'kind' in item ? renderMetaItem(item.value, item.kind) : item.value,\n              };\n            })}\n          />\n        )}\n      </>\n    );\n  }\n);\n\nLogsMetaRow.displayName = 'LogsMetaRow';\n\nfunction renderMetaItem(value: any, kind: LogsMetaKind) {\n  if (kind === LogsMetaKind.LabelsMap) {\n    return (\n      <span className=\"logs-meta-item__labels\">\n        <LogLabels labels={value} />\n      </span>\n    );\n  } else if (kind === LogsMetaKind.Error) {\n    return <span className=\"logs-meta-item__error\">{value}</span>;\n  }\n  return value;\n}\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { dateTimeFormat, systemDateFormats, TimeZone, AbsoluteTimeRange, GrafanaTheme2 } from '@grafana/data';\nimport { CustomScrollbar, Spinner, useTheme2 } from '@grafana/ui';\nimport { LogsPage } from './LogsNavigation';\n\ntype Props = {\n  pages: LogsPage[];\n  currentPageIndex: number;\n  oldestLogsFirst: boolean;\n  timeZone: TimeZone;\n  loading: boolean;\n  changeTime: (range: AbsoluteTimeRange) => void;\n};\n\nexport function LogsNavigationPages({\n  pages,\n  currentPageIndex,\n  oldestLogsFirst,\n  timeZone,\n  loading,\n  changeTime,\n}: Props) {\n  const formatTime = (time: number) => {\n    return `${dateTimeFormat(time, {\n      format: systemDateFormats.interval.second,\n      timeZone: timeZone,\n    })}`;\n  };\n\n  const createPageContent = (page: LogsPage, index: number) => {\n    if (currentPageIndex === index && loading) {\n      return <Spinner />;\n    }\n    const topContent = formatTime(oldestLogsFirst ? page.logsRange.from : page.logsRange.to);\n    const bottomContent = formatTime(oldestLogsFirst ? page.logsRange.to : page.logsRange.from);\n    return `${topContent} — ${bottomContent}`;\n  };\n\n  const theme = useTheme2();\n  const styles = getStyles(theme, loading);\n\n  return (\n    <CustomScrollbar autoHide>\n      <div className={styles.pagesWrapper} data-testid=\"logsNavigationPages\">\n        <div className={styles.pagesContainer}>\n          {pages.map((page: LogsPage, index: number) => (\n            <div\n              data-testid={`page${index + 1}`}\n              className={styles.page}\n              key={page.queryRange.to}\n              onClick={() => !loading && changeTime({ from: page.queryRange.from, to: page.queryRange.to })}\n            >\n              <div className={cx(styles.line, { selectedBg: currentPageIndex === index })} />\n              <div className={cx(styles.time, { selectedText: currentPageIndex === index })}>\n                {createPageContent(page, index)}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </CustomScrollbar>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2, loading: boolean) => {\n  return {\n    pagesWrapper: css`\n      height: 100%;\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      flex-direction: column;\n      overflow-y: scroll;\n      &::after {\n        content: '';\n        display: block;\n        background: repeating-linear-gradient(\n          135deg,\n          ${theme.colors.background.primary},\n          ${theme.colors.background.primary} 5px,\n          ${theme.colors.background.secondary} 5px,\n          ${theme.colors.background.secondary} 15px\n        );\n        width: 3px;\n        height: inherit;\n        margin-bottom: 8px;\n      }\n    `,\n    pagesContainer: css`\n      display: flex;\n      padding: 0;\n      flex-direction: column;\n    `,\n    page: css`\n      display: flex;\n      margin: ${theme.spacing(2)} 0;\n      cursor: ${loading ? 'auto' : 'pointer'};\n      white-space: normal;\n      .selectedBg {\n        background: ${theme.colors.primary.main};\n      }\n      .selectedText {\n        color: ${theme.colors.primary.main};\n      }\n    `,\n    line: css`\n      width: 3px;\n      height: 100%;\n      align-items: center;\n      background: ${theme.colors.text.secondary};\n    `,\n    time: css`\n      width: 60px;\n      min-height: 80px;\n      font-size: ${theme.v1.typography.size.sm};\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      align-items: center;\n    `,\n  };\n};\n","import React, { memo, useState, useEffect, useRef } from 'react';\nimport { isEqual } from 'lodash';\nimport { css } from '@emotion/css';\nimport { LogsSortOrder, AbsoluteTimeRange, TimeZone, DataQuery, GrafanaTheme2 } from '@grafana/data';\nimport { Button, Icon, Spinner, useTheme2 } from '@grafana/ui';\nimport { LogsNavigationPages } from './LogsNavigationPages';\n\ntype Props = {\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  queries: DataQuery[];\n  loading: boolean;\n  visibleRange: AbsoluteTimeRange;\n  logsSortOrder?: LogsSortOrder | null;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  scrollToTopLogs: () => void;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n};\n\nexport type LogsPage = {\n  logsRange: AbsoluteTimeRange;\n  queryRange: AbsoluteTimeRange;\n};\n\nfunction LogsNavigation({\n  absoluteRange,\n  logsSortOrder,\n  timeZone,\n  loading,\n  onChangeTime,\n  scrollToTopLogs,\n  visibleRange,\n  queries,\n  clearCache,\n  addResultsToCache,\n}: Props) {\n  const [pages, setPages] = useState<LogsPage[]>([]);\n  const [currentPageIndex, setCurrentPageIndex] = useState(0);\n\n  // These refs are to determine, if we want to clear up logs navigation when totally new query is run\n  const expectedQueriesRef = useRef<DataQuery[]>();\n  const expectedRangeRef = useRef<AbsoluteTimeRange>();\n  // This ref is to store range span for future queres based on firstly selected time range\n  // e.g. if last 5 min selected, always run 5 min range\n  const rangeSpanRef = useRef(0);\n\n  const oldestLogsFirst = logsSortOrder === LogsSortOrder.Ascending;\n  const onFirstPage = oldestLogsFirst ? currentPageIndex === pages.length - 1 : currentPageIndex === 0;\n  const onLastPage = oldestLogsFirst ? currentPageIndex === 0 : currentPageIndex === pages.length - 1;\n  const theme = useTheme2();\n  const styles = getStyles(theme, oldestLogsFirst, loading);\n\n  // Main effect to set pages and index\n  useEffect(() => {\n    const newPage = { logsRange: visibleRange, queryRange: absoluteRange };\n    let newPages: LogsPage[] = [];\n    // We want to start new pagination if queries change or if absolute range is different than expected\n    if (!isEqual(expectedRangeRef.current, absoluteRange) || !isEqual(expectedQueriesRef.current, queries)) {\n      clearCache();\n      setPages([newPage]);\n      setCurrentPageIndex(0);\n      expectedQueriesRef.current = queries;\n      rangeSpanRef.current = absoluteRange.to - absoluteRange.from;\n    } else {\n      setPages((pages) => {\n        // Remove duplicates with new query\n        newPages = pages.filter((page) => !isEqual(newPage.queryRange, page.queryRange));\n        // Sort pages based on logsOrder so they visually align with displayed logs\n        newPages = [...newPages, newPage].sort((a, b) => sortPages(a, b, logsSortOrder));\n        // Set new pages\n\n        return newPages;\n      });\n\n      // Set current page index\n      const index = newPages.findIndex((page) => page.queryRange.to === absoluteRange.to);\n      setCurrentPageIndex(index);\n    }\n    addResultsToCache();\n  }, [visibleRange, absoluteRange, logsSortOrder, queries, clearCache, addResultsToCache]);\n\n  useEffect(() => {\n    return () => clearCache();\n    // We can't enforce the eslint rule here because we only want to run when component unmounts.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const changeTime = ({ from, to }: AbsoluteTimeRange) => {\n    expectedRangeRef.current = { from, to };\n    onChangeTime({ from, to });\n  };\n\n  const sortPages = (a: LogsPage, b: LogsPage, logsSortOrder?: LogsSortOrder | null) => {\n    if (logsSortOrder === LogsSortOrder.Ascending) {\n      return a.queryRange.to > b.queryRange.to ? 1 : -1;\n    }\n    return a.queryRange.to > b.queryRange.to ? -1 : 1;\n  };\n\n  const olderLogsButton = (\n    <Button\n      data-testid=\"olderLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        //If we are not on the last page, use next page's range\n        if (!onLastPage) {\n          const indexChange = oldestLogsFirst ? -1 : 1;\n          changeTime({\n            from: pages[currentPageIndex + indexChange].queryRange.from,\n            to: pages[currentPageIndex + indexChange].queryRange.to,\n          });\n        } else {\n          //If we are on the last page, create new range\n          changeTime({ from: visibleRange.from - rangeSpanRef.current, to: visibleRange.from });\n        }\n      }}\n      disabled={loading}\n    >\n      <div className={styles.navButtonContent}>\n        {loading ? <Spinner /> : <Icon name={oldestLogsFirst ? 'angle-up' : 'angle-down'} size=\"lg\" />}\n        Older logs\n      </div>\n    </Button>\n  );\n\n  const newerLogsButton = (\n    <Button\n      data-testid=\"newerLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        //If we are not on the first page, use previous page's range\n        if (!onFirstPage) {\n          const indexChange = oldestLogsFirst ? 1 : -1;\n          changeTime({\n            from: pages[currentPageIndex + indexChange].queryRange.from,\n            to: pages[currentPageIndex + indexChange].queryRange.to,\n          });\n        }\n        //If we are on the first page, button is disabled and we do nothing\n      }}\n      disabled={loading || onFirstPage}\n    >\n      <div className={styles.navButtonContent}>\n        {loading && <Spinner />}\n        {onFirstPage || loading ? null : <Icon name={oldestLogsFirst ? 'angle-down' : 'angle-up'} size=\"lg\" />}\n        {onFirstPage ? 'Start of range' : 'Newer logs'}\n      </div>\n    </Button>\n  );\n\n  return (\n    <div className={styles.navContainer}>\n      {oldestLogsFirst ? olderLogsButton : newerLogsButton}\n      <LogsNavigationPages\n        pages={pages}\n        currentPageIndex={currentPageIndex}\n        oldestLogsFirst={oldestLogsFirst}\n        timeZone={timeZone}\n        loading={loading}\n        changeTime={changeTime}\n      />\n      {oldestLogsFirst ? newerLogsButton : olderLogsButton}\n      <Button\n        data-testid=\"scrollToTop\"\n        className={styles.scrollToTopButton}\n        variant=\"secondary\"\n        onClick={scrollToTopLogs}\n        title=\"Scroll to top\"\n      >\n        <Icon name=\"arrow-up\" size=\"lg\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default memo(LogsNavigation);\n\nconst getStyles = (theme: GrafanaTheme2, oldestLogsFirst: boolean, loading: boolean) => {\n  return {\n    navContainer: css`\n      max-height: 95vh;\n      display: flex;\n      flex-direction: column;\n      justify-content: ${oldestLogsFirst ? 'flex-start' : 'space-between'};\n      position: sticky;\n      top: ${theme.spacing(2)};\n      right: 0;\n    `,\n    navButton: css`\n      width: 58px;\n      height: 68px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      line-height: 1;\n    `,\n    navButtonContent: css`\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 100%;\n      white-space: normal;\n    `,\n    scrollToTopButton: css`\n      width: 40px;\n      height: 40px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      margin-top: ${theme.spacing(1)};\n    `,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport {\n  AbsoluteTimeRange,\n  applyFieldOverrides,\n  compareArrayValues,\n  compareDataFrameStructures,\n  createFieldConfigRegistry,\n  DataFrame,\n  dateTime,\n  FieldColorModeId,\n  FieldConfigSource,\n  getFrameDisplayName,\n  GrafanaTheme2,\n  LoadingState,\n  SplitOpen,\n  TimeZone,\n} from '@grafana/data';\nimport { PanelRenderer } from '@grafana/runtime';\nimport { GraphDrawStyle, LegendDisplayMode, TooltipDisplayMode, SortOrder } from '@grafana/schema';\nimport {\n  Icon,\n  PanelContext,\n  PanelContextProvider,\n  SeriesVisibilityChangeMode,\n  useStyles2,\n  useTheme2,\n} from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\nimport { defaultGraphConfig, getGraphFieldConfig } from 'app/plugins/panel/timeseries/config';\nimport { TimeSeriesOptions } from 'app/plugins/panel/timeseries/types';\nimport { identity } from 'lodash';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { usePrevious } from 'react-use';\nimport { seriesVisibilityConfigFactory } from '../dashboard/dashgrid/SeriesVisibilityConfigFactory';\nimport { applyGraphStyle } from './exploreGraphStyleUtils';\nimport { ExploreGraphStyle } from '../../types';\n\nconst MAX_NUMBER_OF_TIME_SERIES = 20;\n\ninterface Props {\n  data: DataFrame[];\n  height: number;\n  width: number;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  loadingState: LoadingState;\n  annotations?: DataFrame[];\n  onHiddenSeriesChanged?: (hiddenSeries: string[]) => void;\n  tooltipDisplayMode?: TooltipDisplayMode;\n  splitOpenFn?: SplitOpen;\n  onChangeTime: (timeRange: AbsoluteTimeRange) => void;\n  graphStyle: ExploreGraphStyle;\n}\n\nexport function ExploreGraph({\n  data,\n  height,\n  width,\n  timeZone,\n  absoluteRange,\n  onChangeTime,\n  loadingState,\n  annotations,\n  onHiddenSeriesChanged,\n  splitOpenFn,\n  graphStyle,\n  tooltipDisplayMode = TooltipDisplayMode.Single,\n}: Props) {\n  const theme = useTheme2();\n  const [showAllTimeSeries, setShowAllTimeSeries] = useState(false);\n  const [baseStructureRev, setBaseStructureRev] = useState(1);\n\n  const previousData = usePrevious(data);\n  const structureChangesRef = useRef(0);\n\n  if (data && previousData && !compareArrayValues(previousData, data, compareDataFrameStructures)) {\n    structureChangesRef.current++;\n  }\n\n  const structureRev = baseStructureRev + structureChangesRef.current;\n\n  const [fieldConfig, setFieldConfig] = useState<FieldConfigSource>({\n    defaults: {\n      color: {\n        mode: FieldColorModeId.PaletteClassic,\n      },\n      custom: {\n        drawStyle: GraphDrawStyle.Line,\n        fillOpacity: 0,\n        pointSize: 5,\n      },\n    },\n    overrides: [],\n  });\n\n  const style = useStyles2(getStyles);\n  const timeRange = {\n    from: dateTime(absoluteRange.from),\n    to: dateTime(absoluteRange.to),\n    raw: {\n      from: dateTime(absoluteRange.from),\n      to: dateTime(absoluteRange.to),\n    },\n  };\n\n  const dataWithConfig = useMemo(() => {\n    const registry = createFieldConfigRegistry(getGraphFieldConfig(defaultGraphConfig), 'Explore');\n    const styledFieldConfig = applyGraphStyle(fieldConfig, graphStyle);\n    return applyFieldOverrides({\n      fieldConfig: styledFieldConfig,\n      data,\n      timeZone,\n      replaceVariables: (value) => value, // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n      theme,\n      fieldConfigRegistry: registry,\n    });\n  }, [fieldConfig, graphStyle, data, timeZone, theme]);\n\n  useEffect(() => {\n    if (onHiddenSeriesChanged) {\n      const hiddenFrames: string[] = [];\n      dataWithConfig.forEach((frame) => {\n        const allFieldsHidden = frame.fields.map((field) => field.config?.custom?.hideFrom?.viz).every(identity);\n        if (allFieldsHidden) {\n          hiddenFrames.push(getFrameDisplayName(frame));\n        }\n      });\n      onHiddenSeriesChanged(hiddenFrames);\n    }\n  }, [dataWithConfig, onHiddenSeriesChanged]);\n\n  const seriesToShow = showAllTimeSeries ? dataWithConfig : dataWithConfig.slice(0, MAX_NUMBER_OF_TIME_SERIES);\n\n  const panelContext: PanelContext = {\n    eventBus: appEvents,\n    onSplitOpen: splitOpenFn,\n    onToggleSeriesVisibility(label: string, mode: SeriesVisibilityChangeMode) {\n      setBaseStructureRev((r) => r + 1);\n      setFieldConfig(seriesVisibilityConfigFactory(label, mode, fieldConfig, data));\n    },\n  };\n\n  return (\n    <PanelContextProvider value={panelContext}>\n      {dataWithConfig.length > MAX_NUMBER_OF_TIME_SERIES && !showAllTimeSeries && (\n        <div className={cx([style.timeSeriesDisclaimer])}>\n          <Icon className={style.disclaimerIcon} name=\"exclamation-triangle\" />\n          {`Showing only ${MAX_NUMBER_OF_TIME_SERIES} time series. `}\n          <span\n            className={cx([style.showAllTimeSeries])}\n            onClick={() => {\n              structureChangesRef.current++;\n              setShowAllTimeSeries(true);\n            }}\n          >{`Show all ${dataWithConfig.length}`}</span>\n        </div>\n      )}\n      <PanelRenderer\n        data={{ series: seriesToShow, timeRange, structureRev, state: loadingState, annotations }}\n        pluginId=\"timeseries\"\n        title=\"\"\n        width={width}\n        height={height}\n        onChangeTimeRange={onChangeTime}\n        timeZone={timeZone}\n        options={\n          {\n            tooltip: { mode: tooltipDisplayMode, sort: SortOrder.None },\n            legend: { displayMode: LegendDisplayMode.List, placement: 'bottom', calcs: [] },\n          } as TimeSeriesOptions\n        }\n      />\n    </PanelContextProvider>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  timeSeriesDisclaimer: css`\n    label: time-series-disclaimer;\n    width: 300px;\n    margin: ${theme.spacing(1)} auto;\n    padding: 10px 0;\n    border-radius: ${theme.spacing(2)};\n    text-align: center;\n    background-color: ${theme.colors.background.primary};\n  `,\n  disclaimerIcon: css`\n    label: disclaimer-icon;\n    color: ${theme.colors.warning.main};\n    margin-right: ${theme.spacing(0.5)};\n  `,\n  showAllTimeSeries: css`\n    label: show-all-time-series;\n    cursor: pointer;\n    color: ${theme.colors.text.link};\n  `,\n});\n","import produce from 'immer';\nimport { FieldConfigSource } from '@grafana/data';\nimport { GraphDrawStyle, GraphFieldConfig, StackingMode } from '@grafana/schema';\nimport { ExploreGraphStyle } from '../../types';\n\nexport type FieldConfig = FieldConfigSource<GraphFieldConfig>;\n\nexport function applyGraphStyle(config: FieldConfig, style: ExploreGraphStyle): FieldConfig {\n  return produce(config, (draft) => {\n    if (draft.defaults.custom === undefined) {\n      draft.defaults.custom = {};\n    }\n\n    const { custom } = draft.defaults;\n\n    if (custom.stacking === undefined) {\n      custom.stacking = { group: 'A' };\n    }\n\n    switch (style) {\n      case 'lines':\n        custom.drawStyle = GraphDrawStyle.Line;\n        custom.stacking.mode = StackingMode.None;\n        custom.fillOpacity = 0;\n        break;\n      case 'bars':\n        custom.drawStyle = GraphDrawStyle.Bars;\n        custom.stacking.mode = StackingMode.None;\n        custom.fillOpacity = 100;\n        break;\n      case 'points':\n        custom.drawStyle = GraphDrawStyle.Points;\n        custom.stacking.mode = StackingMode.None;\n        custom.fillOpacity = 0;\n        break;\n      case 'stacked_lines':\n        custom.drawStyle = GraphDrawStyle.Line;\n        custom.stacking.mode = StackingMode.Normal;\n        custom.fillOpacity = 100;\n        break;\n      case 'stacked_bars':\n        custom.drawStyle = GraphDrawStyle.Bars;\n        custom.stacking.mode = StackingMode.Normal;\n        custom.fillOpacity = 100;\n        break;\n      default: {\n        // should never happen\n        // NOTE: casting to `never` will cause typescript\n        // to verify that the switch statement checks every possible\n        // enum-value\n        const invalidValue: never = style;\n        throw new Error(`Invalid graph-style: ${invalidValue}`);\n      }\n    }\n  });\n}\n","import React, { PureComponent, createRef } from 'react';\nimport { css } from '@emotion/css';\nimport { capitalize } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport { TooltipDisplayMode } from '@grafana/schema';\nimport {\n  rangeUtil,\n  RawTimeRange,\n  LogLevel,\n  TimeZone,\n  AbsoluteTimeRange,\n  LogsDedupStrategy,\n  LogRowModel,\n  LogsDedupDescription,\n  LogsMetaItem,\n  LogsSortOrder,\n  LinkModel,\n  Field,\n  DataQuery,\n  DataFrame,\n  GrafanaTheme2,\n  LoadingState,\n} from '@grafana/data';\nimport {\n  RadioButtonGroup,\n  LogRows,\n  Button,\n  InlineField,\n  InlineFieldRow,\n  InlineSwitch,\n  withTheme2,\n  Themeable2,\n} from '@grafana/ui';\nimport store from 'app/core/store';\nimport { dedupLogRows, filterLogLevels } from 'app/core/logs_model';\nimport { LogsMetaRow } from './LogsMetaRow';\nimport LogsNavigation from './LogsNavigation';\nimport { RowContextOptions } from '@grafana/ui/src/components/Logs/LogRowContextProvider';\nimport { ExploreGraph } from './ExploreGraph';\n\nconst SETTINGS_KEYS = {\n  showLabels: 'grafana.explore.logs.showLabels',\n  showTime: 'grafana.explore.logs.showTime',\n  wrapLogMessage: 'grafana.explore.logs.wrapLogMessage',\n  prettifyLogMessage: 'grafana.explore.logs.prettifyLogMessage',\n};\n\ninterface Props extends Themeable2 {\n  width: number;\n  logRows: LogRowModel[];\n  logsMeta?: LogsMetaItem[];\n  logsSeries?: DataFrame[];\n  logsQueries?: DataQuery[];\n  visibleRange?: AbsoluteTimeRange;\n  theme: GrafanaTheme2;\n  loading: boolean;\n  loadingState: LoadingState;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  scanning?: boolean;\n  scanRange?: RawTimeRange;\n  showContextToggle?: (row?: LogRowModel) => boolean;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  onStartScanning?: () => void;\n  onStopScanning?: () => void;\n  getRowContext?: (row: LogRowModel, options?: RowContextOptions) => Promise<any>;\n  getFieldLinks: (field: Field, rowIndex: number) => Array<LinkModel<Field>>;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n}\n\ninterface State {\n  showLabels: boolean;\n  showTime: boolean;\n  wrapLogMessage: boolean;\n  prettifyLogMessage: boolean;\n  dedupStrategy: LogsDedupStrategy;\n  hiddenLogLevels: LogLevel[];\n  logsSortOrder: LogsSortOrder | null;\n  isFlipping: boolean;\n  showDetectedFields: string[];\n  forceEscape: boolean;\n}\n\nclass UnthemedLogs extends PureComponent<Props, State> {\n  flipOrderTimer?: number;\n  cancelFlippingTimer?: number;\n  topLogsRef = createRef<HTMLDivElement>();\n\n  state: State = {\n    showLabels: store.getBool(SETTINGS_KEYS.showLabels, false),\n    showTime: store.getBool(SETTINGS_KEYS.showTime, true),\n    wrapLogMessage: store.getBool(SETTINGS_KEYS.wrapLogMessage, true),\n    prettifyLogMessage: store.getBool(SETTINGS_KEYS.prettifyLogMessage, false),\n    dedupStrategy: LogsDedupStrategy.none,\n    hiddenLogLevels: [],\n    logsSortOrder: null,\n    isFlipping: false,\n    showDetectedFields: [],\n    forceEscape: false,\n  };\n\n  componentWillUnmount() {\n    if (this.flipOrderTimer) {\n      window.clearTimeout(this.flipOrderTimer);\n    }\n\n    if (this.cancelFlippingTimer) {\n      window.clearTimeout(this.cancelFlippingTimer);\n    }\n  }\n\n  onChangeLogsSortOrder = () => {\n    this.setState({ isFlipping: true });\n    // we are using setTimeout here to make sure that disabled button is rendered before the rendering of reordered logs\n    this.flipOrderTimer = window.setTimeout(() => {\n      this.setState((prevState) => {\n        if (prevState.logsSortOrder === null || prevState.logsSortOrder === LogsSortOrder.Descending) {\n          return { logsSortOrder: LogsSortOrder.Ascending };\n        }\n        return { logsSortOrder: LogsSortOrder.Descending };\n      });\n    }, 0);\n    this.cancelFlippingTimer = window.setTimeout(() => this.setState({ isFlipping: false }), 1000);\n  };\n\n  onEscapeNewlines = () => {\n    this.setState((prevState) => ({\n      forceEscape: !prevState.forceEscape,\n    }));\n  };\n\n  onChangeDedup = (dedupStrategy: LogsDedupStrategy) => {\n    this.setState({ dedupStrategy });\n  };\n\n  onChangeLabels = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const showLabels = target.checked;\n      this.setState({\n        showLabels,\n      });\n      store.set(SETTINGS_KEYS.showLabels, showLabels);\n    }\n  };\n\n  onChangeTime = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const showTime = target.checked;\n      this.setState({\n        showTime,\n      });\n      store.set(SETTINGS_KEYS.showTime, showTime);\n    }\n  };\n\n  onChangewrapLogMessage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const wrapLogMessage = target.checked;\n      this.setState({\n        wrapLogMessage,\n      });\n      store.set(SETTINGS_KEYS.wrapLogMessage, wrapLogMessage);\n    }\n  };\n\n  onChangePrettifyLogMessage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const prettifyLogMessage = target.checked;\n      this.setState({\n        prettifyLogMessage,\n      });\n      store.set(SETTINGS_KEYS.prettifyLogMessage, prettifyLogMessage);\n    }\n  };\n\n  onToggleLogLevel = (hiddenRawLevels: string[]) => {\n    const hiddenLogLevels = hiddenRawLevels.map((level) => LogLevel[level as LogLevel]);\n    this.setState({ hiddenLogLevels });\n  };\n\n  onClickScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStartScanning) {\n      this.props.onStartScanning();\n    }\n  };\n\n  onClickStopScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStopScanning) {\n      this.props.onStopScanning();\n    }\n  };\n\n  showDetectedField = (key: string) => {\n    const index = this.state.showDetectedFields.indexOf(key);\n\n    if (index === -1) {\n      this.setState((state) => {\n        return {\n          showDetectedFields: state.showDetectedFields.concat(key),\n        };\n      });\n    }\n  };\n\n  hideDetectedField = (key: string) => {\n    const index = this.state.showDetectedFields.indexOf(key);\n    if (index > -1) {\n      this.setState((state) => {\n        return {\n          showDetectedFields: state.showDetectedFields.filter((k) => key !== k),\n        };\n      });\n    }\n  };\n\n  clearDetectedFields = () => {\n    this.setState((state) => {\n      return {\n        showDetectedFields: [],\n      };\n    });\n  };\n\n  checkUnescapedContent = memoizeOne((logRows: LogRowModel[]) => {\n    return !!logRows.some((r) => r.hasUnescapedContent);\n  });\n\n  dedupRows = memoizeOne((logRows: LogRowModel[], dedupStrategy: LogsDedupStrategy) => {\n    const dedupedRows = dedupLogRows(logRows, dedupStrategy);\n    const dedupCount = dedupedRows.reduce((sum, row) => (row.duplicates ? sum + row.duplicates : sum), 0);\n    return { dedupedRows, dedupCount };\n  });\n\n  filterRows = memoizeOne((logRows: LogRowModel[], hiddenLogLevels: LogLevel[]) => {\n    return filterLogLevels(logRows, new Set(hiddenLogLevels));\n  });\n\n  scrollToTopLogs = () => this.topLogsRef.current?.scrollIntoView();\n\n  render() {\n    const {\n      width,\n      logRows,\n      logsMeta,\n      logsSeries,\n      visibleRange,\n      loading = false,\n      loadingState,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      timeZone,\n      scanning,\n      scanRange,\n      showContextToggle,\n      absoluteRange,\n      onChangeTime,\n      getFieldLinks,\n      theme,\n      logsQueries,\n      clearCache,\n      addResultsToCache,\n    } = this.props;\n\n    const {\n      showLabels,\n      showTime,\n      wrapLogMessage,\n      prettifyLogMessage,\n      dedupStrategy,\n      hiddenLogLevels,\n      logsSortOrder,\n      isFlipping,\n      showDetectedFields,\n      forceEscape,\n    } = this.state;\n\n    const styles = getStyles(theme, wrapLogMessage);\n    const hasData = logRows && logRows.length > 0;\n    const hasUnescapedContent = this.checkUnescapedContent(logRows);\n\n    const filteredLogs = this.filterRows(logRows, hiddenLogLevels);\n    const { dedupedRows, dedupCount } = this.dedupRows(filteredLogs, dedupStrategy);\n\n    const scanText = scanRange ? `Scanning ${rangeUtil.describeTimeRange(scanRange)}` : 'Scanning...';\n\n    return (\n      <>\n        {logsSeries && logsSeries.length ? (\n          <>\n            <div className={styles.infoText}>\n              This datasource does not support full-range histograms. The graph is based on the logs seen in the\n              response.\n            </div>\n            <ExploreGraph\n              graphStyle=\"lines\"\n              data={logsSeries}\n              height={150}\n              width={width}\n              tooltipDisplayMode={TooltipDisplayMode.Multi}\n              absoluteRange={visibleRange || absoluteRange}\n              timeZone={timeZone}\n              loadingState={loadingState}\n              onChangeTime={onChangeTime}\n              onHiddenSeriesChanged={this.onToggleLogLevel}\n            />\n          </>\n        ) : undefined}\n        <div className={styles.logOptions} ref={this.topLogsRef}>\n          <InlineFieldRow>\n            <InlineField label=\"Time\" transparent>\n              <InlineSwitch value={showTime} onChange={this.onChangeTime} transparent id=\"show-time\" />\n            </InlineField>\n            <InlineField label=\"Unique labels\" transparent>\n              <InlineSwitch value={showLabels} onChange={this.onChangeLabels} transparent id=\"unique-labels\" />\n            </InlineField>\n            <InlineField label=\"Wrap lines\" transparent>\n              <InlineSwitch value={wrapLogMessage} onChange={this.onChangewrapLogMessage} transparent id=\"wrap-lines\" />\n            </InlineField>\n            <InlineField label=\"Prettify JSON\" transparent>\n              <InlineSwitch\n                value={prettifyLogMessage}\n                onChange={this.onChangePrettifyLogMessage}\n                transparent\n                id=\"prettify\"\n              />\n            </InlineField>\n            <InlineField label=\"Dedup\" transparent>\n              <RadioButtonGroup\n                options={Object.values(LogsDedupStrategy).map((dedupType) => ({\n                  label: capitalize(dedupType),\n                  value: dedupType,\n                  description: LogsDedupDescription[dedupType],\n                }))}\n                value={dedupStrategy}\n                onChange={this.onChangeDedup}\n                className={styles.radioButtons}\n              />\n            </InlineField>\n          </InlineFieldRow>\n          <div>\n            <Button\n              variant=\"secondary\"\n              disabled={isFlipping}\n              title={logsSortOrder === LogsSortOrder.Ascending ? 'Change to newest first' : 'Change to oldest first'}\n              aria-label=\"Flip results order\"\n              className={styles.headerButton}\n              onClick={this.onChangeLogsSortOrder}\n            >\n              {isFlipping ? 'Flipping...' : 'Flip results order'}\n            </Button>\n          </div>\n        </div>\n        <LogsMetaRow\n          logRows={logRows}\n          meta={logsMeta || []}\n          dedupStrategy={dedupStrategy}\n          dedupCount={dedupCount}\n          hasUnescapedContent={hasUnescapedContent}\n          forceEscape={forceEscape}\n          showDetectedFields={showDetectedFields}\n          onEscapeNewlines={this.onEscapeNewlines}\n          clearDetectedFields={this.clearDetectedFields}\n        />\n        <div className={styles.logsSection}>\n          <div className={styles.logRows}>\n            <LogRows\n              logRows={logRows}\n              deduplicatedRows={dedupedRows}\n              dedupStrategy={dedupStrategy}\n              getRowContext={this.props.getRowContext}\n              onClickFilterLabel={onClickFilterLabel}\n              onClickFilterOutLabel={onClickFilterOutLabel}\n              showContextToggle={showContextToggle}\n              showLabels={showLabels}\n              showTime={showTime}\n              enableLogDetails={true}\n              forceEscape={forceEscape}\n              wrapLogMessage={wrapLogMessage}\n              prettifyLogMessage={prettifyLogMessage}\n              timeZone={timeZone}\n              getFieldLinks={getFieldLinks}\n              logsSortOrder={logsSortOrder}\n              showDetectedFields={showDetectedFields}\n              onClickShowDetectedField={this.showDetectedField}\n              onClickHideDetectedField={this.hideDetectedField}\n            />\n          </div>\n          <LogsNavigation\n            logsSortOrder={logsSortOrder}\n            visibleRange={visibleRange ?? absoluteRange}\n            absoluteRange={absoluteRange}\n            timeZone={timeZone}\n            onChangeTime={onChangeTime}\n            loading={loading}\n            queries={logsQueries ?? []}\n            scrollToTopLogs={this.scrollToTopLogs}\n            addResultsToCache={addResultsToCache}\n            clearCache={clearCache}\n          />\n        </div>\n        {!loading && !hasData && !scanning && (\n          <div className={styles.noData}>\n            No logs found.\n            <Button size=\"xs\" fill=\"text\" onClick={this.onClickScan}>\n              Scan for older logs\n            </Button>\n          </div>\n        )}\n\n        {scanning && (\n          <div className={styles.noData}>\n            <span>{scanText}</span>\n            <Button size=\"xs\" fill=\"text\" onClick={this.onClickStopScan}>\n              Stop scan\n            </Button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const Logs = withTheme2(UnthemedLogs);\n\nconst getStyles = (theme: GrafanaTheme2, wrapLogMessage: boolean) => {\n  return {\n    noData: css`\n      > * {\n        margin-left: 0.5em;\n      }\n    `,\n    logOptions: css`\n      display: flex;\n      justify-content: space-between;\n      align-items: baseline;\n      flex-wrap: wrap;\n      background-color: ${theme.colors.background.primary};\n      padding: ${theme.spacing(1, 2)};\n      border-radius: ${theme.shape.borderRadius()};\n      margin: ${theme.spacing(2, 0, 1)};\n      border: 1px solid ${theme.colors.border.medium};\n    `,\n    headerButton: css`\n      margin: ${theme.spacing(0.5, 0, 0, 1)};\n    `,\n    radioButtons: css`\n      margin: 0 ${theme.spacing(1)};\n    `,\n    logsSection: css`\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n    `,\n    logRows: css`\n      overflow-x: ${wrapLogMessage ? 'unset' : 'scroll'};\n      overflow-y: visible;\n      width: 100%;\n    `,\n    infoText: css`\n      font-size: ${theme.typography.size.sm};\n      color: ${theme.colors.text.secondary};\n    `,\n  };\n};\n","import React from 'react';\nimport memoizeOne from 'memoize-one';\nimport { css } from '@emotion/css';\nimport { CSSTransition } from 'react-transition-group';\n\nconst transitionDuration = 500;\n// We add a bit of delay to the transition as another perf optimisation. As at the start we need to render\n// quite a bit of new rows, if we start transition at the same time there can be frame rate drop. This gives time\n// for react to first render them and then do the animation.\nconst transitionDelay = 100;\n\nconst getStyles = memoizeOne(() => {\n  return {\n    logsEnter: css`\n      label: logsEnter;\n      position: absolute;\n      opacity: 0;\n      height: auto;\n      width: 100%;\n    `,\n    logsEnterActive: css`\n      label: logsEnterActive;\n      opacity: 1;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n    logsExit: css`\n      label: logsExit;\n      position: absolute;\n      opacity: 1;\n      height: auto;\n      width: 100%;\n    `,\n    logsExitActive: css`\n      label: logsExitActive;\n      opacity: 0;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n  };\n});\n\ntype Props = {\n  children: React.ReactNode;\n  visible: boolean;\n};\n\n/**\n * Cross fade transition component that is tied a bit too much to the logs containers so not very useful elsewhere\n * right now.\n */\nexport function LogsCrossFadeTransition(props: Props) {\n  const { visible, children } = props;\n  const styles = getStyles();\n  return (\n    <CSSTransition\n      in={visible}\n      mountOnEnter={true}\n      unmountOnExit={true}\n      timeout={transitionDuration + transitionDelay}\n      classNames={{\n        enter: styles.logsEnter,\n        enterActive: styles.logsEnterActive,\n        exit: styles.logsExit,\n        exitActive: styles.logsExitActive,\n      }}\n    >\n      {children}\n    </CSSTransition>\n  );\n}\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RefreshPicker } from '@grafana/ui';\n\nimport { changeRefreshInterval } from './state/time';\nimport { setPausedStateAction, runQueries } from './state/query';\nimport { ExploreId } from '../../types';\n\n/**\n * Hook that gives you all the functions needed to control the live tailing.\n */\nexport function useLiveTailControls(exploreId: ExploreId) {\n  const dispatch = useDispatch();\n\n  const pause = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: true }));\n  }, [exploreId, dispatch]);\n\n  const resume = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: false }));\n  }, [exploreId, dispatch]);\n\n  const stop = useCallback(() => {\n    // We need to pause here first because there is transition where we are not live but live logs are still shown\n    // to cross fade with the normal view. This will prevent reordering of the logs in the live view during the\n    // transition.\n    pause();\n\n    // TODO referencing this from perspective of refresh picker when there is designated button for it now is not\n    //  great. Needs a bit of refactoring.\n    dispatch(changeRefreshInterval(exploreId, RefreshPicker.offOption.value));\n    dispatch(runQueries(exploreId));\n  }, [exploreId, dispatch, pause]);\n\n  const start = useCallback(() => {\n    dispatch(changeRefreshInterval(exploreId, RefreshPicker.liveOption.value));\n  }, [exploreId, dispatch]);\n\n  return {\n    pause,\n    resume,\n    stop,\n    start,\n  };\n}\n\ntype Props = {\n  exploreId: ExploreId;\n  children: (controls: ReturnType<typeof useLiveTailControls>) => React.ReactElement;\n};\n\n/**\n * If you can't use the hook you can use this as a render prop pattern.\n */\nexport function LiveTailControls(props: Props) {\n  const controls = useLiveTailControls(props.exploreId);\n  return props.children(controls);\n}\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { css } from '@emotion/css';\nimport { Collapse } from '@grafana/ui';\nimport {\n  AbsoluteTimeRange,\n  Field,\n  hasLogsContextSupport,\n  LoadingState,\n  LogRowModel,\n  RawTimeRange,\n} from '@grafana/data';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport { splitOpen } from './state/main';\nimport { addResultsToCache, clearCache } from './state/query';\nimport { updateTimeRange } from './state/time';\nimport { getTimeZone } from '../profile/state/selectors';\nimport { LiveLogsWithTheme } from './LiveLogs';\nimport { Logs } from './Logs';\nimport { LogsCrossFadeTransition } from './utils/LogsCrossFadeTransition';\nimport { LiveTailControls } from './useLiveTailControls';\nimport { getFieldLinksForExplore } from './utils/links';\n\ninterface LogsContainerProps extends PropsFromRedux {\n  width: number;\n  exploreId: ExploreId;\n  scanRange?: RawTimeRange;\n  syncedTimes: boolean;\n  loadingState: LoadingState;\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  onStartScanning: () => void;\n  onStopScanning: () => void;\n}\n\nclass LogsContainer extends PureComponent<LogsContainerProps> {\n  onChangeTime = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  getLogRowContext = async (row: LogRowModel, options?: any): Promise<any> => {\n    const { datasourceInstance } = this.props;\n\n    if (hasLogsContextSupport(datasourceInstance)) {\n      return datasourceInstance.getLogRowContext(row, options);\n    }\n\n    return [];\n  };\n\n  showContextToggle = (row?: LogRowModel): boolean => {\n    const { datasourceInstance } = this.props;\n\n    if (hasLogsContextSupport(datasourceInstance)) {\n      return datasourceInstance.showContextToggle(row);\n    }\n\n    return false;\n  };\n\n  getFieldLinks = (field: Field, rowIndex: number) => {\n    const { splitOpen: splitOpenFn, range } = this.props;\n    return getFieldLinksForExplore({ field, rowIndex, splitOpenFn, range });\n  };\n\n  render() {\n    const {\n      loading,\n      loadingState,\n      logRows,\n      logsMeta,\n      logsSeries,\n      logsQueries,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      onStartScanning,\n      onStopScanning,\n      absoluteRange,\n      timeZone,\n      visibleRange,\n      scanning,\n      range,\n      width,\n      isLive,\n      exploreId,\n      addResultsToCache,\n      clearCache,\n    } = this.props;\n\n    if (!logRows) {\n      return null;\n    }\n\n    // We need to override css overflow of divs in Collapse element to enable sticky Logs navigation\n    const styleOverridesForStickyNavigation = css`\n      & > div {\n        overflow: visible;\n        & > div {\n          overflow: visible;\n        }\n      }\n    `;\n\n    return (\n      <>\n        <LogsCrossFadeTransition visible={isLive}>\n          <Collapse label=\"Logs\" loading={false} isOpen>\n            <LiveTailControls exploreId={exploreId}>\n              {(controls) => (\n                <LiveLogsWithTheme\n                  logRows={logRows}\n                  timeZone={timeZone}\n                  stopLive={controls.stop}\n                  isPaused={this.props.isPaused}\n                  onPause={controls.pause}\n                  onResume={controls.resume}\n                />\n              )}\n            </LiveTailControls>\n          </Collapse>\n        </LogsCrossFadeTransition>\n        <LogsCrossFadeTransition visible={!isLive}>\n          <Collapse label=\"Logs\" loading={loading} isOpen className={styleOverridesForStickyNavigation}>\n            <Logs\n              logRows={logRows}\n              logsMeta={logsMeta}\n              logsSeries={logsSeries}\n              logsQueries={logsQueries}\n              width={width}\n              loading={loading}\n              loadingState={loadingState}\n              onChangeTime={this.onChangeTime}\n              onClickFilterLabel={onClickFilterLabel}\n              onClickFilterOutLabel={onClickFilterOutLabel}\n              onStartScanning={onStartScanning}\n              onStopScanning={onStopScanning}\n              absoluteRange={absoluteRange}\n              visibleRange={visibleRange}\n              timeZone={timeZone}\n              scanning={scanning}\n              scanRange={range.raw}\n              showContextToggle={this.showContextToggle}\n              getRowContext={this.getLogRowContext}\n              getFieldLinks={this.getFieldLinks}\n              addResultsToCache={() => addResultsToCache(exploreId)}\n              clearCache={() => clearCache(exploreId)}\n            />\n          </Collapse>\n        </LogsCrossFadeTransition>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const {\n    logsResult,\n    loading,\n    scanning,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    range,\n    absoluteRange,\n    logsVolumeDataProvider,\n    logsVolumeData,\n  } = item;\n  const timeZone = getTimeZone(state.user);\n\n  return {\n    loading,\n    logRows: logsResult?.rows,\n    logsMeta: logsResult?.meta,\n    logsSeries: logsResult?.series,\n    logsQueries: logsResult?.queries,\n    visibleRange: logsResult?.visibleRange,\n    scanning,\n    timeZone,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    range,\n    absoluteRange,\n    logsVolumeDataProvider,\n    logsVolumeData,\n  };\n}\n\nconst mapDispatchToProps = {\n  updateTimeRange,\n  splitOpen,\n  addResultsToCache,\n  clearCache,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(LogsContainer);\n","import { ExploreId, StoreState } from 'app/types';\n\nexport const isSplit = (state: StoreState) => Boolean(state.explore[ExploreId.left] && state.explore[ExploreId.right]);\n\nexport const getExploreItemSelector = (exploreId: ExploreId) => (state: StoreState) => state.explore[exploreId];\n","import React, { useCallback, useMemo } from 'react';\nimport { ExploreId } from 'app/types/explore';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDatasourceSrv } from '../plugins/datasource_srv';\nimport { runQueries, changeQueriesAction } from './state/query';\nimport { CoreApp, DataQuery } from '@grafana/data';\nimport { getNextRefIdChar } from 'app/core/utils/query';\nimport { QueryEditorRows } from '../query/components/QueryEditorRows';\nimport { createSelector } from '@reduxjs/toolkit';\nimport { getExploreItemSelector } from './state/selectors';\n\ninterface Props {\n  exploreId: ExploreId;\n}\n\nconst makeSelectors = (exploreId: ExploreId) => {\n  const exploreItemSelector = getExploreItemSelector(exploreId);\n  return {\n    getQueries: createSelector(exploreItemSelector, (s) => s!.queries),\n    getQueryResponse: createSelector(exploreItemSelector, (s) => s!.queryResponse),\n    getHistory: createSelector(exploreItemSelector, (s) => s!.history),\n    getEventBridge: createSelector(exploreItemSelector, (s) => s!.eventBridge),\n    getDatasourceInstanceSettings: createSelector(\n      exploreItemSelector,\n      (s) => getDatasourceSrv().getInstanceSettings(s!.datasourceInstance?.uid)!\n    ),\n  };\n};\n\nexport const QueryRows = ({ exploreId }: Props) => {\n  const dispatch = useDispatch();\n  const { getQueries, getDatasourceInstanceSettings, getQueryResponse, getHistory, getEventBridge } = useMemo(\n    () => makeSelectors(exploreId),\n    [exploreId]\n  );\n\n  const queries = useSelector(getQueries)!;\n  const dsSettings = useSelector(getDatasourceInstanceSettings)!;\n  const queryResponse = useSelector(getQueryResponse)!;\n  const history = useSelector(getHistory);\n  const eventBridge = useSelector(getEventBridge);\n\n  const onRunQueries = useCallback(() => {\n    dispatch(runQueries(exploreId));\n  }, [dispatch, exploreId]);\n\n  const onChange = useCallback(\n    (newQueries: DataQuery[]) => {\n      dispatch(changeQueriesAction({ queries: newQueries, exploreId }));\n\n      // if we are removing a query we want to run the remaining ones\n      if (newQueries.length < queries.length) {\n        onRunQueries();\n      }\n    },\n    [dispatch, exploreId, onRunQueries, queries]\n  );\n\n  const onAddQuery = useCallback(\n    (query: DataQuery) => {\n      onChange([...queries, { ...query, refId: getNextRefIdChar(queries) }]);\n    },\n    [onChange, queries]\n  );\n\n  return (\n    <QueryEditorRows\n      dsSettings={dsSettings}\n      queries={queries}\n      onQueriesChange={onChange}\n      onAddQuery={onAddQuery}\n      onRunQueries={onRunQueries}\n      data={queryResponse}\n      app={CoreApp.Explore}\n      history={history}\n      eventBus={eventBridge}\n    />\n  );\n};\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { ValueLinkConfig, applyFieldOverrides, TimeZone } from '@grafana/data';\nimport { Collapse, Table } from '@grafana/ui';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport { splitOpen } from './state/main';\nimport { config } from 'app/core/config';\nimport { PANEL_BORDER } from 'app/core/constants';\nimport { MetaInfoText } from './MetaInfoText';\nimport { FilterItem } from '@grafana/ui/src/components/Table/types';\nimport { getFieldLinksForExplore } from './utils/links';\n\ninterface TableContainerProps {\n  ariaLabel?: string;\n  exploreId: ExploreId;\n  width: number;\n  timeZone: TimeZone;\n  onCellFilterAdded?: (filter: FilterItem) => void;\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: TableContainerProps) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const { loading: loadingInState, tableResult, range } = item;\n  const loading = tableResult && tableResult.length > 0 ? false : loadingInState;\n  return { loading, tableResult, range };\n}\n\nconst mapDispatchToProps = {\n  splitOpen,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = TableContainerProps & ConnectedProps<typeof connector>;\n\nexport class TableContainer extends PureComponent<Props> {\n  getTableHeight() {\n    const { tableResult } = this.props;\n\n    if (!tableResult || tableResult.length === 0) {\n      return 200;\n    }\n\n    // tries to estimate table height\n    return Math.max(Math.min(600, tableResult.length * 35) + 35);\n  }\n\n  render() {\n    const { loading, onCellFilterAdded, tableResult, width, splitOpen, range, ariaLabel, timeZone } = this.props;\n    const height = this.getTableHeight();\n    const tableWidth = width - config.theme.panelPadding * 2 - PANEL_BORDER;\n\n    let dataFrame = tableResult;\n\n    if (dataFrame?.length) {\n      dataFrame = applyFieldOverrides({\n        data: [dataFrame],\n        timeZone,\n        theme: config.theme2,\n        replaceVariables: (v: string) => v,\n        fieldConfig: {\n          defaults: {},\n          overrides: [],\n        },\n      })[0];\n      // Bit of code smell here. We need to add links here to the frame modifying the frame on every render.\n      // Should work fine in essence but still not the ideal way to pass props. In logs container we do this\n      // differently and sidestep this getLinks API on a dataframe\n      for (const field of dataFrame.fields) {\n        field.getLinks = (config: ValueLinkConfig) => {\n          return getFieldLinksForExplore({\n            field,\n            rowIndex: config.valueRowIndex!,\n            splitOpenFn: splitOpen,\n            range,\n            dataFrame: dataFrame!,\n          });\n        };\n      }\n    }\n\n    return (\n      <Collapse label=\"Table\" loading={loading} isOpen>\n        {dataFrame?.length ? (\n          <Table\n            ariaLabel={ariaLabel}\n            data={dataFrame}\n            width={tableWidth}\n            height={height}\n            onCellFilterAdded={onCellFilterAdded}\n          />\n        ) : (\n          <MetaInfoText metaItems={[{ value: '0 series returned' }]} />\n        )}\n      </Collapse>\n    );\n  }\n}\n\nexport default connector(TableContainer);\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { stylesFactory, useTheme, Select, Button, Switch, Field } from '@grafana/ui';\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\nimport appEvents from 'app/core/app_events';\nimport { ShowConfirmModalEvent } from '../../../types/events';\nimport { dispatch } from 'app/store/store';\nimport { notifyApp } from 'app/core/actions';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { MAX_HISTORY_ITEMS } from '../../../core/utils/richHistory';\n\nexport interface RichHistorySettingsProps {\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  onChangeRetentionPeriod: (option: SelectableValue<number>) => void;\n  toggleStarredTabAsFirstTab: () => void;\n  toggleactiveDatasourceOnly: () => void;\n  deleteRichHistory: () => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    container: css`\n      font-size: ${theme.typography.size.sm};\n      .space-between {\n        margin-bottom: ${theme.spacing.lg};\n      }\n    `,\n    input: css`\n      max-width: 200px;\n    `,\n    switch: css`\n      display: flex;\n      align-items: center;\n    `,\n    label: css`\n      margin-left: ${theme.spacing.md};\n    `,\n  };\n});\n\nconst retentionPeriodOptions = [\n  { value: 2, label: '2 days' },\n  { value: 5, label: '5 days' },\n  { value: 7, label: '1 week' },\n  { value: 14, label: '2 weeks' },\n];\n\nexport function RichHistorySettings(props: RichHistorySettingsProps) {\n  const {\n    retentionPeriod,\n    starredTabAsFirstTab,\n    activeDatasourceOnly,\n    onChangeRetentionPeriod,\n    toggleStarredTabAsFirstTab,\n    toggleactiveDatasourceOnly,\n    deleteRichHistory,\n  } = props;\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  const selectedOption = retentionPeriodOptions.find((v) => v.value === retentionPeriod);\n\n  const onDelete = () => {\n    appEvents.publish(\n      new ShowConfirmModalEvent({\n        title: 'Delete',\n        text: 'Are you sure you want to permanently delete your query history?',\n        yesText: 'Delete',\n        icon: 'trash-alt',\n        onConfirm: () => {\n          deleteRichHistory();\n          dispatch(notifyApp(createSuccessNotification('Query history deleted')));\n        },\n      })\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      <Field\n        label=\"History time span\"\n        description={`Select the period of time for which Grafana will save your query history. Up to ${MAX_HISTORY_ITEMS} entries will be stored.`}\n        className=\"space-between\"\n      >\n        <div className={styles.input}>\n          <Select\n            menuShouldPortal\n            value={selectedOption}\n            options={retentionPeriodOptions}\n            onChange={onChangeRetentionPeriod}\n          ></Select>\n        </div>\n      </Field>\n      <Field label=\"Default active tab\" description=\" \" className=\"space-between\">\n        <div className={styles.switch}>\n          <Switch value={starredTabAsFirstTab} onChange={toggleStarredTabAsFirstTab}></Switch>\n          <div className={styles.label}>Change the default active tab from “Query history” to “Starred”</div>\n        </div>\n      </Field>\n      <Field label=\"Data source behaviour\" description=\" \" className=\"space-between\">\n        <div className={styles.switch}>\n          <Switch value={activeDatasourceOnly} onChange={toggleactiveDatasourceOnly}></Switch>\n          <div className={styles.label}>Only show queries for data source currently active in Explore</div>\n        </div>\n      </Field>\n      <div\n        className={css`\n          font-weight: ${theme.typography.weight.bold};\n        `}\n      >\n        Clear query history\n      </div>\n      <div\n        className={css`\n          margin-bottom: ${theme.spacing.sm};\n        `}\n      >\n        Delete all of your query history, permanently.\n      </div>\n      <Button variant=\"destructive\" onClick={onDelete}>\n        Clear query history\n      </Button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { css, cx } from '@emotion/css';\nimport { stylesFactory, useTheme, TextArea, Button, IconButton } from '@grafana/ui';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { GrafanaTheme, DataSourceApi } from '@grafana/data';\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\nimport { createUrlFromRichHistory, createQueryText } from 'app/core/utils/richHistory';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { copyStringToClipboard } from 'app/core/utils/explore';\nimport appEvents from 'app/core/app_events';\nimport { dispatch } from 'app/store/store';\nimport { notifyApp } from 'app/core/actions';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { StoreState } from 'app/types';\n\nimport { updateRichHistory } from '../state/history';\nimport { changeDatasource } from '../state/datasource';\nimport { setQueries } from '../state/query';\nimport { ShowConfirmModalEvent } from '../../../types/events';\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const { datasourceInstance } = explore[exploreId]!;\n  return {\n    exploreId,\n    datasourceInstance,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  updateRichHistory,\n  setQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps {\n  query: RichHistoryQuery;\n  dsImg: string;\n  isRemoved: boolean;\n}\n\nexport type Props = ConnectedProps<typeof connector> & OwnProps;\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, isRemoved: boolean) => {\n  /* Hard-coded value so all buttons and icons on right side of card are aligned */\n  const rigtColumnWidth = '240px';\n  const rigtColumnContentWidth = '170px';\n\n  /* If datasource was removed, card will have inactive color */\n  const cardColor = theme.colors.bg2;\n\n  return {\n    queryCard: css`\n      display: flex;\n      flex-direction: column;\n      border: 1px solid ${theme.colors.border1};\n      margin: ${theme.spacing.sm} 0;\n      background-color: ${cardColor};\n      border-radius: ${theme.border.radius.sm};\n      .starred {\n        color: ${theme.palette.orange};\n      }\n    `,\n    cardRow: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${theme.spacing.sm};\n      border-bottom: none;\n      :first-of-type {\n        border-bottom: 1px solid ${theme.colors.border1};\n        padding: ${theme.spacing.xs} ${theme.spacing.sm};\n      }\n      img {\n        height: ${theme.typography.size.base};\n        max-width: ${theme.typography.size.base};\n        margin-right: ${theme.spacing.sm};\n      }\n    `,\n    datasourceContainer: css`\n      display: flex;\n      align-items: center;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.semibold};\n    `,\n    queryActionButtons: css`\n      max-width: ${rigtColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      font-size: ${theme.typography.size.base};\n      button {\n        margin-left: ${theme.spacing.sm};\n      }\n    `,\n    queryContainer: css`\n      font-weight: ${theme.typography.weight.semibold};\n      width: calc(100% - ${rigtColumnWidth});\n    `,\n    queryRow: css`\n      border-top: 1px solid ${theme.colors.border1};\n      word-break: break-all;\n      padding: 4px 2px;\n      :first-child {\n        border-top: none;\n        padding: 0 0 4px 0;\n      }\n    `,\n    updateCommentContainer: css`\n      width: calc(100% + ${rigtColumnWidth});\n      margin-top: ${theme.spacing.sm};\n    `,\n    comment: css`\n      overflow-wrap: break-word;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.regular};\n      margin-top: ${theme.spacing.xs};\n    `,\n    commentButtonRow: css`\n      > * {\n        margin-right: ${theme.spacing.sm};\n      }\n    `,\n    textArea: css`\n      width: 100%;\n    `,\n    runButton: css`\n      max-width: ${rigtColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      button {\n        height: auto;\n        padding: ${theme.spacing.xs} ${theme.spacing.md};\n        line-height: 1.4;\n        span {\n          white-space: normal !important;\n        }\n      }\n    `,\n  };\n});\n\nexport function RichHistoryCard(props: Props) {\n  const { query, dsImg, isRemoved, updateRichHistory, changeDatasource, exploreId, datasourceInstance, setQueries } =\n    props;\n  const [activeUpdateComment, setActiveUpdateComment] = useState(false);\n  const [comment, setComment] = useState<string | undefined>(query.comment);\n  const [queryDsInstance, setQueryDsInstance] = useState<DataSourceApi | undefined>(undefined);\n\n  useEffect(() => {\n    const getQueryDsInstance = async () => {\n      const ds = await getDataSourceSrv().get(query.datasourceName);\n      setQueryDsInstance(ds);\n    };\n\n    getQueryDsInstance();\n  }, [query.datasourceName]);\n\n  const theme = useTheme();\n  const styles = getStyles(theme, isRemoved);\n\n  const onRunQuery = async () => {\n    const queriesToRun = query.queries;\n    if (query.datasourceName !== datasourceInstance?.name) {\n      await changeDatasource(exploreId, query.datasourceName, { importQueries: true });\n      setQueries(exploreId, queriesToRun);\n    } else {\n      setQueries(exploreId, queriesToRun);\n    }\n  };\n\n  const onCopyQuery = () => {\n    const queriesToCopy = query.queries.map((q) => createQueryText(q, queryDsInstance)).join('\\n');\n    copyStringToClipboard(queriesToCopy);\n    dispatch(notifyApp(createSuccessNotification('Query copied to clipboard')));\n  };\n\n  const onCreateShortLink = async () => {\n    const link = createUrlFromRichHistory(query);\n    await createAndCopyShortLink(link);\n  };\n\n  const onDeleteQuery = () => {\n    // For starred queries, we want confirmation. For non-starred, we don't.\n    if (query.starred) {\n      appEvents.publish(\n        new ShowConfirmModalEvent({\n          title: 'Delete',\n          text: 'Are you sure you want to permanently delete your starred query?',\n          yesText: 'Delete',\n          icon: 'trash-alt',\n          onConfirm: () => {\n            updateRichHistory(query.ts, 'delete');\n            dispatch(notifyApp(createSuccessNotification('Query deleted')));\n          },\n        })\n      );\n    } else {\n      updateRichHistory(query.ts, 'delete');\n      dispatch(notifyApp(createSuccessNotification('Query deleted')));\n    }\n  };\n\n  const onStarrQuery = () => {\n    updateRichHistory(query.ts, 'starred');\n  };\n\n  const toggleActiveUpdateComment = () => setActiveUpdateComment(!activeUpdateComment);\n\n  const onUpdateComment = () => {\n    updateRichHistory(query.ts, 'comment', comment);\n    setActiveUpdateComment(false);\n  };\n\n  const onCancelUpdateComment = () => {\n    setActiveUpdateComment(false);\n    setComment(query.comment);\n  };\n\n  const onKeyDown = (keyEvent: React.KeyboardEvent) => {\n    if (keyEvent.key === 'Enter' && (keyEvent.shiftKey || keyEvent.ctrlKey)) {\n      onUpdateComment();\n    }\n\n    if (keyEvent.key === 'Escape') {\n      onCancelUpdateComment();\n    }\n  };\n\n  const updateComment = (\n    <div className={styles.updateCommentContainer} aria-label={comment ? 'Update comment form' : 'Add comment form'}>\n      <TextArea\n        value={comment}\n        placeholder={comment ? undefined : 'An optional description of what the query does.'}\n        onChange={(e) => setComment(e.currentTarget.value)}\n        className={styles.textArea}\n      />\n      <div className={styles.commentButtonRow}>\n        <Button onClick={onUpdateComment} aria-label=\"Submit button\">\n          Save comment\n        </Button>\n        <Button variant=\"secondary\" onClick={onCancelUpdateComment}>\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n\n  const queryActionButtons = (\n    <div className={styles.queryActionButtons}>\n      <IconButton\n        name=\"comment-alt\"\n        onClick={toggleActiveUpdateComment}\n        title={query.comment?.length > 0 ? 'Edit comment' : 'Add comment'}\n      />\n      <IconButton name=\"copy\" onClick={onCopyQuery} title=\"Copy query to clipboard\" />\n      {!isRemoved && (\n        <IconButton name=\"share-alt\" onClick={onCreateShortLink} title=\"Copy shortened link to clipboard\" />\n      )}\n      <IconButton name=\"trash-alt\" title={'Delete query'} onClick={onDeleteQuery} />\n      <IconButton\n        name={query.starred ? 'favorite' : 'star'}\n        iconType={query.starred ? 'mono' : 'default'}\n        onClick={onStarrQuery}\n        title={query.starred ? 'Unstar query' : 'Star query'}\n      />\n    </div>\n  );\n\n  return (\n    <div className={styles.queryCard} onKeyDown={onKeyDown}>\n      <div className={styles.cardRow}>\n        <div className={styles.datasourceContainer}>\n          <img src={dsImg} aria-label=\"Data source icon\" />\n          <div aria-label=\"Data source name\">\n            {isRemoved ? 'Data source does not exist anymore' : query.datasourceName}\n          </div>\n        </div>\n        {queryActionButtons}\n      </div>\n      <div className={cx(styles.cardRow)}>\n        <div className={styles.queryContainer}>\n          {query.queries.map((q, i) => {\n            const queryText = createQueryText(q, queryDsInstance);\n            return (\n              <div aria-label=\"Query text\" key={`${q}-${i}`} className={styles.queryRow}>\n                {queryText}\n              </div>\n            );\n          })}\n          {!activeUpdateComment && query.comment && (\n            <div aria-label=\"Query comment\" className={styles.comment}>\n              {query.comment}\n            </div>\n          )}\n          {activeUpdateComment && updateComment}\n        </div>\n        {!activeUpdateComment && (\n          <div className={styles.runButton}>\n            <Button variant=\"secondary\" onClick={onRunQuery} disabled={isRemoved}>\n              {datasourceInstance?.name === query.datasourceName ? 'Run query' : 'Switch data source and run query'}\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default connector(RichHistoryCard);\n","import React, { useState, useEffect } from 'react';\nimport { css } from '@emotion/css';\nimport { uniqBy } from 'lodash';\n\n// Types\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\n// Utils\nimport { stylesFactory, useTheme, RangeSlider, MultiSelect, Select, FilterInput } from '@grafana/ui';\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\n\nimport {\n  SortOrder,\n  mapNumbertoTimeInSlider,\n  mapQueriesToHeadings,\n  createDatasourcesList,\n  filterAndSortQueries,\n} from 'app/core/utils/richHistory';\n\n// Components\nimport RichHistoryCard from './RichHistoryCard';\nimport { sortOrderOptions } from './RichHistory';\nimport { useDebounce } from 'react-use';\n\nexport interface Props {\n  queries: RichHistoryQuery[];\n  sortOrder: SortOrder;\n  activeDatasourceOnly: boolean;\n  datasourceFilters: SelectableValue[];\n  retentionPeriod: number;\n  exploreId: ExploreId;\n  height: number;\n  onChangeSortOrder: (sortOrder: SortOrder) => void;\n  onSelectDatasourceFilters: (value: SelectableValue[]) => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, height: number) => {\n  const bgColor = theme.isLight ? theme.palette.gray5 : theme.palette.dark4;\n\n  /* 134px is based on the width of the Query history tabs bar, so the content is aligned to right side of the tab */\n  const cardWidth = '100% - 134px';\n  const sliderHeight = `${height - 180}px`;\n  return {\n    container: css`\n      display: flex;\n      .label-slider {\n        font-size: ${theme.typography.size.sm};\n        &:last-of-type {\n          margin-top: ${theme.spacing.lg};\n        }\n        &:first-of-type {\n          font-weight: ${theme.typography.weight.semibold};\n          margin-bottom: ${theme.spacing.md};\n        }\n      }\n    `,\n    containerContent: css`\n      width: calc(${cardWidth});\n    `,\n    containerSlider: css`\n      width: 129px;\n      margin-right: ${theme.spacing.sm};\n      .slider {\n        bottom: 10px;\n        height: ${sliderHeight};\n        width: 129px;\n        padding: ${theme.spacing.sm} 0;\n      }\n    `,\n    slider: css`\n      position: fixed;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing.sm};\n      .gf-form-select-box__multi-value {\n        background-color: ${bgColor};\n        padding: ${theme.spacing.xxs} ${theme.spacing.xs} ${theme.spacing.xxs} ${theme.spacing.sm};\n        border-radius: ${theme.border.radius.sm};\n      }\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    sessionName: css`\n      display: flex;\n      align-items: flex-start;\n      justify-content: flex-start;\n      margin-top: ${theme.spacing.lg};\n      h4 {\n        margin: 0 10px 0 0;\n      }\n    `,\n    heading: css`\n      font-size: ${theme.typography.heading.h4};\n      margin: ${theme.spacing.md} ${theme.spacing.xxs} ${theme.spacing.sm} ${theme.spacing.xxs};\n    `,\n    footer: css`\n      height: 60px;\n      margin: ${theme.spacing.lg} auto;\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.weight.light};\n      font-size: ${theme.typography.size.sm};\n      a {\n        font-weight: ${theme.typography.weight.semibold};\n        margin-left: ${theme.spacing.xxs};\n      }\n    `,\n    queries: css`\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.regular};\n      margin-left: ${theme.spacing.xs};\n    `,\n  };\n});\n\nexport function RichHistoryQueriesTab(props: Props) {\n  const {\n    datasourceFilters,\n    onSelectDatasourceFilters,\n    queries,\n    onChangeSortOrder,\n    sortOrder,\n    activeDatasourceOnly,\n    retentionPeriod,\n    exploreId,\n    height,\n  } = props;\n\n  const [timeFilter, setTimeFilter] = useState<[number, number]>([0, retentionPeriod]);\n  const [data, setData] = useState<[RichHistoryQuery[], ReturnType<typeof createDatasourcesList>]>([[], []]);\n  const [searchInput, setSearchInput] = useState('');\n  const [debouncedSearchInput, setDebouncedSearchInput] = useState('');\n\n  const theme = useTheme();\n  const styles = getStyles(theme, height);\n\n  useDebounce(\n    () => {\n      setDebouncedSearchInput(searchInput);\n    },\n    300,\n    [searchInput]\n  );\n\n  useEffect(() => {\n    const datasourcesRetrievedFromQueryHistory = uniqBy(queries, 'datasourceName').map((d) => d.datasourceName);\n    const listOfDatasources = createDatasourcesList(datasourcesRetrievedFromQueryHistory);\n\n    setData([\n      filterAndSortQueries(\n        queries,\n        sortOrder,\n        datasourceFilters.map((d) => d.value),\n        debouncedSearchInput,\n        timeFilter\n      ),\n      listOfDatasources,\n    ]);\n  }, [timeFilter, queries, sortOrder, datasourceFilters, debouncedSearchInput]);\n\n  const [filteredQueries, listOfDatasources] = data;\n\n  /* mappedQueriesToHeadings is an object where query headings (stringified dates/data sources)\n   * are keys and arrays with queries that belong to that headings are values.\n   */\n  const mappedQueriesToHeadings = mapQueriesToHeadings(filteredQueries, sortOrder);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerSlider}>\n        <div className={styles.slider}>\n          <div className=\"label-slider\">Filter history</div>\n          <div className=\"label-slider\">{mapNumbertoTimeInSlider(timeFilter[0])}</div>\n          <div className=\"slider\">\n            <RangeSlider\n              tooltipAlwaysVisible={false}\n              min={0}\n              max={retentionPeriod}\n              value={timeFilter}\n              orientation=\"vertical\"\n              formatTooltipResult={mapNumbertoTimeInSlider}\n              reverse={true}\n              onAfterChange={setTimeFilter as () => number[]}\n            />\n          </div>\n          <div className=\"label-slider\">{mapNumbertoTimeInSlider(timeFilter[1])}</div>\n        </div>\n      </div>\n\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!activeDatasourceOnly && (\n            <div aria-label=\"Filter datasources\" className={styles.multiselect}>\n              <MultiSelect\n                menuShouldPortal\n                options={listOfDatasources}\n                value={datasourceFilters}\n                placeholder=\"Filter queries for data sources(s)\"\n                onChange={onSelectDatasourceFilters}\n              />\n            </div>\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              placeholder=\"Search queries\"\n              value={searchInput}\n              onChange={(value: string) => {\n                setSearchInput(value);\n              }}\n            />\n          </div>\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              menuShouldPortal\n              value={sortOrderOptions.filter((order) => order.value === sortOrder)}\n              options={sortOrderOptions}\n              placeholder=\"Sort queries by\"\n              onChange={(e) => onChangeSortOrder(e.value as SortOrder)}\n            />\n          </div>\n        </div>\n        {Object.keys(mappedQueriesToHeadings).map((heading) => {\n          return (\n            <div key={heading}>\n              <div className={styles.heading}>\n                {heading} <span className={styles.queries}>{mappedQueriesToHeadings[heading].length} queries</span>\n              </div>\n              {mappedQueriesToHeadings[heading].map((q: RichHistoryQuery) => {\n                const idx = listOfDatasources.findIndex((d) => d.label === q.datasourceName);\n                return (\n                  <RichHistoryCard\n                    query={q}\n                    key={q.ts}\n                    exploreId={exploreId}\n                    dsImg={listOfDatasources[idx].imgUrl}\n                    isRemoved={listOfDatasources[idx].isRemoved}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n        <div className={styles.footer}>The history is local to your browser and is not shared with others.</div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { css } from '@emotion/css';\nimport { uniqBy } from 'lodash';\n\n// Types\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\n// Utils\nimport { stylesFactory, useTheme, Select, MultiSelect, FilterInput } from '@grafana/ui';\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\nimport { filterAndSortQueries, createDatasourcesList, SortOrder } from 'app/core/utils/richHistory';\n\n// Components\nimport RichHistoryCard from './RichHistoryCard';\nimport { sortOrderOptions } from './RichHistory';\nimport { useDebounce } from 'react-use';\n\nexport interface Props {\n  queries: RichHistoryQuery[];\n  sortOrder: SortOrder;\n  activeDatasourceOnly: boolean;\n  datasourceFilters: SelectableValue[];\n  exploreId: ExploreId;\n  onChangeSortOrder: (sortOrder: SortOrder) => void;\n  onSelectDatasourceFilters: (value: SelectableValue[]) => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  const bgColor = theme.isLight ? theme.palette.gray5 : theme.palette.dark4;\n  return {\n    container: css`\n      display: flex;\n    `,\n    containerContent: css`\n      width: 100%;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing.sm};\n      .gf-form-select-box__multi-value {\n        background-color: ${bgColor};\n        padding: ${theme.spacing.xxs} ${theme.spacing.xs} ${theme.spacing.xxs} ${theme.spacing.sm};\n        border-radius: ${theme.border.radius.sm};\n      }\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    footer: css`\n      height: 60px;\n      margin-top: ${theme.spacing.lg};\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.weight.light};\n      font-size: ${theme.typography.size.sm};\n      a {\n        font-weight: ${theme.typography.weight.semibold};\n        margin-left: ${theme.spacing.xxs};\n      }\n    `,\n  };\n});\n\nexport function RichHistoryStarredTab(props: Props) {\n  const {\n    datasourceFilters,\n    onSelectDatasourceFilters,\n    queries,\n    onChangeSortOrder,\n    sortOrder,\n    activeDatasourceOnly,\n    exploreId,\n  } = props;\n\n  const [data, setData] = useState<[RichHistoryQuery[], ReturnType<typeof createDatasourcesList>]>([[], []]);\n  const [searchInput, setSearchInput] = useState('');\n  const [debouncedSearchInput, setDebouncedSearchInput] = useState('');\n\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  useDebounce(\n    () => {\n      setDebouncedSearchInput(searchInput);\n    },\n    300,\n    [searchInput]\n  );\n\n  useEffect(() => {\n    const datasourcesRetrievedFromQueryHistory = uniqBy(queries, 'datasourceName').map((d) => d.datasourceName);\n    const listOfDatasources = createDatasourcesList(datasourcesRetrievedFromQueryHistory);\n    const starredQueries = queries.filter((q) => q.starred === true);\n    setData([\n      filterAndSortQueries(\n        starredQueries,\n        sortOrder,\n        datasourceFilters.map((d) => d.value),\n        debouncedSearchInput\n      ),\n      listOfDatasources,\n    ]);\n  }, [queries, sortOrder, datasourceFilters, debouncedSearchInput]);\n\n  const [filteredQueries, listOfDatasources] = data;\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!activeDatasourceOnly && (\n            <div aria-label=\"Filter datasources\" className={styles.multiselect}>\n              <MultiSelect\n                menuShouldPortal\n                options={listOfDatasources}\n                value={datasourceFilters}\n                placeholder=\"Filter queries for specific data sources(s)\"\n                onChange={onSelectDatasourceFilters}\n              />\n            </div>\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              placeholder=\"Search queries\"\n              value={searchInput}\n              onChange={(value: string) => {\n                setSearchInput(value);\n              }}\n            />\n          </div>\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              menuShouldPortal\n              options={sortOrderOptions}\n              value={sortOrderOptions.filter((order) => order.value === sortOrder)}\n              placeholder=\"Sort queries by\"\n              onChange={(e) => onChangeSortOrder(e.value as SortOrder)}\n            />\n          </div>\n        </div>\n        {filteredQueries.map((q) => {\n          const idx = listOfDatasources.findIndex((d) => d.label === q.datasourceName);\n          return (\n            <RichHistoryCard\n              query={q}\n              key={q.ts}\n              exploreId={exploreId}\n              dsImg={listOfDatasources[idx].imgUrl}\n              isRemoved={listOfDatasources[idx].isRemoved}\n            />\n          );\n        })}\n        <div className={styles.footer}>The history is local to your browser and is not shared with others.</div>\n      </div>\n    </div>\n  );\n}\n","import React, { PureComponent } from 'react';\n\n//Services & Utils\nimport { RICH_HISTORY_SETTING_KEYS, SortOrder } from 'app/core/utils/richHistory';\nimport store from 'app/core/store';\nimport { Themeable, withTheme, TabbedContainer, TabConfig } from '@grafana/ui';\n\n//Types\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\nimport { SelectableValue } from '@grafana/data';\n\n//Components\nimport { RichHistorySettings } from './RichHistorySettings';\nimport { RichHistoryQueriesTab } from './RichHistoryQueriesTab';\nimport { RichHistoryStarredTab } from './RichHistoryStarredTab';\n\nexport enum Tabs {\n  RichHistory = 'Query history',\n  Starred = 'Starred',\n  Settings = 'Settings',\n}\n\nexport const sortOrderOptions = [\n  { label: 'Newest first', value: SortOrder.Descending },\n  { label: 'Oldest first', value: SortOrder.Ascending },\n  { label: 'Data source A-Z', value: SortOrder.DatasourceAZ },\n  { label: 'Data source Z-A', value: SortOrder.DatasourceZA },\n];\n\nexport interface RichHistoryProps extends Themeable {\n  richHistory: RichHistoryQuery[];\n  activeDatasourceInstance?: string;\n  firstTab: Tabs;\n  exploreId: ExploreId;\n  height: number;\n  deleteRichHistory: () => void;\n  onClose: () => void;\n}\n\ninterface RichHistoryState {\n  sortOrder: SortOrder;\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  datasourceFilters: SelectableValue[];\n}\n\nclass UnThemedRichHistory extends PureComponent<RichHistoryProps, RichHistoryState> {\n  constructor(props: RichHistoryProps) {\n    super(props);\n    this.state = {\n      sortOrder: SortOrder.Descending,\n      datasourceFilters: store.getObject(RICH_HISTORY_SETTING_KEYS.datasourceFilters, []),\n      retentionPeriod: store.getObject(RICH_HISTORY_SETTING_KEYS.retentionPeriod, 7),\n      starredTabAsFirstTab: store.getBool(RICH_HISTORY_SETTING_KEYS.starredTabAsFirstTab, false),\n      activeDatasourceOnly: store.getBool(RICH_HISTORY_SETTING_KEYS.activeDatasourceOnly, true),\n    };\n  }\n\n  onChangeRetentionPeriod = (retentionPeriod: SelectableValue<number>) => {\n    if (retentionPeriod.value !== undefined) {\n      this.setState({\n        retentionPeriod: retentionPeriod.value,\n      });\n      store.set(RICH_HISTORY_SETTING_KEYS.retentionPeriod, retentionPeriod.value);\n    }\n  };\n\n  toggleStarredTabAsFirstTab = () => {\n    const starredTabAsFirstTab = !this.state.starredTabAsFirstTab;\n    this.setState({\n      starredTabAsFirstTab,\n    });\n    store.set(RICH_HISTORY_SETTING_KEYS.starredTabAsFirstTab, starredTabAsFirstTab);\n  };\n\n  toggleActiveDatasourceOnly = () => {\n    const activeDatasourceOnly = !this.state.activeDatasourceOnly;\n    this.setState({\n      activeDatasourceOnly,\n    });\n    store.set(RICH_HISTORY_SETTING_KEYS.activeDatasourceOnly, activeDatasourceOnly);\n  };\n\n  onSelectDatasourceFilters = (value: SelectableValue[]) => {\n    try {\n      store.setObject(RICH_HISTORY_SETTING_KEYS.datasourceFilters, value);\n    } catch (error) {\n      console.error(error);\n    }\n    /* Set data source filters to state even though they were not successfully saved in\n     * localStorage to allow interaction and filtering.\n     **/\n    this.setState({ datasourceFilters: value });\n  };\n\n  onChangeSortOrder = (sortOrder: SortOrder) => this.setState({ sortOrder });\n\n  /* If user selects activeDatasourceOnly === true, set datasource filter to currently active datasource.\n   * Filtering based on datasource won't be available. Otherwise set to null, as filtering will be\n   * available for user.\n   */\n  updateFilters() {\n    this.state.activeDatasourceOnly && this.props.activeDatasourceInstance\n      ? this.onSelectDatasourceFilters([\n          { label: this.props.activeDatasourceInstance, value: this.props.activeDatasourceInstance },\n        ])\n      : this.onSelectDatasourceFilters(this.state.datasourceFilters);\n  }\n\n  componentDidMount() {\n    this.updateFilters();\n  }\n\n  componentDidUpdate(prevProps: RichHistoryProps, prevState: RichHistoryState) {\n    if (\n      this.props.activeDatasourceInstance !== prevProps.activeDatasourceInstance ||\n      this.state.activeDatasourceOnly !== prevState.activeDatasourceOnly\n    ) {\n      this.updateFilters();\n    }\n  }\n\n  render() {\n    const { datasourceFilters, sortOrder, activeDatasourceOnly, retentionPeriod } = this.state;\n    const { richHistory, height, exploreId, deleteRichHistory, onClose, firstTab } = this.props;\n\n    const QueriesTab: TabConfig = {\n      label: 'Query history',\n      value: Tabs.RichHistory,\n      content: (\n        <RichHistoryQueriesTab\n          queries={richHistory}\n          sortOrder={sortOrder}\n          datasourceFilters={datasourceFilters}\n          activeDatasourceOnly={activeDatasourceOnly}\n          retentionPeriod={retentionPeriod}\n          onChangeSortOrder={this.onChangeSortOrder}\n          onSelectDatasourceFilters={this.onSelectDatasourceFilters}\n          exploreId={exploreId}\n          height={height}\n        />\n      ),\n      icon: 'history',\n    };\n\n    const StarredTab: TabConfig = {\n      label: 'Starred',\n      value: Tabs.Starred,\n      content: (\n        <RichHistoryStarredTab\n          queries={richHistory}\n          sortOrder={sortOrder}\n          datasourceFilters={datasourceFilters}\n          activeDatasourceOnly={activeDatasourceOnly}\n          onChangeSortOrder={this.onChangeSortOrder}\n          onSelectDatasourceFilters={this.onSelectDatasourceFilters}\n          exploreId={exploreId}\n        />\n      ),\n      icon: 'star',\n    };\n\n    const SettingsTab: TabConfig = {\n      label: 'Settings',\n      value: Tabs.Settings,\n      content: (\n        <RichHistorySettings\n          retentionPeriod={this.state.retentionPeriod}\n          starredTabAsFirstTab={this.state.starredTabAsFirstTab}\n          activeDatasourceOnly={this.state.activeDatasourceOnly}\n          onChangeRetentionPeriod={this.onChangeRetentionPeriod}\n          toggleStarredTabAsFirstTab={this.toggleStarredTabAsFirstTab}\n          toggleactiveDatasourceOnly={this.toggleActiveDatasourceOnly}\n          deleteRichHistory={deleteRichHistory}\n        />\n      ),\n      icon: 'sliders-v-alt',\n    };\n\n    let tabs = [QueriesTab, StarredTab, SettingsTab];\n    return (\n      <TabbedContainer tabs={tabs} onClose={onClose} defaultTab={firstTab} closeIconTooltip=\"Close query history\" />\n    );\n  }\n}\n\nexport const RichHistory = withTheme(UnThemedRichHistory);\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nvar styles = {\n    top: {\n        width: '100%',\n        height: '10px',\n        top: '-5px',\n        left: '0px',\n        cursor: 'row-resize',\n    },\n    right: {\n        width: '10px',\n        height: '100%',\n        top: '0px',\n        right: '-5px',\n        cursor: 'col-resize',\n    },\n    bottom: {\n        width: '100%',\n        height: '10px',\n        bottom: '-5px',\n        left: '0px',\n        cursor: 'row-resize',\n    },\n    left: {\n        width: '10px',\n        height: '100%',\n        top: '0px',\n        left: '-5px',\n        cursor: 'col-resize',\n    },\n    topRight: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        right: '-10px',\n        top: '-10px',\n        cursor: 'ne-resize',\n    },\n    bottomRight: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        right: '-10px',\n        bottom: '-10px',\n        cursor: 'se-resize',\n    },\n    bottomLeft: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        left: '-10px',\n        bottom: '-10px',\n        cursor: 'sw-resize',\n    },\n    topLeft: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        left: '-10px',\n        top: '-10px',\n        cursor: 'nw-resize',\n    },\n};\nvar Resizer = /** @class */ (function (_super) {\n    __extends(Resizer, _super);\n    function Resizer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.onMouseDown = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        _this.onTouchStart = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        return _this;\n    }\n    Resizer.prototype.render = function () {\n        return (React.createElement(\"div\", { className: this.props.className || '', style: __assign(__assign({ position: 'absolute', userSelect: 'none' }, styles[this.props.direction]), (this.props.replaceStyles || {})), onMouseDown: this.onMouseDown, onTouchStart: this.onTouchStart }, this.props.children));\n    };\n    return Resizer;\n}(React.PureComponent));\nexport { Resizer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { Resizer } from './resizer';\nimport memoize from 'fast-memoize';\nvar DEFAULT_SIZE = {\n    width: 'auto',\n    height: 'auto',\n};\nvar clamp = memoize(function (n, min, max) { return Math.max(Math.min(n, max), min); });\nvar snap = memoize(function (n, size) { return Math.round(n / size) * size; });\nvar hasDirection = memoize(function (dir, target) {\n    return new RegExp(dir, 'i').test(target);\n});\n// INFO: In case of window is a Proxy and does not porxy Events correctly, use isTouchEvent & isMouseEvent to distinguish event type instead of `instanceof`.\nvar isTouchEvent = function (event) {\n    return Boolean(event.touches && event.touches.length);\n};\nvar isMouseEvent = function (event) {\n    return Boolean((event.clientX || event.clientX === 0) &&\n        (event.clientY || event.clientY === 0));\n};\nvar findClosestSnap = memoize(function (n, snapArray, snapGap) {\n    if (snapGap === void 0) { snapGap = 0; }\n    var closestGapIndex = snapArray.reduce(function (prev, curr, index) { return (Math.abs(curr - n) < Math.abs(snapArray[prev] - n) ? index : prev); }, 0);\n    var gap = Math.abs(snapArray[closestGapIndex] - n);\n    return snapGap === 0 || gap < snapGap ? snapArray[closestGapIndex] : n;\n});\nvar endsWith = memoize(function (str, searchStr) {\n    return str.substr(str.length - searchStr.length, searchStr.length) === searchStr;\n});\nvar getStringSize = memoize(function (n) {\n    n = n.toString();\n    if (n === 'auto') {\n        return n;\n    }\n    if (endsWith(n, 'px')) {\n        return n;\n    }\n    if (endsWith(n, '%')) {\n        return n;\n    }\n    if (endsWith(n, 'vh')) {\n        return n;\n    }\n    if (endsWith(n, 'vw')) {\n        return n;\n    }\n    if (endsWith(n, 'vmax')) {\n        return n;\n    }\n    if (endsWith(n, 'vmin')) {\n        return n;\n    }\n    return n + \"px\";\n});\nvar getPixelSize = function (size, parentSize, innerWidth, innerHeight) {\n    if (size && typeof size === 'string') {\n        if (endsWith(size, 'px')) {\n            return Number(size.replace('px', ''));\n        }\n        if (endsWith(size, '%')) {\n            var ratio = Number(size.replace('%', '')) / 100;\n            return parentSize * ratio;\n        }\n        if (endsWith(size, 'vw')) {\n            var ratio = Number(size.replace('vw', '')) / 100;\n            return innerWidth * ratio;\n        }\n        if (endsWith(size, 'vh')) {\n            var ratio = Number(size.replace('vh', '')) / 100;\n            return innerHeight * ratio;\n        }\n    }\n    return size;\n};\nvar calculateNewMax = memoize(function (parentSize, innerWidth, innerHeight, maxWidth, maxHeight, minWidth, minHeight) {\n    maxWidth = getPixelSize(maxWidth, parentSize.width, innerWidth, innerHeight);\n    maxHeight = getPixelSize(maxHeight, parentSize.height, innerWidth, innerHeight);\n    minWidth = getPixelSize(minWidth, parentSize.width, innerWidth, innerHeight);\n    minHeight = getPixelSize(minHeight, parentSize.height, innerWidth, innerHeight);\n    return {\n        maxWidth: typeof maxWidth === 'undefined' ? undefined : Number(maxWidth),\n        maxHeight: typeof maxHeight === 'undefined' ? undefined : Number(maxHeight),\n        minWidth: typeof minWidth === 'undefined' ? undefined : Number(minWidth),\n        minHeight: typeof minHeight === 'undefined' ? undefined : Number(minHeight),\n    };\n});\nvar definedProps = [\n    'as',\n    'style',\n    'className',\n    'grid',\n    'snap',\n    'bounds',\n    'boundsByDirection',\n    'size',\n    'defaultSize',\n    'minWidth',\n    'minHeight',\n    'maxWidth',\n    'maxHeight',\n    'lockAspectRatio',\n    'lockAspectRatioExtraWidth',\n    'lockAspectRatioExtraHeight',\n    'enable',\n    'handleStyles',\n    'handleClasses',\n    'handleWrapperStyle',\n    'handleWrapperClass',\n    'children',\n    'onResizeStart',\n    'onResize',\n    'onResizeStop',\n    'handleComponent',\n    'scale',\n    'resizeRatio',\n    'snapGap',\n];\n// HACK: This class is used to calculate % size.\nvar baseClassName = '__resizable_base__';\nvar Resizable = /** @class */ (function (_super) {\n    __extends(Resizable, _super);\n    function Resizable(props) {\n        var _this = _super.call(this, props) || this;\n        _this.ratio = 1;\n        _this.resizable = null;\n        // For parent boundary\n        _this.parentLeft = 0;\n        _this.parentTop = 0;\n        // For boundary\n        _this.resizableLeft = 0;\n        _this.resizableRight = 0;\n        _this.resizableTop = 0;\n        _this.resizableBottom = 0;\n        // For target boundary\n        _this.targetLeft = 0;\n        _this.targetTop = 0;\n        _this.appendBase = function () {\n            if (!_this.resizable || !_this.window) {\n                return null;\n            }\n            var parent = _this.parentNode;\n            if (!parent) {\n                return null;\n            }\n            var element = _this.window.document.createElement('div');\n            element.style.width = '100%';\n            element.style.height = '100%';\n            element.style.position = 'absolute';\n            element.style.transform = 'scale(0, 0)';\n            element.style.left = '0';\n            element.style.flex = '0';\n            if (element.classList) {\n                element.classList.add(baseClassName);\n            }\n            else {\n                element.className += baseClassName;\n            }\n            parent.appendChild(element);\n            return element;\n        };\n        _this.removeBase = function (base) {\n            var parent = _this.parentNode;\n            if (!parent) {\n                return;\n            }\n            parent.removeChild(base);\n        };\n        _this.ref = function (c) {\n            if (c) {\n                _this.resizable = c;\n            }\n        };\n        _this.state = {\n            isResizing: false,\n            width: typeof (_this.propsSize && _this.propsSize.width) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.width,\n            height: typeof (_this.propsSize && _this.propsSize.height) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.height,\n            direction: 'right',\n            original: {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            },\n            backgroundStyle: {\n                height: '100%',\n                width: '100%',\n                backgroundColor: 'rgba(0,0,0,0)',\n                cursor: 'auto',\n                opacity: 0,\n                position: 'fixed',\n                zIndex: 9999,\n                top: '0',\n                left: '0',\n                bottom: '0',\n                right: '0',\n            },\n            flexBasis: undefined,\n        };\n        _this.onResizeStart = _this.onResizeStart.bind(_this);\n        _this.onMouseMove = _this.onMouseMove.bind(_this);\n        _this.onMouseUp = _this.onMouseUp.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(Resizable.prototype, \"parentNode\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            return this.resizable.parentNode;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"window\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            if (!this.resizable.ownerDocument) {\n                return null;\n            }\n            return this.resizable.ownerDocument.defaultView;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"propsSize\", {\n        get: function () {\n            return this.props.size || this.props.defaultSize || DEFAULT_SIZE;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"size\", {\n        get: function () {\n            var width = 0;\n            var height = 0;\n            if (this.resizable && this.window) {\n                var orgWidth = this.resizable.offsetWidth;\n                var orgHeight = this.resizable.offsetHeight;\n                // HACK: Set position `relative` to get parent size.\n                //       This is because when re-resizable set `absolute`, I can not get base width correctly.\n                var orgPosition = this.resizable.style.position;\n                if (orgPosition !== 'relative') {\n                    this.resizable.style.position = 'relative';\n                }\n                // INFO: Use original width or height if set auto.\n                width = this.resizable.style.width !== 'auto' ? this.resizable.offsetWidth : orgWidth;\n                height = this.resizable.style.height !== 'auto' ? this.resizable.offsetHeight : orgHeight;\n                // Restore original position\n                this.resizable.style.position = orgPosition;\n            }\n            return { width: width, height: height };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"sizeStyle\", {\n        get: function () {\n            var _this = this;\n            var size = this.props.size;\n            var getSize = function (key) {\n                if (typeof _this.state[key] === 'undefined' || _this.state[key] === 'auto') {\n                    return 'auto';\n                }\n                if (_this.propsSize && _this.propsSize[key] && endsWith(_this.propsSize[key].toString(), '%')) {\n                    if (endsWith(_this.state[key].toString(), '%')) {\n                        return _this.state[key].toString();\n                    }\n                    var parentSize = _this.getParentSize();\n                    var value = Number(_this.state[key].toString().replace('px', ''));\n                    var percent = (value / parentSize[key]) * 100;\n                    return percent + \"%\";\n                }\n                return getStringSize(_this.state[key]);\n            };\n            var width = size && typeof size.width !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.width)\n                : getSize('width');\n            var height = size && typeof size.height !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.height)\n                : getSize('height');\n            return { width: width, height: height };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Resizable.prototype.getParentSize = function () {\n        if (!this.parentNode) {\n            if (!this.window) {\n                return { width: 0, height: 0 };\n            }\n            return { width: this.window.innerWidth, height: this.window.innerHeight };\n        }\n        var base = this.appendBase();\n        if (!base) {\n            return { width: 0, height: 0 };\n        }\n        // INFO: To calculate parent width with flex layout\n        var wrapChanged = false;\n        var wrap = this.parentNode.style.flexWrap;\n        if (wrap !== 'wrap') {\n            wrapChanged = true;\n            this.parentNode.style.flexWrap = 'wrap';\n            // HACK: Use relative to get parent padding size\n        }\n        base.style.position = 'relative';\n        base.style.minWidth = '100%';\n        var size = {\n            width: base.offsetWidth,\n            height: base.offsetHeight,\n        };\n        if (wrapChanged) {\n            this.parentNode.style.flexWrap = wrap;\n        }\n        this.removeBase(base);\n        return size;\n    };\n    Resizable.prototype.bindEvents = function () {\n        if (this.window) {\n            this.window.addEventListener('mouseup', this.onMouseUp);\n            this.window.addEventListener('mousemove', this.onMouseMove);\n            this.window.addEventListener('mouseleave', this.onMouseUp);\n            this.window.addEventListener('touchmove', this.onMouseMove, {\n                capture: true,\n                passive: false,\n            });\n            this.window.addEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.unbindEvents = function () {\n        if (this.window) {\n            this.window.removeEventListener('mouseup', this.onMouseUp);\n            this.window.removeEventListener('mousemove', this.onMouseMove);\n            this.window.removeEventListener('mouseleave', this.onMouseUp);\n            this.window.removeEventListener('touchmove', this.onMouseMove, true);\n            this.window.removeEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.componentDidMount = function () {\n        if (!this.resizable || !this.window) {\n            return;\n        }\n        var computedStyle = this.window.getComputedStyle(this.resizable);\n        this.setState({\n            width: this.state.width || this.size.width,\n            height: this.state.height || this.size.height,\n            flexBasis: computedStyle.flexBasis !== 'auto' ? computedStyle.flexBasis : undefined,\n        });\n    };\n    Resizable.prototype.componentWillUnmount = function () {\n        if (this.window) {\n            this.unbindEvents();\n        }\n    };\n    Resizable.prototype.createSizeForCssProperty = function (newSize, kind) {\n        var propsSize = this.propsSize && this.propsSize[kind];\n        return this.state[kind] === 'auto' &&\n            this.state.original[kind] === newSize &&\n            (typeof propsSize === 'undefined' || propsSize === 'auto')\n            ? 'auto'\n            : newSize;\n    };\n    Resizable.prototype.calculateNewMaxFromBoundary = function (maxWidth, maxHeight) {\n        var boundsByDirection = this.props.boundsByDirection;\n        var direction = this.state.direction;\n        var widthByDirection = boundsByDirection && hasDirection('left', direction);\n        var heightByDirection = boundsByDirection && hasDirection('top', direction);\n        var boundWidth;\n        var boundHeight;\n        if (this.props.bounds === 'parent') {\n            var parent_1 = this.parentNode;\n            if (parent_1) {\n                boundWidth = widthByDirection\n                    ? this.resizableRight - this.parentLeft\n                    : parent_1.offsetWidth + (this.parentLeft - this.resizableLeft);\n                boundHeight = heightByDirection\n                    ? this.resizableBottom - this.parentTop\n                    : parent_1.offsetHeight + (this.parentTop - this.resizableTop);\n            }\n        }\n        else if (this.props.bounds === 'window') {\n            if (this.window) {\n                boundWidth = widthByDirection ? this.resizableRight : this.window.innerWidth - this.resizableLeft;\n                boundHeight = heightByDirection ? this.resizableBottom : this.window.innerHeight - this.resizableTop;\n            }\n        }\n        else if (this.props.bounds) {\n            boundWidth = widthByDirection\n                ? this.resizableRight - this.targetLeft\n                : this.props.bounds.offsetWidth + (this.targetLeft - this.resizableLeft);\n            boundHeight = heightByDirection\n                ? this.resizableBottom - this.targetTop\n                : this.props.bounds.offsetHeight + (this.targetTop - this.resizableTop);\n        }\n        if (boundWidth && Number.isFinite(boundWidth)) {\n            maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n        }\n        if (boundHeight && Number.isFinite(boundHeight)) {\n            maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n        }\n        return { maxWidth: maxWidth, maxHeight: maxHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromDirection = function (clientX, clientY) {\n        var scale = this.props.scale || 1;\n        var resizeRatio = this.props.resizeRatio || 1;\n        var _a = this.state, direction = _a.direction, original = _a.original;\n        var _b = this.props, lockAspectRatio = _b.lockAspectRatio, lockAspectRatioExtraHeight = _b.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _b.lockAspectRatioExtraWidth;\n        var newWidth = original.width;\n        var newHeight = original.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (hasDirection('right', direction)) {\n            newWidth = original.width + ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('left', direction)) {\n            newWidth = original.width - ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('bottom', direction)) {\n            newHeight = original.height + ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        if (hasDirection('top', direction)) {\n            newHeight = original.height - ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromAspectRatio = function (newWidth, newHeight, max, min) {\n        var _a = this.props, lockAspectRatio = _a.lockAspectRatio, lockAspectRatioExtraHeight = _a.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _a.lockAspectRatioExtraWidth;\n        var computedMinWidth = typeof min.width === 'undefined' ? 10 : min.width;\n        var computedMaxWidth = typeof max.width === 'undefined' || max.width < 0 ? newWidth : max.width;\n        var computedMinHeight = typeof min.height === 'undefined' ? 10 : min.height;\n        var computedMaxHeight = typeof max.height === 'undefined' || max.height < 0 ? newHeight : max.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (lockAspectRatio) {\n            var extraMinWidth = (computedMinHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMaxWidth = (computedMaxHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMinHeight = (computedMinWidth - extraWidth) / this.ratio + extraHeight;\n            var extraMaxHeight = (computedMaxWidth - extraWidth) / this.ratio + extraHeight;\n            var lockedMinWidth = Math.max(computedMinWidth, extraMinWidth);\n            var lockedMaxWidth = Math.min(computedMaxWidth, extraMaxWidth);\n            var lockedMinHeight = Math.max(computedMinHeight, extraMinHeight);\n            var lockedMaxHeight = Math.min(computedMaxHeight, extraMaxHeight);\n            newWidth = clamp(newWidth, lockedMinWidth, lockedMaxWidth);\n            newHeight = clamp(newHeight, lockedMinHeight, lockedMaxHeight);\n        }\n        else {\n            newWidth = clamp(newWidth, computedMinWidth, computedMaxWidth);\n            newHeight = clamp(newHeight, computedMinHeight, computedMaxHeight);\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.setBoundingClientRect = function () {\n        // For parent boundary\n        if (this.props.bounds === 'parent') {\n            var parent_2 = this.parentNode;\n            if (parent_2) {\n                var parentRect = parent_2.getBoundingClientRect();\n                this.parentLeft = parentRect.left;\n                this.parentTop = parentRect.top;\n            }\n        }\n        // For target(html element) boundary\n        if (this.props.bounds && typeof this.props.bounds !== 'string') {\n            var targetRect = this.props.bounds.getBoundingClientRect();\n            this.targetLeft = targetRect.left;\n            this.targetTop = targetRect.top;\n        }\n        // For boundary\n        if (this.resizable) {\n            var _a = this.resizable.getBoundingClientRect(), left = _a.left, top_1 = _a.top, right = _a.right, bottom = _a.bottom;\n            this.resizableLeft = left;\n            this.resizableRight = right;\n            this.resizableTop = top_1;\n            this.resizableBottom = bottom;\n        }\n    };\n    Resizable.prototype.onResizeStart = function (event, direction) {\n        if (!this.resizable || !this.window) {\n            return;\n        }\n        var clientX = 0;\n        var clientY = 0;\n        if (event.nativeEvent && isMouseEvent(event.nativeEvent)) {\n            clientX = event.nativeEvent.clientX;\n            clientY = event.nativeEvent.clientY;\n        }\n        else if (event.nativeEvent && isTouchEvent(event.nativeEvent)) {\n            clientX = event.nativeEvent.touches[0].clientX;\n            clientY = event.nativeEvent.touches[0].clientY;\n        }\n        if (this.props.onResizeStart) {\n            if (this.resizable) {\n                var startResize = this.props.onResizeStart(event, direction, this.resizable);\n                if (startResize === false) {\n                    return;\n                }\n            }\n        }\n        // Fix #168\n        if (this.props.size) {\n            if (typeof this.props.size.height !== 'undefined' && this.props.size.height !== this.state.height) {\n                this.setState({ height: this.props.size.height });\n            }\n            if (typeof this.props.size.width !== 'undefined' && this.props.size.width !== this.state.width) {\n                this.setState({ width: this.props.size.width });\n            }\n        }\n        // For lockAspectRatio case\n        this.ratio =\n            typeof this.props.lockAspectRatio === 'number' ? this.props.lockAspectRatio : this.size.width / this.size.height;\n        var flexBasis;\n        var computedStyle = this.window.getComputedStyle(this.resizable);\n        if (computedStyle.flexBasis !== 'auto') {\n            var parent_3 = this.parentNode;\n            if (parent_3) {\n                var dir = this.window.getComputedStyle(parent_3).flexDirection;\n                this.flexDir = dir.startsWith('row') ? 'row' : 'column';\n                flexBasis = computedStyle.flexBasis;\n            }\n        }\n        // For boundary\n        this.setBoundingClientRect();\n        this.bindEvents();\n        var state = {\n            original: {\n                x: clientX,\n                y: clientY,\n                width: this.size.width,\n                height: this.size.height,\n            },\n            isResizing: true,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: this.window.getComputedStyle(event.target).cursor || 'auto' }),\n            direction: direction,\n            flexBasis: flexBasis,\n        };\n        this.setState(state);\n    };\n    Resizable.prototype.onMouseMove = function (event) {\n        if (!this.state.isResizing || !this.resizable || !this.window) {\n            return;\n        }\n        if (this.window.TouchEvent && isTouchEvent(event)) {\n            try {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            catch (e) {\n                // Ignore on fail\n            }\n        }\n        var _a = this.props, maxWidth = _a.maxWidth, maxHeight = _a.maxHeight, minWidth = _a.minWidth, minHeight = _a.minHeight;\n        var clientX = isTouchEvent(event) ? event.touches[0].clientX : event.clientX;\n        var clientY = isTouchEvent(event) ? event.touches[0].clientY : event.clientY;\n        var _b = this.state, direction = _b.direction, original = _b.original, width = _b.width, height = _b.height;\n        var parentSize = this.getParentSize();\n        var max = calculateNewMax(parentSize, this.window.innerWidth, this.window.innerHeight, maxWidth, maxHeight, minWidth, minHeight);\n        maxWidth = max.maxWidth;\n        maxHeight = max.maxHeight;\n        minWidth = max.minWidth;\n        minHeight = max.minHeight;\n        // Calculate new size\n        var _c = this.calculateNewSizeFromDirection(clientX, clientY), newHeight = _c.newHeight, newWidth = _c.newWidth;\n        // Calculate max size from boundary settings\n        var boundaryMax = this.calculateNewMaxFromBoundary(maxWidth, maxHeight);\n        // Calculate new size from aspect ratio\n        var newSize = this.calculateNewSizeFromAspectRatio(newWidth, newHeight, { width: boundaryMax.maxWidth, height: boundaryMax.maxHeight }, { width: minWidth, height: minHeight });\n        newWidth = newSize.newWidth;\n        newHeight = newSize.newHeight;\n        if (this.props.grid) {\n            var newGridWidth = snap(newWidth, this.props.grid[0]);\n            var newGridHeight = snap(newHeight, this.props.grid[1]);\n            var gap = this.props.snapGap || 0;\n            newWidth = gap === 0 || Math.abs(newGridWidth - newWidth) <= gap ? newGridWidth : newWidth;\n            newHeight = gap === 0 || Math.abs(newGridHeight - newHeight) <= gap ? newGridHeight : newHeight;\n        }\n        if (this.props.snap && this.props.snap.x) {\n            newWidth = findClosestSnap(newWidth, this.props.snap.x, this.props.snapGap);\n        }\n        if (this.props.snap && this.props.snap.y) {\n            newHeight = findClosestSnap(newHeight, this.props.snap.y, this.props.snapGap);\n        }\n        var delta = {\n            width: newWidth - original.width,\n            height: newHeight - original.height,\n        };\n        if (width && typeof width === 'string') {\n            if (endsWith(width, '%')) {\n                var percent = (newWidth / parentSize.width) * 100;\n                newWidth = percent + \"%\";\n            }\n            else if (endsWith(width, 'vw')) {\n                var vw = (newWidth / this.window.innerWidth) * 100;\n                newWidth = vw + \"vw\";\n            }\n            else if (endsWith(width, 'vh')) {\n                var vh = (newWidth / this.window.innerHeight) * 100;\n                newWidth = vh + \"vh\";\n            }\n        }\n        if (height && typeof height === 'string') {\n            if (endsWith(height, '%')) {\n                var percent = (newHeight / parentSize.height) * 100;\n                newHeight = percent + \"%\";\n            }\n            else if (endsWith(height, 'vw')) {\n                var vw = (newHeight / this.window.innerWidth) * 100;\n                newHeight = vw + \"vw\";\n            }\n            else if (endsWith(height, 'vh')) {\n                var vh = (newHeight / this.window.innerHeight) * 100;\n                newHeight = vh + \"vh\";\n            }\n        }\n        var newState = {\n            width: this.createSizeForCssProperty(newWidth, 'width'),\n            height: this.createSizeForCssProperty(newHeight, 'height'),\n        };\n        if (this.flexDir === 'row') {\n            newState.flexBasis = newState.width;\n        }\n        else if (this.flexDir === 'column') {\n            newState.flexBasis = newState.height;\n        }\n        this.setState(newState);\n        if (this.props.onResize) {\n            this.props.onResize(event, direction, this.resizable, delta);\n        }\n    };\n    Resizable.prototype.onMouseUp = function (event) {\n        var _a = this.state, isResizing = _a.isResizing, direction = _a.direction, original = _a.original;\n        if (!isResizing || !this.resizable) {\n            return;\n        }\n        var delta = {\n            width: this.size.width - original.width,\n            height: this.size.height - original.height,\n        };\n        if (this.props.onResizeStop) {\n            this.props.onResizeStop(event, direction, this.resizable, delta);\n        }\n        if (this.props.size) {\n            this.setState(this.props.size);\n        }\n        this.unbindEvents();\n        this.setState({\n            isResizing: false,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: 'auto' }),\n        });\n    };\n    Resizable.prototype.updateSize = function (size) {\n        this.setState({ width: size.width, height: size.height });\n    };\n    Resizable.prototype.renderResizer = function () {\n        var _this = this;\n        var _a = this.props, enable = _a.enable, handleStyles = _a.handleStyles, handleClasses = _a.handleClasses, handleWrapperStyle = _a.handleWrapperStyle, handleWrapperClass = _a.handleWrapperClass, handleComponent = _a.handleComponent;\n        if (!enable) {\n            return null;\n        }\n        var resizers = Object.keys(enable).map(function (dir) {\n            if (enable[dir] !== false) {\n                return (React.createElement(Resizer, { key: dir, direction: dir, onResizeStart: _this.onResizeStart, replaceStyles: handleStyles && handleStyles[dir], className: handleClasses && handleClasses[dir] }, handleComponent && handleComponent[dir] ? handleComponent[dir] : null));\n            }\n            return null;\n        });\n        // #93 Wrap the resize box in span (will not break 100% width/height)\n        return (React.createElement(\"div\", { className: handleWrapperClass, style: handleWrapperStyle }, resizers));\n    };\n    Resizable.prototype.render = function () {\n        var _this = this;\n        var extendsProps = Object.keys(this.props).reduce(function (acc, key) {\n            if (definedProps.indexOf(key) !== -1) {\n                return acc;\n            }\n            acc[key] = _this.props[key];\n            return acc;\n        }, {});\n        var style = __assign(__assign(__assign({ position: 'relative', userSelect: this.state.isResizing ? 'none' : 'auto' }, this.props.style), this.sizeStyle), { maxWidth: this.props.maxWidth, maxHeight: this.props.maxHeight, minWidth: this.props.minWidth, minHeight: this.props.minHeight, boxSizing: 'border-box', flexShrink: 0 });\n        if (this.state.flexBasis) {\n            style.flexBasis = this.state.flexBasis;\n        }\n        var Wrapper = this.props.as || 'div';\n        return (React.createElement(Wrapper, __assign({ ref: this.ref, style: style, className: this.props.className }, extendsProps),\n            this.state.isResizing && React.createElement(\"div\", { style: this.state.backgroundStyle }),\n            this.props.children,\n            this.renderResizer()));\n    };\n    Resizable.defaultProps = {\n        as: 'div',\n        onResizeStart: function () { },\n        onResize: function () { },\n        onResizeStop: function () { },\n        enable: {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true,\n            topRight: true,\n            bottomRight: true,\n            bottomLeft: true,\n            topLeft: true,\n        },\n        style: {},\n        grid: [1, 1],\n        lockAspectRatio: false,\n        lockAspectRatioExtraWidth: 0,\n        lockAspectRatioExtraHeight: 0,\n        scale: 1,\n        resizeRatio: 1,\n        snapGap: 0,\n    };\n    return Resizable;\n}(React.PureComponent));\nexport { Resizable };\n","// Libraries\nimport React from 'react';\nimport { Resizable, ResizeCallback } from 're-resizable';\nimport { css, cx, keyframes } from '@emotion/css';\n\n// Services & Utils\nimport { stylesFactory, useTheme2 } from '@grafana/ui';\n\n// Types\nimport { GrafanaTheme2 } from '@grafana/data';\n\nconst drawerSlide = keyframes`\n  0% {\n    transform: translateY(400px);\n  }\n\n  100% {\n    transform: translateY(0px);\n  }\n`;\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      position: fixed !important;\n      bottom: 0;\n      background: ${theme.colors.background.primary};\n      border-top: 1px solid ${theme.colors.border.weak};\n      margin: ${theme.spacing(0, -2, 0, -2)};\n      box-shadow: ${theme.shadows.z3};\n      z-index: ${theme.zIndex.sidemenu};\n    `,\n    drawerActive: css`\n      opacity: 1;\n      animation: 0.5s ease-out ${drawerSlide};\n    `,\n    rzHandle: css`\n      background: ${theme.colors.secondary.main};\n      transition: 0.3s background ease-in-out;\n      position: relative;\n      width: 200px !important;\n      height: 7px !important;\n      left: calc(50% - 100px) !important;\n      top: -4px !important;\n      cursor: grab;\n      border-radius: 4px;\n      &:hover {\n        background: ${theme.colors.secondary.shade};\n      }\n    `,\n  };\n});\n\nexport interface Props {\n  width: number;\n  children: React.ReactNode;\n  onResize?: ResizeCallback;\n}\n\nexport function ExploreDrawer(props: Props) {\n  const { width, children, onResize } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const drawerWidth = `${width + 31.5}px`;\n\n  return (\n    <Resizable\n      className={cx(styles.container, styles.drawerActive)}\n      defaultSize={{ width: drawerWidth, height: '400px' }}\n      handleClasses={{ top: styles.rzHandle }}\n      enable={{\n        top: true,\n        right: false,\n        bottom: false,\n        left: false,\n        topRight: false,\n        bottomRight: false,\n        bottomLeft: false,\n        topLeft: false,\n      }}\n      maxHeight=\"100vh\"\n      maxWidth={drawerWidth}\n      minWidth={drawerWidth}\n      onResize={onResize}\n    >\n      {children}\n    </Resizable>\n  );\n}\n","// Libraries\nimport React, { useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\n// Services & Utils\nimport store from 'app/core/store';\nimport { RICH_HISTORY_SETTING_KEYS } from 'app/core/utils/richHistory';\n\n// Types\nimport { ExploreItemState, StoreState } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\n\n// Components, enums\nimport { RichHistory, Tabs } from './RichHistory';\n\n//Actions\nimport { deleteRichHistory } from '../state/history';\nimport { ExploreDrawer } from '../ExploreDrawer';\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const { datasourceInstance } = item;\n  const firstTab = store.getBool(RICH_HISTORY_SETTING_KEYS.starredTabAsFirstTab, false)\n    ? Tabs.Starred\n    : Tabs.RichHistory;\n  const { richHistory } = explore;\n  return {\n    richHistory,\n    firstTab,\n    activeDatasourceInstance: datasourceInstance?.name,\n  };\n}\n\nconst mapDispatchToProps = {\n  deleteRichHistory,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps {\n  width: number;\n  exploreId: ExploreId;\n  onClose: () => void;\n}\nexport type Props = ConnectedProps<typeof connector> & OwnProps;\n\nexport function RichHistoryContainer(props: Props) {\n  const [height, setHeight] = useState(400);\n\n  const { richHistory, width, firstTab, activeDatasourceInstance, exploreId, deleteRichHistory, onClose } = props;\n\n  return (\n    <ExploreDrawer\n      width={width}\n      onResize={(_e, _dir, ref) => {\n        setHeight(Number(ref.style.height.slice(0, -2)));\n      }}\n    >\n      <RichHistory\n        richHistory={richHistory}\n        firstTab={firstTab}\n        activeDatasourceInstance={activeDatasourceInstance}\n        exploreId={exploreId}\n        deleteRichHistory={deleteRichHistory}\n        onClose={onClose}\n        height={height}\n      />\n    </ExploreDrawer>\n  );\n}\n\nexport default connector(RichHistoryContainer);\n","import React from 'react';\nimport { TabbedContainer, TabConfig } from '@grafana/ui';\nimport { TimeZone } from '@grafana/data';\nimport { runQueries } from './state/query';\nimport { StoreState, ExploreItemState, ExploreId } from 'app/types';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { ExploreDrawer } from 'app/features/explore/ExploreDrawer';\nimport { InspectJSONTab } from 'app/features/inspector/InspectJSONTab';\nimport { QueryInspector } from 'app/features/inspector/QueryInspector';\nimport { InspectStatsTab } from 'app/features/inspector/InspectStatsTab';\nimport { InspectDataTab } from 'app/features/inspector/InspectDataTab';\nimport { InspectErrorTab } from 'app/features/inspector/InspectErrorTab';\n\ninterface DispatchProps {\n  width: number;\n  exploreId: ExploreId;\n  timeZone: TimeZone;\n  onClose: () => void;\n}\n\ntype Props = DispatchProps & ConnectedProps<typeof connector>;\n\nexport function ExploreQueryInspector(props: Props) {\n  const { loading, width, onClose, queryResponse, timeZone } = props;\n  const dataFrames = queryResponse?.series || [];\n  const error = queryResponse?.error;\n\n  const statsTab: TabConfig = {\n    label: 'Stats',\n    value: 'stats',\n    icon: 'chart-line',\n    content: <InspectStatsTab data={queryResponse!} timeZone={queryResponse?.request?.timezone as TimeZone} />,\n  };\n\n  const jsonTab: TabConfig = {\n    label: 'JSON',\n    value: 'json',\n    icon: 'brackets-curly',\n    content: <InspectJSONTab data={queryResponse} onClose={onClose} />,\n  };\n\n  const dataTab: TabConfig = {\n    label: 'Data',\n    value: 'data',\n    icon: 'database',\n    content: (\n      <InspectDataTab\n        data={dataFrames}\n        isLoading={loading}\n        options={{ withTransforms: false, withFieldConfig: false }}\n        timeZone={timeZone}\n      />\n    ),\n  };\n\n  const queryTab: TabConfig = {\n    label: 'Query',\n    value: 'query',\n    icon: 'info-circle',\n    content: <QueryInspector data={dataFrames} onRefreshQuery={() => props.runQueries(props.exploreId)} />,\n  };\n\n  const tabs = [statsTab, queryTab, jsonTab, dataTab];\n  if (error) {\n    const errorTab: TabConfig = {\n      label: 'Error',\n      value: 'error',\n      icon: 'exclamation-triangle',\n      content: <InspectErrorTab error={error} />,\n    };\n    tabs.push(errorTab);\n  }\n  return (\n    <ExploreDrawer width={width} onResize={() => {}}>\n      <TabbedContainer tabs={tabs} onClose={onClose} closeIconTooltip=\"Close query inspector\" />\n    </ExploreDrawer>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const { loading, queryResponse } = item;\n\n  return {\n    loading,\n    queryResponse,\n  };\n}\n\nconst mapDispatchToProps = {\n  runQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default connector(ExploreQueryInspector);\n","import React from 'react';\nimport { Tooltip, ToolbarButton } from '@grafana/ui';\n\ninterface TimeSyncButtonProps {\n  isSynced: boolean;\n  onClick: () => void;\n}\n\nexport function TimeSyncButton(props: TimeSyncButtonProps) {\n  const { onClick, isSynced } = props;\n\n  const syncTimesTooltip = () => {\n    const { isSynced } = props;\n    const tooltip = isSynced ? 'Unsync all views' : 'Sync all views to this time range';\n    return <>{tooltip}</>;\n  };\n\n  return (\n    <Tooltip content={syncTimesTooltip} placement=\"bottom\">\n      <ToolbarButton\n        icon=\"link\"\n        variant={isSynced ? 'active' : 'default'}\n        aria-label={isSynced ? 'Synced times' : 'Unsynced times'}\n        onClick={onClick}\n      />\n    </Tooltip>\n  );\n}\n","// Libaries\nimport React, { Component } from 'react';\n\n// Types\nimport { ExploreId } from 'app/types';\nimport { TimeRange, TimeZone, RawTimeRange, dateTimeForTimeZone, dateMath } from '@grafana/data';\n\n// State\n\n// Components\nimport { TimeSyncButton } from './TimeSyncButton';\nimport { TimePickerWithHistory } from 'app/core/components/TimePicker/TimePickerWithHistory';\n\n// Utils & Services\nimport { getShiftedTimeRange, getZoomedTimeRange } from 'app/core/utils/timePicker';\n\nexport interface Props {\n  exploreId: ExploreId;\n  hideText?: boolean;\n  range: TimeRange;\n  timeZone: TimeZone;\n  fiscalYearStartMonth: number;\n  splitted: boolean;\n  syncedTimes: boolean;\n  onChangeTimeSync: () => void;\n  onChangeTime: (range: RawTimeRange) => void;\n  onChangeTimeZone: (timeZone: TimeZone) => void;\n  onChangeFiscalYearStartMonth: (fiscalYearStartMonth: number) => void;\n}\n\nexport class ExploreTimeControls extends Component<Props> {\n  onMoveTimePicker = (direction: number) => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getShiftedTimeRange(direction, range);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  onMoveForward = () => this.onMoveTimePicker(1);\n  onMoveBack = () => this.onMoveTimePicker(-1);\n\n  onChangeTimePicker = (timeRange: TimeRange) => {\n    const adjustedFrom = dateMath.isMathString(timeRange.raw.from) ? timeRange.raw.from : timeRange.from;\n    const adjustedTo = dateMath.isMathString(timeRange.raw.to) ? timeRange.raw.to : timeRange.to;\n\n    this.props.onChangeTime({\n      from: adjustedFrom,\n      to: adjustedTo,\n    });\n  };\n\n  onZoom = () => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getZoomedTimeRange(range, 2);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  render() {\n    const {\n      range,\n      timeZone,\n      fiscalYearStartMonth,\n      splitted,\n      syncedTimes,\n      onChangeTimeSync,\n      hideText,\n      onChangeTimeZone,\n      onChangeFiscalYearStartMonth,\n    } = this.props;\n    const timeSyncButton = splitted ? <TimeSyncButton onClick={onChangeTimeSync} isSynced={syncedTimes} /> : undefined;\n    const timePickerCommonProps = {\n      value: range,\n      timeZone,\n      fiscalYearStartMonth,\n      onMoveBackward: this.onMoveBack,\n      onMoveForward: this.onMoveForward,\n      onZoom: this.onZoom,\n      hideText,\n    };\n\n    return (\n      <TimePickerWithHistory\n        {...timePickerCommonProps}\n        timeSyncButton={timeSyncButton}\n        isSynced={syncedTimes}\n        onChange={this.onChangeTimePicker}\n        onChangeTimeZone={onChangeTimeZone}\n        onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { CSSTransition } from 'react-transition-group';\nimport { Tooltip, ButtonGroup, ToolbarButton } from '@grafana/ui';\n\ntype LiveTailButtonProps = {\n  splitted: boolean;\n  start: () => void;\n  stop: () => void;\n  pause: () => void;\n  resume: () => void;\n  isLive: boolean;\n  isPaused: boolean;\n};\n\nexport function LiveTailButton(props: LiveTailButtonProps) {\n  const { start, pause, resume, isLive, isPaused, stop, splitted } = props;\n  const buttonVariant = isLive && !isPaused ? 'active' : 'default';\n  const onClickMain = isLive ? (isPaused ? resume : pause) : start;\n\n  return (\n    <ButtonGroup>\n      <Tooltip\n        content={isLive && !isPaused ? <>Pause the live stream</> : <>Start live stream your logs</>}\n        placement=\"bottom\"\n      >\n        <ToolbarButton\n          iconOnly={splitted}\n          variant={buttonVariant}\n          icon={!isLive || isPaused ? 'play' : 'pause'}\n          onClick={onClickMain}\n        >\n          {isLive && isPaused ? 'Paused' : 'Live'}\n        </ToolbarButton>\n      </Tooltip>\n\n      <CSSTransition\n        mountOnEnter={true}\n        unmountOnExit={true}\n        timeout={100}\n        in={isLive}\n        classNames={{\n          enter: styles.stopButtonEnter,\n          enterActive: styles.stopButtonEnterActive,\n          exit: styles.stopButtonExit,\n          exitActive: styles.stopButtonExitActive,\n        }}\n      >\n        <Tooltip content={<>Stop and exit the live stream</>} placement=\"bottom\">\n          <ToolbarButton variant={buttonVariant} onClick={stop} icon=\"square-shape\" />\n        </Tooltip>\n      </CSSTransition>\n    </ButtonGroup>\n  );\n}\n\nconst styles = {\n  stopButtonEnter: css`\n    label: stopButtonEnter;\n    width: 0;\n    opacity: 0;\n    overflow: hidden;\n  `,\n  stopButtonEnterActive: css`\n    label: stopButtonEnterActive;\n    opacity: 1;\n    width: 32px;\n  `,\n  stopButtonExit: css`\n    label: stopButtonExit;\n    width: 32px;\n    opacity: 1;\n    overflow: hidden;\n  `,\n  stopButtonExitActive: css`\n    label: stopButtonExitActive;\n    opacity: 0;\n    width: 0;\n  `,\n};\n","import React from 'react';\nimport { RefreshPicker, defaultIntervals } from '@grafana/ui';\nimport { getTimeSrv } from 'app/features/dashboard/services/TimeSrv';\n\nexport type Props = {\n  isSmall?: boolean;\n  loading: boolean;\n  isLive: boolean;\n  onRun: (loading: boolean) => void;\n  refreshInterval?: string;\n  onChangeRefreshInterval: (interval: string) => void;\n  showDropdown: boolean;\n};\n\nexport function RunButton(props: Props) {\n  const { isSmall, loading, onRun, onChangeRefreshInterval, refreshInterval, showDropdown, isLive } = props;\n  const intervals = getTimeSrv().getValidIntervals(defaultIntervals);\n  let text: string | undefined = loading ? 'Cancel' : 'Run query';\n  let width = '108px';\n\n  if (isLive) {\n    return null;\n  }\n\n  if (isSmall) {\n    text = undefined;\n    width = '35px';\n  }\n\n  return (\n    <RefreshPicker\n      onIntervalChanged={onChangeRefreshInterval}\n      value={refreshInterval}\n      isLoading={loading}\n      text={text}\n      intervals={intervals}\n      isLive={isLive}\n      onRefresh={() => onRun(loading)}\n      noIntervalPicker={!showDropdown}\n      primary={true}\n      width={width}\n    />\n  );\n}\n","import React, { FC } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { ButtonGroup, ButtonSelect, Icon, ToolbarButton, Tooltip } from '@grafana/ui';\nimport { DataQuery, urlUtil } from '@grafana/data';\n\nimport kbn from '../../core/utils/kbn';\nimport config from 'app/core/config';\nimport { getDashboardSrv } from '../dashboard/services/DashboardSrv';\nimport { StoreState } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\nimport { setDashboardQueriesToUpdateOnLoad } from '../dashboard/state/reducers';\nimport { isSplit } from './state/selectors';\nimport { locationService } from '@grafana/runtime';\nimport { contextSrv } from 'app/core/services/context_srv';\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const splitted = isSplit(state);\n  const { datasourceInstance, queries, originPanelId } = explore[exploreId]!;\n\n  const roles = ['Editor', 'Admin'];\n  if (config.viewersCanEdit) {\n    roles.push('Viewer');\n  }\n\n  return {\n    exploreId,\n    datasourceInstance,\n    queries,\n    originPanelId,\n    splitted,\n    canEdit: roles.some((r) => contextSrv.hasRole(r)),\n  };\n}\n\nconst mapDispatchToProps = {\n  setDashboardQueriesToUpdateOnLoad,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype Props = ConnectedProps<typeof connector>;\n\nexport const UnconnectedReturnToDashboardButton: FC<Props> = ({\n  originPanelId,\n  setDashboardQueriesToUpdateOnLoad,\n  queries,\n  splitted,\n  canEdit,\n}) => {\n  const withOriginId = originPanelId && Number.isInteger(originPanelId);\n\n  // If in split mode, or no origin id, escape early and return null\n  if (splitted || !withOriginId) {\n    return null;\n  }\n\n  const cleanQueries = (queries: DataQuery[]) => {\n    return queries.map((query: DataQuery & { context?: string }) => {\n      delete query.context;\n      delete query.key;\n      return query;\n    });\n  };\n\n  const returnToPanel = async ({ withChanges = false } = {}) => {\n    const dashboardSrv = getDashboardSrv();\n    const dash = dashboardSrv.getCurrent();\n    if (!dash) {\n      return;\n    }\n\n    const titleSlug = kbn.slugifyForUrl(dash.title);\n\n    if (withChanges) {\n      setDashboardQueriesToUpdateOnLoad({\n        panelId: originPanelId!,\n        queries: cleanQueries(queries),\n      });\n    }\n\n    const query: any = {};\n\n    if (withChanges || dash.panelInEdit) {\n      query.editPanel = originPanelId;\n    } else if (dash.panelInView) {\n      query.viewPanel = originPanelId;\n    }\n\n    locationService.push(urlUtil.renderUrl(`/d/${dash.uid}/:${titleSlug}`, query));\n  };\n\n  return (\n    <ButtonGroup>\n      <Tooltip content={'Return to panel'} placement=\"bottom\">\n        <ToolbarButton data-testid=\"returnButton\" title={'Return to panel'} onClick={() => returnToPanel()}>\n          <Icon name=\"arrow-left\" />\n        </ToolbarButton>\n      </Tooltip>\n      {canEdit && (\n        <ButtonSelect\n          data-testid=\"returnButtonWithChanges\"\n          options={[{ label: 'Return to panel with changes', value: '' }]}\n          onChange={() => returnToPanel({ withChanges: true })}\n        />\n      )}\n    </ButtonGroup>\n  );\n};\n\nexport default connector(UnconnectedReturnToDashboardButton);\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { PageToolbar, SetInterval, ToolbarButton, ToolbarButtonRow } from '@grafana/ui';\nimport { DataSourceInstanceSettings, RawTimeRange } from '@grafana/data';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport { StoreState } from 'app/types/store';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { changeDatasource } from './state/datasource';\nimport { splitClose, splitOpen } from './state/main';\nimport { syncTimes, changeRefreshInterval } from './state/time';\nimport { getFiscalYearStartMonth, getTimeZone } from '../profile/state/selectors';\nimport { updateFiscalYearStartMonthForSession, updateTimeZoneForSession } from '../profile/state/reducers';\nimport { ExploreTimeControls } from './ExploreTimeControls';\nimport { LiveTailButton } from './LiveTailButton';\nimport { RunButton } from './RunButton';\nimport { LiveTailControls } from './useLiveTailControls';\nimport { cancelQueries, runQueries } from './state/query';\nimport ReturnToDashboardButton from './ReturnToDashboardButton';\nimport { isSplit } from './state/selectors';\nimport { DashNavButton } from '../dashboard/components/DashNav/DashNavButton';\n\ninterface OwnProps {\n  exploreId: ExploreId;\n  onChangeTime: (range: RawTimeRange, changedByScanner?: boolean) => void;\n}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nclass UnConnectedExploreToolbar extends PureComponent<Props> {\n  onChangeDatasource = async (dsSettings: DataSourceInstanceSettings) => {\n    this.props.changeDatasource(this.props.exploreId, dsSettings.uid, { importQueries: true });\n  };\n\n  onRunQuery = (loading = false) => {\n    const { runQueries, cancelQueries, exploreId } = this.props;\n    if (loading) {\n      return cancelQueries(exploreId);\n    } else {\n      return runQueries(exploreId);\n    }\n  };\n\n  onChangeRefreshInterval = (item: string) => {\n    const { changeRefreshInterval, exploreId } = this.props;\n    changeRefreshInterval(exploreId, item);\n  };\n\n  onChangeTimeSync = () => {\n    const { syncTimes, exploreId } = this.props;\n    syncTimes(exploreId);\n  };\n\n  render() {\n    const {\n      datasourceMissing,\n      closeSplit,\n      exploreId,\n      loading,\n      range,\n      timeZone,\n      fiscalYearStartMonth,\n      splitted,\n      syncedTimes,\n      refreshInterval,\n      onChangeTime,\n      split,\n      hasLiveOption,\n      isLive,\n      isPaused,\n      containerWidth,\n      onChangeTimeZone,\n      onChangeFiscalYearStartMonth,\n    } = this.props;\n\n    const showSmallDataSourcePicker = (splitted ? containerWidth < 700 : containerWidth < 800) || false;\n    const showSmallTimePicker = splitted || containerWidth < 1210;\n\n    return (\n      <PageToolbar\n        title={exploreId === ExploreId.left ? 'Explore' : undefined}\n        pageIcon={exploreId === ExploreId.left ? 'compass' : undefined}\n        leftItems={[\n          exploreId === ExploreId.left && (\n            <DashNavButton\n              key=\"share\"\n              tooltip=\"Copy shortened link\"\n              icon=\"share-alt\"\n              onClick={() => createAndCopyShortLink(window.location.href)}\n              aria-label=\"Copy shortened link\"\n            />\n          ),\n          !datasourceMissing && (\n            <DataSourcePicker\n              key={`${exploreId}-ds-picker`}\n              onChange={this.onChangeDatasource}\n              current={this.props.datasourceName}\n              hideTextValue={showSmallDataSourcePicker}\n              width={showSmallDataSourcePicker ? 8 : undefined}\n            />\n          ),\n        ].filter(Boolean)}\n      >\n        <ToolbarButtonRow>\n          <ReturnToDashboardButton exploreId={exploreId} />\n\n          {!splitted ? (\n            <ToolbarButton title=\"Split\" onClick={() => split()} icon=\"columns\" disabled={isLive}>\n              Split\n            </ToolbarButton>\n          ) : (\n            <ToolbarButton title=\"Close split pane\" onClick={() => closeSplit(exploreId)} icon=\"times\">\n              Close\n            </ToolbarButton>\n          )}\n\n          {!isLive && (\n            <ExploreTimeControls\n              exploreId={exploreId}\n              range={range}\n              timeZone={timeZone}\n              fiscalYearStartMonth={fiscalYearStartMonth}\n              onChangeTime={onChangeTime}\n              splitted={splitted}\n              syncedTimes={syncedTimes}\n              onChangeTimeSync={this.onChangeTimeSync}\n              hideText={showSmallTimePicker}\n              onChangeTimeZone={onChangeTimeZone}\n              onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n            />\n          )}\n\n          <RunButton\n            refreshInterval={refreshInterval}\n            onChangeRefreshInterval={this.onChangeRefreshInterval}\n            isSmall={splitted || showSmallTimePicker}\n            isLive={isLive}\n            loading={loading || (isLive && !isPaused)}\n            onRun={this.onRunQuery}\n            showDropdown={!isLive}\n          />\n\n          {refreshInterval && <SetInterval func={this.onRunQuery} interval={refreshInterval} loading={loading} />}\n\n          {hasLiveOption && (\n            <LiveTailControls exploreId={exploreId}>\n              {(controls) => (\n                <LiveTailButton\n                  splitted={splitted}\n                  isLive={isLive}\n                  isPaused={isPaused}\n                  start={controls.start}\n                  pause={controls.pause}\n                  resume={controls.resume}\n                  stop={controls.stop}\n                />\n              )}\n            </LiveTailControls>\n          )}\n        </ToolbarButtonRow>\n      </PageToolbar>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState, { exploreId }: OwnProps) => {\n  const { syncedTimes } = state.explore;\n  const exploreItem: ExploreItemState = state.explore[exploreId]!;\n  const { datasourceInstance, datasourceMissing, range, refreshInterval, loading, isLive, isPaused, containerWidth } =\n    exploreItem;\n\n  const hasLiveOption = !!datasourceInstance?.meta?.streaming;\n\n  return {\n    datasourceMissing,\n    datasourceName: datasourceInstance?.name,\n    loading,\n    range,\n    timeZone: getTimeZone(state.user),\n    fiscalYearStartMonth: getFiscalYearStartMonth(state.user),\n    splitted: isSplit(state),\n    refreshInterval,\n    hasLiveOption,\n    isLive,\n    isPaused,\n    syncedTimes,\n    containerWidth,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  changeRefreshInterval,\n  cancelQueries,\n  runQueries,\n  closeSplit: splitClose,\n  split: splitOpen,\n  syncTimes,\n  onChangeTimeZone: updateTimeZoneForSession,\n  onChangeFiscalYearStartMonth: updateFiscalYearStartMonthForSession,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport const ExploreToolbar = connector(UnConnectedExploreToolbar);\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { LinkButton, CallToActionCard, Icon, useTheme2 } from '@grafana/ui';\n\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\n\nexport const NoDataSourceCallToAction = () => {\n  const theme = useTheme2();\n\n  const canCreateDataSource =\n    contextSrv.hasPermission(AccessControlAction.DataSourcesCreate) &&\n    contextSrv.hasPermission(AccessControlAction.DataSourcesWrite);\n\n  const message =\n    'Explore requires at least one data source. Once you have added a data source, you can query it here.';\n  const footer = (\n    <>\n      <Icon name=\"rocket\" />\n      <> ProTip: You can also define data sources through configuration files. </>\n      <a\n        href=\"http://docs.grafana.org/administration/provisioning/#datasources?utm_source=explore\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"text-link\"\n      >\n        Learn more\n      </a>\n    </>\n  );\n\n  const ctaElement = (\n    <LinkButton size=\"lg\" href=\"datasources/new\" icon=\"database\" disabled={!canCreateDataSource}>\n      Add data source\n    </LinkButton>\n  );\n\n  const cardClassName = css`\n    max-width: ${theme.breakpoints.values.lg}px;\n    margin-top: ${theme.spacing(2)};\n    align-self: center;\n  `;\n\n  return (\n    <CallToActionCard callToActionElement={ctaElement} className={cardClassName} footer={footer} message={message} />\n  );\n};\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, HorizontalGroup, useTheme2 } from '@grafana/ui';\n\ntype Props = {\n  addQueryRowButtonDisabled?: boolean;\n  addQueryRowButtonHidden?: boolean;\n  richHistoryButtonActive?: boolean;\n  queryInspectorButtonActive?: boolean;\n\n  onClickAddQueryRowButton: () => void;\n  onClickRichHistoryButton: () => void;\n  onClickQueryInspectorButton: () => void;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    containerMargin: css`\n      margin-top: ${theme.spacing(2)};\n    `,\n  };\n};\nexport function SecondaryActions(props: Props) {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  return (\n    <div className={styles.containerMargin}>\n      <HorizontalGroup>\n        {!props.addQueryRowButtonHidden && (\n          <Button\n            variant=\"secondary\"\n            aria-label=\"Add row button\"\n            onClick={props.onClickAddQueryRowButton}\n            disabled={props.addQueryRowButtonDisabled}\n            icon=\"plus\"\n          >\n            Add query\n          </Button>\n        )}\n        <Button\n          variant=\"secondary\"\n          aria-label=\"Rich history button\"\n          className={cx({ ['explore-active-button']: props.richHistoryButtonActive })}\n          onClick={props.onClickRichHistoryButton}\n          icon=\"history\"\n        >\n          Query history\n        </Button>\n        <Button\n          variant=\"secondary\"\n          aria-label=\"Query inspector button\"\n          className={cx({ ['explore-active-button']: props.queryInspectorButtonActive })}\n          onClick={props.onClickQueryInspectorButton}\n          icon=\"info-circle\"\n        >\n          Inspector\n        </Button>\n      </HorizontalGroup>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useToggle } from 'react-use';\nimport { Badge, Collapse, useStyles2, useTheme2 } from '@grafana/ui';\nimport { applyFieldOverrides, DataFrame, GrafanaTheme2 } from '@grafana/data';\nimport { css } from '@emotion/css';\nimport { ExploreId, StoreState } from '../../types';\nimport { splitOpen } from './state/main';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useLinks } from './utils/links';\nimport { NodeGraph } from '../../plugins/panel/nodeGraph';\nimport { useCategorizeFrames } from '../../plugins/panel/nodeGraph/useCategorizeFrames';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  warningText: css`\n    label: warningText;\n    font-size: ${theme.typography.bodySmall.fontSize};\n    color: ${theme.colors.text.secondary};\n  `,\n});\n\ninterface OwnProps {\n  // Edges and Nodes are separate frames\n  dataFrames: DataFrame[];\n  exploreId: ExploreId;\n  // When showing the node graph together with trace view we do some changes so it works better.\n  withTraceView?: boolean;\n}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport function UnconnectedNodeGraphContainer(props: Props) {\n  const { dataFrames, range, splitOpen, withTraceView } = props;\n  const getLinks = useLinks(range, splitOpen);\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  // This is implicit dependency that is needed for links to work. At some point when replacing variables in the link\n  // it requires field to have a display property which is added by the overrides even though we don't add any field\n  // overrides in explore.\n  const frames = applyFieldOverrides({\n    fieldConfig: {\n      defaults: {},\n      overrides: [],\n    },\n    data: dataFrames,\n    // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n    replaceVariables: (value) => value,\n    theme,\n  });\n\n  const { nodes } = useCategorizeFrames(frames);\n  const [open, toggleOpen] = useToggle(false);\n\n  const countWarning =\n    withTraceView && nodes[0]?.length > 1000 ? (\n      <span className={styles.warningText}> ({nodes[0].length} nodes, can be slow to load)</span>\n    ) : null;\n\n  return (\n    <Collapse\n      label={\n        <span>\n          Node graph{countWarning}{' '}\n          <Badge text={'Beta'} color={'blue'} icon={'rocket'} tooltip={'This visualization is in beta'} />\n        </span>\n      }\n      collapsible={withTraceView}\n      // We allow collapsing this only when it is shown together with trace view.\n      isOpen={withTraceView ? open : true}\n      onToggle={withTraceView ? () => toggleOpen() : undefined}\n    >\n      <div style={{ height: withTraceView ? 500 : 600 }}>\n        <NodeGraph dataFrames={frames} getLinks={getLinks} />\n      </div>\n    </Collapse>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: OwnProps) {\n  return {\n    range: state.explore[exploreId]!.range,\n  };\n}\n\nconst mapDispatchToProps = {\n  splitOpen,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport const NodeGraphContainer = connector(UnconnectedNodeGraphContainer);\n","import React, { FC, CSSProperties } from 'react';\nimport Transition, { ExitHandler } from 'react-transition-group/Transition';\n\ninterface Props {\n  duration: number;\n  children: JSX.Element;\n  in: boolean;\n  unmountOnExit?: boolean;\n  onExited?: ExitHandler<HTMLDivElement>;\n}\n\nexport const FadeIn: FC<Props> = (props) => {\n  const defaultStyle: CSSProperties = {\n    transition: `opacity ${props.duration}ms linear`,\n    opacity: 0,\n  };\n\n  const transitionStyles: { [str: string]: CSSProperties } = {\n    exited: { opacity: 0, display: 'none' },\n    entering: { opacity: 0 },\n    entered: { opacity: 1 },\n    exiting: { opacity: 0 },\n  };\n\n  return (\n    <Transition\n      in={props.in}\n      timeout={props.duration}\n      unmountOnExit={props.unmountOnExit || false}\n      onExited={props.onExited}\n    >\n      {(state) => (\n        <div\n          style={{\n            ...defaultStyle,\n            ...transitionStyles[state],\n          }}\n        >\n          {props.children}\n        </div>\n      )}\n    </Transition>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport { DataQueryError } from '@grafana/data';\nimport { Alert, useTheme2 } from '@grafana/ui';\nimport { FadeIn } from 'app/core/components/Animations/FadeIn';\nimport { css } from '@emotion/css';\n\nexport interface ErrorContainerProps {\n  queryError?: DataQueryError;\n}\n\nexport const ErrorContainer: FunctionComponent<ErrorContainerProps> = (props) => {\n  const { queryError } = props;\n  const theme = useTheme2();\n  const showError = queryError ? true : false;\n  const duration = showError ? 100 : 10;\n  const title = queryError ? 'Query error' : 'Unknown error';\n  const message = queryError?.message || queryError?.data?.message || null;\n  const alertWithTopMargin = css`\n    margin-top: ${theme.spacing(2)};\n  `;\n\n  return (\n    <FadeIn in={showError} duration={duration}>\n      <Alert severity=\"error\" title={title} className={alertWithTopMargin}>\n        {message}\n      </Alert>\n    </FadeIn>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ExploreId, StoreState } from '../../types';\nimport { LoadingState } from '@grafana/data';\nimport { ErrorContainer } from './ErrorContainer';\n\ninterface Props {\n  exploreId: ExploreId;\n}\nexport function ResponseErrorContainer(props: Props) {\n  const queryResponse = useSelector((state: StoreState) => state.explore[props.exploreId]?.queryResponse);\n\n  const queryError = queryResponse?.state === LoadingState.Error ? queryResponse?.error : undefined;\n\n  return <ErrorContainer queryError={queryError} />;\n}\n","import {\n  DataFrame,\n  DataLink,\n  dateTime,\n  Field,\n  mapInternalLinkToExplore,\n  rangeUtil,\n  SplitOpen,\n  TimeRange,\n} from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { Icon } from '@grafana/ui';\nimport { SpanLinkDef, SpanLinkFunc, TraceSpan } from '@jaegertracing/jaeger-ui-components';\nimport { TraceToLogsOptions } from 'app/core/components/TraceToLogsSettings';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport React from 'react';\nimport { LokiQuery } from '../../../plugins/datasource/loki/types';\nimport { getFieldLinksForExplore } from '../utils/links';\n\n/**\n * This is a factory for the link creator. It returns the function mainly so it can return undefined in which case\n * the trace view won't create any links and to capture the datasource and split function making it easier to memoize\n * with useMemo.\n */\nexport function createSpanLinkFactory({\n  splitOpenFn,\n  traceToLogsOptions,\n  dataFrame,\n}: {\n  splitOpenFn: SplitOpen;\n  traceToLogsOptions?: TraceToLogsOptions;\n  dataFrame?: DataFrame;\n}): SpanLinkFunc | undefined {\n  if (!dataFrame || dataFrame.fields.length === 1 || !dataFrame.fields.some((f) => Boolean(f.config.links?.length))) {\n    // if the dataframe contains just a single blob of data (legacy format) or does not have any links configured,\n    // let's try to use the old legacy path.\n    return legacyCreateSpanLinkFactory(splitOpenFn, traceToLogsOptions);\n  } else {\n    return function SpanLink(span: TraceSpan): SpanLinkDef | undefined {\n      // We should be here only if there are some links in the dataframe\n      const field = dataFrame.fields.find((f) => Boolean(f.config.links?.length))!;\n      try {\n        const links = getFieldLinksForExplore({\n          field,\n          rowIndex: span.dataFrameRowIndex!,\n          splitOpenFn,\n          range: getTimeRangeFromSpan(span),\n          dataFrame,\n        });\n\n        return {\n          href: links[0].href,\n          onClick: links[0].onClick,\n          content: <Icon name=\"gf-logs\" title=\"Explore the logs for this in split view\" />,\n        };\n      } catch (error) {\n        // It's fairly easy to crash here for example if data source defines wrong interpolation in the data link\n        console.error(error);\n        return undefined;\n      }\n    };\n  }\n}\n\nfunction legacyCreateSpanLinkFactory(splitOpenFn: SplitOpen, traceToLogsOptions?: TraceToLogsOptions) {\n  // We should return if dataSourceUid is undefined otherwise getInstanceSettings would return testDataSource.\n  if (!traceToLogsOptions?.datasourceUid) {\n    return undefined;\n  }\n\n  const dataSourceSettings = getDatasourceSrv().getInstanceSettings(traceToLogsOptions.datasourceUid);\n\n  if (!dataSourceSettings) {\n    return undefined;\n  }\n\n  return function SpanLink(span: TraceSpan): SpanLinkDef {\n    // This is reusing existing code from derived fields which may not be ideal match so some data is a bit faked at\n    // the moment. Issue is that the trace itself isn't clearly mapped to dataFrame (right now it's just a json blob\n    // inside a single field) so the dataLinks as config of that dataFrame abstraction breaks down a bit and we do\n    // it manually here instead of leaving it for the data source to supply the config.\n\n    const dataLink: DataLink<LokiQuery> = {\n      title: dataSourceSettings.name,\n      url: '',\n      internal: {\n        datasourceUid: dataSourceSettings.uid,\n        datasourceName: dataSourceSettings.name,\n        query: {\n          expr: getLokiQueryFromSpan(span, traceToLogsOptions),\n          refId: '',\n        },\n      },\n    };\n\n    const link = mapInternalLinkToExplore({\n      link: dataLink,\n      internalLink: dataLink.internal!,\n      scopedVars: {},\n      range: getTimeRangeFromSpan(span, {\n        startMs: traceToLogsOptions.spanStartTimeShift\n          ? rangeUtil.intervalToMs(traceToLogsOptions.spanStartTimeShift)\n          : 0,\n        endMs: traceToLogsOptions.spanEndTimeShift ? rangeUtil.intervalToMs(traceToLogsOptions.spanEndTimeShift) : 0,\n      }),\n      field: {} as Field,\n      onClickFn: splitOpenFn,\n      replaceVariables: getTemplateSrv().replace.bind(getTemplateSrv()),\n    });\n\n    return {\n      href: link.href,\n      onClick: link.onClick,\n      content: <Icon name=\"gf-logs\" title=\"Explore the logs for this in split view\" />,\n    };\n  };\n}\n\n/**\n * Default keys to use when there are no configured tags.\n */\nconst defaultKeys = ['cluster', 'hostname', 'namespace', 'pod'];\n\nfunction getLokiQueryFromSpan(span: TraceSpan, options: TraceToLogsOptions): string {\n  const { tags: keys, filterByTraceID, filterBySpanID } = options;\n  const keysToCheck = keys?.length ? keys : defaultKeys;\n  const tags = [...span.process.tags, ...span.tags].reduce((acc, tag) => {\n    if (keysToCheck.includes(tag.key)) {\n      acc.push(`${tag.key}=\"${tag.value}\"`);\n    }\n    return acc;\n  }, [] as string[]);\n\n  let query = `{${tags.join(', ')}}`;\n\n  if (filterByTraceID && span.traceID) {\n    query += ` |=\"${span.traceID}\"`;\n  }\n  if (filterBySpanID && span.spanID) {\n    query += ` |=\"${span.spanID}\"`;\n  }\n\n  return query;\n}\n\n/**\n * Gets a time range from the span.\n */\nfunction getTimeRangeFromSpan(\n  span: TraceSpan,\n  timeShift: { startMs: number; endMs: number } = { startMs: 0, endMs: 0 }\n): TimeRange {\n  const adjustedStartTime = Math.floor(span.startTime / 1000 + timeShift.startMs);\n  const from = dateTime(adjustedStartTime);\n  const spanEndMs = (span.startTime + span.duration) / 1000;\n  let adjustedEndTime = Math.floor(spanEndMs + timeShift.endMs);\n\n  // Because we can only pass milliseconds in the url we need to check if they equal.\n  // We need end time to be later than start time\n  if (adjustedStartTime === adjustedEndTime) {\n    adjustedEndTime++;\n  }\n  const to = dateTime(adjustedEndTime);\n\n  // Beware that public/app/features/explore/state/main.ts SplitOpen fn uses the range from here. No matter what is in the url.\n  return {\n    from,\n    to,\n    raw: {\n      from,\n      to,\n    },\n  };\n}\n","import { GrafanaTheme } from '@grafana/data';\nimport {\n  Button,\n  Input,\n  Popover,\n  PopoverController,\n  stylesFactory,\n  Tooltip as GrafanaTooltip,\n  useTheme,\n} from '@grafana/ui';\nimport { ButtonProps, Elements, PopoverProps, TooltipProps } from '@jaegertracing/jaeger-ui-components';\nimport cx from 'classnames';\nimport { css } from '@emotion/css';\nimport React, { useRef } from 'react';\n\n/**\n * Right now Jaeger components need some UI elements to be injected. This is to get rid of AntD UI library that was\n * used by default.\n */\n\n// This needs to be static to prevent remounting on every render.\nexport const UIElements: Elements = {\n  Popover({ children, content, overlayClassName }: PopoverProps) {\n    const popoverRef = useRef<HTMLElement>(null);\n\n    return (\n      <PopoverController content={content} hideAfter={300}>\n        {(showPopper, hidePopper, popperProps) => {\n          return (\n            <>\n              {popoverRef.current && (\n                <Popover\n                  {...popperProps}\n                  referenceElement={popoverRef.current}\n                  wrapperClassName={overlayClassName}\n                  onMouseLeave={hidePopper}\n                  onMouseEnter={showPopper}\n                />\n              )}\n\n              {React.cloneElement(children, {\n                ref: popoverRef,\n                onMouseEnter: showPopper,\n                onMouseLeave: hidePopper,\n              })}\n            </>\n          );\n        }}\n      </PopoverController>\n    );\n  },\n  Tooltip({ children, title }: TooltipProps) {\n    return <GrafanaTooltip content={title}>{children}</GrafanaTooltip>;\n  },\n  Icon: (() => null as any) as any,\n  Dropdown: (() => null as any) as any,\n  Menu: (() => null as any) as any,\n  MenuItem: (() => null as any) as any,\n  Button({ onClick, children, className }: ButtonProps) {\n    return (\n      <Button variant=\"secondary\" onClick={onClick} className={className}>\n        {children}\n      </Button>\n    );\n  },\n  Divider,\n  Input(props) {\n    return <Input {...props} />;\n  },\n  InputGroup({ children, className, style }) {\n    return (\n      <span className={className} style={style}>\n        {children}\n      </span>\n    );\n  },\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    Divider: css`\n      display: inline-block;\n      background: ${theme.isDark ? '#242424' : '#e8e8e8'};\n      width: 1px;\n      height: 0.9em;\n      margin: 0 8px;\n      vertical-align: middle;\n    `,\n  };\n});\n\nfunction Divider({ className }: { className?: string }) {\n  const styles = getStyles(useTheme());\n  return <div style={{}} className={cx(styles.Divider, className)} />;\n}\n","import { useCallback, useState } from 'react';\nimport { TraceSpan } from '@jaegertracing/jaeger-ui-components';\n\n/**\n * Children state means whether spans are collapsed or not. Also provides some functions to manipulate that state.\n */\nexport function useChildrenState() {\n  const [childrenHiddenIDs, setChildrenHiddenIDs] = useState(new Set<string>());\n\n  const expandOne = useCallback(\n    function expandOne(spans: TraceSpan[]) {\n      if (childrenHiddenIDs.size === 0) {\n        return;\n      }\n      let prevExpandedDepth = -1;\n      let expandNextHiddenSpan = true;\n      const newChildrenHiddenIDs = spans.reduce((res, s) => {\n        if (s.depth <= prevExpandedDepth) {\n          expandNextHiddenSpan = true;\n        }\n        if (expandNextHiddenSpan && res.has(s.spanID)) {\n          res.delete(s.spanID);\n          expandNextHiddenSpan = false;\n          prevExpandedDepth = s.depth;\n        }\n        return res;\n      }, new Set(childrenHiddenIDs));\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  const collapseOne = useCallback(\n    function collapseOne(spans: TraceSpan[]) {\n      if (shouldDisableCollapse(spans, childrenHiddenIDs)) {\n        return;\n      }\n      let nearestCollapsedAncestor: TraceSpan | undefined;\n      const newChildrenHiddenIDs = spans.reduce((res, curSpan) => {\n        if (nearestCollapsedAncestor && curSpan.depth <= nearestCollapsedAncestor.depth) {\n          res.add(nearestCollapsedAncestor.spanID);\n          if (curSpan.hasChildren) {\n            nearestCollapsedAncestor = curSpan;\n          }\n        } else if (curSpan.hasChildren && !res.has(curSpan.spanID)) {\n          nearestCollapsedAncestor = curSpan;\n        }\n        return res;\n      }, new Set(childrenHiddenIDs));\n      // The last one\n      if (nearestCollapsedAncestor) {\n        newChildrenHiddenIDs.add(nearestCollapsedAncestor.spanID);\n      }\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  const expandAll = useCallback(function expandAll() {\n    setChildrenHiddenIDs(new Set<string>());\n  }, []);\n\n  const collapseAll = useCallback(\n    function collapseAll(spans: TraceSpan[]) {\n      if (shouldDisableCollapse(spans, childrenHiddenIDs)) {\n        return;\n      }\n      const newChildrenHiddenIDs = spans.reduce((res, s) => {\n        if (s.hasChildren) {\n          res.add(s.spanID);\n        }\n        return res;\n      }, new Set<string>());\n\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  const childrenToggle = useCallback(\n    function childrenToggle(spanID: string) {\n      const newChildrenHiddenIDs = new Set(childrenHiddenIDs);\n      if (childrenHiddenIDs.has(spanID)) {\n        newChildrenHiddenIDs.delete(spanID);\n      } else {\n        newChildrenHiddenIDs.add(spanID);\n      }\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  return {\n    childrenHiddenIDs,\n    expandOne,\n    collapseOne,\n    expandAll,\n    collapseAll,\n    childrenToggle,\n  };\n}\n\nfunction shouldDisableCollapse(allSpans: TraceSpan[], hiddenSpansIds: Set<string>) {\n  const allParentSpans = allSpans.filter((s) => s.hasChildren);\n  return allParentSpans.length === hiddenSpansIds.size;\n}\n","import { useCallback, useState, useEffect } from 'react';\nimport { DataFrame } from '@grafana/data';\nimport { DetailState } from '@jaegertracing/jaeger-ui-components';\nimport { TraceLog } from '@jaegertracing/jaeger-ui-components/src/types/trace';\n\n/**\n * Keeps state of the span detail. This means whether span details are open but also state of each detail subitem\n * like logs or tags.\n */\nexport function useDetailState(frame: DataFrame) {\n  const [detailStates, setDetailStates] = useState(new Map<string, DetailState>());\n\n  // Clear detail state when new trace arrives\n  useEffect(() => {\n    setDetailStates(new Map<string, DetailState>());\n  }, [frame, setDetailStates]);\n\n  const toggleDetail = useCallback(\n    function toggleDetail(spanID: string) {\n      const newDetailStates = new Map(detailStates);\n      if (newDetailStates.has(spanID)) {\n        newDetailStates.delete(spanID);\n      } else {\n        newDetailStates.set(spanID, new DetailState());\n      }\n      setDetailStates(newDetailStates);\n    },\n    [detailStates]\n  );\n\n  const detailLogItemToggle = useCallback(\n    function detailLogItemToggle(spanID: string, log: TraceLog) {\n      const old = detailStates.get(spanID);\n      if (!old) {\n        return;\n      }\n      const detailState = old.toggleLogItem(log);\n      const newDetailStates = new Map(detailStates);\n      newDetailStates.set(spanID, detailState);\n      return setDetailStates(newDetailStates);\n    },\n    [detailStates]\n  );\n\n  return {\n    detailStates,\n    toggleDetail,\n    detailLogItemToggle,\n    detailLogsToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('logs', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailWarningsToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('warnings', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailStackTracesToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('stackTraces', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailReferencesToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('references', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailProcessToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('process', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailTagsToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('tags', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n  };\n}\n\nfunction makeDetailSubsectionToggle(\n  subSection: 'tags' | 'process' | 'logs' | 'warnings' | 'references' | 'stackTraces',\n  detailStates: Map<string, DetailState>,\n  setDetailStates: (detailStates: Map<string, DetailState>) => void\n) {\n  return (spanID: string) => {\n    const old = detailStates.get(spanID);\n    if (!old) {\n      return;\n    }\n    let detailState;\n    if (subSection === 'tags') {\n      detailState = old.toggleTags();\n    } else if (subSection === 'process') {\n      detailState = old.toggleProcess();\n    } else if (subSection === 'warnings') {\n      detailState = old.toggleWarnings();\n    } else if (subSection === 'references') {\n      detailState = old.toggleReferences();\n    } else if (subSection === 'stackTraces') {\n      detailState = old.toggleStackTraces();\n    } else {\n      detailState = old.toggleLogs();\n    }\n    const newDetailStates = new Map(detailStates);\n    newDetailStates.set(spanID, detailState);\n    setDetailStates(newDetailStates);\n  };\n}\n","import {\n  DataFrame,\n  DataFrameView,\n  DataLink,\n  DataSourceApi,\n  Field,\n  LinkModel,\n  mapInternalLinkToExplore,\n  SplitOpen,\n  TraceSpanRow,\n} from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport {\n  Trace,\n  TracePageHeader,\n  TraceProcess,\n  TraceResponse,\n  TraceTimelineViewer,\n  transformTraceData,\n  TTraceTimeline,\n  UIElementsContext,\n} from '@jaegertracing/jaeger-ui-components';\nimport { TraceToLogsData } from 'app/core/components/TraceToLogsSettings';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { getTimeZone } from 'app/features/profile/state/selectors';\nimport { StoreState } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changePanelState } from '../state/explorePane';\nimport { createSpanLinkFactory } from './createSpanLink';\nimport { UIElements } from './uiElements';\nimport { useChildrenState } from './useChildrenState';\nimport { useDetailState } from './useDetailState';\nimport { useHoverIndentGuide } from './useHoverIndentGuide';\nimport { useSearch } from './useSearch';\nimport { useViewRange } from './useViewRange';\n\nfunction noop(): {} {\n  return {};\n}\n\ntype Props = {\n  dataFrames: DataFrame[];\n  splitOpenFn: SplitOpen;\n  exploreId: ExploreId;\n  scrollElement?: Element;\n};\n\nexport function TraceView(props: Props) {\n  // At this point we only show single trace\n  const frame = props.dataFrames[0];\n\n  const { expandOne, collapseOne, childrenToggle, collapseAll, childrenHiddenIDs, expandAll } = useChildrenState();\n  const {\n    detailStates,\n    toggleDetail,\n    detailLogItemToggle,\n    detailLogsToggle,\n    detailProcessToggle,\n    detailReferencesToggle,\n    detailTagsToggle,\n    detailWarningsToggle,\n    detailStackTracesToggle,\n  } = useDetailState(frame);\n\n  const { removeHoverIndentGuideId, addHoverIndentGuideId, hoverIndentGuideIds } = useHoverIndentGuide();\n  const { viewRange, updateViewRangeTime, updateNextViewRangeTime } = useViewRange();\n\n  /**\n   * Keeps state of resizable name column width\n   */\n  const [spanNameColumnWidth, setSpanNameColumnWidth] = useState(0.25);\n  /**\n   * State of the top minimap, slim means it is collapsed.\n   */\n  const [slim, setSlim] = useState(false);\n\n  const traceProp = useMemo(() => transformDataFrames(frame), [frame]);\n  const { search, setSearch, spanFindMatches } = useSearch(traceProp?.spans);\n\n  const datasource = useSelector(\n    (state: StoreState) => state.explore[props.exploreId]?.datasourceInstance ?? undefined\n  );\n\n  const [focusedSpanId, createFocusSpanLink] = useFocusSpanLink({\n    refId: frame?.refId,\n    exploreId: props.exploreId,\n    datasource,\n  });\n\n  const traceTimeline: TTraceTimeline = useMemo(\n    () => ({\n      childrenHiddenIDs,\n      detailStates,\n      hoverIndentGuideIds,\n      shouldScrollToFirstUiFindMatch: false,\n      spanNameColumnWidth,\n      traceID: traceProp?.traceID,\n    }),\n    [childrenHiddenIDs, detailStates, hoverIndentGuideIds, spanNameColumnWidth, traceProp?.traceID]\n  );\n\n  const traceToLogsOptions = (getDatasourceSrv().getInstanceSettings(datasource?.name)?.jsonData as TraceToLogsData)\n    ?.tracesToLogs;\n  const createSpanLink = useMemo(\n    () => createSpanLinkFactory({ splitOpenFn: props.splitOpenFn, traceToLogsOptions, dataFrame: frame }),\n    [props.splitOpenFn, traceToLogsOptions, frame]\n  );\n  const onSlimViewClicked = useCallback(() => setSlim(!slim), [slim]);\n  const timeZone = useSelector((state: StoreState) => getTimeZone(state.user));\n\n  if (!props.dataFrames?.length || !traceProp) {\n    return null;\n  }\n\n  return (\n    <UIElementsContext.Provider value={UIElements}>\n      <TracePageHeader\n        canCollapse={false}\n        clearSearch={noop}\n        focusUiFindMatches={noop}\n        hideMap={false}\n        hideSummary={false}\n        nextResult={noop}\n        onSlimViewClicked={onSlimViewClicked}\n        onTraceGraphViewClicked={noop}\n        prevResult={noop}\n        resultCount={0}\n        slimView={slim}\n        textFilter={null}\n        trace={traceProp}\n        traceGraphView={false}\n        updateNextViewRangeTime={updateNextViewRangeTime}\n        updateViewRangeTime={updateViewRangeTime}\n        viewRange={viewRange}\n        searchValue={search}\n        onSearchValueChange={setSearch}\n        hideSearchButtons={true}\n        timeZone={timeZone}\n      />\n      <TraceTimelineViewer\n        registerAccessors={noop}\n        scrollToFirstVisibleSpan={noop}\n        findMatchesIDs={spanFindMatches}\n        trace={traceProp}\n        traceTimeline={traceTimeline}\n        updateNextViewRangeTime={updateNextViewRangeTime}\n        updateViewRangeTime={updateViewRangeTime}\n        viewRange={viewRange}\n        focusSpan={noop}\n        createLinkToExternalSpan={noop as any}\n        setSpanNameColumnWidth={setSpanNameColumnWidth}\n        collapseAll={collapseAll}\n        collapseOne={collapseOne}\n        expandAll={expandAll}\n        expandOne={expandOne}\n        childrenToggle={childrenToggle}\n        clearShouldScrollToFirstUiFindMatch={noop}\n        detailLogItemToggle={detailLogItemToggle}\n        detailLogsToggle={detailLogsToggle}\n        detailWarningsToggle={detailWarningsToggle}\n        detailStackTracesToggle={detailStackTracesToggle}\n        detailReferencesToggle={detailReferencesToggle}\n        detailProcessToggle={detailProcessToggle}\n        detailTagsToggle={detailTagsToggle}\n        detailToggle={toggleDetail}\n        setTrace={noop}\n        addHoverIndentGuideId={addHoverIndentGuideId}\n        removeHoverIndentGuideId={removeHoverIndentGuideId}\n        linksGetter={noop as any}\n        uiFind={search}\n        createSpanLink={createSpanLink}\n        scrollElement={props.scrollElement}\n        focusedSpanId={focusedSpanId}\n        createFocusSpanLink={createFocusSpanLink}\n      />\n    </UIElementsContext.Provider>\n  );\n}\n\nfunction transformDataFrames(frame?: DataFrame): Trace | null {\n  if (!frame) {\n    return null;\n  }\n  let data: TraceResponse =\n    frame.fields.length === 1\n      ? // For backward compatibility when we sent whole json response in a single field/value\n        frame.fields[0].values.get(0)\n      : transformTraceDataFrame(frame);\n  return transformTraceData(data);\n}\n\nfunction transformTraceDataFrame(frame: DataFrame): TraceResponse {\n  const view = new DataFrameView<TraceSpanRow>(frame);\n  const processes: Record<string, TraceProcess> = {};\n  for (let i = 0; i < view.length; i++) {\n    const span = view.get(i);\n    if (!processes[span.spanID]) {\n      processes[span.spanID] = {\n        serviceName: span.serviceName,\n        tags: span.serviceTags,\n      };\n    }\n  }\n\n  return {\n    traceID: view.get(0).traceID,\n    processes,\n    spans: view.toArray().map((s, index) => {\n      return {\n        ...s,\n        duration: s.duration * 1000,\n        startTime: s.startTime * 1000,\n        processID: s.spanID,\n        flags: 0,\n        references: s.parentSpanID ? [{ refType: 'CHILD_OF', spanID: s.parentSpanID, traceID: s.traceID }] : undefined,\n        logs: s.logs?.map((l) => ({ ...l, timestamp: l.timestamp * 1000 })) || [],\n        dataFrameRowIndex: index,\n      };\n    }),\n  };\n}\n\n/**\n * Handles focusing a span. Returns the span id to focus to based on what is in current explore state and also a\n * function to change the focused span id.\n * @param options\n */\nfunction useFocusSpanLink(options: {\n  exploreId: ExploreId;\n  refId?: string;\n  datasource?: DataSourceApi;\n}): [string | undefined, (traceId: string, spanId: string) => LinkModel<Field>] {\n  const panelState = useSelector((state: StoreState) => state.explore[options.exploreId]?.panelsState.trace);\n  const focusedSpanId = panelState?.spanId;\n\n  const dispatch = useDispatch();\n  const setFocusedSpanId = (spanId?: string) =>\n    dispatch(\n      changePanelState(options.exploreId, 'trace', {\n        ...panelState,\n        spanId,\n      })\n    );\n\n  const query = useSelector((state: StoreState) =>\n    state.explore[options.exploreId]?.queries.find((query) => query.refId === options.refId)\n  );\n\n  const createFocusSpanLink = (traceId: string, spanId: string) => {\n    const link: DataLink = {\n      title: 'Deep link to this span',\n      url: '',\n      internal: {\n        datasourceUid: options.datasource?.uid!,\n        datasourceName: options.datasource?.name!,\n        query: query,\n        panelsState: {\n          trace: {\n            spanId,\n          },\n        },\n      },\n    };\n\n    return mapInternalLinkToExplore({\n      link,\n      internalLink: link.internal!,\n      scopedVars: {},\n      range: {} as any,\n      field: {} as Field,\n      onClickFn: () => setFocusedSpanId(focusedSpanId === spanId ? undefined : spanId),\n      replaceVariables: getTemplateSrv().replace.bind(getTemplateSrv()),\n    });\n  };\n\n  return [focusedSpanId, createFocusSpanLink];\n}\n","import { useCallback, useState } from 'react';\n\n/**\n * This is used internally to handle hover state of indent guide. As indent guides are separate\n * components per each row/span and you need to highlight all in multiple rows to make the effect of single line\n * they need this kind of common imperative state changes.\n *\n * Ideally would be changed to trace view internal state.\n */\nexport function useHoverIndentGuide() {\n  const [hoverIndentGuideIds, setHoverIndentGuideIds] = useState(new Set<string>());\n\n  const addHoverIndentGuideId = useCallback(function addHoverIndentGuideId(spanID: string) {\n    setHoverIndentGuideIds((prevState) => {\n      const newHoverIndentGuideIds = new Set(prevState);\n      newHoverIndentGuideIds.add(spanID);\n      return newHoverIndentGuideIds;\n    });\n  }, []);\n\n  const removeHoverIndentGuideId = useCallback(function removeHoverIndentGuideId(spanID: string) {\n    setHoverIndentGuideIds((prevState) => {\n      const newHoverIndentGuideIds = new Set(prevState);\n      newHoverIndentGuideIds.delete(spanID);\n      return newHoverIndentGuideIds;\n    });\n  }, []);\n\n  return { hoverIndentGuideIds, addHoverIndentGuideId, removeHoverIndentGuideId };\n}\n","import { useCallback, useState } from 'react';\nimport { ViewRangeTimeUpdate, ViewRange } from '@jaegertracing/jaeger-ui-components';\n\n/**\n * Controls state of the zoom function that can be used through minimap in header or on the timeline. ViewRange contains\n * state not only for current range that is showing but range that is currently being selected by the user.\n */\nexport function useViewRange() {\n  const [viewRange, setViewRange] = useState<ViewRange>({\n    time: {\n      current: [0, 1],\n    },\n  });\n\n  const updateNextViewRangeTime = useCallback(function updateNextViewRangeTime(update: ViewRangeTimeUpdate) {\n    setViewRange((prevRange): ViewRange => {\n      const time = { ...prevRange.time, ...update };\n      return { ...prevRange, time };\n    });\n  }, []);\n\n  const updateViewRangeTime = useCallback(function updateViewRangeTime(start: number, end: number) {\n    const current: [number, number] = [start, end];\n    const time = { current };\n    setViewRange((prevRange): ViewRange => {\n      return { ...prevRange, time };\n    });\n  }, []);\n\n  return { viewRange, updateViewRangeTime, updateNextViewRangeTime };\n}\n","import { useMemo, useState } from 'react';\nimport { filterSpans, TraceSpan } from '@jaegertracing/jaeger-ui-components';\n\n/**\n * Controls the state of search input that highlights spans if they match the search string.\n * @param spans\n */\nexport function useSearch(spans?: TraceSpan[]) {\n  const [search, setSearch] = useState('');\n  const spanFindMatches: Set<string> | undefined | null = useMemo(() => {\n    return search && spans ? filterSpans(search, spans) : undefined;\n  }, [search, spans]);\n\n  return { search, setSearch, spanFindMatches };\n}\n","import React from 'react';\nimport { Collapse } from '@grafana/ui';\nimport { DataFrame, SplitOpen } from '@grafana/data';\nimport { TraceView } from './TraceView';\nimport { ExploreId } from 'app/types/explore';\n\ninterface Props {\n  dataFrames: DataFrame[];\n  splitOpenFn: SplitOpen;\n  exploreId: ExploreId;\n  scrollElement?: Element;\n}\nexport function TraceViewContainer(props: Props) {\n  const { dataFrames, splitOpenFn, exploreId, scrollElement } = props;\n\n  return (\n    <Collapse label=\"Trace View\" isOpen>\n      <TraceView\n        exploreId={exploreId}\n        dataFrames={dataFrames}\n        splitOpenFn={splitOpenFn}\n        scrollElement={scrollElement}\n      />\n    </Collapse>\n  );\n}\n","import { AbsoluteTimeRange, DataQueryError, DataQueryResponse, LoadingState, SplitOpen, TimeZone } from '@grafana/data';\nimport { Alert, Button, Collapse, InlineField, TooltipDisplayMode, useStyles2, useTheme2 } from '@grafana/ui';\nimport { ExploreGraph } from './ExploreGraph';\nimport React, { useState } from 'react';\nimport { css } from '@emotion/css';\n\ntype Props = {\n  logsVolumeData?: DataQueryResponse;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  splitOpen: SplitOpen;\n  width: number;\n  onUpdateTimeRange: (timeRange: AbsoluteTimeRange) => void;\n  onLoadLogsVolume: () => void;\n};\n\nconst SHORT_ERROR_MESSAGE_LIMIT = 100;\n\nfunction ErrorAlert(props: { error: DataQueryError }) {\n  const [isOpen, setIsOpen] = useState(false);\n  // generic get-error-message-logic, taken from\n  // /public/app/features/explore/ErrorContainer.tsx\n  const message = props.error.message || props.error.data?.message || '';\n\n  const showButton = !isOpen && message.length > SHORT_ERROR_MESSAGE_LIMIT;\n\n  return (\n    <Alert title=\"Failed to load log volume for this query\" severity=\"warning\">\n      {showButton ? (\n        <Button\n          variant=\"secondary\"\n          size=\"xs\"\n          onClick={() => {\n            setIsOpen(true);\n          }}\n        >\n          Show details\n        </Button>\n      ) : (\n        message\n      )}\n    </Alert>\n  );\n}\n\nexport function LogsVolumePanel(props: Props) {\n  const { width, logsVolumeData, absoluteRange, timeZone, splitOpen, onUpdateTimeRange, onLoadLogsVolume } = props;\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n  const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n  const height = 150;\n\n  let LogsVolumePanelContent;\n\n  if (!logsVolumeData) {\n    return null;\n  } else if (logsVolumeData?.error) {\n    return <ErrorAlert error={logsVolumeData?.error} />;\n  } else if (logsVolumeData?.state === LoadingState.Loading) {\n    LogsVolumePanelContent = <span>Log volume is loading...</span>;\n  } else if (logsVolumeData?.data) {\n    if (logsVolumeData.data.length > 0) {\n      LogsVolumePanelContent = (\n        <ExploreGraph\n          graphStyle=\"lines\"\n          loadingState={LoadingState.Done}\n          data={logsVolumeData.data}\n          height={height}\n          width={width - spacing}\n          absoluteRange={absoluteRange}\n          onChangeTime={onUpdateTimeRange}\n          timeZone={timeZone}\n          splitOpenFn={splitOpen}\n          tooltipDisplayMode={TooltipDisplayMode.Multi}\n        />\n      );\n    } else {\n      LogsVolumePanelContent = <span>No volume data.</span>;\n    }\n  }\n\n  const zoomRatio = logsLevelZoomRatio(logsVolumeData, absoluteRange);\n  let zoomLevelInfo;\n\n  if (zoomRatio !== undefined && zoomRatio < 1) {\n    zoomLevelInfo = (\n      <InlineField label=\"Reload log volume\" transparent>\n        <Button size=\"xs\" icon=\"sync\" variant=\"secondary\" onClick={onLoadLogsVolume} id=\"reload-volume\" />\n      </InlineField>\n    );\n  }\n\n  return (\n    <Collapse label=\"Log volume\" isOpen={true} loading={logsVolumeData?.state === LoadingState.Loading}>\n      <div style={{ height }} className={styles.contentContainer}>\n        {LogsVolumePanelContent}\n      </div>\n      <div className={styles.zoomInfoContainer}>{zoomLevelInfo}</div>\n    </Collapse>\n  );\n}\n\nconst getStyles = () => {\n  return {\n    zoomInfoContainer: css`\n      display: flex;\n      justify-content: end;\n      position: absolute;\n      right: 5px;\n      top: 5px;\n    `,\n    contentContainer: css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    `,\n  };\n};\n\nfunction logsLevelZoomRatio(\n  logsVolumeData: DataQueryResponse | undefined,\n  selectedTimeRange: AbsoluteTimeRange\n): number | undefined {\n  const dataRange = logsVolumeData && logsVolumeData.data[0] && logsVolumeData.data[0].meta?.custom?.absoluteRange;\n  return dataRange ? (selectedTimeRange.from - selectedTimeRange.to) / (dataRange.from - dataRange.to) : undefined;\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { SelectableValue } from '@grafana/data';\nimport { RadioButtonGroup } from '@grafana/ui';\nimport { EXPLORE_GRAPH_STYLES, ExploreGraphStyle } from '../../types';\n\nconst ALL_GRAPH_STYLE_OPTIONS: Array<SelectableValue<ExploreGraphStyle>> = EXPLORE_GRAPH_STYLES.map((style) => ({\n  value: style,\n  // capital-case it and switch `_` to ` `\n  label: style[0].toUpperCase() + style.slice(1).replace(/_/, ' '),\n}));\n\nconst spacing = css({\n  display: 'flex',\n  justifyContent: 'space-between',\n});\n\ntype Props = {\n  graphStyle: ExploreGraphStyle;\n  onChangeGraphStyle: (style: ExploreGraphStyle) => void;\n};\n\nexport function ExploreGraphLabel(props: Props) {\n  const { graphStyle, onChangeGraphStyle } = props;\n  return (\n    <div className={spacing}>\n      Graph\n      <RadioButtonGroup size=\"sm\" options={ALL_GRAPH_STYLE_OPTIONS} value={graphStyle} onChange={onChangeGraphStyle} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { compose } from 'redux';\nimport { connect, ConnectedProps } from 'react-redux';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport memoizeOne from 'memoize-one';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Collapse, CustomScrollbar, ErrorBoundaryAlert, Themeable2, withTheme2 } from '@grafana/ui';\nimport { AbsoluteTimeRange, DataQuery, GrafanaTheme2, LoadingState, RawTimeRange } from '@grafana/data';\n\nimport LogsContainer from './LogsContainer';\nimport { QueryRows } from './QueryRows';\nimport TableContainer from './TableContainer';\nimport RichHistoryContainer from './RichHistory/RichHistoryContainer';\nimport ExploreQueryInspector from './ExploreQueryInspector';\nimport { splitOpen } from './state/main';\nimport { changeSize, changeGraphStyle } from './state/explorePane';\nimport { makeAbsoluteTime, updateTimeRange } from './state/time';\nimport { addQueryRow, loadLogsVolumeData, modifyQueries, scanStart, scanStopAction, setQueries } from './state/query';\nimport { ExploreGraphStyle, ExploreId, ExploreItemState } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport { ExploreToolbar } from './ExploreToolbar';\nimport { NoDataSourceCallToAction } from './NoDataSourceCallToAction';\nimport { getTimeZone } from '../profile/state/selectors';\nimport { SecondaryActions } from './SecondaryActions';\nimport { FILTER_FOR_OPERATOR, FILTER_OUT_OPERATOR, FilterItem } from '@grafana/ui/src/components/Table/types';\nimport { NodeGraphContainer } from './NodeGraphContainer';\nimport { ResponseErrorContainer } from './ResponseErrorContainer';\nimport { TraceViewContainer } from './TraceView/TraceViewContainer';\nimport { ExploreGraph } from './ExploreGraph';\nimport { LogsVolumePanel } from './LogsVolumePanel';\nimport { ExploreGraphLabel } from './ExploreGraphLabel';\nimport appEvents from 'app/core/app_events';\nimport { AbsoluteTimeEvent } from 'app/types/events';\nimport { Unsubscribable } from 'rxjs';\nimport { getNodeGraphDataFrames } from 'app/plugins/panel/nodeGraph/utils';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    exploreMain: css`\n      label: exploreMain;\n      // Is needed for some transition animations to work.\n      position: relative;\n      margin-top: 21px;\n    `,\n    button: css`\n      label: button;\n      margin: 1em 4px 0 0;\n    `,\n    queryContainer: css`\n      label: queryContainer;\n      // Need to override normal css class and don't want to count on ordering of the classes in html.\n      height: auto !important;\n      flex: unset !important;\n      display: unset !important;\n      padding: ${theme.spacing(1)};\n    `,\n  };\n};\n\nexport interface ExploreProps extends Themeable2 {\n  exploreId: ExploreId;\n  theme: GrafanaTheme2;\n}\n\nenum ExploreDrawer {\n  RichHistory,\n  QueryInspector,\n}\n\ninterface ExploreState {\n  openDrawer?: ExploreDrawer;\n}\n\nexport type Props = ExploreProps & ConnectedProps<typeof connector>;\n\n/**\n * Explore provides an area for quick query iteration for a given datasource.\n * Once a datasource is selected it populates the query section at the top.\n * When queries are run, their results are being displayed in the main section.\n * The datasource determines what kind of query editor it brings, and what kind\n * of results viewers it supports. The state is managed entirely in Redux.\n *\n * SPLIT VIEW\n *\n * Explore can have two Explore areas side-by-side. This is handled in `Wrapper.tsx`.\n * Since there can be multiple Explores (e.g., left and right) each action needs\n * the `exploreId` as first parameter so that the reducer knows which Explore state\n * is affected.\n *\n * DATASOURCE REQUESTS\n *\n * A click on Run Query creates transactions for all DataQueries for all expanded\n * result viewers. New runs are discarding previous runs. Upon completion a transaction\n * saves the result. The result viewers construct their data from the currently existing\n * transactions.\n *\n * The result viewers determine some of the query options sent to the datasource, e.g.,\n * `format`, to indicate eventual transformations by the datasources' result transformers.\n */\nexport class Explore extends React.PureComponent<Props, ExploreState> {\n  scrollElement: HTMLDivElement | undefined;\n  absoluteTimeUnsubsciber: Unsubscribable | undefined;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      openDrawer: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.absoluteTimeUnsubsciber = appEvents.subscribe(AbsoluteTimeEvent, this.onMakeAbsoluteTime);\n  }\n\n  componentWillUnmount() {\n    this.absoluteTimeUnsubsciber?.unsubscribe();\n  }\n\n  onChangeTime = (rawRange: RawTimeRange) => {\n    const { updateTimeRange, exploreId } = this.props;\n    updateTimeRange({ exploreId, rawRange });\n  };\n\n  // Use this in help pages to set page to a single query\n  onClickExample = (query: DataQuery) => {\n    this.props.setQueries(this.props.exploreId, [query]);\n  };\n\n  onCellFilterAdded = (filter: FilterItem) => {\n    const { value, key, operator } = filter;\n    if (operator === FILTER_FOR_OPERATOR) {\n      this.onClickFilterLabel(key, value);\n    }\n\n    if (operator === FILTER_OUT_OPERATOR) {\n      this.onClickFilterOutLabel(key, value);\n    }\n  };\n\n  onClickFilterLabel = (key: string, value: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER', key, value });\n  };\n\n  onClickFilterOutLabel = (key: string, value: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER_OUT', key, value });\n  };\n\n  onClickAddQueryRowButton = () => {\n    const { exploreId, queryKeys } = this.props;\n    this.props.addQueryRow(exploreId, queryKeys.length);\n  };\n\n  onMakeAbsoluteTime = () => {\n    const { makeAbsoluteTime } = this.props;\n    makeAbsoluteTime();\n  };\n\n  onModifyQueries = (action: any, index?: number) => {\n    const { datasourceInstance } = this.props;\n    if (datasourceInstance?.modifyQuery) {\n      const modifier = (queries: DataQuery, modification: any) =>\n        datasourceInstance.modifyQuery!(queries, modification);\n      this.props.modifyQueries(this.props.exploreId, action, modifier, index);\n    }\n  };\n\n  onResize = (size: { height: number; width: number }) => {\n    this.props.changeSize(this.props.exploreId, size);\n  };\n\n  onStartScanning = () => {\n    // Scanner will trigger a query\n    this.props.scanStart(this.props.exploreId);\n  };\n\n  onStopScanning = () => {\n    this.props.scanStopAction({ exploreId: this.props.exploreId });\n  };\n\n  onUpdateTimeRange = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  onChangeGraphStyle = (graphStyle: ExploreGraphStyle) => {\n    const { exploreId, changeGraphStyle } = this.props;\n    changeGraphStyle(exploreId, graphStyle);\n  };\n\n  toggleShowRichHistory = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.RichHistory ? undefined : ExploreDrawer.RichHistory,\n      };\n    });\n  };\n\n  toggleShowQueryInspector = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.QueryInspector ? undefined : ExploreDrawer.QueryInspector,\n      };\n    });\n  };\n\n  renderEmptyState() {\n    return (\n      <div className=\"explore-container\">\n        <NoDataSourceCallToAction />\n      </div>\n    );\n  }\n\n  renderGraphPanel(width: number) {\n    const { graphResult, absoluteRange, timeZone, splitOpen, queryResponse, loading, theme, graphStyle } = this.props;\n    const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n    const label = <ExploreGraphLabel graphStyle={graphStyle} onChangeGraphStyle={this.onChangeGraphStyle} />;\n    return (\n      <Collapse label={label} loading={loading} isOpen>\n        <ExploreGraph\n          graphStyle={graphStyle}\n          data={graphResult!}\n          height={400}\n          width={width - spacing}\n          absoluteRange={absoluteRange}\n          onChangeTime={this.onUpdateTimeRange}\n          timeZone={timeZone}\n          annotations={queryResponse.annotations}\n          splitOpenFn={splitOpen}\n          loadingState={queryResponse.state}\n        />\n      </Collapse>\n    );\n  }\n\n  renderLogsVolume(width: number) {\n    const { logsVolumeData, exploreId, loadLogsVolumeData, absoluteRange, timeZone, splitOpen } = this.props;\n\n    return (\n      <LogsVolumePanel\n        absoluteRange={absoluteRange}\n        width={width}\n        logsVolumeData={logsVolumeData}\n        onUpdateTimeRange={this.onUpdateTimeRange}\n        timeZone={timeZone}\n        splitOpen={splitOpen}\n        onLoadLogsVolume={() => loadLogsVolumeData(exploreId)}\n      />\n    );\n  }\n\n  renderTablePanel(width: number) {\n    const { exploreId, datasourceInstance, timeZone } = this.props;\n    return (\n      <TableContainer\n        ariaLabel={selectors.pages.Explore.General.table}\n        width={width}\n        exploreId={exploreId}\n        onCellFilterAdded={datasourceInstance?.modifyQuery ? this.onCellFilterAdded : undefined}\n        timeZone={timeZone}\n      />\n    );\n  }\n\n  renderLogsPanel(width: number) {\n    const { exploreId, syncedTimes, theme, queryResponse } = this.props;\n    const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n    return (\n      <LogsContainer\n        exploreId={exploreId}\n        loadingState={queryResponse.state}\n        syncedTimes={syncedTimes}\n        width={width - spacing}\n        onClickFilterLabel={this.onClickFilterLabel}\n        onClickFilterOutLabel={this.onClickFilterOutLabel}\n        onStartScanning={this.onStartScanning}\n        onStopScanning={this.onStopScanning}\n      />\n    );\n  }\n\n  renderNodeGraphPanel() {\n    const { exploreId, showTrace, queryResponse } = this.props;\n    return (\n      <NodeGraphContainer\n        dataFrames={this.memoizedGetNodeGraphDataFrames(queryResponse.series)}\n        exploreId={exploreId}\n        withTraceView={showTrace}\n      />\n    );\n  }\n\n  memoizedGetNodeGraphDataFrames = memoizeOne(getNodeGraphDataFrames);\n\n  renderTraceViewPanel() {\n    const { queryResponse, splitOpen, exploreId } = this.props;\n    const dataFrames = queryResponse.series.filter((series) => series.meta?.preferredVisualisationType === 'trace');\n\n    return (\n      // If there is no data (like 404) we show a separate error so no need to show anything here\n      dataFrames.length && (\n        <TraceViewContainer\n          exploreId={exploreId}\n          dataFrames={dataFrames}\n          splitOpenFn={splitOpen}\n          scrollElement={this.scrollElement}\n        />\n      )\n    );\n  }\n\n  render() {\n    const {\n      datasourceInstance,\n      datasourceMissing,\n      exploreId,\n      graphResult,\n      queryResponse,\n      isLive,\n      theme,\n      showMetrics,\n      showTable,\n      showLogs,\n      showTrace,\n      showNodeGraph,\n      timeZone,\n    } = this.props;\n    const { openDrawer } = this.state;\n    const styles = getStyles(theme);\n    const showPanels = queryResponse && queryResponse.state !== LoadingState.NotStarted;\n    const showRichHistory = openDrawer === ExploreDrawer.RichHistory;\n    const showQueryInspector = openDrawer === ExploreDrawer.QueryInspector;\n\n    return (\n      <CustomScrollbar\n        autoHeightMin={'100%'}\n        scrollRefCallback={(scrollElement) => (this.scrollElement = scrollElement || undefined)}\n      >\n        <ExploreToolbar exploreId={exploreId} onChangeTime={this.onChangeTime} />\n        {datasourceMissing ? this.renderEmptyState() : null}\n        {datasourceInstance && (\n          <div className=\"explore-container\">\n            <div className={cx('panel-container', styles.queryContainer)}>\n              <QueryRows exploreId={exploreId} />\n              <SecondaryActions\n                addQueryRowButtonDisabled={isLive}\n                // We cannot show multiple traces at the same time right now so we do not show add query button.\n                //TODO:unification\n                addQueryRowButtonHidden={false}\n                richHistoryButtonActive={showRichHistory}\n                queryInspectorButtonActive={showQueryInspector}\n                onClickAddQueryRowButton={this.onClickAddQueryRowButton}\n                onClickRichHistoryButton={this.toggleShowRichHistory}\n                onClickQueryInspectorButton={this.toggleShowQueryInspector}\n              />\n              <ResponseErrorContainer exploreId={exploreId} />\n            </div>\n            <AutoSizer onResize={this.onResize} disableHeight>\n              {({ width }) => {\n                if (width === 0) {\n                  return null;\n                }\n\n                return (\n                  <main className={cx(styles.exploreMain)} style={{ width }}>\n                    <ErrorBoundaryAlert>\n                      {showPanels && (\n                        <>\n                          {showMetrics && graphResult && (\n                            <ErrorBoundaryAlert>{this.renderGraphPanel(width)}</ErrorBoundaryAlert>\n                          )}\n                          {<ErrorBoundaryAlert>{this.renderLogsVolume(width)}</ErrorBoundaryAlert>}\n                          {showTable && <ErrorBoundaryAlert>{this.renderTablePanel(width)}</ErrorBoundaryAlert>}\n                          {showLogs && <ErrorBoundaryAlert>{this.renderLogsPanel(width)}</ErrorBoundaryAlert>}\n                          {showNodeGraph && <ErrorBoundaryAlert>{this.renderNodeGraphPanel()}</ErrorBoundaryAlert>}\n                          {showTrace && <ErrorBoundaryAlert>{this.renderTraceViewPanel()}</ErrorBoundaryAlert>}\n                        </>\n                      )}\n                      {showRichHistory && (\n                        <RichHistoryContainer\n                          width={width}\n                          exploreId={exploreId}\n                          onClose={this.toggleShowRichHistory}\n                        />\n                      )}\n                      {showQueryInspector && (\n                        <ExploreQueryInspector\n                          exploreId={exploreId}\n                          width={width}\n                          onClose={this.toggleShowQueryInspector}\n                          timeZone={timeZone}\n                        />\n                      )}\n                    </ErrorBoundaryAlert>\n                  </main>\n                );\n              }}\n            </AutoSizer>\n          </div>\n        )}\n      </CustomScrollbar>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: ExploreProps) {\n  const explore = state.explore;\n  const { syncedTimes } = explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const timeZone = getTimeZone(state.user);\n  const {\n    datasourceInstance,\n    datasourceMissing,\n    queryKeys,\n    isLive,\n    graphResult,\n    logsVolumeData,\n    logsResult,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    absoluteRange,\n    queryResponse,\n    showNodeGraph,\n    loading,\n    graphStyle,\n  } = item;\n\n  return {\n    datasourceInstance,\n    datasourceMissing,\n    queryKeys,\n    isLive,\n    graphResult,\n    logsVolumeData,\n    logsResult: logsResult ?? undefined,\n    absoluteRange,\n    queryResponse,\n    syncedTimes,\n    timeZone,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    showNodeGraph,\n    loading,\n    graphStyle,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeSize,\n  changeGraphStyle,\n  modifyQueries,\n  scanStart,\n  scanStopAction,\n  setQueries,\n  updateTimeRange,\n  makeAbsoluteTime,\n  loadLogsVolumeData,\n  addQueryRow,\n  splitOpen,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(connector, withTheme2)(Explore) as React.ComponentType<{ exploreId: ExploreId }>;\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport memoizeOne from 'memoize-one';\nimport { DataQuery, ExploreUrlState, EventBusExtended, EventBusSrv } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport store from 'app/core/store';\nimport { lastSavedUrl, cleanupPaneAction } from './state/main';\nimport { initializeExplore, refreshExplore } from './state/explorePane';\nimport { ExploreId } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport {\n  DEFAULT_RANGE,\n  ensureQueries,\n  getTimeRange,\n  getTimeRangeFromUrl,\n  lastUsedDatasourceKeyForOrgId,\n  parseUrlState,\n} from 'app/core/utils/explore';\nimport { getFiscalYearStartMonth, getTimeZone } from '../profile/state/selectors';\nimport Explore from './Explore';\n\ninterface OwnProps {\n  exploreId: ExploreId;\n  urlQuery: string;\n  split: boolean;\n}\n\ninterface Props extends OwnProps, ConnectedProps<typeof connector> {}\n\n/**\n * This component is responsible for handling initialization of an Explore pane and triggering synchronization\n * of state based on URL changes and preventing any infinite loops.\n */\nclass ExplorePaneContainerUnconnected extends React.PureComponent<Props> {\n  el: any;\n  exploreEvents: EventBusExtended;\n\n  constructor(props: Props) {\n    super(props);\n    this.exploreEvents = new EventBusSrv();\n    this.state = {\n      openDrawer: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { initialized, exploreId, initialDatasource, initialQueries, initialRange, originPanelId, panelsState } =\n      this.props;\n    const width = this.el?.offsetWidth ?? 0;\n\n    // initialize the whole explore first time we mount and if browser history contains a change in datasource\n    if (!initialized) {\n      this.props.initializeExplore(\n        exploreId,\n        initialDatasource,\n        initialQueries,\n        initialRange,\n        width,\n        this.exploreEvents,\n        panelsState,\n        originPanelId\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.exploreEvents.removeAllListeners();\n    this.props.cleanupPaneAction({ exploreId: this.props.exploreId });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.refreshExplore(prevProps.urlQuery);\n  }\n\n  refreshExplore = (prevUrlQuery: string) => {\n    const { exploreId, urlQuery } = this.props;\n\n    // Update state from url only if it changed and only if the change wasn't initialised by redux to prevent any loops\n    if (urlQuery !== prevUrlQuery && urlQuery !== lastSavedUrl[exploreId]) {\n      this.props.refreshExplore(exploreId, urlQuery);\n    }\n  };\n\n  getRef = (el: any) => {\n    this.el = el;\n  };\n\n  render() {\n    const exploreClass = this.props.split ? 'explore explore-split' : 'explore';\n    return (\n      <div className={exploreClass} ref={this.getRef} data-testid={selectors.pages.Explore.General.container}>\n        {this.props.initialized && <Explore exploreId={this.props.exploreId} />}\n      </div>\n    );\n  }\n}\n\nconst ensureQueriesMemoized = memoizeOne(ensureQueries);\nconst getTimeRangeFromUrlMemoized = memoizeOne(getTimeRangeFromUrl);\n\nfunction mapStateToProps(state: StoreState, props: OwnProps) {\n  const urlState = parseUrlState(props.urlQuery);\n  const timeZone = getTimeZone(state.user);\n  const fiscalYearStartMonth = getFiscalYearStartMonth(state.user);\n\n  const { datasource, queries, range: urlRange, originPanelId, panelsState } = (urlState || {}) as ExploreUrlState;\n  const initialDatasource = datasource || store.get(lastUsedDatasourceKeyForOrgId(state.user.orgId));\n  const initialQueries: DataQuery[] = ensureQueriesMemoized(queries);\n  const initialRange = urlRange\n    ? getTimeRangeFromUrlMemoized(urlRange, timeZone, fiscalYearStartMonth)\n    : getTimeRange(timeZone, DEFAULT_RANGE, fiscalYearStartMonth);\n\n  return {\n    initialized: state.explore[props.exploreId]?.initialized,\n    initialDatasource,\n    initialQueries,\n    initialRange,\n    originPanelId,\n    panelsState,\n  };\n}\n\nconst mapDispatchToProps = {\n  initializeExplore,\n  refreshExplore,\n  cleanupPaneAction,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport const ExplorePaneContainer = connector(ExplorePaneContainerUnconnected);\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { ExploreId, ExploreQueryParams } from 'app/types/explore';\nimport { ErrorBoundaryAlert } from '@grafana/ui';\nimport { lastSavedUrl, resetExploreAction, richHistoryUpdatedAction } from './state/main';\nimport { getRichHistory } from '../../core/utils/richHistory';\nimport { ExplorePaneContainer } from './ExplorePaneContainer';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { Branding } from '../../core/components/Branding/Branding';\n\nimport { getNavModel } from '../../core/selectors/navModel';\nimport { StoreState } from 'app/types';\nimport { locationService } from '@grafana/runtime';\n\ninterface RouteProps extends GrafanaRouteComponentProps<{}, ExploreQueryParams> {}\ninterface OwnProps {}\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    navModel: getNavModel(state.navIndex, 'explore'),\n    exploreState: state.explore,\n  };\n};\n\nconst mapDispatchToProps = {\n  resetExploreAction,\n  richHistoryUpdatedAction,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = OwnProps & RouteProps & ConnectedProps<typeof connector>;\nclass WrapperUnconnected extends PureComponent<Props> {\n  componentWillUnmount() {\n    this.props.resetExploreAction({});\n  }\n\n  componentDidMount() {\n    lastSavedUrl.left = undefined;\n    lastSavedUrl.right = undefined;\n\n    // timeSrv (which is used internally) on init reads `from` and `to` param from the URL and updates itself\n    // using those value regardless of what is passed to the init method.\n    // The updated value is then used by Explore to get the range for each pane.\n    // This means that if `from` and `to` parameters are present in the URL,\n    // it would be impossible to change the time range in Explore.\n    // We are only doing this on mount for 2 reasons:\n    // 1: Doing it on update means we'll enter a render loop.\n    // 2: when parsing time in Explore (before feeding it to timeSrv) we make sure `from` is before `to` inside\n    //    each pane state in order to not trigger un URL update from timeSrv.\n    const searchParams = locationService.getSearchObject();\n    if (searchParams.from || searchParams.to) {\n      locationService.partial({ from: undefined, to: undefined }, true);\n    }\n\n    const richHistory = getRichHistory();\n    this.props.richHistoryUpdatedAction({ richHistory });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { left, right } = this.props.queryParams;\n    const hasSplit = Boolean(left) && Boolean(right);\n    const datasourceTitle = hasSplit\n      ? `${this.props.exploreState.left.datasourceInstance?.name} | ${this.props.exploreState.right?.datasourceInstance?.name}`\n      : `${this.props.exploreState.left.datasourceInstance?.name}`;\n    const documentTitle = `${this.props.navModel.main.text} - ${datasourceTitle} - ${Branding.AppTitle}`;\n    document.title = documentTitle;\n  }\n\n  render() {\n    const { left, right } = this.props.queryParams;\n    const hasSplit = Boolean(left) && Boolean(right);\n\n    return (\n      <div className=\"page-scrollbar-wrapper\">\n        <div className=\"explore-wrapper\">\n          <ErrorBoundaryAlert style=\"page\">\n            <ExplorePaneContainer split={hasSplit} exploreId={ExploreId.left} urlQuery={left} />\n          </ErrorBoundaryAlert>\n          {hasSplit && (\n            <ErrorBoundaryAlert style=\"page\">\n              <ExplorePaneContainer split={hasSplit} exploreId={ExploreId.right} urlQuery={right} />\n            </ErrorBoundaryAlert>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Wrapper = connector(WrapperUnconnected);\n\nexport default Wrapper;\n","import { useEffect, useRef } from 'react';\nexport default function usePrevious(state) {\n    var ref = useRef();\n    useEffect(function () {\n        ref.current = state;\n    });\n    return ref.current;\n}\n","//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n"],"names":["displayOverrideRef","isHideSeriesOverride","isSystemOverrideWithRef","seriesVisibilityConfigFactory","label","mode","fieldConfig","data","overrides","displayName","currentIndex","findIndex","SeriesVisibilityChangeMode","override","createOverride","getDisplayNames","overridesCopy","Array","from","current","splice","existing","getExistingDisplayNames","length","createExtendedOverride","allFieldsAreExcluded","names","ByNamesMatcherMode","property","id","value","viz","legend","tooltip","__systemRef","matcher","FieldMatcherID","options","prefix","undefined","readOnly","properties","find","p","index","name","push","rule","isArray","excludeName","unique","Set","frame","field","fields","type","FieldType","getFieldDisplayName","add","callback","delay","savedCallback","useRef","useEffect","interval_1","setInterval","clearInterval","Time","timeInMs","className","humanize","formatTime","inSeconds","toFixed","duration","toDuration","hours","minutes","seconds","ElapsedTime","resetKey","elapsed","setElapsed","useState","useInterval","LiveLogs","PureComponent","constructor","props","super","React","event","isPaused","onPause","this","scrollTop","clientHeight","scrollHeight","currentTarget","logRowsToRender","rowsToRender","state","slice","logRows","nextProps","render","theme","timeZone","onResume","styles","logsRowsLive","css","typography","fontFamilyMonospace","bodySmall","fontSize","logsRowFade","colors","text","tinycolor","info","transparent","setAlpha","toString","logsRowsIndicator","h6","spacing","button","fullWidth","getStyles","logsRow","logsRowLocalTime","logsRowMessage","getLogRowStyles","onScroll","cx","ref","scrollContainerRef","map","row","dateTimeFormat","timeEpochMs","hasAnsi","LogMessageAnsi","raw","entry","uid","element","liveEndDiv","scrollTo","Button","variant","onClick","Icon","stopLive","size","LiveLogsWithTheme","withTheme2","metaContainer","secondary","metaItem","error","metaLabel","fontWeightMedium","metaValue","MetaInfoItem","memo","style","useStyles2","MetaInfoText","metaItems","item","LogsMetaRow","meta","dedupStrategy","dedupCount","showDetectedFields","clearDetectedFields","hasUnescapedContent","forceEscape","onEscapeNewlines","logsMetaItem","LogsDedupStrategy","kind","LogsMetaKind","some","r","MAX_CHARACTERS","renderMetaItem","Tooltip","content","placement","LogLabels","labels","LogsNavigationPages","pages","currentPageIndex","oldestLogsFirst","loading","changeTime","time","format","systemDateFormats","createPageContent","page","Spinner","logsRange","to","useTheme2","CustomScrollbar","autoHide","pagesWrapper","pagesContainer","queryRange","line","selectedBg","selectedText","background","primary","main","v1","sm","LogsNavigation","absoluteRange","logsSortOrder","onChangeTime","scrollToTopLogs","visibleRange","queries","clearCache","addResultsToCache","setPages","setCurrentPageIndex","expectedQueriesRef","expectedRangeRef","rangeSpanRef","LogsSortOrder","onFirstPage","onLastPage","newPage","newPages","isEqual","filter","sort","a","b","sortPages","olderLogsButton","navButton","indexChange","disabled","navButtonContent","newerLogsButton","navContainer","scrollToTopButton","title","ExploreGraph","height","width","loadingState","annotations","onHiddenSeriesChanged","splitOpenFn","graphStyle","tooltipDisplayMode","TooltipDisplayMode","showAllTimeSeries","setShowAllTimeSeries","baseStructureRev","setBaseStructureRev","previousData","usePrevious","structureChangesRef","compareArrayValues","compareDataFrameStructures","structureRev","setFieldConfig","defaults","color","FieldColorModeId","custom","drawStyle","GraphDrawStyle","fillOpacity","pointSize","timeRange","dateTime","dataWithConfig","useMemo","registry","createFieldConfigRegistry","getGraphFieldConfig","defaultGraphConfig","styledFieldConfig","config","produce","draft","stacking","group","StackingMode","Error","applyGraphStyle","applyFieldOverrides","replaceVariables","fieldConfigRegistry","hiddenFrames","forEach","hideFrom","every","identity","getFrameDisplayName","seriesToShow","panelContext","eventBus","appEvents","onSplitOpen","onToggleSeriesVisibility","PanelContextProvider","timeSeriesDisclaimer","disclaimerIcon","PanelRenderer","series","pluginId","onChangeTimeRange","SortOrder","displayMode","LegendDisplayMode","calcs","warning","link","SETTINGS_KEYS","UnthemedLogs","createRef","showLabels","store","showTime","wrapLogMessage","prettifyLogMessage","hiddenLogLevels","isFlipping","setState","flipOrderTimer","window","setTimeout","prevState","cancelFlippingTimer","target","checked","hiddenRawLevels","level","LogLevel","preventDefault","onStartScanning","onStopScanning","key","indexOf","concat","k","memoizeOne","dedupedRows","dedupLogRows","reduce","sum","duplicates","filterLogLevels","topLogsRef","scrollIntoView","componentWillUnmount","clearTimeout","logsMeta","logsSeries","onClickFilterLabel","onClickFilterOutLabel","scanning","scanRange","showContextToggle","getFieldLinks","logsQueries","hasData","checkUnescapedContent","filteredLogs","filterRows","dedupRows","scanText","rangeUtil","infoText","onToggleLogLevel","logOptions","InlineFieldRow","InlineField","InlineSwitch","onChange","onChangeLabels","onChangewrapLogMessage","onChangePrettifyLogMessage","RadioButtonGroup","Object","values","dedupType","capitalize","description","LogsDedupDescription","onChangeDedup","radioButtons","headerButton","onChangeLogsSortOrder","logsSection","LogRows","deduplicatedRows","getRowContext","enableLogDetails","onClickShowDetectedField","showDetectedField","onClickHideDetectedField","hideDetectedField","noData","fill","onClickScan","onClickStopScan","Logs","shape","borderRadius","border","medium","logsEnter","logsEnterActive","logsExit","logsExitActive","LogsCrossFadeTransition","visible","children","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","transitionDuration","classNames","enter","enterActive","exit","exitActive","LiveTailControls","controls","exploreId","dispatch","useDispatch","pause","useCallback","setPausedStateAction","resume","stop","changeRefreshInterval","RefreshPicker","runQueries","start","useLiveTailControls","LogsContainer","updateTimeRange","async","datasourceInstance","hasLogsContextSupport","getLogRowContext","rowIndex","splitOpen","range","getFieldLinksForExplore","isLive","styleOverridesForStickyNavigation","Collapse","isOpen","mapDispatchToProps","connect","explore","logsResult","logsVolumeDataProvider","logsVolumeData","getTimeZone","user","rows","isSplit","Boolean","ExploreId","QueryRows","getQueries","getDatasourceInstanceSettings","getQueryResponse","getHistory","getEventBridge","exploreItemSelector","getExploreItemSelector","createSelector","s","queryResponse","history","eventBridge","getDatasourceSrv","getInstanceSettings","makeSelectors","useSelector","dsSettings","onRunQueries","newQueries","changeQueriesAction","onAddQuery","query","refId","getNextRefIdChar","QueryEditorRows","onQueriesChange","app","CoreApp","connector","loadingInState","tableResult","TableContainer","getTableHeight","Math","max","min","onCellFilterAdded","ariaLabel","tableWidth","PANEL_BORDER","dataFrame","v","getLinks","valueRowIndex","Table","stylesFactory","container","lg","input","switch","md","retentionPeriodOptions","RichHistorySettings","retentionPeriod","starredTabAsFirstTab","activeDatasourceOnly","onChangeRetentionPeriod","toggleStarredTabAsFirstTab","toggleactiveDatasourceOnly","deleteRichHistory","useTheme","selectedOption","Field","MAX_HISTORY_ITEMS","Select","menuShouldPortal","Switch","weight","bold","ShowConfirmModalEvent","yesText","icon","onConfirm","notifyApp","createSuccessNotification","changeDatasource","updateRichHistory","setQueries","isRemoved","rigtColumnWidth","rigtColumnContentWidth","cardColor","bg2","queryCard","border1","radius","palette","orange","cardRow","xs","base","datasourceContainer","semibold","queryActionButtons","queryContainer","queryRow","updateCommentContainer","comment","regular","commentButtonRow","textArea","runButton","dsImg","activeUpdateComment","setActiveUpdateComment","setComment","queryDsInstance","setQueryDsInstance","ds","getDataSourceSrv","get","datasourceName","getQueryDsInstance","onUpdateComment","ts","onCancelUpdateComment","updateComment","TextArea","placeholder","e","IconButton","queriesToCopy","q","createQueryText","join","copyStringToClipboard","createUrlFromRichHistory","createAndCopyShortLink","starred","iconType","onKeyDown","keyEvent","shiftKey","ctrlKey","src","i","queryText","queriesToRun","importQueries","bgColor","isLight","gray5","dark4","sliderHeight","containerContent","containerSlider","slider","selectors","filterInput","multiselect","xxs","sessionName","heading","h4","footer","light","RichHistoryQueriesTab","datasourceFilters","onSelectDatasourceFilters","onChangeSortOrder","sortOrder","timeFilter","setTimeFilter","setData","searchInput","setSearchInput","debouncedSearchInput","setDebouncedSearchInput","useDebounce","datasourcesRetrievedFromQueryHistory","uniqBy","d","listOfDatasources","createDatasourcesList","filterAndSortQueries","filteredQueries","mappedQueriesToHeadings","mapQueriesToHeadings","mapNumbertoTimeInSlider","RangeSlider","tooltipAlwaysVisible","orientation","formatTooltipResult","reverse","onAfterChange","MultiSelect","FilterInput","sortOrderOptions","order","keys","idx","imgUrl","RichHistoryStarredTab","starredQueries","Tabs","UnThemedRichHistory","RICH_HISTORY_SETTING_KEYS","console","updateFilters","activeDatasourceInstance","componentDidMount","componentDidUpdate","prevProps","richHistory","onClose","firstTab","tabs","RichHistory","Starred","Settings","toggleActiveDatasourceOnly","TabbedContainer","defaultTab","closeIconTooltip","withTheme","extendStatics","__extends","setPrototypeOf","__proto__","prototype","hasOwnProperty","call","TypeError","String","__","create","__assign","assign","t","n","arguments","apply","top","left","cursor","right","bottom","topRight","position","bottomRight","bottomLeft","topLeft","Resizer","_super","_this","onMouseDown","onResizeStart","direction","onTouchStart","userSelect","replaceStyles","DEFAULT_SIZE","clamp","snap","round","hasDirection","dir","RegExp","test","isTouchEvent","touches","findClosestSnap","snapArray","snapGap","closestGapIndex","prev","curr","abs","gap","endsWith","str","searchStr","substr","getStringSize","getPixelSize","parentSize","innerWidth","innerHeight","Number","replace","calculateNewMax","maxWidth","maxHeight","minWidth","minHeight","definedProps","baseClassName","Resizable","ratio","resizable","parentLeft","parentTop","resizableLeft","resizableRight","resizableTop","resizableBottom","targetLeft","targetTop","appendBase","parent","parentNode","document","createElement","transform","flex","classList","appendChild","removeBase","removeChild","c","isResizing","propsSize","original","x","y","backgroundStyle","backgroundColor","opacity","zIndex","flexBasis","bind","onMouseMove","onMouseUp","defineProperty","enumerable","configurable","ownerDocument","defaultView","defaultSize","orgWidth","offsetWidth","orgHeight","offsetHeight","orgPosition","getSize","getParentSize","wrapChanged","wrap","flexWrap","bindEvents","addEventListener","capture","passive","unbindEvents","removeEventListener","computedStyle","getComputedStyle","createSizeForCssProperty","newSize","calculateNewMaxFromBoundary","boundWidth","boundHeight","boundsByDirection","widthByDirection","heightByDirection","bounds","parent_1","isFinite","calculateNewSizeFromDirection","clientX","clientY","scale","resizeRatio","_a","_b","lockAspectRatio","lockAspectRatioExtraHeight","lockAspectRatioExtraWidth","newWidth","newHeight","extraHeight","extraWidth","calculateNewSizeFromAspectRatio","computedMinWidth","computedMaxWidth","computedMinHeight","computedMaxHeight","extraMinWidth","extraMaxWidth","extraMinHeight","extraMaxHeight","lockedMinWidth","lockedMaxWidth","lockedMinHeight","lockedMaxHeight","setBoundingClientRect","parent_2","parentRect","getBoundingClientRect","targetRect","top_1","nativeEvent","isMouseEvent","parent_3","flexDirection","flexDir","startsWith","TouchEvent","stopPropagation","_c","boundaryMax","grid","newGridWidth","newGridHeight","delta","newState","onResize","onResizeStop","updateSize","renderResizer","enable","handleStyles","handleClasses","handleWrapperStyle","handleWrapperClass","handleComponent","resizers","extendsProps","acc","sizeStyle","boxSizing","flexShrink","Wrapper","as","defaultProps","drawerSlide","keyframes","weak","shadows","z3","sidemenu","drawerActive","rzHandle","shade","ExploreDrawer","drawerWidth","setHeight","_e","_dir","dataFrames","statsTab","InspectStatsTab","request","timezone","jsonTab","InspectJSONTab","dataTab","InspectDataTab","isLoading","withTransforms","withFieldConfig","QueryInspector","onRefreshQuery","errorTab","InspectErrorTab","TimeSyncButton","isSynced","ToolbarButton","ExploreTimeControls","Component","getShiftedTimeRange","dateTimeForTimeZone","onMoveTimePicker","adjustedFrom","dateMath","adjustedTo","getZoomedTimeRange","fiscalYearStartMonth","splitted","syncedTimes","onChangeTimeSync","hideText","onChangeTimeZone","onChangeFiscalYearStartMonth","timeSyncButton","timePickerCommonProps","onMoveBackward","onMoveBack","onMoveForward","onZoom","TimePickerWithHistory","onChangeTimePicker","LiveTailButton","buttonVariant","onClickMain","ButtonGroup","iconOnly","stopButtonEnter","stopButtonEnterActive","stopButtonExit","stopButtonExitActive","RunButton","isSmall","onRun","onChangeRefreshInterval","refreshInterval","showDropdown","intervals","getTimeSrv","getValidIntervals","defaultIntervals","onIntervalChanged","onRefresh","noIntervalPicker","setDashboardQueriesToUpdateOnLoad","originPanelId","roles","canEdit","contextSrv","withOriginId","isInteger","cleanQueries","context","returnToPanel","withChanges","dashboardSrv","getDashboardSrv","dash","getCurrent","titleSlug","kbn","panelId","panelInEdit","editPanel","panelInView","viewPanel","locationService","urlUtil","ButtonSelect","UnConnectedExploreToolbar","cancelQueries","syncTimes","datasourceMissing","closeSplit","split","hasLiveOption","containerWidth","showSmallDataSourcePicker","showSmallTimePicker","PageToolbar","pageIcon","leftItems","DashNavButton","location","href","DataSourcePicker","onChangeDatasource","hideTextValue","ToolbarButtonRow","ReturnToDashboardButton","onRunQuery","SetInterval","func","interval","splitClose","updateTimeZoneForSession","updateFiscalYearStartMonthForSession","ExploreToolbar","exploreItem","streaming","getFiscalYearStartMonth","NoDataSourceCallToAction","canCreateDataSource","AccessControlAction","rel","ctaElement","LinkButton","cardClassName","breakpoints","CallToActionCard","callToActionElement","message","SecondaryActions","containerMargin","HorizontalGroup","addQueryRowButtonHidden","onClickAddQueryRowButton","addQueryRowButtonDisabled","richHistoryButtonActive","onClickRichHistoryButton","queryInspectorButtonActive","onClickQueryInspectorButton","warningText","NodeGraphContainer","withTraceView","useLinks","frames","nodes","useCategorizeFrames","open","toggleOpen","useToggle","countWarning","Badge","collapsible","onToggle","NodeGraph","FadeIn","defaultStyle","transition","transitionStyles","exited","display","entering","entered","exiting","Transition","onExited","ErrorContainer","queryError","showError","alertWithTopMargin","Alert","severity","ResponseErrorContainer","LoadingState","createSpanLinkFactory","traceToLogsOptions","f","links","span","dataFrameRowIndex","getTimeRangeFromSpan","datasourceUid","dataSourceSettings","dataLink","url","internal","expr","getLokiQueryFromSpan","mapInternalLinkToExplore","internalLink","scopedVars","startMs","spanStartTimeShift","endMs","spanEndTimeShift","onClickFn","getTemplateSrv","legacyCreateSpanLinkFactory","defaultKeys","tags","filterByTraceID","filterBySpanID","keysToCheck","process","tag","includes","traceID","spanID","timeShift","adjustedStartTime","floor","startTime","spanEndMs","adjustedEndTime","UIElements","Popover","overlayClassName","popoverRef","PopoverController","hideAfter","showPopper","hidePopper","popperProps","referenceElement","wrapperClassName","onMouseLeave","onMouseEnter","Dropdown","Menu","MenuItem","Divider","Input","InputGroup","isDark","shouldDisableCollapse","allSpans","hiddenSpansIds","hasChildren","makeDetailSubsectionToggle","subSection","detailStates","setDetailStates","old","detailState","toggleTags","toggleProcess","toggleWarnings","toggleReferences","toggleStackTraces","toggleLogs","newDetailStates","Map","set","noop","TraceView","expandOne","collapseOne","childrenToggle","collapseAll","childrenHiddenIDs","expandAll","setChildrenHiddenIDs","spans","prevExpandedDepth","expandNextHiddenSpan","newChildrenHiddenIDs","res","depth","has","delete","nearestCollapsedAncestor","curSpan","useChildrenState","toggleDetail","detailLogItemToggle","detailLogsToggle","detailProcessToggle","detailReferencesToggle","detailTagsToggle","detailWarningsToggle","detailStackTracesToggle","DetailState","log","toggleLogItem","useDetailState","removeHoverIndentGuideId","addHoverIndentGuideId","hoverIndentGuideIds","setHoverIndentGuideIds","newHoverIndentGuideIds","useHoverIndentGuide","viewRange","updateViewRangeTime","updateNextViewRangeTime","setViewRange","update","prevRange","end","useViewRange","spanNameColumnWidth","setSpanNameColumnWidth","slim","setSlim","traceProp","view","DataFrameView","processes","serviceName","serviceTags","toArray","processID","flags","references","parentSpanID","refType","logs","l","timestamp","transformTraceDataFrame","transformTraceData","transformDataFrames","search","setSearch","spanFindMatches","filterSpans","useSearch","datasource","focusedSpanId","createFocusSpanLink","panelState","panelsState","trace","spanId","setFocusedSpanId","changePanelState","traceId","useFocusSpanLink","traceTimeline","shouldScrollToFirstUiFindMatch","jsonData","tracesToLogs","createSpanLink","onSlimViewClicked","canCollapse","clearSearch","focusUiFindMatches","hideMap","hideSummary","nextResult","onTraceGraphViewClicked","prevResult","resultCount","slimView","textFilter","traceGraphView","searchValue","onSearchValueChange","hideSearchButtons","registerAccessors","scrollToFirstVisibleSpan","findMatchesIDs","focusSpan","createLinkToExternalSpan","clearShouldScrollToFirstUiFindMatch","detailToggle","setTrace","linksGetter","uiFind","scrollElement","TraceViewContainer","ErrorAlert","setIsOpen","showButton","LogsVolumePanel","onUpdateTimeRange","onLoadLogsVolume","parseInt","LogsVolumePanelContent","zoomRatio","selectedTimeRange","dataRange","logsLevelZoomRatio","zoomLevelInfo","contentContainer","zoomInfoContainer","ALL_GRAPH_STYLE_OPTIONS","EXPLORE_GRAPH_STYLES","toUpperCase","justifyContent","ExploreGraphLabel","onChangeGraphStyle","Explore","rawRange","operator","FILTER_FOR_OPERATOR","FILTER_OUT_OPERATOR","onModifyQueries","queryKeys","addQueryRow","makeAbsoluteTime","action","modifyQuery","modifier","modification","modifyQueries","changeSize","scanStart","scanStopAction","changeGraphStyle","openDrawer","getNodeGraphDataFrames","absoluteTimeUnsubsciber","AbsoluteTimeEvent","onMakeAbsoluteTime","unsubscribe","renderEmptyState","renderGraphPanel","graphResult","renderLogsVolume","loadLogsVolumeData","renderTablePanel","renderLogsPanel","renderNodeGraphPanel","showTrace","memoizedGetNodeGraphDataFrames","renderTraceViewPanel","preferredVisualisationType","showMetrics","showTable","showLogs","showNodeGraph","exploreMain","showPanels","showRichHistory","showQueryInspector","autoHeightMin","scrollRefCallback","toggleShowRichHistory","toggleShowQueryInspector","disableHeight","ErrorBoundaryAlert","compose","ExplorePaneContainerUnconnected","prevUrlQuery","urlQuery","lastSavedUrl","refreshExplore","el","exploreEvents","EventBusSrv","initialized","initialDatasource","initialQueries","initialRange","initializeExplore","removeAllListeners","cleanupPaneAction","exploreClass","getRef","ensureQueriesMemoized","ensureQueries","getTimeRangeFromUrlMemoized","getTimeRangeFromUrl","urlState","parseUrlState","urlRange","lastUsedDatasourceKeyForOrgId","orgId","getTimeRange","DEFAULT_RANGE","ExplorePaneContainer","resetExploreAction","richHistoryUpdatedAction","navModel","getNavModel","navIndex","exploreState","WrapperUnconnected","searchParams","getRichHistory","queryParams","datasourceTitle","documentTitle","Branding","hasSplit","monadic","fn","cache","serializer","arg","cacheKey","computedValue","variadic","args","assemble","strategy","serialize","strategyDefault","serializerDefault","JSON","stringify","ObjectWithoutPrototypeCache","cacheDefault","module","exports","strategies"],"sourceRoot":""}