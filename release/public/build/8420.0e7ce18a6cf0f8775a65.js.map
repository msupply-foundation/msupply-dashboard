{"version":3,"file":"8420.0e7ce18a6cf0f8775a65.js","mappings":"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","sources":["webpack://grafana/./public/app/core/components/NodeGraphSettings.tsx","webpack://grafana/./public/app/core/components/TraceToLogsSettings.tsx","webpack://grafana/./public/app/core/utils/tracing.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/graphTransform.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/util.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/components/AdvancedOptions.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/components/SearchForm.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/datasource.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/components/ConfigEditor.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/module.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/components/QueryEditor.tsx","webpack://grafana/./node_modules/logfmt/lib/body_parser.js","webpack://grafana/./node_modules/logfmt/lib/body_parser_stream.js","webpack://grafana/./node_modules/logfmt/lib/logfmt_parser.js","webpack://grafana/./node_modules/logfmt/lib/logger.js","webpack://grafana/./node_modules/logfmt/lib/request_logger.js","webpack://grafana/./node_modules/logfmt/lib/streaming.js","webpack://grafana/./node_modules/logfmt/lib/stringify.js","webpack://grafana/./node_modules/logfmt/logfmt.js","webpack://grafana/./node_modules/safe-buffer/index.js","webpack://grafana/./node_modules/split/index.js","webpack://grafana/./node_modules/string_decoder/lib/string_decoder.js","webpack://grafana/./node_modules/through/index.js"],"sourcesContent":["import React from 'react';\nimport { css } from '@emotion/css';\nimport {\n  DataSourceJsonData,\n  DataSourcePluginOptionsEditorProps,\n  GrafanaTheme,\n  updateDatasourcePluginJsonDataOption,\n} from '@grafana/data';\nimport { InlineField, InlineFieldRow, InlineSwitch, useStyles } from '@grafana/ui';\n\nexport interface NodeGraphOptions {\n  enabled?: boolean;\n}\n\nexport interface NodeGraphData extends DataSourceJsonData {\n  nodeGraph?: NodeGraphOptions;\n}\n\ninterface Props extends DataSourcePluginOptionsEditorProps<NodeGraphData> {}\n\nexport function NodeGraphSettings({ options, onOptionsChange }: Props) {\n  const styles = useStyles(getStyles);\n\n  return (\n    <div className={styles.container}>\n      <h3 className=\"page-heading\">Node Graph</h3>\n      <InlineFieldRow className={styles.row}>\n        <InlineField\n          tooltip=\"Enables the Node Graph visualization in the trace viewer.\"\n          label=\"Enable Node Graph\"\n          labelWidth={26}\n        >\n          <InlineSwitch\n            value={options.jsonData.nodeGraph?.enabled}\n            onChange={(event: React.SyntheticEvent<HTMLInputElement>) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'nodeGraph', {\n                ...options.jsonData.nodeGraph,\n                enabled: event.currentTarget.checked,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  container: css`\n    label: container;\n    width: 100%;\n  `,\n  row: css`\n    label: row;\n    align-items: baseline;\n  `,\n});\n","import { css } from '@emotion/css';\nimport {\n  DataSourceJsonData,\n  DataSourcePluginOptionsEditorProps,\n  GrafanaTheme,\n  updateDatasourcePluginJsonDataOption,\n} from '@grafana/data';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport { InlineField, InlineFieldRow, Input, TagsInput, useStyles, InlineSwitch } from '@grafana/ui';\nimport React from 'react';\n\nexport interface TraceToLogsOptions {\n  datasourceUid?: string;\n  tags?: string[];\n  spanStartTimeShift?: string;\n  spanEndTimeShift?: string;\n  filterByTraceID?: boolean;\n  filterBySpanID?: boolean;\n  lokiSearch?: boolean;\n}\n\nexport interface TraceToLogsData extends DataSourceJsonData {\n  tracesToLogs?: TraceToLogsOptions;\n}\n\ninterface Props extends DataSourcePluginOptionsEditorProps<TraceToLogsData> {}\n\nexport function TraceToLogsSettings({ options, onOptionsChange }: Props) {\n  const styles = useStyles(getStyles);\n\n  return (\n    <div className={css({ width: '100%' })}>\n      <h3 className=\"page-heading\">Trace to logs</h3>\n\n      <div className={styles.infoText}>\n        Trace to logs let&apos;s you navigate from a trace span to the selected data source&apos;s log.\n      </div>\n\n      <InlineFieldRow>\n        <InlineField tooltip=\"The data source the trace is going to navigate to\" label=\"Data source\" labelWidth={26}>\n          <DataSourcePicker\n            pluginId=\"loki\"\n            current={options.jsonData.tracesToLogs?.datasourceUid}\n            noDefault={true}\n            width={40}\n            onChange={(ds) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                datasourceUid: ds.uid,\n                tags: options.jsonData.tracesToLogs?.tags,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField\n          tooltip=\"Tags that will be used in the Loki query. Default tags: 'cluster', 'hostname', 'namespace', 'pod'\"\n          label=\"Tags\"\n          labelWidth={26}\n        >\n          <TagsInput\n            tags={options.jsonData.tracesToLogs?.tags}\n            width={40}\n            onChange={(tags) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                datasourceUid: options.jsonData.tracesToLogs?.datasourceUid,\n                tags: tags,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField\n          label=\"Span start time shift\"\n          labelWidth={26}\n          grow\n          tooltip=\"Shifts the start time of the span. Default 0 (Time units can be used here, for example: 5s, 1m, 3h)\"\n        >\n          <Input\n            type=\"text\"\n            placeholder=\"1h\"\n            width={40}\n            onChange={(v) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                ...options.jsonData.tracesToLogs,\n                spanStartTimeShift: v.currentTarget.value,\n              })\n            }\n            value={options.jsonData.tracesToLogs?.spanStartTimeShift || ''}\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField\n          label=\"Span end time shift\"\n          labelWidth={26}\n          grow\n          tooltip=\"Shifts the end time of the span. Default 0 Time units can be used here, for example: 5s, 1m, 3h\"\n        >\n          <Input\n            type=\"text\"\n            placeholder=\"1h\"\n            width={40}\n            onChange={(v) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                ...options.jsonData.tracesToLogs,\n                spanEndTimeShift: v.currentTarget.value,\n              })\n            }\n            value={options.jsonData.tracesToLogs?.spanEndTimeShift || ''}\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField\n          label=\"Filter by Trace ID\"\n          labelWidth={26}\n          grow\n          tooltip=\"Filters logs by Trace ID. Appends '|=<trace id>' to the query.\"\n        >\n          <InlineSwitch\n            value={options.jsonData.tracesToLogs?.filterByTraceID}\n            onChange={(event: React.SyntheticEvent<HTMLInputElement>) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                ...options.jsonData.tracesToLogs,\n                filterByTraceID: event.currentTarget.checked,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField\n          label=\"Filter by Span ID\"\n          labelWidth={26}\n          grow\n          tooltip=\"Filters logs by Span ID. Appends '|=<span id>' to the query.\"\n        >\n          <InlineSwitch\n            value={options.jsonData.tracesToLogs?.filterBySpanID}\n            onChange={(event: React.SyntheticEvent<HTMLInputElement>) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                ...options.jsonData.tracesToLogs,\n                filterBySpanID: event.currentTarget.checked,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Loki Search\" labelWidth={26} grow tooltip=\"Use this logs data source to search for traces.\">\n          <InlineSwitch\n            defaultChecked={true}\n            value={options.jsonData.tracesToLogs?.lokiSearch}\n            onChange={(event: React.SyntheticEvent<HTMLInputElement>) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                ...options.jsonData.tracesToLogs,\n                lokiSearch: event.currentTarget.checked,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  infoText: css`\n    padding-bottom: ${theme.spacing.md};\n    color: ${theme.colors.textSemiWeak};\n  `,\n});\n","/**\n * Get non overlapping duration of the ranges as they can overlap or have gaps.\n */\nimport { FieldType, MutableDataFrame, NodeGraphDataFrameFieldNames as Fields } from '@grafana/data';\n\nexport function getNonOverlappingDuration(ranges: Array<[number, number]>): number {\n  ranges.sort((a, b) => a[0] - b[0]);\n  const mergedRanges = ranges.reduce((acc, range) => {\n    if (!acc.length) {\n      return [range];\n    }\n    const tail = acc.slice(-1)[0];\n    const [prevStart, prevEnd] = tail;\n    const [start, end] = range;\n    if (end < prevEnd) {\n      // In this case the range is completely inside the prev range so we can just ignore it.\n      return acc;\n    }\n\n    if (start > prevEnd) {\n      // There is no overlap so we can just add it to stack\n      return [...acc, range];\n    }\n\n    // We know there is overlap and current range ends later than previous so we can just extend the range\n    return [...acc.slice(0, -1), [prevStart, end]] as Array<[number, number]>;\n  }, [] as Array<[number, number]>);\n\n  return mergedRanges.reduce((acc, range) => {\n    return acc + (range[1] - range[0]);\n  }, 0);\n}\n\n/**\n * Returns a map of the spans with children array for easier processing. It will also contain empty spans in case\n * span is missing but other spans are it's children. This is more generic because it needs to allow iterating over\n * both arrays and dataframe views.\n */\nexport function makeSpanMap<T>(\n  getSpan: (index: number) => { span: T; id: string; parentIds: string[] } | undefined\n): { [id: string]: { span: T; children: string[] } } {\n  const spanMap: { [id: string]: { span?: T; children: string[] } } = {};\n\n  let span;\n  for (let index = 0; (span = getSpan(index)), !!span; index++) {\n    if (!spanMap[span.id]) {\n      spanMap[span.id] = {\n        span: span.span,\n        children: [],\n      };\n    } else {\n      spanMap[span.id].span = span.span;\n    }\n\n    for (const parentId of span.parentIds) {\n      if (parentId) {\n        if (!spanMap[parentId]) {\n          spanMap[parentId] = {\n            span: undefined,\n            children: [span.id],\n          };\n        } else {\n          spanMap[parentId].children.push(span.id);\n        }\n      }\n    }\n  }\n  return spanMap as { [id: string]: { span: T; children: string[] } };\n}\n\nexport function getStats(duration: number, traceDuration: number, selfDuration: number) {\n  return {\n    main: `${toFixedNoTrailingZeros(duration)}ms (${toFixedNoTrailingZeros((duration / traceDuration) * 100)}%)`,\n    secondary: `${toFixedNoTrailingZeros(selfDuration)}ms (${toFixedNoTrailingZeros(\n      (selfDuration / duration) * 100\n    )}%)`,\n  };\n}\n\nfunction toFixedNoTrailingZeros(n: number) {\n  return parseFloat(n.toFixed(2));\n}\n\n/**\n * Create default frames used when returning data for node graph.\n */\nexport function makeFrames() {\n  const nodesFrame = new MutableDataFrame({\n    fields: [\n      { name: Fields.id, type: FieldType.string },\n      { name: Fields.title, type: FieldType.string },\n      { name: Fields.subTitle, type: FieldType.string },\n      { name: Fields.mainStat, type: FieldType.string, config: { displayName: 'Total time (% of trace)' } },\n      { name: Fields.secondaryStat, type: FieldType.string, config: { displayName: 'Self time (% of total)' } },\n      {\n        name: Fields.color,\n        type: FieldType.number,\n        config: { color: { mode: 'continuous-GrYlRd' }, displayName: 'Self time / Trace duration' },\n      },\n    ],\n    meta: {\n      preferredVisualisationType: 'nodeGraph',\n    },\n  });\n\n  const edgesFrame = new MutableDataFrame({\n    fields: [\n      { name: Fields.id, type: FieldType.string },\n      { name: Fields.target, type: FieldType.string },\n      { name: Fields.source, type: FieldType.string },\n    ],\n    meta: {\n      preferredVisualisationType: 'nodeGraph',\n    },\n  });\n\n  return [nodesFrame, edgesFrame];\n}\n","import { DataFrame, NodeGraphDataFrameFieldNames as Fields } from '@grafana/data';\nimport { Span, TraceResponse } from './types';\nimport { getNonOverlappingDuration, getStats, makeFrames, makeSpanMap } from '../../../core/utils/tracing';\n\ninterface Node {\n  [Fields.id]: string;\n  [Fields.title]: string;\n  [Fields.subTitle]: string;\n  [Fields.mainStat]: string;\n  [Fields.secondaryStat]: string;\n  [Fields.color]: number;\n}\n\ninterface Edge {\n  [Fields.id]: string;\n  [Fields.target]: string;\n  [Fields.source]: string;\n}\n\nexport function createGraphFrames(data: TraceResponse): DataFrame[] {\n  const { nodes, edges } = convertTraceToGraph(data);\n  const [nodesFrame, edgesFrame] = makeFrames();\n\n  for (const node of nodes) {\n    nodesFrame.add(node);\n  }\n\n  for (const edge of edges) {\n    edgesFrame.add(edge);\n  }\n\n  return [nodesFrame, edgesFrame];\n}\n\nfunction convertTraceToGraph(data: TraceResponse): { nodes: Node[]; edges: Edge[] } {\n  const nodes: Node[] = [];\n  const edges: Edge[] = [];\n\n  const traceDuration = findTraceDuration(data.spans);\n\n  const spanMap = makeSpanMap((index) => {\n    if (index >= data.spans.length) {\n      return undefined;\n    }\n    const span = data.spans[index];\n    return {\n      span,\n      id: span.spanID,\n      parentIds: span.references?.filter((r) => r.refType === 'CHILD_OF').map((r) => r.spanID) || [],\n    };\n  });\n\n  for (const span of data.spans) {\n    const process = data.processes[span.processID];\n\n    const ranges: Array<[number, number]> = spanMap[span.spanID].children.map((c) => {\n      const span = spanMap[c].span;\n      return [span.startTime, span.startTime + span.duration];\n    });\n    const childrenDuration = getNonOverlappingDuration(ranges);\n    const selfDuration = span.duration - childrenDuration;\n    const stats = getStats(span.duration / 1000, traceDuration / 1000, selfDuration / 1000);\n\n    nodes.push({\n      [Fields.id]: span.spanID,\n      [Fields.title]: process?.serviceName ?? '',\n      [Fields.subTitle]: span.operationName,\n      [Fields.mainStat]: stats.main,\n      [Fields.secondaryStat]: stats.secondary,\n      [Fields.color]: selfDuration / traceDuration,\n    });\n\n    const parentSpanID = span.references?.find((r) => r.refType === 'CHILD_OF')?.spanID;\n    // Sometimes some span can be missing. Don't add edges for those.\n    if (parentSpanID && spanMap[parentSpanID].span) {\n      edges.push({\n        [Fields.id]: parentSpanID + '--' + span.spanID,\n        [Fields.target]: span.spanID,\n        [Fields.source]: parentSpanID,\n      });\n    }\n  }\n\n  return { nodes, edges };\n}\n\n/**\n * Get the duration of the whole trace as it isn't a part of the response data.\n * Note: Seems like this should be the same as just longest span, but this is probably safer.\n */\nfunction findTraceDuration(spans: Span[]): number {\n  let traceEndTime = 0;\n  let traceStartTime = Infinity;\n\n  for (const span of spans) {\n    if (span.startTime < traceStartTime) {\n      traceStartTime = span.startTime;\n    }\n\n    if (span.startTime + span.duration > traceEndTime) {\n      traceEndTime = span.startTime + span.duration;\n    }\n  }\n\n  return traceEndTime - traceStartTime;\n}\n","import logfmt from 'logfmt';\n\nexport function convertTagsLogfmt(tags: string | undefined) {\n  if (!tags) {\n    return '';\n  }\n  const data: any = logfmt.parse(tags);\n  Object.keys(data).forEach((key) => {\n    const value = data[key];\n    if (typeof value !== 'string') {\n      data[key] = String(value);\n    }\n  });\n  return JSON.stringify(data);\n}\n\nexport function transformToLogfmt(tags: string | undefined) {\n  if (!tags) {\n    return '';\n  }\n  try {\n    return logfmt.stringify(JSON.parse(tags));\n  } catch {\n    return tags;\n  }\n}\n","import { css } from '@emotion/css';\nimport { GrafanaTheme } from '@grafana/data';\nimport { Icon, InlineField, InlineFieldRow, InlineLabel, Input, useStyles } from '@grafana/ui';\nimport React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { JaegerQuery } from '../types';\n\nconst durationPlaceholder = 'e.g. 1.2s, 100ms, 500us';\n\ntype Props = {\n  query: JaegerQuery;\n  onChange: (value: JaegerQuery) => void;\n};\n\nexport function AdvancedOptions({ query, onChange }: Props) {\n  const [showAdvancedOptions, setShowAdvancedOptions] = useState(false);\n  const styles = useStyles(getStyles);\n\n  return (\n    <div>\n      <InlineFieldRow>\n        <div className={styles.advancedOptionsContainer} onClick={() => setShowAdvancedOptions(!showAdvancedOptions)}>\n          <InlineLabel as=\"div\">\n            Advanced options{' '}\n            <Icon className={showAdvancedOptions ? styles.angleUp : styles.angleDown} name=\"angle-down\" />\n          </InlineLabel>\n        </div>\n      </InlineFieldRow>\n      <CSSTransition\n        in={showAdvancedOptions}\n        mountOnEnter={true}\n        unmountOnExit={true}\n        timeout={300}\n        classNames={styles}\n      >\n        <div>\n          <InlineFieldRow>\n            <InlineField label=\"Min Duration\" labelWidth={21} grow>\n              <Input\n                value={query.minDuration || ''}\n                placeholder={durationPlaceholder}\n                onChange={(v) =>\n                  onChange({\n                    ...query,\n                    minDuration: v.currentTarget.value,\n                  })\n                }\n              />\n            </InlineField>\n          </InlineFieldRow>\n          <InlineFieldRow>\n            <InlineField label=\"Max Duration\" labelWidth={21} grow>\n              <Input\n                value={query.maxDuration || ''}\n                placeholder={durationPlaceholder}\n                onChange={(v) =>\n                  onChange({\n                    ...query,\n                    maxDuration: v.currentTarget.value,\n                  })\n                }\n              />\n            </InlineField>\n          </InlineFieldRow>\n          <InlineFieldRow>\n            <InlineField label=\"Limit\" labelWidth={21} grow tooltip=\"Maximum numbers of returned results\">\n              <Input\n                value={query.limit || ''}\n                type=\"number\"\n                onChange={(v) =>\n                  onChange({\n                    ...query,\n                    limit: v.currentTarget.value ? parseInt(v.currentTarget.value, 10) : undefined,\n                  })\n                }\n              />\n            </InlineField>\n          </InlineFieldRow>\n        </div>\n      </CSSTransition>\n    </div>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme) {\n  return {\n    advancedOptionsContainer: css`\n      margin: 0 ${theme.spacing.xs} ${theme.spacing.xs} 0;\n      width: 100%;\n      cursor: pointer;\n    `,\n    enter: css`\n      label: enter;\n      height: 0;\n      opacity: 0;\n    `,\n    enterActive: css`\n      label: enterActive;\n      height: 108px;\n      opacity: 1;\n      transition: height 300ms ease, opacity 300ms ease;\n    `,\n    exit: css`\n      label: exit;\n      height: 108px;\n      opacity: 1;\n    `,\n    exitActive: css`\n      label: exitActive;\n      height: 0;\n      opacity: 0;\n      transition: height 300ms ease, opacity 300ms ease;\n    `,\n    angleUp: css`\n      transform: rotate(-180deg);\n      transition: transform 300ms;\n    `,\n    angleDown: css`\n      transform: rotate(0deg);\n      transition: transform 300ms;\n    `,\n  };\n}\n","import { css } from '@emotion/css';\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField, InlineFieldRow, Input, Select } from '@grafana/ui';\nimport React, { useEffect, useState } from 'react';\nimport { JaegerDatasource } from '../datasource';\nimport { JaegerQuery } from '../types';\nimport { transformToLogfmt } from '../util';\nimport { AdvancedOptions } from './AdvancedOptions';\n\ntype Props = {\n  datasource: JaegerDatasource;\n  query: JaegerQuery;\n  onChange: (value: JaegerQuery) => void;\n};\n\nexport const ALL_OPERATIONS_KEY = 'All';\nconst allOperationsOption: SelectableValue<string> = {\n  label: ALL_OPERATIONS_KEY,\n  value: undefined,\n};\n\nexport function SearchForm({ datasource, query, onChange }: Props) {\n  const [serviceOptions, setServiceOptions] = useState<Array<SelectableValue<string>>>();\n  const [operationOptions, setOperationOptions] = useState<Array<SelectableValue<string>>>();\n\n  useEffect(() => {\n    const getServices = async () => {\n      const services = await loadServices({\n        dataSource: datasource,\n        url: '/api/services',\n        notFoundLabel: 'No service found',\n      });\n      setServiceOptions(services);\n    };\n    getServices();\n  }, [datasource]);\n\n  useEffect(() => {\n    const getOperations = async () => {\n      const operations = await loadServices({\n        dataSource: datasource,\n        url: `/api/services/${encodeURIComponent(query.service!)}/operations`,\n        notFoundLabel: 'No operation found',\n      });\n      setOperationOptions([allOperationsOption, ...operations]);\n    };\n    if (query.service) {\n      getOperations();\n    }\n  }, [datasource, query.service]);\n\n  return (\n    <div className={css({ maxWidth: '500px' })}>\n      <InlineFieldRow>\n        <InlineField label=\"Service\" labelWidth={14} grow>\n          <Select\n            menuShouldPortal\n            options={serviceOptions}\n            value={serviceOptions?.find((v) => v.value === query.service) || null}\n            onChange={(v) => {\n              onChange({\n                ...query,\n                service: v.value!,\n                operation: query.service !== v.value ? undefined : query.operation,\n              });\n            }}\n            menuPlacement=\"bottom\"\n            isClearable\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Operation\" labelWidth={14} grow disabled={!query.service}>\n          <Select\n            menuShouldPortal\n            options={operationOptions}\n            value={operationOptions?.find((v) => v.value === query.operation) || null}\n            onChange={(v) =>\n              onChange({\n                ...query,\n                operation: v.value!,\n              })\n            }\n            menuPlacement=\"bottom\"\n            isClearable\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Tags\" labelWidth={14} grow>\n          <Input\n            value={transformToLogfmt(query.tags)}\n            placeholder=\"http.status_code=200 error=true\"\n            onChange={(v) =>\n              onChange({\n                ...query,\n                tags: v.currentTarget.value,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <AdvancedOptions query={query} onChange={onChange} />\n    </div>\n  );\n}\n\ntype Options = { dataSource: JaegerDatasource; url: string; notFoundLabel: string };\n\nconst loadServices = async ({ dataSource, url, notFoundLabel }: Options): Promise<Array<SelectableValue<string>>> => {\n  const services: string[] | null = await dataSource.metadataRequest(url);\n\n  if (!services) {\n    return [{ label: notFoundLabel, value: notFoundLabel }];\n  }\n\n  const serviceOptions: SelectableValue[] = services.sort().map((service) => ({\n    label: service,\n    value: service,\n  }));\n\n  return serviceOptions;\n};\n","import { identity, omit, pick, pickBy } from 'lodash';\nimport { lastValueFrom, Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  DataSourceJsonData,\n  dateMath,\n  DateTime,\n  FieldType,\n  MutableDataFrame,\n} from '@grafana/data';\nimport { BackendSrvRequest, getBackendSrv } from '@grafana/runtime';\n\nimport { serializeParams } from 'app/core/utils/fetch';\nimport { getTimeSrv, TimeSrv } from 'app/features/dashboard/services/TimeSrv';\nimport { createTableFrame, createTraceFrame } from './responseTransform';\nimport { createGraphFrames } from './graphTransform';\nimport { JaegerQuery } from './types';\nimport { convertTagsLogfmt } from './util';\nimport { ALL_OPERATIONS_KEY } from './components/SearchForm';\nimport { NodeGraphOptions } from 'app/core/components/NodeGraphSettings';\n\nexport interface JaegerJsonData extends DataSourceJsonData {\n  nodeGraph?: NodeGraphOptions;\n}\n\nexport class JaegerDatasource extends DataSourceApi<JaegerQuery, JaegerJsonData> {\n  uploadedJson: string | ArrayBuffer | null = null;\n  nodeGraph?: NodeGraphOptions;\n  constructor(\n    private instanceSettings: DataSourceInstanceSettings<JaegerJsonData>,\n    private readonly timeSrv: TimeSrv = getTimeSrv()\n  ) {\n    super(instanceSettings);\n    this.nodeGraph = instanceSettings.jsonData.nodeGraph;\n  }\n\n  async metadataRequest(url: string, params?: Record<string, any>): Promise<any> {\n    const res = await lastValueFrom(this._request(url, params, { hideFromInspector: true }));\n    return res.data.data;\n  }\n\n  query(options: DataQueryRequest<JaegerQuery>): Observable<DataQueryResponse> {\n    // At this moment we expect only one target. In case we somehow change the UI to be able to show multiple\n    // traces at one we need to change this.\n    const target = options.targets[0];\n    if (!target) {\n      return of({ data: [emptyTraceDataFrame] });\n    }\n\n    if (target.queryType !== 'search' && target.query) {\n      return this._request(`/api/traces/${encodeURIComponent(target.query)}`).pipe(\n        map((response) => {\n          const traceData = response?.data?.data?.[0];\n          if (!traceData) {\n            return { data: [emptyTraceDataFrame] };\n          }\n          let data = [createTraceFrame(traceData)];\n          if (this.nodeGraph?.enabled) {\n            data.push(...createGraphFrames(traceData));\n          }\n          return {\n            data,\n          };\n        })\n      );\n    }\n\n    if (target.queryType === 'upload') {\n      if (!this.uploadedJson) {\n        return of({ data: [] });\n      }\n\n      try {\n        const traceData = JSON.parse(this.uploadedJson as string).data[0];\n        let data = [createTraceFrame(traceData)];\n        if (this.nodeGraph?.enabled) {\n          data.push(...createGraphFrames(traceData));\n        }\n        return of({ data });\n      } catch (error) {\n        return of({ error: { message: 'JSON is not valid Jaeger format' }, data: [] });\n      }\n    }\n\n    let jaegerQuery = pick(target, ['operation', 'service', 'tags', 'minDuration', 'maxDuration', 'limit']);\n    // remove empty properties\n    jaegerQuery = pickBy(jaegerQuery, identity);\n    if (jaegerQuery.tags) {\n      jaegerQuery = { ...jaegerQuery, tags: convertTagsLogfmt(jaegerQuery.tags) };\n    }\n\n    if (jaegerQuery.operation === ALL_OPERATIONS_KEY) {\n      jaegerQuery = omit(jaegerQuery, 'operation');\n    }\n\n    // TODO: this api is internal, used in jaeger ui. Officially they have gRPC api that should be used.\n    return this._request(`/api/traces`, {\n      ...jaegerQuery,\n      ...this.getTimeRange(),\n      lookback: 'custom',\n    }).pipe(\n      map((response) => {\n        return {\n          data: [createTableFrame(response.data.data, this.instanceSettings)],\n        };\n      })\n    );\n  }\n\n  async testDatasource(): Promise<any> {\n    return lastValueFrom(\n      this._request('/api/services').pipe(\n        map((res) => {\n          const values: any[] = res?.data?.data || [];\n          const testResult =\n            values.length > 0\n              ? { status: 'success', message: 'Data source connected and services found.' }\n              : {\n                  status: 'error',\n                  message:\n                    'Data source connected, but no services received. Verify that Jaeger is configured properly.',\n                };\n          return testResult;\n        }),\n        catchError((err: any) => {\n          let message = 'Jaeger: ';\n          if (err.statusText) {\n            message += err.statusText;\n          } else {\n            message += 'Cannot connect to Jaeger';\n          }\n\n          if (err.status) {\n            message += `. ${err.status}`;\n          }\n\n          if (err.data && err.data.message) {\n            message += `. ${err.data.message}`;\n          } else if (err.data) {\n            message += `. ${JSON.stringify(err.data)}`;\n          }\n          return of({ status: 'error', message: message });\n        })\n      )\n    );\n  }\n\n  getTimeRange(): { start: number; end: number } {\n    const range = this.timeSrv.timeRange();\n    return {\n      start: getTime(range.from, false),\n      end: getTime(range.to, true),\n    };\n  }\n\n  getQueryDisplayText(query: JaegerQuery) {\n    return query.query || '';\n  }\n\n  private _request(apiUrl: string, data?: any, options?: Partial<BackendSrvRequest>): Observable<Record<string, any>> {\n    const params = data ? serializeParams(data) : '';\n    const url = `${this.instanceSettings.url}${apiUrl}${params.length ? `?${params}` : ''}`;\n    const req = {\n      ...options,\n      url,\n    };\n\n    return getBackendSrv().fetch(req);\n  }\n}\n\nfunction getTime(date: string | DateTime, roundUp: boolean) {\n  if (typeof date === 'string') {\n    date = dateMath.parse(date, roundUp)!;\n  }\n  return date.valueOf() * 1000;\n}\n\nconst emptyTraceDataFrame = new MutableDataFrame({\n  fields: [\n    {\n      name: 'trace',\n      type: FieldType.trace,\n      values: [],\n    },\n  ],\n  meta: {\n    preferredVisualisationType: 'trace',\n    custom: {\n      traceFormat: 'jaeger',\n    },\n  },\n});\n","import { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { DataSourceHttpSettings } from '@grafana/ui';\nimport { NodeGraphSettings } from 'app/core/components/NodeGraphSettings';\nimport { TraceToLogsSettings } from 'app/core/components/TraceToLogsSettings';\nimport React from 'react';\n\nexport type Props = DataSourcePluginOptionsEditorProps;\n\nexport const ConfigEditor: React.FC<Props> = ({ options, onOptionsChange }) => {\n  return (\n    <>\n      <DataSourceHttpSettings\n        defaultUrl=\"http://localhost:16686\"\n        dataSourceConfig={options}\n        showAccessOptions={false}\n        onChange={onOptionsChange}\n      />\n\n      <div className=\"gf-form-group\">\n        <TraceToLogsSettings options={options} onOptionsChange={onOptionsChange} />\n      </div>\n      <div className=\"gf-form-group\">\n        <NodeGraphSettings options={options} onOptionsChange={onOptionsChange} />\n      </div>\n    </>\n  );\n};\n","import { DataSourcePlugin } from '@grafana/data';\nimport { JaegerDatasource } from './datasource';\nimport { QueryEditor } from './components/QueryEditor';\nimport { ConfigEditor } from './components/ConfigEditor';\n\nexport const plugin = new DataSourcePlugin(JaegerDatasource).setConfigEditor(ConfigEditor).setQueryEditor(QueryEditor);\n","import { css } from '@emotion/css';\nimport { QueryEditorProps } from '@grafana/data';\nimport { FileDropzone, InlineField, InlineFieldRow, QueryField, RadioButtonGroup, useTheme2 } from '@grafana/ui';\nimport React from 'react';\nimport { JaegerDatasource } from '../datasource';\nimport { JaegerQuery, JaegerQueryType } from '../types';\nimport { SearchForm } from './SearchForm';\n\ntype Props = QueryEditorProps<JaegerDatasource, JaegerQuery>;\n\nexport function QueryEditor({ datasource, query, onChange, onRunQuery }: Props) {\n  const theme = useTheme2();\n\n  const onChangeQuery = (value: string) => {\n    const nextQuery: JaegerQuery = { ...query, query: value };\n    onChange(nextQuery);\n  };\n\n  const renderEditorBody = () => {\n    switch (query.queryType) {\n      case 'search':\n        return <SearchForm datasource={datasource} query={query} onChange={onChange} />;\n      case 'upload':\n        return (\n          <div className={css({ padding: theme.spacing(2) })}>\n            <FileDropzone\n              options={{ multiple: false }}\n              onLoad={(result) => {\n                datasource.uploadedJson = result;\n                onRunQuery();\n              }}\n            />\n          </div>\n        );\n      default:\n        return (\n          <InlineFieldRow>\n            <InlineField label=\"Trace ID\" labelWidth={14} grow>\n              <QueryField\n                query={query.query}\n                onChange={onChangeQuery}\n                onRunQuery={onRunQuery}\n                onBlur={() => {}}\n                placeholder={'Enter a Trace ID (run with Shift+Enter)'}\n                portalOrigin=\"jaeger\"\n              />\n            </InlineField>\n          </InlineFieldRow>\n        );\n    }\n  };\n\n  return (\n    <>\n      <div className={css({ width: '100%' })}>\n        <InlineFieldRow>\n          <InlineField label=\"Query type\">\n            <RadioButtonGroup<JaegerQueryType>\n              options={[\n                { value: 'search', label: 'Search' },\n                { value: undefined, label: 'TraceID' },\n                { value: 'upload', label: 'JSON file' },\n              ]}\n              value={query.queryType}\n              onChange={(v) =>\n                onChange({\n                  ...query,\n                  queryType: v,\n                })\n              }\n              size=\"md\"\n            />\n          </InlineField>\n        </InlineFieldRow>\n        {renderEditorBody()}\n      </div>\n    </>\n  );\n}\n","\n/*\nModule dependencies.\n*/\n\n/*\nJSON:\n\nParse logplex request bodies, providing the\nparsed object as `req.body`.\n\nOptions: none\n\n@param content_type {String} use when Content-Type matches this string\n@param parser {Function} parsing function takes String body and returns new body\n@return {Function}\n@api public\n*/\n\nexports = module.exports = function(options) {\n  var limit;\n  if (options == null) options = {};\n\n  return function(req, res, next) {\n    if (req._body) return next();\n    var is_mime = req.header('content-type') === options.contentType;\n    if (!is_mime) return next();\n    req._body = true;\n    req.body = req.body || {};\n    var buf;\n    buf = \"\";\n    req.setEncoding(\"utf8\");\n    req.on(\"data\", function(chunk) {\n      return buf += chunk;\n    });\n    req.on(\"end\", function() {\n      try {\n        var lines = []\n        buf.trim().split(\"\\n\").forEach(function(line){\n          lines.push(options.parser(line))\n        })\n        req.body = lines;\n      } catch (err) {\n        err.body = buf;\n        err.status = 400;\n        return next(err);\n      }\n      return next();\n    });\n  };\n};\n","var split = require('split');\nvar through = require('through');\nvar Readable = require('stream').Readable;\nvar PassThrough = require('stream').PassThrough;\nvar logfmt   = require('../logfmt');\n\nexports = module.exports = function(options){\n  if(options == null) options = {};\n  var mime = options.contentType || \"application/logplex-1\";\n\n  return function(req, res, next) {\n\n    //honor already parsed bodies\n    if (req._body) return next();\n\n    //mime-type check\n    var is_mime = req.header('content-type') === mime;\n    if (!is_mime) return next();\n    req._body = true;\n    req.body = new PassThrough({objectMode: true});\n    req.pipe(logfmt.streamParser()).pipe(req.body);\n\n    return next();\n  }\n}\n\n","exports.debug = false;\n\nexports.parse = function(line) {\n  var key = '';\n  var value = '';\n  var is_number = true;\n  var in_key    = false;\n  var in_value  = false;\n  var in_quote  = false;\n  var had_quote = false;\n  var object    = {};\n  var debug     = exports.debug;\n\n  if(line[line.length - 1] == '\\n'){\n    line = line.slice(0,line.length - 1)\n  }\n\n  for(var i=0; i <= line.length; i++){\n\n    if((line[i] == ' ' && !in_quote) || i == line.length){\n      if(in_key && key.length > 0){\n        object[key] = true;\n      }else if(in_value){\n        if(value == 'true') value = true;\n        else if(value == 'false') value = false;\n        else if(value === '' && !had_quote) value = null;\n        object[key] = value;\n        value = '';\n      }\n\n      if(i == line.length) break;\n      else {\n        in_key   = false;\n        in_value = false;\n        in_quote = false;\n        had_quote = false;\n      }\n    }\n\n    if(line[i] == '=' && !in_quote){\n      if(debug) console.log('split')\n      //split\n      in_key = false;\n      in_value = true;\n    }\n    else if(line[i] == '\\\\'){\n      i ++ ;\n      value += line[i];\n      if(debug) console.log('escape: ' + line[i])\n    }\n    else if(line[i] == '\"'){\n      had_quote = true;\n      in_quote = !in_quote;\n      if(debug) console.log('in quote: ' + in_quote)\n    }\n    else if(line[i] != ' ' && !in_value && !in_key){\n      if(debug) console.log('start key with: ' + line[i])\n      in_key = true;\n      key = line[i];\n    }\n    else if(in_key){\n      if(debug) console.log('add to key: ' + line[i])\n      key += line[i]\n    }\n    else if(in_value){\n      if(debug) console.log('add to value: ' + line[i])\n      value += line[i];\n    }\n  }\n\n  return object;\n}\n","exports.log = function(data, stream) {\n  this.stream = this.stream || process.stdout;\n  if(stream == undefined) stream = this.stream;\n\n  var logData = Object.assign({}, this.defaultData, data);\n\n  if(this.timers){\n    for(var key in this.timers){\n      var now = (new Date()).getTime()\n      logData[key] = (now - this.timers[key]).toString() + 'ms' ;\n    }\n  }\n\n  stream.write(this.stringify(logData) + \"\\n\");\n}\n\nexports.time = function(label) {\n  var logfmt = require('../logfmt');\n  var startTime = (new Date()).getTime();\n  var label  = label || 'elapsed';\n  var timer  = new logfmt();\n  timer.stream = this.stream;\n  timer.defaultData = this.defaultData;\n  timer.timers = Object.assign({}, this.timers)\n  timer.timers[label] = startTime;\n  return timer;\n}\n\nexports.namespace = function(object) {\n  var logfmt = require('../logfmt');\n  var namespaced = new logfmt()\n  var namespace  = Object.assign({}, this.defaultData, object);\n  namespaced.stream = this.stream;\n  namespaced.defaultData = namespace\n  namespaced.timers = this.timers;\n  return namespaced;\n}\n\nexports.error = function(err, id) {\n  this.maxErrorLines = this.maxErrorLines || 10;\n  if (id === undefined) {\n    id = Math.random().toString().slice(2, 12);\n  }\n  var errorLogger = this.namespace({\n    error: true,\n    id:id,\n    now: (new Date()).toISOString()\n  })\n  errorLogger.log({ message:err.message });\n  if (err.stack) {\n    var stack = err.stack.split('\\n');\n    for (var line in stack) {\n      if (line >= this.maxErrorLines) break;\n      errorLogger.log({ line:line, trace:stack[line] });\n    }\n  }\n}\n","var commonFormatter = function(req, res){\n  if((typeof req.path) == 'function'){\n    //in restify path is a function\n    var path = req.path();\n  }\n  else{\n    //in express it is an attribute\n    var path = req.originalUrl || req.path || req.url;\n  }\n\n  var httpHeader = req.header && req.header('x-forwarded-for')\n  var requestID  = req.header && req.header('x-request-id')\n\n  var ip = req.ip || httpHeader\n                  || req.connection.remoteAddress;\n\n  var requestData =  {\n    ip: ip,\n    time: (new Date()).toISOString(),\n    method: req.method,\n    path: path,\n    \"status\": res.statusCode,\n  }\n\n  if (requestID) {\n    requestData.request_id = requestID;\n  }\n\n  if(res.get){\n    requestData.content_length = res.get('content-length');\n    requestData.content_type = res.get('content-type');\n  }\n  return requestData;\n}\n\nvar immediateLogger = function(logger, options, formatter){\n  return function(req, res, next){\n    var data = formatter(req, res);\n    logger.log(data);\n    next();\n  }\n}\n\nvar timingLogger = function(logger, options, formatter){\n  return function(req, res, next){\n    var elapsed = options.elapsed || 'elapsed';\n    var timer   = logger.time(elapsed);\n    var end = res.end;\n    res.end = function(chunk, encoding) {\n      var data = formatter(req, res);\n      res.end = end;\n      res.end(chunk, encoding);\n      timer.log(data);\n    };\n    next();\n  }\n}\n\nexports.init = function(logger, options, formatter) {\n  this.logger = logger;\n\n  if(!formatter && !options){\n    formatter = commonFormatter;\n    options = {};\n  }\n  else if(!formatter){\n    if(typeof options == 'function'){\n      formatter = options;\n      options = {};\n    }else{\n      formatter = commonFormatter;\n    }\n  }\n  options = options || {};\n\n  if(options.immediate){\n    return immediateLogger(logger, options, formatter);\n  }else{\n    return timingLogger(logger, options, formatter);\n  }\n}\n\nexports.commonFormatter = commonFormatter;\n","var split       = require('split')\nvar through     = require('through');\nvar PassThrough = require('stream').PassThrough;\n\n//returns a stream that splits and parses logfmt into objects\nexports.streamParser = function(options){\n  var options = options || {};\n\n  var streamParser = new PassThrough();\n  var self = this;\n\n  var logfmtStream = through(function(line){\n    if(line !== '') this.queue(self.parse(line))\n  })\n\n  // When a source stream is piped to us, undo that pipe, and save\n  // off the source stream piped into our internally managed streams.\n  streamParser.on('pipe', function(source) {\n    if(source.unpipe) source.unpipe(this);\n    this.transformStream = source.pipe(split()).pipe(logfmtStream);\n  });\n\n  // When we're piped to another stream, instead pipe our internal\n  // transform stream to that destination.\n  streamParser.pipe = function(destination, options) {\n    return this.transformStream.pipe(destination, options);\n  };\n\n  return streamParser;\n}\n\n// returns a stream that stringifies objects\nexports.streamStringify = function(options){\n  var self = this;\n  var options = options || {};\n  if(options.hasOwnProperty('delimiter')){\n    var delim = options.delimiter;\n  }else{\n    var delim = \"\\n\";\n  }\n\n  return through(function(data){\n    this.queue(self.stringify(data) + delim)\n  }, function(){\n    this.queue(null)\n  })\n}\n","exports.stringify = function(data){\n  var line = '';\n\n  for(var key in data) {\n    var value = data[key];\n    var is_null = false;\n    if(value == null) {\n      is_null = true;\n      value = '';\n    }\n    else value = value.toString();\n\n    var needs_quoting  = value.indexOf(' ') > -1 || value.indexOf('=') > -1;\n    var needs_escaping = value.indexOf('\"') > -1 || value.indexOf(\"\\\\\") > -1;\n\n    if(needs_escaping) value = value.replace(/[\"\\\\]/g, '\\\\$&');\n    if(needs_quoting) value = '\"' + value + '\"';\n    if(value === '' && !is_null) value = '\"\"';\n\n    line += key + '=' + value + ' ';\n  }\n\n  //trim traling space\n  return line.substring(0,line.length-1);\n}\n\n","//constructor\nfunction logfmt() {\n}\nmodule.exports = logfmt;\n\nvar streaming        = require('./lib/streaming');\nvar bodyParser       = require('./lib/body_parser');\nvar bodyParserStream = require('./lib/body_parser_stream');\nvar logfmtParser     = require('./lib/logfmt_parser');\nvar logger           = require('./lib/logger');\nvar requestLogger    = require('./lib/request_logger');\nvar serializer       = require('./lib/stringify');\n\n//Build up logfmt prototype\nObject.assign(logfmt.prototype, logger);\nObject.assign(logfmt.prototype, streaming);\n\nlogfmt.prototype.stringify = serializer.stringify;\nlogfmt.prototype.parse = logfmtParser.parse;\n\n// Synchronous body parser\nlogfmt.prototype.bodyParser = function(options) {\n  options || (options = {});\n  var mime = options.contentType || \"application/logplex-1\";\n  return bodyParser({ contentType: mime, parser: this.parse });\n};\n\n// Stream parser\nlogfmt.prototype.bodyParserStream = function(options) {\n  options || (options = {});\n  var mime = options.contentType || \"application/logplex-1\";\n  return bodyParserStream({ contentType: mime });\n};\n\nlogfmt.prototype.requestLogger = function(options, formatter) {\n  return requestLogger.init(this, options, formatter);\n};\n\nlogfmt.prototype.requestLogger.commonFormatter = requestLogger.commonFormatter;\n\nObject.assign(logfmt, logfmt.prototype);\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","//filter will reemit the data if cb(err,pass) pass is truthy\n\n// reduce is more tricky\n// maybe we want to group the reductions or emit progress updates occasionally\n// the most basic reduce just emits one 'data' event after it has recieved 'end'\n\n\nvar through = require('through')\nvar Decoder = require('string_decoder').StringDecoder\n\nmodule.exports = split\n\n//TODO pass in a function to map across the lines.\n\nfunction split (matcher, mapper) {\n  var decoder = new Decoder()\n  var soFar = ''\n  if('function' === typeof matcher)\n    mapper = matcher, matcher = null\n  if (!matcher)\n    matcher = /\\r?\\n/\n\n  function emit(stream, piece) {\n    if(mapper) {\n      try {\n        piece = mapper(piece)\n      }\n      catch (err) {\n        return stream.emit('error', err)\n      }\n      if('undefined' !== typeof piece)\n        stream.queue(piece)\n    }\n    else\n      stream.queue(piece)\n  }\n\n  function next (stream, buffer) { \n    var pieces = (soFar + buffer).split(matcher)\n    soFar = pieces.pop()\n\n    for (var i = 0; i < pieces.length; i++) {\n      var piece = pieces[i]\n      emit(stream, piece)\n    }\n  }\n\n  return through(function (b) {\n    next(this, decoder.write(b))\n  },\n  function () {\n    if(decoder.end) \n      next(this, decoder.end())\n    if(soFar != null)\n      emit(this, soFar)\n    this.queue(null)\n  })\n}\n\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","var Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end, opts) {\n  write = write || function (data) { this.queue(data) }\n  end = end || function () { this.queue(null) }\n\n  var ended = false, destroyed = false, buffer = [], _ended = false\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false\n\n//  stream.autoPause   = !(opts && opts.autoPause   === false)\n  stream.autoDestroy = !(opts && opts.autoDestroy === false)\n\n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n\n  function drain() {\n    while(buffer.length && !stream.paused) {\n      var data = buffer.shift()\n      if(null === data)\n        return stream.emit('end')\n      else\n        stream.emit('data', data)\n    }\n  }\n\n  stream.queue = stream.push = function (data) {\n//    console.error(ended)\n    if(_ended) return stream\n    if(data === null) _ended = true\n    buffer.push(data)\n    drain()\n    return stream\n  }\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable && stream.autoDestroy)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  function _end () {\n    stream.writable = false\n    end.call(stream)\n    if(!stream.readable && stream.autoDestroy)\n      stream.destroy()\n  }\n\n  stream.end = function (data) {\n    if(ended) return\n    ended = true\n    if(arguments.length) stream.write(data)\n    _end() // will emit or queue\n    return stream\n  }\n\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    buffer.length = 0\n    stream.writable = stream.readable = false\n    stream.emit('close')\n    return stream\n  }\n\n  stream.pause = function () {\n    if(stream.paused) return\n    stream.paused = true\n    return stream\n  }\n\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n      stream.emit('resume')\n    }\n    drain()\n    //may have become paused again,\n    //as drain emits 'data'.\n    if(!stream.paused)\n      stream.emit('drain')\n    return stream\n  }\n  return stream\n}\n\n"],"names":["NodeGraphSettings","options","onOptionsChange","styles","useStyles","getStyles","className","container","InlineFieldRow","row","InlineField","tooltip","label","labelWidth","InlineSwitch","value","jsonData","nodeGraph","enabled","onChange","event","updateDatasourcePluginJsonDataOption","currentTarget","checked","theme","css","TraceToLogsSettings","width","infoText","DataSourcePicker","pluginId","current","tracesToLogs","datasourceUid","noDefault","ds","uid","tags","TagsInput","grow","Input","type","placeholder","v","spanStartTimeShift","spanEndTimeShift","filterByTraceID","filterBySpanID","defaultChecked","lokiSearch","spacing","md","colors","textSemiWeak","getNonOverlappingDuration","ranges","sort","a","b","reduce","acc","range","length","tail","slice","prevStart","prevEnd","start","end","makeSpanMap","getSpan","spanMap","span","index","id","children","parentId","parentIds","push","undefined","getStats","duration","traceDuration","selfDuration","main","toFixedNoTrailingZeros","secondary","n","parseFloat","toFixed","makeFrames","MutableDataFrame","fields","name","Fields","FieldType","config","displayName","color","mode","meta","preferredVisualisationType","createGraphFrames","data","nodes","edges","spans","traceEndTime","traceStartTime","Infinity","startTime","findTraceDuration","spanID","references","filter","r","refType","map","process","processes","processID","c","childrenDuration","stats","serviceName","operationName","parentSpanID","find","convertTraceToGraph","nodesFrame","edgesFrame","node","add","edge","convertTagsLogfmt","logfmt","Object","keys","forEach","key","String","JSON","stringify","transformToLogfmt","parse","durationPlaceholder","AdvancedOptions","query","showAdvancedOptions","setShowAdvancedOptions","useState","advancedOptionsContainer","onClick","InlineLabel","as","Icon","angleUp","angleDown","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","minDuration","maxDuration","limit","parseInt","xs","enter","enterActive","exit","exitActive","allOperationsOption","SearchForm","datasource","serviceOptions","setServiceOptions","operationOptions","setOperationOptions","useEffect","async","services","loadServices","dataSource","url","notFoundLabel","getServices","service","operations","encodeURIComponent","getOperations","maxWidth","Select","menuShouldPortal","operation","menuPlacement","isClearable","disabled","metadataRequest","JaegerDatasource","DataSourceApi","constructor","instanceSettings","timeSrv","getTimeSrv","super","this","params","lastValueFrom","_request","hideFromInspector","target","targets","of","emptyTraceDataFrame","queryType","pipe","response","traceData","createTraceFrame","uploadedJson","error","message","jaegerQuery","pick","pickBy","identity","omit","getTimeRange","lookback","createTableFrame","res","status","catchError","err","statusText","timeRange","getTime","from","to","getQueryDisplayText","apiUrl","serializeParams","req","getBackendSrv","fetch","date","roundUp","dateMath","valueOf","values","custom","traceFormat","plugin","DataSourcePlugin","setConfigEditor","DataSourceHttpSettings","defaultUrl","dataSourceConfig","showAccessOptions","setQueryEditor","onRunQuery","useTheme2","onChangeQuery","nextQuery","RadioButtonGroup","size","padding","FileDropzone","multiple","onLoad","result","QueryField","onBlur","portalOrigin","renderEditorBody","module","exports","next","_body","header","contentType","body","buf","setEncoding","on","chunk","lines","trim","split","line","parser","PassThrough","mime","objectMode","streamParser","debug","in_key","in_value","in_quote","had_quote","object","i","console","log","stream","stdout","logData","assign","defaultData","timers","now","Date","toString","write","time","timer","namespace","namespaced","maxErrorLines","Math","random","errorLogger","toISOString","stack","trace","commonFormatter","path","originalUrl","httpHeader","requestID","requestData","ip","connection","remoteAddress","method","statusCode","request_id","get","content_length","content_type","init","logger","formatter","immediate","immediateLogger","elapsed","encoding","timingLogger","through","self","logfmtStream","queue","source","unpipe","transformStream","destination","streamStringify","hasOwnProperty","delim","delimiter","is_null","needs_quoting","indexOf","replace","substring","streaming","bodyParser","bodyParserStream","logfmtParser","requestLogger","serializer","prototype","buffer","Buffer","copyProps","src","dst","SafeBuffer","arg","encodingOrOffset","alloc","allocUnsafe","allocUnsafeSlow","create","TypeError","fill","SlowBuffer","Decoder","matcher","mapper","decoder","soFar","emit","piece","pieces","pop","isEncoding","toLowerCase","StringDecoder","nb","enc","nenc","retried","_normalizeEncoding","Error","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","p","utf8CheckExtraBytes","copy","charCodeAt","total","j","utf8CheckIncomplete","Stream","opts","ended","destroyed","_ended","drain","paused","shift","_end","writable","call","readable","autoDestroy","destroy","nextTick","arguments","pause","resume"],"sourceRoot":""}