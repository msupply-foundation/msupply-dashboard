(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{nKVo:function(e,t,a){"use strict";a.r(t);var r=a("LvDl"),s=a("Obii");const n=/^(\d+)(?:\.(\d+))?(?:\.(\d+))?(?:-([0-9A-Za-z\.]+))?/;class i{constructor(e){this.major=void 0,this.minor=void 0,this.patch=void 0,this.meta=void 0,this.major=0,this.minor=0,this.patch=0,this.meta="";const t=n.exec(e);t&&(this.major=Number(t[1]),this.minor=Number(t[2]||0),this.patch=Number(t[3]||0),this.meta=t[4])}isGtOrEq(e){const t=new i(e);for(let e=0;e<this.comparable.length;++e){if(this.comparable[e]>t.comparable[e])return!0;if(this.comparable[e]<t.comparable[e])return!1}return!0}isValid(){return Object(r.isNumber)(this.major)}get comparable(){return[this.major,this.minor,this.patch]}}function o(e,t){return new i(e).isGtOrEq(t)}const l={};function m(e){e.params=e.params||[],e.defaultParams=e.defaultParams||[],l[e.name]=e,e.shortName&&(l[e.shortName]=e)}const c=[{name:"other",type:"value_or_series",optional:!0,multiple:!0}];function p(e,t){return!e.version||o(t,e.version)}m({name:"scaleToSeconds",category:"Transform",params:[{name:"seconds",type:"int"}],defaultParams:[1]}),m({name:"perSecond",category:"Transform",params:[{name:"max value",type:"int",optional:!0}],defaultParams:[]}),m({name:"holtWintersForecast",category:"Calculate"}),m({name:"holtWintersConfidenceBands",category:"Calculate",params:[{name:"delta",type:"int"}],defaultParams:[3]}),m({name:"holtWintersAberration",category:"Calculate",params:[{name:"delta",type:"int"}],defaultParams:[3]}),m({name:"nPercentile",category:"Calculate",params:[{name:"Nth percentile",type:"int"}],defaultParams:[95]}),m({name:"diffSeries",params:c,defaultParams:["#A"],category:"Combine"}),m({name:"stddevSeries",params:c,defaultParams:[""],category:"Combine"}),m({name:"divideSeries",params:c,defaultParams:["#A"],category:"Combine"}),m({name:"multiplySeries",params:c,defaultParams:["#A"],category:"Combine"}),m({name:"asPercent",params:c,defaultParams:["#A"],category:"Combine"}),m({name:"group",params:c,defaultParams:["#A","#B"],category:"Combine"}),m({name:"sumSeries",shortName:"sum",category:"Combine",params:c,defaultParams:[""]}),m({name:"averageSeries",shortName:"avg",category:"Combine",params:c,defaultParams:[""]}),m({name:"rangeOfSeries",category:"Combine"}),m({name:"percentileOfSeries",category:"Combine",params:[{name:"n",type:"int"},{name:"interpolate",type:"boolean",options:["true","false"]}],defaultParams:[95,"false"]}),m({name:"sumSeriesWithWildcards",category:"Combine",params:[{name:"node",type:"int",multiple:!0}],defaultParams:[3]}),m({name:"maxSeries",shortName:"max",category:"Combine"}),m({name:"minSeries",shortName:"min",category:"Combine"}),m({name:"averageSeriesWithWildcards",category:"Combine",params:[{name:"node",type:"int",multiple:!0}],defaultParams:[3]}),m({name:"alias",category:"Alias",params:[{name:"alias",type:"string"}],defaultParams:["alias"]}),m({name:"aliasSub",category:"Alias",params:[{name:"search",type:"string"},{name:"replace",type:"string"}],defaultParams:["","\\1"]}),m({name:"consolidateBy",category:"Special",params:[{name:"function",type:"string",options:["sum","average","min","max"]}],defaultParams:["max"]}),m({name:"cumulative",category:"Special",params:[],defaultParams:[]}),m({name:"groupByNode",category:"Combine",params:[{name:"node",type:"int",options:[0,1,2,3,4,5,6,7,8,9,10,12]},{name:"function",type:"string",options:["sum","avg","maxSeries"]}],defaultParams:[3,"sum"]}),m({name:"aliasByNode",category:"Alias",params:[{name:"node",type:"int",options:[0,1,2,3,4,5,6,7,8,9,10,12],multiple:!0}],defaultParams:[3]}),m({name:"substr",category:"Special",params:[{name:"start",type:"int",options:[-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,12]},{name:"stop",type:"int",options:[-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,12]}],defaultParams:[0,0]}),m({name:"sortByName",category:"Sorting",params:[{name:"natural",type:"boolean",options:["true","false"],optional:!0}],defaultParams:["false"]}),m({name:"sortByMaxima",category:"Sorting"}),m({name:"sortByMinima",category:"Sorting"}),m({name:"sortByTotal",category:"Sorting"}),m({name:"aliasByMetric",category:"Alias"}),m({name:"randomWalk",fake:!0,category:"Special",params:[{name:"name",type:"string"}],defaultParams:["randomWalk"]}),m({name:"countSeries",category:"Combine"}),m({name:"constantLine",category:"Special",params:[{name:"value",type:"int"}],defaultParams:[10]}),m({name:"cactiStyle",category:"Special"}),m({name:"keepLastValue",category:"Transform",params:[{name:"n",type:"int"}],defaultParams:[100]}),m({name:"changed",category:"Special",params:[],defaultParams:[]}),m({name:"scale",category:"Transform",params:[{name:"factor",type:"int"}],defaultParams:[1]}),m({name:"offset",category:"Transform",params:[{name:"amount",type:"int"}],defaultParams:[10]}),m({name:"transformNull",category:"Transform",params:[{name:"amount",type:"int"}],defaultParams:[0]}),m({name:"integral",category:"Transform"}),m({name:"derivative",category:"Transform"}),m({name:"nonNegativeDerivative",category:"Transform",params:[{name:"max value or 0",type:"int",optional:!0}],defaultParams:[""]}),m({name:"timeShift",category:"Transform",params:[{name:"amount",type:"select",options:["1h","6h","12h","1d","2d","7d","14d","30d"]}],defaultParams:["1d"]}),m({name:"timeStack",category:"Transform",params:[{name:"timeShiftUnit",type:"select",options:["1h","6h","12h","1d","2d","7d","14d","30d"]},{name:"timeShiftStart",type:"int"},{name:"timeShiftEnd",type:"int"}],defaultParams:["1d",0,7]}),m({name:"summarize",category:"Transform",params:[{name:"interval",type:"string"},{name:"func",type:"select",options:["sum","avg","min","max","last"]},{name:"alignToFrom",type:"boolean",optional:!0,options:["false","true"]}],defaultParams:["1h","sum","false"]}),m({name:"smartSummarize",category:"Transform",params:[{name:"interval",type:"string"},{name:"func",type:"select",options:["sum","avg","min","max","last"]}],defaultParams:["1h","sum"]}),m({name:"absolute",category:"Transform"}),m({name:"hitcount",category:"Transform",params:[{name:"interval",type:"string"}],defaultParams:["10s"]}),m({name:"log",category:"Transform",params:[{name:"base",type:"int"}],defaultParams:["10"]}),m({name:"averageAbove",category:"Filter Series",params:[{name:"n",type:"int"}],defaultParams:[25]}),m({name:"averageBelow",category:"Filter Series",params:[{name:"n",type:"int"}],defaultParams:[25]}),m({name:"currentAbove",category:"Filter Series",params:[{name:"n",type:"int"}],defaultParams:[25]}),m({name:"currentBelow",category:"Filter Series",params:[{name:"n",type:"int"}],defaultParams:[25]}),m({name:"maximumAbove",category:"Filter Series",params:[{name:"value",type:"int"}],defaultParams:[0]}),m({name:"maximumBelow",category:"Filter Series",params:[{name:"value",type:"int"}],defaultParams:[0]}),m({name:"minimumAbove",category:"Filter Series",params:[{name:"value",type:"int"}],defaultParams:[0]}),m({name:"minimumBelow",category:"Filter Series",params:[{name:"value",type:"int"}],defaultParams:[0]}),m({name:"limit",category:"Filter Series",params:[{name:"n",type:"int"}],defaultParams:[5]}),m({name:"mostDeviant",category:"Filter Series",params:[{name:"n",type:"int"}],defaultParams:[10]}),m({name:"exclude",category:"Filter Series",params:[{name:"exclude",type:"string"}],defaultParams:["exclude"]}),m({name:"highestCurrent",category:"Filter Series",params:[{name:"count",type:"int"}],defaultParams:[5]}),m({name:"highestMax",category:"Filter Series",params:[{name:"count",type:"int"}],defaultParams:[5]}),m({name:"lowestCurrent",category:"Filter Series",params:[{name:"count",type:"int"}],defaultParams:[5]}),m({name:"movingAverage",category:"Calculate",params:[{name:"windowSize",type:"int_or_interval",options:["5","7","10","5min","10min","30min","1hour"]}],defaultParams:[10]}),m({name:"movingMedian",category:"Calculate",params:[{name:"windowSize",type:"int_or_interval",options:["5","7","10","5min","10min","30min","1hour"]}],defaultParams:["5"]}),m({name:"stdev",category:"Calculate",params:[{name:"n",type:"int"},{name:"tolerance",type:"int"}],defaultParams:[5,.1]}),m({name:"highestAverage",category:"Filter Series",params:[{name:"count",type:"int"}],defaultParams:[5]}),m({name:"lowestAverage",category:"Filter Series",params:[{name:"count",type:"int"}],defaultParams:[5]}),m({name:"removeAbovePercentile",category:"Filter Data",params:[{name:"n",type:"int"}],defaultParams:[5]}),m({name:"removeAboveValue",category:"Filter Data",params:[{name:"n",type:"int"}],defaultParams:[5]}),m({name:"removeBelowPercentile",category:"Filter Data",params:[{name:"n",type:"int"}],defaultParams:[5]}),m({name:"removeBelowValue",category:"Filter Data",params:[{name:"n",type:"int"}],defaultParams:[5]}),m({name:"useSeriesAbove",category:"Filter Series",params:[{name:"value",type:"int"},{name:"search",type:"string"},{name:"replace",type:"string"}],defaultParams:[0,"search","replace"]}),m({name:"aggregateLine",category:"Calculate",params:[{name:"func",type:"select",options:["sum","avg","min","max","last"]}],defaultParams:["avg"],version:"1.0"}),m({name:"averageOutsidePercentile",category:"Filter Series",params:[{name:"n",type:"int"}],defaultParams:[95],version:"1.0"}),m({name:"delay",category:"Transform",params:[{name:"steps",type:"int"}],defaultParams:[1],version:"1.0"}),m({name:"exponentialMovingAverage",category:"Calculate",params:[{name:"windowSize",type:"int_or_interval",options:["5","7","10","5min","10min","30min","1hour"]}],defaultParams:[10],version:"1.0"}),m({name:"fallbackSeries",category:"Special",params:[{name:"fallback",type:"string"}],defaultParams:["constantLine(0)"],version:"1.0"}),m({name:"grep",category:"Filter Series",params:[{name:"grep",type:"string"}],defaultParams:["grep"],version:"1.0"}),m({name:"groupByNodes",category:"Combine",params:[{name:"function",type:"string",options:["sum","avg","maxSeries"]},{name:"node",type:"int",options:[0,1,2,3,4,5,6,7,8,9,10,12],multiple:!0}],defaultParams:["sum",3],version:"1.0"}),m({name:"integralByInterval",category:"Transform",params:[{name:"intervalUnit",type:"select",options:["1h","6h","12h","1d","2d","7d","14d","30d"]}],defaultParams:["1d"],version:"1.0"}),m({name:"interpolate",category:"Transform",params:[{name:"limit",type:"int",optional:!0}],defaultParams:[],version:"1.0"}),m({name:"invert",category:"Transform",version:"1.0"}),m({name:"isNonNull",category:"Combine",version:"1.0"}),m({name:"linearRegression",category:"Calculate",params:[{name:"startSourceAt",type:"select",options:["-1h","-6h","-12h","-1d","-2d","-7d","-14d","-30d"],optional:!0},{name:"endSourceAt",type:"select",options:["-1h","-6h","-12h","-1d","-2d","-7d","-14d","-30d"],optional:!0}],defaultParams:[],version:"1.0"}),m({name:"mapSeries",shortName:"map",params:[{name:"node",type:"int"}],defaultParams:[3],category:"Combine",version:"1.0"}),m({name:"movingMin",category:"Calculate",params:[{name:"windowSize",type:"int_or_interval",options:["5","7","10","5min","10min","30min","1hour"]}],defaultParams:[10],version:"1.0"}),m({name:"movingMax",category:"Calculate",params:[{name:"windowSize",type:"int_or_interval",options:["5","7","10","5min","10min","30min","1hour"]}],defaultParams:[10],version:"1.0"}),m({name:"movingSum",category:"Calculate",params:[{name:"windowSize",type:"int_or_interval",options:["5","7","10","5min","10min","30min","1hour"]}],defaultParams:[10],version:"1.0"}),m({name:"multiplySeriesWithWildcards",category:"Combine",params:[{name:"position",type:"int",options:[0,1,2,3,4,5,6,7,8,9,10,12],multiple:!0}],defaultParams:[2],version:"1.0"}),m({name:"offsetToZero",category:"Transform",version:"1.0"}),m({name:"pow",category:"Transform",params:[{name:"factor",type:"int"}],defaultParams:[10],version:"1.0"}),m({name:"powSeries",category:"Transform",params:c,defaultParams:[""],version:"1.0"}),m({name:"reduceSeries",shortName:"reduce",params:[{name:"function",type:"string",options:["asPercent","diffSeries","divideSeries"]},{name:"reduceNode",type:"int",options:[0,1,2,3,4,5,6,7,8,9,10,11,12,13]},{name:"reduceMatchers",type:"string",multiple:!0}],defaultParams:["asPercent",2,"used_bytes"],category:"Combine",version:"1.0"}),m({name:"removeBetweenPercentile",category:"Filter Series",params:[{name:"n",type:"int"}],defaultParams:[95],version:"1.0"}),m({name:"removeEmptySeries",category:"Filter Series",version:"1.0"}),m({name:"squareRoot",category:"Transform",version:"1.0"}),m({name:"timeSlice",category:"Transform",params:[{name:"startSliceAt",type:"select",options:["-1h","-6h","-12h","-1d","-2d","-7d","-14d","-30d"]},{name:"endSliceAt",type:"select",options:["-1h","-6h","-12h","-1d","-2d","-7d","-14d","-30d"],optional:!0}],defaultParams:["-1h"],version:"1.0"}),m({name:"weightedAverage",category:"Combine",params:[{name:"other",type:"value_or_series",optional:!0},{name:"node",type:"int",options:[0,1,2,3,4,5,6,7,8,9,10,12]}],defaultParams:["#A",4],version:"1.0"}),m({name:"seriesByTag",category:"Special",params:[{name:"tagExpression",type:"string",multiple:!0}],version:"1.1"}),m({name:"groupByTags",category:"Combine",params:[{name:"function",type:"string",options:["sum","avg","maxSeries"]},{name:"tag",type:"string",multiple:!0}],defaultParams:["sum","tag"],version:"1.1"}),m({name:"aliasByTags",category:"Alias",params:[{name:"tag",type:"string",multiple:!0}],defaultParams:["tag"],version:"1.1"});class u{constructor(e,t){this.def=void 0,this.params=void 0,this.text=void 0,this.added=void 0,this.def=e,this.params=[],t&&t.withDefaultParams&&(this.params=e.defaultParams.slice(0)),this.updateText()}render(e,t){const a=this.def.name+"(",s=Object(r.map)(this.params,(e,a)=>{let s;if(a<this.def.params.length?s=this.def.params[a].type:Object(r.get)(Object(r.last)(this.def.params),"multiple")&&(s=Object(r.get)(Object(r.last)(this.def.params),"type")),Object(r.includes)(["value_or_series","boolean","int","float","node","int_or_infinity"],s))return e;const n=Object(r.isString)(e)?t(e):e;return Object(r.includes)(["int_or_interval","node_or_tag"],s)&&Object(r.isFinite)(+n)?Object(r.toString)(e):"'"+e+"'"});for(;""===s[s.length-1];)s.pop();return e&&s.unshift(e),a+s.join(", ")+")"}_hasMultipleParamsInString(e,t){return-1!==e.indexOf(",")&&(!(!this.def.params[t+1]||!this.def.params[t+1].optional)||!!(t+1>=this.def.params.length&&Object(r.get)(Object(r.last)(this.def.params),"multiple")))}updateParam(e,t){this._hasMultipleParamsInString(e,t)?Object(r.each)(e.split(","),(e,a)=>{this.updateParam(e.trim(),t+a)}):(""===e&&(t>=this.def.params.length||this.def.params[t].optional)?this.params.splice(t,1):this.params[t]=e,this.updateText())}updateText(){if(0===this.params.length)return void(this.text=this.def.name+"()");let e=this.def.name+"(";e+=this.params.join(", "),e+=")",this.text=e}}function d(e,t){return(t||l)[e]?(t||l)[e]:{name:e,params:[{multiple:!0}],unknown:!0}}var h={createFuncInstance:function(e,t,a){return Object(r.isString)(e)&&(e=d(e,a)),new u(e,t)},getFuncDef:d,getFuncDefs:function(e,t){const a={};return Object(r.forEach)(t||l,t=>{p(t,e)&&(a[t.name]=Object(r.assign)({},t,{params:Object(r.filter)(t.params,t=>p(t,e))}))}),a},parseFuncDefs:function(e){const t={};return Object(r.forEach)(e||{},(e,a)=>{if("Graph"===e.group)return;let s=e.description;s&&(s=s.replace(/:py:func:`(.+)( <[^>]*>)?`/g,"``$1``").replace(/.. seealso:: /g,"See also: ").replace(/.. code-block *:: *none/g,".. code-block::"));const n={name:e.name,description:s,category:e.group,params:[],defaultParams:[],fake:!1};/^seriesLists?$/.test(Object(r.get)(e,"params[0].type",""))?e.params[0].multiple?e.params[0].required=!1:e.params.shift():n.fake=!0,Object(r.forEach)(e.params,e=>{const t={name:e.name,type:"string",optional:!e.required,multiple:!!e.multiple,options:void 0};void 0!==e.default?e.default===1/0?n.defaultParams.push("inf"):n.defaultParams.push(Object(r.toString)(e.default)):e.suggestions?n.defaultParams.push(Object(r.toString)(e.suggestions[0])):n.defaultParams.push(""),"boolean"===e.type?(t.type="boolean",t.options=["true","false"]):"integer"===e.type?t.type="int":"float"===e.type?t.type="float":"node"===e.type?(t.type="node",t.options=["0","1","2","3","4","5","6","7","8","9","10","11","12"]):"nodeOrTag"===e.type?(t.type="node_or_tag",t.options=["name","0","1","2","3","4","5","6","7","8","9","10","11","12"]):"intOrInterval"===e.type?t.type="int_or_interval":"seriesList"===e.type?t.type="value_or_series":"intOrInf"===e.type&&(t.type="int_or_infinity"),e.options?t.options=Object(r.map)(e.options,r.toString):e.suggestions&&(t.options=Object(r.map)(e.suggestions,r.toString)),n.params.push(t)}),t[a]=n}),t}},g=a("t8hP"),f=a("5kRJ");let y;function b(e){if(e)return parseInt(e,10)}function v(e){if(e)return"true"===e||"false"!==e&&parseInt(e,10)}function j(e){for(const a of e){const e=a["archive-read"];if(e>0){var t;return{text:`Data is rolled up, aggregated over ${x(a["schema-retentions"])[e].interval} using ${(null!==(t=a["consolidator-normfetch"])&&void 0!==t?t:"").replace("Consolidator","")} function`,severity:"info",inspect:"meta"}}}return null}function O(e){for(const a of e){const e=a["aggnum-rc"];if(e>0){var t;return{text:`Data is runtime consolidated, ${e} datapoints combined using ${(null!==(t=a["consolidator-rc"])&&void 0!==t?t:"").replace("Consolidator","")} function`,severity:"info",inspect:"meta"}}}return null}function x(e){return e?e.split(",").map(e=>{const t=e.split(":");return{interval:t[0],retention:t[1],chunkspan:t[2],numchunks:b(t[3]),ready:v(t[4])}}):[]}!function(e){e.Default="default",e.Metrictank="metrictank"}(y||(y={}));var S=a("+JjO"),T=a("F/XL"),w=a("XlPw"),P=a("y3By"),C=a("67Y/"),M=a("9Z1F");const q=["0.9","1.0","1.1"],k=Object(r.last)(q);function D(){return(D=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e}).apply(this,arguments)}class F extends s.DataSourceApi{constructor(e,t=Object(f.a)()){var a,n;super(e),this.basicAuth=void 0,this.url=void 0,this.name=void 0,this.graphiteVersion=void 0,this.supportsTags=void 0,this.isMetricTank=void 0,this.rollupIndicatorEnabled=void 0,this.cacheTimeout=void 0,this.withCredentials=void 0,this.funcDefs=null,this.funcDefsPromise=null,this._seriesRefLetters=void 0,this.metricMappings=void 0,this.convertResponseToDataFrames=e=>{const t=[];if(!e||!e.data)return{data:t};const a=e.data.series||e.data;if(!Object(r.isArray)(a))throw{message:"Missing series in result",data:e};for(let r=0;r<a.length;r++){const n=a[r];n.title=n.target;for(let e=0;e<n.datapoints.length;e++)n.datapoints[e][1]*=1e3;const i=Object(s.toDataFrame)(n);if(n.meta){if(i.meta={custom:{requestMetaList:e.data.meta,seriesMetaList:n.meta}},this.rollupIndicatorEnabled){const e=j(n.meta),t=O(n.meta);e?i.meta.notices=[e]:t&&(i.meta.notices=[t])}0===r&&e.data.meta.stats&&(i.meta.stats=this.getRequestStats(e.data.meta))}t.push(i)}return{data:t}},this.templateSrv=t,this.basicAuth=e.basicAuth,this.url=e.url,this.name=e.name,this.graphiteVersion=e.jsonData.graphiteVersion||k,this.metricMappings=(null===(a=e.jsonData.importConfiguration)||void 0===a||null===(n=a.loki)||void 0===n?void 0:n.mappings)||[],this.isMetricTank=e.jsonData.graphiteType===y.Metrictank,this.supportsTags=o(this.graphiteVersion,"1.1"),this.cacheTimeout=e.cacheTimeout,this.rollupIndicatorEnabled=e.jsonData.rollupIndicatorEnabled,this.withCredentials=e.withCredentials,this.funcDefs=null,this.funcDefsPromise=null,this._seriesRefLetters="ABCDEFGHIJKLMNOPQRSTUVWXYZ"}getQueryOptionsInfo(){return{maxDataPoints:!0,cacheTimeout:!0,links:[{text:"Help",url:"http://docs.grafana.org/features/datasources/graphite/#using-graphite-in-grafana"}]}}getImportQueryConfiguration(){return{loki:{mappings:this.metricMappings}}}query(e){const t={from:this.translateTime(e.range.raw.from,!1,e.timezone),until:this.translateTime(e.range.raw.to,!0,e.timezone),targets:e.targets,format:e.format,cacheTimeout:e.cacheTimeout||this.cacheTimeout,maxDataPoints:e.maxDataPoints},a=this.buildGraphiteParams(t,e.scopedVars);if(0===a.length)return Object(T.a)({data:[]});this.isMetricTank&&a.push("meta=true");const r={method:"POST",url:"/render",data:a.join("&"),headers:{"Content-Type":"application/x-www-form-urlencoded"}};return this.addTracingHeaders(r,e),e.panelId&&(r.requestId=this.name+".panelId."+e.panelId),this.doGraphiteRequest(r).pipe(Object(C.a)(this.convertResponseToDataFrames))}addTracingHeaders(e,t){!this.url.match(/^http/)&&(t.dashboardId&&(e.headers["X-Dashboard-Id"]=t.dashboardId),t.panelId&&(e.headers["X-Panel-Id"]=t.panelId))}getRequestStats(e){const t=[];for(const a in e.stats){let r=void 0;a.endsWith(".ms")&&(r="ms"),t.push({displayName:a,value:e.stats[a],unit:r})}return t}parseTags(e){let t=[];return t=e.split(","),1===t.length&&(t=e.split(" "),""===t[0]&&(t=[])),t}interpolateVariablesInQueries(e,t){let a=e;return e&&e.length>0&&(a=e.map(e=>{var a;return D({},e,{datasource:this.name,target:this.templateSrv.replace(null!==(a=e.target)&&void 0!==a?a:"",t)})})),a}annotationQuery(e){if(e.annotation.target){const t=this.templateSrv.replace(e.annotation.target,{},"glob"),a={range:e.range,targets:[{target:t}],format:"json",maxDataPoints:100};return this.query(a).pipe(Object(C.a)(t=>{const a=[];for(let r=0;r<t.data.length;r++){const s=t.data[r];for(let t=0;t<s.length;t++){const r=s.fields[0].values.get(t);s.fields[1].values.get(t)&&a.push({annotation:e.annotation,time:r,title:s.name})}}return a})).toPromise()}{const t=this.templateSrv.replace(e.annotation.tags);return this.events({range:e.range,tags:t}).then(t=>{const a=[];if(!Object(r.isArray)(t.data))return console.error(`Unable to get annotations from ${t.url}.`),[];for(let s=0;s<t.data.length;s++){const n=t.data[s];let i=n.tags;Object(r.isString)(n.tags)&&(i=this.parseTags(n.tags)),a.push({annotation:e.annotation,time:1e3*n.when,title:n.what,tags:i,text:n.data})}return a})}}events(e){try{let t="";return e.tags&&(t="&tags="+e.tags),this.doGraphiteRequest({method:"GET",url:"/events/get_data?from="+this.translateTime(e.range.raw.from,!1,e.timezone)+"&until="+this.translateTime(e.range.raw.to,!0,e.timezone)+t}).toPromise()}catch(e){return Promise.reject(e)}}targetContainsTemplate(e){var t;return this.templateSrv.variableExists(null!==(t=e.target)&&void 0!==t?t:"")}translateTime(e,t,a){if(Object(r.isString)(e)){if("now"===e)return"now";if(e.indexOf("now-")>=0&&-1===e.indexOf("/"))return e=(e=(e=e.substring(3)).replace("m","min")).replace("M","mon");e=s.dateMath.parse(e,t,a)}return t?e.get("s")&&e.add(1,"s"):!1===t&&e.get("s")&&e.subtract(1,"s"),e.unix()}metricFindQuery(e,t){const a=t||{};let r=this.templateSrv.replace(e,Object(S.g)({query:e,wildcardChar:"",options:t})),s=r.match(/^tag_values\((.*)\)$/),n=s?s[1].split(",").filter(e=>!!e):void 0;if(n)return a.limit=1e4,this.getTagValuesAutoComplete(n.slice(1),n[0],void 0,a);if(s=r.match(/^tags\((.*)\)$/),n=s?s[1].split(",").filter(e=>!!e):void 0,n)return a.limit=1e4,this.getTagsAutoComplete(n,void 0,a);let i,o=e.match(/^expand\((.*)\)$/);return e=o?o[1]:e,r=this.templateSrv.replace(e,Object(S.g)({query:e,wildcardChar:"*",options:t})),a.range&&(i={from:this.translateTime(a.range.from,!1,a.timezone),until:this.translateTime(a.range.to,!0,a.timezone)}),o?this.requestMetricExpand(r,a.requestId,i):this.requestMetricFind(r,a.requestId,i)}requestMetricFind(e,t,a){const s={method:"POST",url:"/metrics/find",params:{},data:"query="+e,headers:{"Content-Type":"application/x-www-form-urlencoded"},requestId:t};return a&&(s.params.from=a.from,s.params.until=a.until),this.doGraphiteRequest(s).pipe(Object(C.a)(e=>Object(r.map)(e.data,e=>({text:e.text,expandable:!!e.expandable})))).toPromise()}requestMetricExpand(e,t,a){const s={method:"GET",url:"/metrics/expand",params:{query:e},headers:{"Content-Type":"application/x-www-form-urlencoded"},requestId:t};return a&&(s.params.from=a.from,s.params.until=a.until),this.doGraphiteRequest(s).pipe(Object(C.a)(e=>Object(r.map)(e.data.results,e=>({text:e,expandable:!1})))).toPromise()}getTags(e){const t=e||{},a={method:"GET",url:"/tags",requestId:t.requestId};return t.range&&(a.params.from=this.translateTime(t.range.from,!1,t.timezone),a.params.until=this.translateTime(t.range.to,!0,t.timezone)),this.doGraphiteRequest(a).pipe(Object(C.a)(e=>Object(r.map)(e.data,e=>({text:e.tag,id:e.id})))).toPromise()}getTagValues(e={}){const t={method:"GET",url:"/tags/"+this.templateSrv.replace(e.key),requestId:e.requestId};return e.range&&(t.params.from=this.translateTime(e.range.from,!1,e.timezone),t.params.until=this.translateTime(e.range.to,!0,e.timezone)),this.doGraphiteRequest(t).pipe(Object(C.a)(e=>e.data&&e.data.values?Object(r.map)(e.data.values,e=>({text:e.value,id:e.id})):[])).toPromise()}getTagsAutoComplete(e,t,a){const s=a||{},n={method:"GET",url:"/tags/autoComplete/tags",params:{expr:Object(r.map)(e,e=>this.templateSrv.replace((e||"").trim()))},requestId:s.requestId};return t&&(n.params.tagPrefix=t),s.limit&&(n.params.limit=s.limit),s.range&&(n.params.from=this.translateTime(s.range.from,!1,s.timezone),n.params.until=this.translateTime(s.range.to,!0,s.timezone)),this.doGraphiteRequest(n).pipe(I()).toPromise()}getTagValuesAutoComplete(e,t,a,s){const n=s||{},i={method:"GET",url:"/tags/autoComplete/values",params:{expr:Object(r.map)(e,e=>this.templateSrv.replace((e||"").trim())),tag:this.templateSrv.replace((t||"").trim())},requestId:n.requestId};return a&&(i.params.valuePrefix=a),n.limit&&(i.params.limit=n.limit),n.range&&(i.params.from=this.translateTime(n.range.from,!1,n.timezone),i.params.until=this.translateTime(n.range.to,!0,n.timezone)),this.doGraphiteRequest(i).pipe(I()).toPromise()}getVersion(e){const t={method:"GET",url:"/version",requestId:(e||{}).requestId};return this.doGraphiteRequest(t).pipe(Object(C.a)(e=>{if(e.data){return new i(e.data).isValid()?e.data:""}return""}),Object(M.a)(()=>Object(T.a)(""))).toPromise()}createFuncInstance(e,t){return h.createFuncInstance(e,t,this.funcDefs)}getFuncDef(e){return h.getFuncDef(e,this.funcDefs)}waitForFuncDefsLoaded(){return this.getFuncDefs()}getFuncDefs(){if(null!==this.funcDefsPromise)return this.funcDefsPromise;if(!o(this.graphiteVersion,"1.1"))return this.funcDefs=h.getFuncDefs(this.graphiteVersion),this.funcDefsPromise=Promise.resolve(this.funcDefs),this.funcDefsPromise;return this.doGraphiteRequest({method:"GET",url:"/functions"}).pipe(Object(C.a)(e=>{if(200!==e.status||"object"!=typeof e.data)if("string"==typeof e.data){const t=JSON.parse(e.data.replace(/"default": ?Infinity/g,'"default": 1e9999'));this.funcDefs=h.parseFuncDefs(t)}else this.funcDefs=h.getFuncDefs(this.graphiteVersion);else this.funcDefs=h.parseFuncDefs(e.data);return this.funcDefs}),Object(M.a)(e=>(console.error("Fetching graphite functions error",e),this.funcDefs=h.getFuncDefs(this.graphiteVersion),Object(T.a)(this.funcDefs)))).toPromise()}testDatasource(){return this.query({panelId:3,rangeRaw:{from:"now-1h",to:"now"},range:{raw:{from:"now-1h",to:"now"}},targets:[{target:"constantLine(100)"}],maxDataPoints:300}).toPromise().then(()=>({status:"success",message:"Data source is working"}))}doGraphiteRequest(e){return(this.basicAuth||this.withCredentials)&&(e.withCredentials=!0),this.basicAuth&&(e.headers=e.headers||{},e.headers.Authorization=this.basicAuth),e.url=this.url+e.url,e.inspect={type:"graphite"},Object(g.getBackendSrv)().fetch(e).pipe(Object(M.a)(e=>Object(w.a)(function(e){var t,a;if(e&&500===e.status&&null!==(t=e.data)&&void 0!==t&&null!==(a=t.message)&&void 0!==a&&a.startsWith("<body")){const t=Object(r.last)(e.data.message.replace(/(<([^>]+)>)/gi,"").trim().split(/\n/)).replace(/u?&#[^;]+;/g,"");e.data.message="Graphite encountered an unexpected error while handling your request. "+t}return e}(e))))}buildGraphiteParams(e,t){const a=["from","until","rawData","format","maxDataPoints","cacheTimeout"],s=[],n={};let i,o,l;const m=/\#([A-Z])/g,c=/'(\d+)m'/gi;let p=!1;function u(e){return e.replace("m","min").replace("M","mon")}for(e.format="json",l=0;l<e.targets.length;l++)i=e.targets[l],i.target&&(i.refId||(i.refId=this._seriesRefLetters[l]),o=this.templateSrv.replace(i.target,t),o=o.replace(c,u),n[i.refId]=o);function d(e,t){return n[t]||e}for(l=0;l<e.targets.length;l++)i=e.targets[l],i.target&&(o=n[i.refId],o=o.replace(m,d),n[i.refId]=o,i.hide||(p=!0,s.push("target="+encodeURIComponent(o))));return Object(r.each)(e,(e,t)=>{-1!==Object(r.indexOf)(a,t)&&e&&s.push(t+"="+encodeURIComponent(e))}),p?s:[]}}function I(){return Object(P.a)(Object(C.a)(e=>e.data?Object(r.map)(e.data,e=>({text:e})):[]))}var A=a("+2Rf"),N=a.n(A),_=a("XI+/"),$=a.n(_),E=a("txxJ");function R(e){return{link:function(t,s){const n=t.ctrl,i=N()('<input type="text" class="gf-form-input" spellcheck="false" style="display:none"></input>'),o=N()('<a class="gf-form-label dropdown-toggle" tabindex="1" gf-dropdown="functionMenu" data-toggle="dropdown"><icon name="\'plus\'" size="\'sm\'"></name></a>');let l;i.appendTo(s),o.appendTo(s),n.datasource.getFuncDefs().then(a=>{const l=Object(r.map)(a,"name").sort();t.functionMenu=function(e){const t={};return Object(r.forEach)(e,e=>{e.category&&(t[e.category]||(t[e.category]=[]),t[e.category].push({text:e.name,click:"ctrl.addFunction('"+e.name+"')"}))}),Object(r.sortBy)(Object(r.map)(t,(e,t)=>({text:t,submenu:Object(r.sortBy)(e,"text")})),"text")}(a),i.attr("data-provide","typeahead"),i.typeahead({source:l,minLength:1,items:10,updater:e=>{let a=n.datasource.getFuncDef(e);return a||(e=e.toLowerCase(),a=Object(r.find)(l,t=>0===t.toLowerCase().indexOf(e)),a)?(t.$apply(()=>{n.addFunction(a)}),i.trigger("blur"),""):""}}),o.click(()=>{o.hide(),i.show(),i.focus()}),i.keyup(()=>{s.toggleClass("open",""===i.val())}),i.blur(()=>{setTimeout(()=>{i.val(""),i.hide(),o.show(),s.removeClass("open")},200)}),e(s.contents())(t)});const m=()=>{l&&(l.destroy(),l=null)};N()(s).on("mouseenter","ul.dropdown-menu li",async()=>{let e;m();try{e=n.datasource.getFuncDef(N()("a",this).text())}catch(e){}if(e&&e.description){let t=e.description;t.length>500&&(t=t.substring(0,497)+"...");const r=document.createElement("div"),{default:s}=await a.e(81).then(a.t.bind(null,"fQim",7));r.innerHTML="<h4>"+e.name+"</h4>"+s(t),l=new $.a({target:this,content:r,classes:"drop-popover",openOn:"always",tetherOptions:{attachment:"bottom left",targetAttachment:"bottom right"}})}}).on("mouseout","ul.dropdown-menu li",()=>{m()}),t.$on("$destroy",m)}}}function B(e,t){return{restrict:"A",link:function(a,s){const n=N()('\n    <function-editor\n      func="func"\n      onRemove="ctrl.handleRemoveFunction"\n      onMoveLeft="ctrl.handleMoveLeft"\n      onMoveRight="ctrl.handleMoveRight">\n    </function-editor>\n    <span>(</span>\n  '),i=a.ctrl,o=a.func;let l=!1,m=0,c=null;function p(e){const t=N()(this),a=t.prev(".comma"),r=t.next();r.val(o.params[e]),a.removeClass("query-part__last"),t.hide(),r.show(),r.focus(),r.select();const s=r.data("typeahead");s&&(r.val(""),s.lookup())}function u(e){return e<o.def.params.length?o.def.params[e]:Object(r.last)(o.def.params).multiple?Object(r.assign)({},Object(r.last)(o.def.params),{optional:!0}):{}}function d(e,r){const s=N()(e);clearTimeout(c),c=null;const n=s.prev(),p=n.prev(".comma"),d=s.val();(""!==d||u(r).optional)&&(o.updateParam(d,r),n.html(d?t.highlightVariablesAsHtml(d):"&nbsp;")),m!==o.params.length&&(l||(l=!0,setTimeout(()=>{b(),l=!1},200))),a.$apply(()=>{i.targetChanged()}),n.hasClass("query-part__last")&&""===d?p.addClass("query-part__last"):n.removeClass("query-part__last"),s.hide(),n.show()}function h(e){const t=this;c=setTimeout(()=>{d(t,e)},200)}function g(e,t){13===t.which&&N()(this).blur()}function f(){this.style.width=8*(3+this.value.length)+"px"}function y(){n.appendTo(s),o.def.unknown&&s.addClass("unknown-function");const i=Object(r.clone)(o.def.params),l=Object(r.last)(o.def.params);for(;o.params.length>=i.length&&l&&l.multiple;)i.push(Object(r.assign)({},l,{optional:!0}));Object(r.each)(i,(e,a)=>{if(e.optional&&o.params.length<a)return!1;let n=t.highlightVariablesAsHtml(o.params[a]);const i=null!=n&&""!==n,l=a>=o.params.length-1&&e.optional&&!i;let c="query-part__link";l&&(c+=" query-part__last"),l&&e.multiple?n="+":i||(n=e.name,c+=" query-part__link--no-value"),a>0&&N()('<span class="comma'+(l?" query-part__last":"")+'">, </span>').appendTo(s);const y=N()(`<a ng-click="" class="${c}">${n}</a>`),b=N()('<input type="text" style="display:none" class="input-small tight-form-func-param"></input>');return b.attr("placeholder",e.name),m++,y.appendTo(s),b.appendTo(s),b.blur(Object(r.partial)(h,a)),b.keyup(f),b.keypress(Object(r.partial)(g,a)),y.click(Object(r.partial)(p,a)),e.options&&function(e,t){e.attr("data-provide","typeahead");let a=u(t).options;"int"===u(t).type&&(a=Object(r.map)(a,e=>e.toString())),e.typeahead({source:a,minLength:0,items:20,updater:a=>(e.val(a),d(e[0],t),a)}),e.data("typeahead").lookup=function(){return this.query=this.$element.val()||"",this.process(this.source)}}(b,a),!0}),N()("<span>)</span>").appendTo(s),e(s.contents())(a)}function b(){s.children().remove(),y(),a.func.added&&(a.func.added=!1,setTimeout(()=>{s.find(".query-part__link").first().click()},10))}i.handleRemoveFunction=e=>{i.removeFunction(e)},i.handleMoveLeft=e=>{i.moveFunction(e,-1)},i.handleMoveRight=e=>{i.moveFunction(e,1)},b()}}}R.$inject=["$compile"],E.c.directive("graphiteAddFunc",R),B.$inject=["$compile","templateSrv"],E.c.directive("graphiteFuncEditor",B);var G=a("Mug+"),V=a("LzXI"),L=a("2KQq"),z=a("iODs"),H=a("3SGO"),W=a("UvM7");const U=["=","!=","=~","!=~"];class Q extends V.QueryCtrl{constructor(e,t,a,r,s){super(e,t),this.queryModel=void 0,this.segments=[],this.addTagSegments=[],this.removeTagValue=void 0,this.supportsTags=!1,this.paused=!1,this._tagsAutoCompleteErrorShown=!1,this._metricAutoCompleteErrorShown=!1,this.uiSegmentSrv=a,this.templateSrv=r,this.supportsTags=this.datasource.supportsTags,this.paused=!1,this.target.target=this.target.target||"",this.datasource.waitForFuncDefsLoaded().then(()=>{this.queryModel=new G.a(this.datasource,this.target,r),this.buildSegments(!1)}),this.removeTagValue="-- remove tag --"}parseTarget(){this.queryModel.parseTarget(),this.buildSegments()}toggleEditorMode(){this.target.textEditor=!this.target.textEditor,this.parseTarget()}buildSegments(e=!0){this.segments=Object(r.map)(this.queryModel.segments,e=>this.uiSegmentSrv.newSegment(e));const t=this.queryModel.checkOtherSegmentsIndex||0;Object(L.a)(this.$scope)(this.checkOtherSegments(t,e)),this.queryModel.seriesByTagUsed&&this.fixTagSegments()}addSelectMetricSegment(){this.queryModel.addSelectMetricSegment(),this.segments.push(this.uiSegmentSrv.newSelectMetric())}checkOtherSegments(e,t=!0){if(1===this.queryModel.segments.length&&"series-ref"===this.queryModel.segments[0].type)return Promise.resolve();if(0===e)return this.addSelectMetricSegment(),Promise.resolve();const a=this.queryModel.getSegmentPathUpTo(e+1);return""===a?Promise.resolve():this.datasource.metricFindQuery(a).then(r=>{if(0===r.length)""!==a&&t&&(this.queryModel.segments=this.queryModel.segments.splice(0,e),this.segments=this.segments.splice(0,e),this.addSelectMetricSegment());else if(r[0].expandable){if(this.segments.length!==e)return this.checkOtherSegments(e+1);this.addSelectMetricSegment()}}).catch(e=>{this.handleMetricsAutoCompleteError(e)})}setSegmentFocus(e){Object(r.each)(this.segments,(t,a)=>{t.focus=e===a})}getAltSegments(e,t){let a=t&&t.length>0?"*"+t+"*":"*";e>0&&(a=this.queryModel.getSegmentPathUpTo(e)+"."+a);const s={range:this.panelCtrl.range,requestId:"get-alt-segments"};return this.datasource.metricFindQuery(a,s).then(a=>{const s=Object(r.map)(a,e=>this.uiSegmentSrv.newSegment({value:e.text,expandable:e.expandable}));return e>0&&0===s.length?s:(0===e&&Object(r.eachRight)(this.panelCtrl.panel.targets,e=>{e.refId!==this.queryModel.target.refId&&s.unshift(this.uiSegmentSrv.newSegment({type:"series-ref",value:"#"+e.refId,expandable:!1}))}),Object(r.eachRight)(this.templateSrv.getVariables(),e=>{s.unshift(this.uiSegmentSrv.newSegment({type:"template",value:"$"+e.name,expandable:!0}))}),s.unshift(this.uiSegmentSrv.newSegment("*")),this.supportsTags&&0===e?(this.removeTaggedEntry(s),this.addAltTagSegments(t,s)):s)}).catch(e=>(this.handleMetricsAutoCompleteError(e),[]))}addAltTagSegments(e,t){return this.getTagsAsSegments(e).then(e=>(e=Object(r.map)(e,e=>(e.value="tag: "+e.value,e)),t.concat(...e)))}removeTaggedEntry(e){e=Object(r.remove)(e,e=>"_tagged"===e.value)}segmentValueChanged(e,t){if(this.error=null,this.queryModel.updateSegmentValue(e,t),this.queryModel.functions.length>0&&this.queryModel.functions[0].def.fake&&(this.queryModel.functions=[]),"tag"===e.type){const t=e.value.replace("tag: ","");return this.pause(),this.addSeriesByTagFunc(t),null}return e.expandable?Object(L.a)(this.$scope)(this.checkOtherSegments(t+1).then(()=>{this.setSegmentFocus(t+1),this.targetChanged()})):(this.spliceSegments(t+1),this.setSegmentFocus(t+1),this.targetChanged(),null)}spliceSegments(e){this.segments=this.segments.splice(0,e),this.queryModel.segments=this.queryModel.segments.splice(0,e)}emptySegments(){this.queryModel.segments=[],this.segments=[]}targetTextChanged(){this.updateModelTarget(),this.refresh()}updateModelTarget(){this.queryModel.updateModelTarget(this.panelCtrl.panel.targets)}targetChanged(){if(this.queryModel.error)return;const e=this.queryModel.target.target;this.updateModelTarget(),this.queryModel.target===e||this.paused||this.panelCtrl.refresh()}addFunction(e){const t=this.datasource.createFuncInstance(e,{withDefaultParams:!0});t.added=!0,this.queryModel.addFunction(t),this.smartlyHandleNewAliasByNode(t),1===this.segments.length&&this.segments[0].fake&&this.emptySegments(),!t.params.length&&t.added&&this.targetChanged(),"seriesByTag"===t.def.name&&this.parseTarget()}removeFunction(e){this.queryModel.removeFunction(e),this.targetChanged()}moveFunction(e,t){this.queryModel.moveFunction(e,t),this.targetChanged()}addSeriesByTagFunc(e){const t=this.datasource.createFuncInstance("seriesByTag",{withDefaultParams:!1}),a=e+"=";t.params=[a],this.queryModel.addFunction(t),t.added=!0,this.emptySegments(),this.targetChanged(),this.parseTarget()}smartlyHandleNewAliasByNode(e){if("aliasByNode"===e.def.name)for(let t=0;t<this.segments.length;t++)if(this.segments[t].value.indexOf("*")>=0)return e.params[0]=t,e.added=!1,void this.targetChanged()}getAllTags(){return this.datasource.getTags().then(e=>{const t=Object(r.map)(e,"text");return t.splice(0,0,this.removeTagValue),J(t)})}getTags(e,t){const a=this.queryModel.renderTagExpressions(e);return this.datasource.getTagsAutoComplete(a,t).then(e=>{const t=Object(r.map)(e,"text");return t.splice(0,0,this.removeTagValue),J(t)}).catch(e=>{this.handleTagsAutoCompleteError(e)})}getTagsAsSegments(e){const t=this.queryModel.renderTagExpressions();return this.datasource.getTagsAutoComplete(t,e).then(e=>Object(r.map)(e,e=>this.uiSegmentSrv.newSegment({value:e.text,type:"tag",expandable:!1}))).catch(e=>{this.handleTagsAutoCompleteError(e)})}getTagOperators(){return J(U)}getAllTagValues(e){const t=e.key;return this.datasource.getTagValues(t).then(e=>J(Object(r.map)(e,"text")))}getTagValues(e,t,a){const s=this.queryModel.renderTagExpressions(t),n=e.key;return this.datasource.getTagValuesAutoComplete(s,n,a).then(e=>{const t=Object(r.map)(e,"text");return Object(r.eachRight)(this.templateSrv.getVariables(),e=>{t.push("${"+e.name+":regex}")}),J(t)})}tagChanged(e,t){this.queryModel.updateTag(e,t),this.targetChanged()}addNewTag(e){const t={key:e.value,operator:"=",value:""};this.queryModel.addTag(t),this.targetChanged(),this.fixTagSegments()}removeTag(e){this.queryModel.removeTag(e),this.targetChanged()}fixTagSegments(){this.addTagSegments=[this.uiSegmentSrv.newPlusButton()]}showDelimiter(e){return e!==this.queryModel.tags.length-1}pause(){this.paused=!0}unpause(){this.paused=!1,this.panelCtrl.refresh()}getCollapsedText(){return this.target.target}handleTagsAutoCompleteError(e){console.error(e),this._tagsAutoCompleteErrorShown||(this._tagsAutoCompleteErrorShown=!0,Object(z.a)(Object(H.b)(Object(W.a)(`Fetching tags failed: ${e.message}.`))))}handleMetricsAutoCompleteError(e){console.error(e),this._metricAutoCompleteErrorShown||(this._metricAutoCompleteErrorShown=!0,Object(z.a)(Object(H.b)(Object(W.a)(`Fetching metrics failed: ${e.message}.`))))}}function J(e){return Object(r.map)(e,e=>({text:e,value:e}))}Q.$inject=["$scope","$injector","uiSegmentSrv","templateSrv","$timeout"],Q.templateUrl="partials/query.editor.html";var X,Z,K,Y,ee,te,ae,re=a("q1tI"),se=a("kDLi"),ne=a("nKUr");function ie(e){return Object(ne.jsxs)(se.Alert,{severity:"info",title:"How to map Graphite metrics to labels?",onRemove:e.onDismiss,children:[X||(X=Object(ne.jsx)("p",{children:"Mappings are currently supported only between Graphite and Loki queries."})),Z||(Z=Object(ne.jsx)("p",{children:"When you switch your data source from Graphite to Loki, your queries are mapped according to the mappings defined in the example below. To define a mapping, write the full path of the metric and replace nodes you want to map to label with the label name in parentheses. The value of the label is extracted from your Graphite query when you switch data sources."})),K||(K=Object(ne.jsx)("p",{children:"All tags are automatically mapped to labels regardless of the mapping configuration. Graphite matching patterns (using {}) are converted to Loki's regular expressions matching patterns. When you use functions in your queries, the metrics, and tags are extracted to match them with defined mappings."})),Y||(Y=Object(ne.jsxs)("p",{children:["Example: for a mapping = ",Object(ne.jsx)("code",{children:"servers.(cluster).(server).*"}),":"]})),ee||(ee=Object(ne.jsxs)("table",{children:[Object(ne.jsx)("thead",{children:Object(ne.jsxs)("tr",{children:[Object(ne.jsx)("th",{children:"Graphite query"}),Object(ne.jsx)("th",{children:"Mapped to Loki query"})]})}),Object(ne.jsxs)("tbody",{children:[Object(ne.jsxs)("tr",{children:[Object(ne.jsx)("td",{children:Object(ne.jsxs)("code",{children:["alias(servers.",Object(ne.jsx)("u",{children:"west"}),".",Object(ne.jsx)("u",{children:"001"}),".cpu,1,2)"]})}),Object(ne.jsx)("td",{children:Object(ne.jsxs)("code",{children:['{cluster="',Object(ne.jsx)("u",{children:"west"}),'", server="',Object(ne.jsx)("u",{children:"001"}),'"}']})})]}),Object(ne.jsxs)("tr",{children:[Object(ne.jsx)("td",{children:Object(ne.jsxs)("code",{children:["alias(servers.*.",Object(ne.jsx)("u",{children:"{001,002}"}),".*,1,2)"]})}),Object(ne.jsx)("td",{children:Object(ne.jsxs)("code",{children:['{server=~"',Object(ne.jsx)("u",{children:"(001|002)"}),'"}']})})]}),Object(ne.jsxs)("tr",{children:[Object(ne.jsx)("td",{children:Object(ne.jsx)("code",{children:"interpolate(seriesByTag('foo=bar', 'server=002'), inf))"})}),Object(ne.jsx)("td",{children:Object(ne.jsx)("code",{children:'{foo="bar", server="002"}'})})]})]})]}))]})}const oe=e=>{const[t,a]=Object(re.useState)(e.mappings||[]);return Object(ne.jsxs)("div",{children:[te||(te=Object(ne.jsx)("h3",{className:"page-heading",children:"Label mappings"})),!e.showHelp&&Object(ne.jsx)("p",{children:Object(ne.jsx)(se.Button,{variant:"link",onClick:e.onRestoreHelp,children:"Learn how label mappings work"})}),e.showHelp&&Object(ne.jsx)(ie,{onDismiss:e.onDismiss}),Object(ne.jsxs)("div",{className:"gf-form-group",children:[t.map((r,s)=>Object(ne.jsxs)(se.InlineFieldRow,{children:[Object(ne.jsx)(se.InlineField,{label:`Mapping (${s+1})`,children:Object(ne.jsx)(se.Input,{width:50,onChange:e=>{let r=t.concat();r[s]=e.target.value,a(r)},onBlur:()=>{e.onChange(t)},placeholder:"e.g. test.metric.(labelName).*",value:r})}),Object(ne.jsx)(se.Button,{type:"button","aria-label":"Remove header",variant:"secondary",size:"xs",onClick:r=>{let n=t.concat();n.splice(s,1),a(n),e.onChange(n)},children:ae||(ae=Object(ne.jsx)(se.Icon,{name:"trash-alt"}))})]},s)),Object(ne.jsx)(se.Button,{variant:"secondary",icon:"plus",type:"button",onClick:()=>{a([...t,""])},children:"Add label mapping"})]})]})};function le(e){return{matchers:e.split(".").map(e=>e.startsWith("(")&&e.endsWith(")")?{value:"*",labelName:e.slice(1,-1)}:{value:e})}}function me(e){return e.matchers.map(e=>e.labelName?`(${e.labelName})`:""+e.value).join(".")}var ce,pe,ue,de=a("SMGL");function he(){return(he=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e}).apply(this,arguments)}const{Select:ge,Switch:fe}=se.LegacyForms,ye="grafana.datasources.graphite.config.showMappingsHelp",be=q.map(e=>({label:e+".x",value:e})),ve=Object.entries(y).map(([e,t])=>({label:e,value:t}));class je extends re.PureComponent{constructor(e){super(e),this.renderTypeHelp=()=>ce||(ce=Object(ne.jsxs)("p",{children:["There are different types of Graphite compatible backends. Here you can specify the type you are using. If you are using"," ",Object(ne.jsx)("a",{href:"https://github.com/grafana/metrictank",className:"pointer",target:"_blank",rel:"noreferrer",children:"Metrictank"})," ","then select that here. This will enable Metrictank specific features like query processing meta data. Metrictank is a multi-tenant timeseries engine for Graphite and friends."]})),this.state={showMappingsHelp:de.a.getObject(ye,!0)}}componentDidMount(){Object(s.updateDatasourcePluginJsonDataOption)(this.props,"graphiteVersion",this.currentGraphiteVersion)}render(){var e,t;const{options:a,onOptionsChange:r}=this.props,n=be.find(e=>e.value===this.currentGraphiteVersion);return Object(ne.jsxs)(ne.Fragment,{children:[Object(ne.jsx)(se.DataSourceHttpSettings,{defaultUrl:"http://localhost:8080",dataSourceConfig:a,onChange:r}),pe||(pe=Object(ne.jsx)("h3",{className:"page-heading",children:"Graphite details"})),Object(ne.jsxs)("div",{className:"gf-form-group",children:[Object(ne.jsx)("div",{className:"gf-form-inline",children:Object(ne.jsxs)("div",{className:"gf-form",children:[ue||(ue=Object(ne.jsx)(se.InlineFormLabel,{tooltip:"This option controls what functions are available in the Graphite query editor.",children:"Version"})),Object(ne.jsx)(ge,{value:n,options:be,width:8,onChange:Object(s.onUpdateDatasourceJsonDataOptionSelect)(this.props,"graphiteVersion")})]})}),Object(ne.jsx)("div",{className:"gf-form-inline",children:Object(ne.jsxs)("div",{className:"gf-form",children:[Object(ne.jsx)(se.InlineFormLabel,{tooltip:this.renderTypeHelp,children:"Type"}),Object(ne.jsx)(ge,{options:ve,value:ve.find(e=>e.value===a.jsonData.graphiteType),width:8,onChange:Object(s.onUpdateDatasourceJsonDataOptionSelect)(this.props,"graphiteType")})]})}),a.jsonData.graphiteType===y.Metrictank&&Object(ne.jsx)("div",{className:"gf-form-inline",children:Object(ne.jsx)("div",{className:"gf-form",children:Object(ne.jsx)(fe,{label:"Rollup indicator",labelClass:"width-10",tooltip:"Shows up as an info icon in panel headers when data is aggregated",checked:!!a.jsonData.rollupIndicatorEnabled,onChange:Object(s.onUpdateDatasourceJsonDataOptionChecked)(this.props,"rollupIndicatorEnabled")})})})]}),Object(ne.jsx)(oe,{mappings:((null===(e=a.jsonData.importConfiguration)||void 0===e||null===(t=e.loki)||void 0===t?void 0:t.mappings)||[]).map(me),showHelp:this.state.showMappingsHelp,onDismiss:()=>{this.setState({showMappingsHelp:!1}),de.a.setObject(ye,!1)},onRestoreHelp:()=>{this.setState({showMappingsHelp:!0}),de.a.setObject(ye,!0)},onChange:e=>{r(he({},a,{jsonData:he({},a.jsonData,{importConfiguration:he({},a.jsonData.importConfiguration,{loki:{mappings:e.map(le)}})})}))}})]})}get currentGraphiteVersion(){return this.props.options.jsonData.graphiteVersion||k}}var Oe,xe,Se,Te,we,Pe=a("vF1F"),Ce=a("ZFWI");class Me extends re.PureComponent{renderMeta(e,t){var a;const r=qe(),n=x(e["schema-retentions"]),i=j([e]),o=O([e]),l=(null!==(a=e["consolidator-normfetch"])&&void 0!==a?a:"").replace("Consolidator",""),m=n.reduce((e,t)=>e+(t.retention?s.rangeUtil.intervalToSeconds(t.retention):0),0);return Object(ne.jsxs)("div",{className:r.metaItem,children:[Object(ne.jsxs)("div",{className:r.metaItemHeader,children:["Schema: ",e["schema-name"],Object(ne.jsxs)("div",{className:"small muted",children:["Series count: ",e.count]})]}),Object(ne.jsxs)("div",{className:r.metaItemBody,children:[Object(ne.jsxs)("div",{className:r.step,children:[Object(ne.jsx)("div",{className:r.stepHeading,children:"Step 1: Fetch"}),Object(ne.jsx)("div",{className:r.stepDescription,children:"First data is fetched, either from raw data archive or a rollup archive"}),i&&Object(ne.jsx)("p",{children:i.text}),!i&&(Oe||(Oe=Object(ne.jsx)("p",{children:"No rollup archive was used"}))),Object(ne.jsx)("div",{children:n.map((t,a)=>{const n=(t.retention?s.rangeUtil.intervalToSeconds(t.retention):0)/m*100,i=a===e["archive-read"];return Object(ne.jsxs)("div",{className:r.bucket,children:[Object(ne.jsx)("div",{className:r.bucketInterval,children:t.interval}),Object(ne.jsx)("div",{className:Object(Pe.cx)(r.bucketRetention,{[r.bucketRetentionActive]:i}),style:{flexGrow:n}}),Object(ne.jsx)("div",{style:{flexGrow:100-n},children:t.retention})]},t.retention)})})]}),Object(ne.jsxs)("div",{className:r.step,children:[Object(ne.jsx)("div",{className:r.stepHeading,children:"Step 2: Normalization"}),Object(ne.jsx)("div",{className:r.stepDescription,children:"Normalization happens when series with different intervals between points are combined."}),e["aggnum-norm"]>1&&Object(ne.jsxs)("p",{children:["Normalization did occur using ",l]}),1===e["aggnum-norm"]&&(xe||(xe=Object(ne.jsx)("p",{children:"No normalization was needed"})))]}),Object(ne.jsxs)("div",{className:r.step,children:[Object(ne.jsx)("div",{className:r.stepHeading,children:"Step 3: Runtime consolidation"}),Object(ne.jsx)("div",{className:r.stepDescription,children:"If there are too many data points at this point Metrictank will consolidate them down to below max data points (set in queries tab)."}),o&&Object(ne.jsx)("p",{children:o.text}),!o&&(Se||(Se=Object(ne.jsx)("p",{children:"No runtime consolidation"})))]})]})]},t)}render(){const{data:e}=this.props,t={};for(const a of e)if(a.meta&&a.meta.custom)for(const e of a.meta.custom.seriesMetaList){const a=""+JSON.stringify(e);t[a]?t[a].count+=e.count:t[a]=e}return 0===Object.keys(t).length?Te||(Te=Object(ne.jsx)("div",{children:"No response meta data"})):Object(ne.jsxs)("div",{children:[we||(we=Object(ne.jsx)("h2",{className:"page-heading",children:"Metrictank Lineage"})),Object.keys(t).map(e=>this.renderMeta(t[e],e))]})}}const qe=Object(se.stylesFactory)(()=>{const{theme:e}=Ce.a,t=e.isDark?e.palette.gray25:e.palette.gray85,a=e.isDark?e.palette.dark1:e.palette.white,r=e.isDark?e.palette.gray15:e.palette.gray85;return{metaItem:Pe.css`
      background: ${a};
      border: 1px solid ${t};
      margin-bottom: ${e.spacing.md};
    `,metaItemHeader:Pe.css`
      background: ${r};
      padding: ${e.spacing.xs} ${e.spacing.md};
      font-size: ${e.typography.size.md};
      display: flex;
      justify-content: space-between;
    `,metaItemBody:Pe.css`
      padding: ${e.spacing.md};
    `,stepHeading:Pe.css`
      font-size: ${e.typography.size.md};
    `,stepDescription:Pe.css`
      font-size: ${e.typography.size.sm};
      color: ${e.colors.textWeak};
      margin-bottom: ${e.spacing.sm};
    `,step:Pe.css`
      margin-bottom: ${e.spacing.lg};

      &:last-child {
        margin-bottom: 0;
      }
    `,bucket:Pe.css`
      display: flex;
      margin-bottom: ${e.spacing.sm};
      border-radius: ${e.border.radius.md};
    `,bucketInterval:Pe.css`
      flex-grow: 0;
      width: 60px;
    `,bucketRetention:Pe.css`
      background: linear-gradient(0deg, ${e.palette.blue85}, ${e.palette.blue95});
      text-align: center;
      color: ${e.palette.white};
      margin-right: ${e.spacing.md};
      border-radius: ${e.border.radius.md};
    `,bucketRetentionActive:Pe.css`
      background: linear-gradient(0deg, ${e.palette.greenBase}, ${e.palette.greenShade});
    `}});a.d(t,"plugin",(function(){return De}));class ke{}ke.templateUrl="partials/annotations.editor.html";const De=new s.DataSourcePlugin(F).setQueryCtrl(Q).setConfigEditor(je).setMetadataInspector(Me).setAnnotationQueryCtrl(ke)}}]);
//# sourceMappingURL=graphitePlugin.17511e2bf08b06f121f8.js.map