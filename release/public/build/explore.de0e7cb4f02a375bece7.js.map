{"version":3,"sources":["webpack:///./public/app/core/components/Animations/FadeIn.tsx","webpack:///./public/app/features/explore/ErrorContainer.tsx","webpack:///./public/app/features/dashboard/dashgrid/SeriesVisibilityConfigFactory.ts","webpack:///./public/app/features/explore/state/selectors.ts","webpack:///./public/app/features/explore/RichHistory/RichHistorySettings.tsx","webpack:///./public/app/features/explore/RichHistory/RichHistoryQueriesTab.tsx","webpack:///./public/app/features/explore/RichHistory/RichHistoryStarredTab.tsx","webpack:///./public/app/features/explore/RichHistory/RichHistory.tsx","webpack:///./public/app/features/query/components/HelpToggle.tsx","webpack:///./node_modules/fast-memoize/src/index.js","webpack:///./public/app/features/explore/ReturnToDashboardButton.tsx","webpack:///./public/app/features/explore/QueryRow.tsx","webpack:///./node_modules/react-use/esm/useInterval.js","webpack:///./public/app/features/explore/Time.tsx","webpack:///./public/app/features/explore/ElapsedTime.tsx","webpack:///./public/app/features/explore/LiveLogs.tsx","webpack:///./public/app/features/explore/RichHistory/RichHistoryContainer.tsx","webpack:///./public/app/features/explore/ExploreQueryInspector.tsx","webpack:///./node_modules/re-resizable/lib/resizer.js","webpack:///./public/app/features/explore/useLiveTailControls.ts","webpack:///./public/app/features/explore/ResponseErrorContainer.tsx","webpack:///./public/app/features/explore/NoDataSourceCallToAction.tsx","webpack:///./public/app/features/explore/TraceView/createSpanLink.tsx","webpack:///./public/app/features/explore/TraceView/uiElements.tsx","webpack:///./public/app/features/explore/TraceView/useChildrenState.ts","webpack:///./public/app/features/explore/TraceView/useDetailState.ts","webpack:///./public/app/features/explore/TraceView/TraceView.tsx","webpack:///./public/app/features/explore/TraceView/useHoverIndentGuide.ts","webpack:///./public/app/features/explore/TraceView/useViewRange.ts","webpack:///./public/app/features/explore/TraceView/useSearch.ts","webpack:///./public/app/features/explore/TraceView/TraceViewContainer.tsx","webpack:///./node_modules/re-resizable/lib/index.js","webpack:///./public/app/features/explore/ExploreGraphNGPanel.tsx","webpack:///./public/app/features/explore/LogsContainer.tsx","webpack:///./public/app/features/explore/ExploreToolbar.tsx","webpack:///./public/app/features/explore/QueryRows.tsx","webpack:///./public/app/features/explore/ExplorePaneContainer.tsx","webpack:///./public/app/features/explore/Wrapper.tsx","webpack:///./public/app/features/explore/LogsMetaRow.tsx","webpack:///./public/app/features/explore/LogsNavigationPages.tsx","webpack:///./public/app/features/explore/LogsNavigation.tsx","webpack:///./public/app/features/explore/Logs.tsx","webpack:///./public/app/features/explore/MetaInfoText.tsx","webpack:///./public/app/features/explore/SecondaryActions.tsx","webpack:///./public/app/features/explore/QueryRowActions.tsx","webpack:///./public/app/features/explore/TimeSyncButton.tsx","webpack:///./public/app/features/explore/ExploreTimeControls.tsx","webpack:///./public/app/features/explore/utils/LogsCrossFadeTransition.tsx","webpack:///./node_modules/react-use/esm/useToggle.js","webpack:///./public/app/features/explore/NodeGraphContainer.tsx","webpack:///./public/app/features/explore/RunButton.tsx","webpack:///./public/app/features/explore/LiveTailButton.tsx","webpack:///./public/app/features/explore/Explore.tsx","webpack:///./node_modules/react-use/esm/usePrevious.js","webpack:///./public/app/features/explore/RichHistory/RichHistoryCard.tsx","webpack:///./public/app/features/explore/ExploreDrawer.tsx","webpack:///./public/app/features/explore/QueryEditor.tsx","webpack:///./public/app/features/explore/TableContainer.tsx"],"names":["FadeIn","props","defaultStyle","transition","duration","opacity","transitionStyles","exited","display","entering","entered","exiting","Transition","in","timeout","unmountOnExit","onExited","state","style","children","ErrorContainer","queryError","theme","useTheme2","showError","title","message","data","alertWithTopMargin","css","spacing","severity","className","isHideSeriesOverride","isSystemOverrideWithRef","seriesVisibilityConfigFactory","label","mode","fieldConfig","overrides","displayName","currentIndex","findIndex","SeriesVisibilityChangeMode","ToggleSelection","createOverride","getDisplayNames","overridesCopy","Array","from","current","splice","existing","getExistingDisplayNames","length","override","createExtendedOverride","allFieldsAreExcluded","names","ByNamesMatcherMode","exclude","property","id","value","viz","legend","tooltip","__systemRef","matcher","FieldMatcherID","byNames","options","prefix","undefined","readOnly","properties","find","p","index","name","push","rule","isArray","excludeName","unique","Set","frame","field","fields","type","FieldType","number","getFieldDisplayName","add","isSplit","Boolean","explore","ExploreId","left","right","getStyles","stylesFactory","container","sm","typography","size","lg","input","switch","md","retentionPeriodOptions","RichHistorySettings","retentionPeriod","starredTabAsFirstTab","activeDatasourceOnly","onChangeRetentionPeriod","toggleStarredTabAsFirstTab","toggleactiveDatasourceOnly","deleteRichHistory","useTheme","styles","selectedOption","v","description","onChange","weight","bold","variant","onClick","appEvents","publish","ShowConfirmModalEvent","text","yesText","icon","onConfirm","dispatch","notifyApp","createSuccessNotification","height","bgColor","isLight","palette","gray5","dark4","sliderHeight","semibold","containerContent","containerSlider","slider","selectors","filterInput","multiselect","xxs","xs","border","radius","sort","sessionName","heading","h4","footer","light","queries","regular","RichHistoryQueriesTab","datasourceFilters","onSelectDatasourceFilters","onChangeSortOrder","sortOrder","exploreId","timeFilter","setTimeFilter","useState","filteredQueries","setFilteredQueries","searchInput","setSearchInput","debouncedSearchInput","setDebouncedSearchInput","datasourcesRetrievedFromQueryHistory","uniqBy","map","d","datasourceName","listOfDatasources","createDatasourcesList","useDebounce","useEffect","filterAndSortQueries","mappedQueriesToHeadings","mapQueriesToHeadings","mapNumbertoTimeInSlider","tooltipAlwaysVisible","min","max","orientation","formatTooltipResult","reverse","onAfterChange","aria-label","isMulti","placeholder","FilterInput","sortOrderOptions","filter","order","e","Object","keys","q","idx","RichHistoryCard","query","dsImg","imgUrl","isRemoved","ts","RichHistoryStarredTab","starredQueries","starred","Tabs","SortOrder","Descending","Ascending","DatasourceAZ","DatasourceZA","UnThemedRichHistory","PureComponent","constructor","super","this","setState","store","set","RICH_HISTORY_SETTING_KEYS","toggleActiveDatasourceOnly","setObject","error","console","getObject","getBool","updateFilters","activeDatasourceInstance","componentDidMount","componentDidUpdate","prevProps","prevState","render","richHistory","onClose","firstTab","tabs","RichHistory","content","Starred","Settings","defaultTab","closeIconTooltip","withTheme","infoBox","HelpToggle","isHelpVisible","setIsHelpVisible","_","cx","monadic","fn","cache","serializer","arg","cacheKey","computedValue","get","call","variadic","args","prototype","slice","arguments","apply","assemble","context","strategy","serialize","bind","strategyDefault","create","serializerDefault","JSON","stringify","ObjectWithoutPrototypeCache","has","key","cacheDefault","module","exports","strategies","mapDispatchToProps","setDashboardQueriesToUpdateOnLoad","connect","splitted","datasourceInstance","originPanelId","withOriginId","Number","isInteger","cleanQueries","returnToPanel","async","withChanges","dash","getDashboardSrv","getCurrent","titleSlug","kbn","slugifyForUrl","panelId","panelInEdit","editPanel","panelInView","viewPanel","locationService","urlUtil","renderUrl","uid","placement","data-testid","noopOnBlur","QueryRow","textEditModeEnabled","onRunQuery","runQueries","changeQuery","getHighlighterExpression","updateLogsHighlights","onClickToggleDisabled","newQuery","hide","onClickRemoveButton","removeQueryRowAction","onClickToggleEditorMode","setReactQueryEditor","QueryEditor","components","ExploreMetricsQueryField","ExploreLogsQueryField","ExploreQueryField","renderQueryEditor","history","exploreEvents","range","queryResponse","queryErrors","refId","ReactQueryEditor","datasource","onBlur","onQueryChange","onExecuteQuery","initialQuery","DatasourceCheatsheet","QueryEditorHelp","onClickExample","debounce","expressions","highlightLogsExpressionAction","latency","canToggleEditorModes","isNotStarted","LoadingState","NotStarted","QueryEditorRows","rows","isDisabled","modifyQueries","hot","item","absoluteRange","eventBridge","callback","delay","savedCallback","interval_1","setInterval","clearInterval","Time","timeInMs","humanize","formatTime","inSeconds","toFixed","toDuration","hours","minutes","seconds","ElapsedTime","resetKey","elapsed","setElapsed","useInterval","LiveLogs","liveEndDiv","scrollContainerRef","React","createRef","onScroll","event","isPaused","onPause","scrollTop","clientHeight","scrollHeight","currentTarget","rowsToRender","logRowsToRender","logRows","nextProps","timeZone","onResume","logsRowsLive","fontFamily","monospace","logsRowFade","colors","tinycolor","blue95","setAlpha","toString","logsRowsIndicator","button","fullWidth","logsRow","logsRowLocalTime","logsRowMessage","getLogRowStyles","ref","row","dateTimeFormat","timeEpochMs","hasAnsi","raw","entry","element","scrollTo","stopLive","LiveLogsWithTheme","setHeight","width","onResize","_e","_dir","loading","dataFrames","series","statsTab","request","timezone","jsonTab","dataTab","isLoading","withTransforms","withFieldConfig","onRefreshQuery","errorTab","extendStatics","__extends","b","setPrototypeOf","__proto__","hasOwnProperty","__","__assign","assign","t","s","i","n","__importStar","mod","__esModule","result","k","defineProperty","top","cursor","bottom","topRight","position","bottomRight","bottomLeft","topLeft","Resizer","_super","_this","onMouseDown","onResizeStart","direction","onTouchStart","createElement","userSelect","replaceStyles","LiveTailControls","controls","useDispatch","pause","useCallback","setPausedStateAction","resume","stop","changeRefreshInterval","RefreshPicker","offOption","start","liveOption","useLiveTailControls","ResponseErrorContainer","useSelector","Error","NoDataSourceCallToAction","href","target","rel","ctaElement","cardClassName","breakpoints","callToActionElement","defaultKeys","getLokiQueryFromSpan","span","keysToCheck","process","tags","reduce","acc","tag","includes","join","getTimeRangeFromSpan","dateTime","startTime","spanEndMs","to","utc","format","UIElements","Popover","overlayClassName","popoverRef","useRef","hideAfter","showPopper","hidePopper","popperProps","referenceElement","wrapperClassName","onMouseLeave","onMouseEnter","cloneElement","Tooltip","Icon","Dropdown","Menu","MenuItem","Button","Divider","Input","InputGroup","isDark","shouldDisableCollapse","allSpans","hiddenSpansIds","hasChildren","makeDetailSubsectionToggle","subSection","detailStates","setDetailStates","spanID","old","detailState","toggleTags","toggleProcess","toggleWarnings","toggleReferences","toggleStackTraces","toggleLogs","newDetailStates","Map","noop","TraceView","expandOne","collapseOne","childrenToggle","collapseAll","childrenHiddenIDs","expandAll","setChildrenHiddenIDs","spans","prevExpandedDepth","expandNextHiddenSpan","newChildrenHiddenIDs","res","depth","delete","nearestCollapsedAncestor","curSpan","useChildrenState","toggleDetail","detailLogItemToggle","detailLogsToggle","detailProcessToggle","detailReferencesToggle","detailTagsToggle","detailWarningsToggle","detailStackTracesToggle","DetailState","log","toggleLogItem","useDetailState","removeHoverIndentGuideId","addHoverIndentGuideId","hoverIndentGuideIds","setHoverIndentGuideIds","newHoverIndentGuideIds","useHoverIndentGuide","viewRange","updateViewRangeTime","updateNextViewRangeTime","setViewRange","time","update","prevRange","end","useViewRange","spanNameColumnWidth","setSpanNameColumnWidth","slim","setSlim","traceProp","useMemo","frames","values","view","DataFrameView","processes","serviceName","serviceTags","traceID","toArray","processID","flags","references","parentSpanID","refType","logs","l","timestamp","transformTraceDataFrame","transformTraceData","transformDataFrames","search","setSearch","spanFindMatches","filterSpans","useSearch","dataSourceName","traceToLogsOptions","getDatasourceSrv","getInstanceSettings","jsonData","tracesToLogs","traceTheme","ThemeType","Dark","Light","servicesColorPalette","TraceName","fontSize","traceTimeline","shouldScrollToFirstUiFindMatch","createSpanLink","splitOpenFn","datasourceUid","dataSourceSettings","dataLink","url","internal","expr","link","mapInternalLinkToExplore","internalLink","scopedVars","onClickFn","replaceVariables","getTemplateSrv","replace","createSpanLinkFactory","scrollElement","document","getElementsByClassName","onSlimViewClicked","Provider","canCollapse","clearSearch","focusUiFindMatches","hideMap","hideSummary","nextResult","onTraceGraphViewClicked","prevResult","resultCount","slimView","textFilter","trace","traceGraphView","searchValue","onSearchValueChange","hideSearchButtons","registerAccessors","scrollToFirstVisibleSpan","findMatchesIDs","focusSpan","createLinkToExternalSpan","clearShouldScrollToFirstUiFindMatch","detailToggle","setTrace","linksGetter","uiFind","TraceViewContainer","isOpen","__importDefault","resizer_1","fast_memoize_1","DEFAULT_SIZE","clamp","default","Math","snap","round","hasDirection","dir","RegExp","test","findClosestSnap","snapArray","snapGap","closestGapIndex","prev","curr","abs","gap","endsWith","str","searchStr","substr","getStringSize","getPixelSize","parentSize","ratio","window","innerWidth","innerHeight","calculateNewMax","maxWidth","maxHeight","minWidth","minHeight","definedProps","Resizable","resizable","parentLeft","parentTop","resizableLeft","resizableTop","targetLeft","targetTop","c","isResizing","propsSize","original","x","y","backgroundStyle","backgroundColor","zIndex","onMouseMove","onMouseUp","parentNode","enumerable","configurable","defaultSize","parent","_i","children_1","HTMLElement","classList","contains","orgWidth","offsetWidth","orgHeight","offsetHeight","orgPosition","getSize","getParentSize","base","wrapChanged","wrap","flexWrap","bindEvents","addEventListener","unbindEvents","removeEventListener","computedStyle","getComputedStyle","flexBasis","transform","flex","appendChild","componentWillUnmount","parent_1","Node","removeChild","createSizeForCssProperty","newSize","kind","calculateNewMaxFromBoundary","bounds","parent_2","boundWidth","boundHeight","calculateNewSizeFromDirection","clientX","clientY","scale","resizeRatio","_a","_b","lockAspectRatio","lockAspectRatioExtraHeight","lockAspectRatioExtraWidth","newWidth","newHeight","extraHeight","extraWidth","calculateNewSizeFromAspectRatio","computedMinWidth","computedMaxWidth","computedMinHeight","computedMaxHeight","extraMinWidth","extraMaxWidth","extraMinHeight","extraMaxHeight","lockedMinWidth","lockedMaxWidth","lockedMinHeight","lockedMaxHeight","setBoundingClientRect","parent_3","parentRect","getBoundingClientRect","targetRect","top_1","nativeEvent","MouseEvent","which","TouchEvent","touches","parent_4","flexDirection","flexDir","startsWith","_c","boundaryMax","grid","newGridWidth","newGridHeight","delta","newState","onResizeStop","updateSize","renderResizer","enable","handleStyles","handleClasses","handleWrapperStyle","handleWrapperClass","handleComponent","resizers","extendsProps","indexOf","sizeStyle","boxSizing","flexShrink","defaultProps","ExploreGraphNGPanel","onUpdateTimeRange","annotations","tooltipDisplayMode","onHiddenSeriesChanged","showAllTimeSeries","setShowAllTimeSeries","baseStructureRev","setBaseStructureRev","previousData","usePrevious","structureChangesRef","compareArrayValues","compareDataFrameStructures","structureRev","setFieldConfig","defaults","color","FieldColorModeId","PaletteClassic","custom","drawStyle","DrawStyle","Line","fillOpacity","pointSize","useStyles","timeRange","dataWithConfig","registry","createFieldConfigRegistry","getGraphFieldConfig","defaultGraphConfig","applyFieldOverrides","fieldConfigRegistry","hiddenFrames","forEach","config","hideFrom","every","identity","getFrameDisplayName","seriesToShow","getFieldLinks","rowIndex","getFieldLinksForExplore","panelContext","eventBus","onToggleSeriesVisibility","r","timeSeriesDisclaimer","disclaimerIcon","disableHeight","displayMode","LegendDisplayMode","List","calcs","alignedDataFrame","onZoom","exemplars","bg1","yellow","linkExternal","LogsContainer","onChangeTime","updateTimeRange","getLogRowContext","showContextToggle","splitOpen","logsHighlighterExpressions","logsMeta","logsSeries","logsQueries","onClickFilterLabel","onClickFilterOutLabel","onStartScanning","onStopScanning","visibleRange","scanning","isLive","addResultsToCache","clearCache","styleOverridesForStickyNavigation","visible","highlighterExpressions","scanRange","getRowContext","connector","logsResult","getTimeZone","user","meta","UnConnectedExploreToolbar","onChangeDatasource","changeDatasource","dsSettings","importQueries","onClearAll","clearAll","cancelQueries","onChangeRefreshInterval","onChangeTimeSync","syncTimes","datasourceMissing","closeSplit","syncedTimes","refreshInterval","split","hasLiveOption","containerWidth","onChangeTimeZone","showSmallDataSourcePicker","showSmallTimePicker","classNames","hideTextValue","iconOnly","disabled","createAndCopyShortLink","location","hideText","isSmall","onRun","showDropdown","func","interval","clearQueries","splitClose","updateTimeZoneForSession","ExploreToolbar","exploreItem","streaming","QueryRows","queryKeys","ExplorePaneContainerUnconnected","el","refreshExplore","prevUrlQuery","urlQuery","lastSavedUrl","getRef","EventBusSrv","openDrawer","initialized","initialDatasource","initialQueries","initialRange","initializeExplore","removeAllListeners","cleanupPaneAction","exploreClass","pages","Explore","General","ensureQueriesMemoized","memoizeOne","ensureQueries","getTimeRangeFromUrlMemoized","getTimeRangeFromUrl","ExplorePaneContainer","urlState","parseUrlState","urlRange","lastUsedDatasourceKeyForOrgId","orgId","getTimeRange","DEFAULT_RANGE","resetExploreAction","richHistoryUpdatedAction","navModel","getNavModel","navIndex","WrapperUnconnected","updatePageDocumentTitle","main","Branding","AppTitle","getRichHistory","queryParams","hasSplit","Wrapper","LogsMetaRow","memo","dedupStrategy","dedupCount","showDetectedFields","clearDetectedFields","hasUnescapedContent","forceEscape","onEscapeNewlines","logsMetaItem","LogsDedupStrategy","none","LogsMetaKind","some","MAX_CHARACTERS","String","renderMetaItem","LabelsMap","MetaInfoText","metaItems","labels","LogsNavigationPages","currentPageIndex","oldestLogsFirst","changeTime","systemDateFormats","second","createPageContent","page","logsRange","autoHide","pagesWrapper","pagesContainer","queryRange","line","selectedBg","selectedText","bg2","bgBlue2","textWeak","LogsNavigation","logsSortOrder","scrollToTopLogs","setPages","setCurrentPageIndex","expectedQueriesRef","expectedRangeRef","rangeSpanRef","LogsSortOrder","onFirstPage","onLastPage","newPage","newPages","isEqual","a","sortPages","olderLogsButton","navButton","navButtonContent","newerLogsButton","navContainer","scrollToTopButton","SETTINGS_KEYS","UnthemedLogs","flipOrderTimer","cancelFlippingTimer","topLogsRef","showLabels","showTime","wrapLogMessage","hiddenLogLevels","isFlipping","onChangeLogsSortOrder","setTimeout","onChangeDedup","onChangeLabels","checked","onChangewrapLogMessage","onToggleLogLevel","hiddenRawLevels","level","LogLevel","onClickScan","preventDefault","onClickStopScan","showDetectedField","concat","hideDetectedField","checkUnescapedContent","dedupRows","dedupedRows","dedupLogRows","sum","duplicates","filterRows","filterLogLevels","scrollIntoView","clearTimeout","hasData","filteredLogs","scanText","rangeUtil","describeTimeRange","infoText","TooltipDisplayMode","Multi","logOptions","transparent","dedupType","capitalize","LogsDedupDescription","radioButtons","flipButton","logsSection","deduplicatedRows","enableLogDetails","onClickShowDetectedField","onClickHideDetectedField","noData","fill","Logs","border2","metaContainer","metaItem","red","metaLabel","metaValue","MetaInfoItem","containerMargin","SecondaryActions","addQueryRowButtonHidden","onClickAddQueryRowButton","addQueryRowButtonDisabled","richHistoryButtonActive","onClickRichHistoryButton","queryInspectorButtonActive","onClickQueryInspectorButton","QueryRowActions","TimeSyncButton","isSynced","ExploreTimeControls","Component","onMoveTimePicker","getShiftedTimeRange","dateTimeForTimeZone","onMoveForward","onMoveBack","onChangeTimePicker","adjustedFrom","dateMath","isMathString","adjustedTo","getZoomedTimeRange","timeSyncButton","timePickerCommonProps","onMoveBackward","TimePickerWithHistory","logsEnter","logsEnterActive","logsExit","logsExitActive","LogsCrossFadeTransition","mountOnEnter","transitionDuration","enter","enterActive","exit","exitActive","initialValue","setValue","nextValue","currentValue","warningText","bodySmall","secondary","NodeGraphContainer","withTraceView","getLinks","useLinks","useStyles2","nodes","useCategorizeFrames","open","toggleOpen","useToggle","countWarning","collapsible","onToggle","NodeGraph","RunButton","intervals","getTimeSrv","getValidIntervals","defaultIntervals","onIntervalChanged","onRefresh","noIntervalPicker","primary","LiveTailButton","buttonVariant","onClickMain","stopButtonEnter","stopButtonEnterActive","stopButtonExit","stopButtonExitActive","exploreMain","queryContainer","panelPadding","ExploreDrawer","rawRange","setQueries","onCellFilterAdded","operator","FILTER_FOR_OPERATOR","FILTER_OUT_OPERATOR","onModifyQueries","addQueryRow","action","modifyQuery","modifier","modification","changeSize","scanStart","scanStopAction","toggleShowRichHistory","toggleShowQueryInspector","QueryInspector","getNodeGraphDataFrames","preferredVisualisationType","renderEmptyState","renderGraphPanel","graphResult","Single","renderTablePanel","ariaLabel","table","renderLogsPanel","renderNodeGraphPanel","showTrace","renderTraceViewPanel","showMetrics","showTable","showLogs","showNodeGraph","showPanels","showRichHistory","showQueryInspector","autoHeightMin","compose","cardColor","queryCard","border1","orange","cardRow","datasourceContainer","queryActionButtons","queryRow","updateCommentContainer","comment","commentButtonRow","textArea","runButton","updateRichHistory","activeUpdateComment","setActiveUpdateComment","setComment","queryDsInstance","setQueryDsInstance","ds","getDataSourceSrv","getQueryDsInstance","onUpdateComment","onCancelUpdateComment","updateComment","queriesToCopy","createQueryText","copyStringToClipboard","createUrlFromRichHistory","iconType","onKeyDown","keyEvent","shiftKey","ctrlKey","src","queryText","queriesToRun","drawerSlide","keyframes","background","weak","shadows","z3","sidemenu","drawerActive","rzHandle","shade","drawerWidth","component","angularScope","loader","getAngularLoader","scopeProps","ctrl","refresh","events","panel","targets","dashboard","load","hasToggledEditorMode","hasNewError","toggleEditorMode","digest","destroy","TableContainer","getTableHeight","tableResult","tableWidth","PANEL_BORDER","hasTableResult","valueRowIndex","loadingInState"],"mappings":"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","file":"explore.de0e7cb4f02a375bece7.js","sourcesContent":["import React, { FC, CSSProperties } from 'react';\nimport Transition, { ExitHandler } from 'react-transition-group/Transition';\n\ninterface Props {\n  duration: number;\n  children: JSX.Element;\n  in: boolean;\n  unmountOnExit?: boolean;\n  onExited?: ExitHandler<HTMLDivElement>;\n}\n\nexport const FadeIn: FC<Props> = (props) => {\n  const defaultStyle: CSSProperties = {\n    transition: `opacity ${props.duration}ms linear`,\n    opacity: 0,\n  };\n\n  const transitionStyles: { [str: string]: CSSProperties } = {\n    exited: { opacity: 0, display: 'none' },\n    entering: { opacity: 0 },\n    entered: { opacity: 1 },\n    exiting: { opacity: 0 },\n  };\n\n  return (\n    <Transition\n      in={props.in}\n      timeout={props.duration}\n      unmountOnExit={props.unmountOnExit || false}\n      onExited={props.onExited}\n    >\n      {(state) => (\n        <div\n          style={{\n            ...defaultStyle,\n            ...transitionStyles[state],\n          }}\n        >\n          {props.children}\n        </div>\n      )}\n    </Transition>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport { DataQueryError } from '@grafana/data';\nimport { Alert, useTheme2 } from '@grafana/ui';\nimport { FadeIn } from 'app/core/components/Animations/FadeIn';\nimport { css } from '@emotion/css';\n\nexport interface ErrorContainerProps {\n  queryError?: DataQueryError;\n}\n\nexport const ErrorContainer: FunctionComponent<ErrorContainerProps> = (props) => {\n  const { queryError } = props;\n  const theme = useTheme2();\n  const showError = queryError ? true : false;\n  const duration = showError ? 100 : 10;\n  const title = queryError ? 'Query error' : 'Unknown error';\n  const message = queryError?.message || queryError?.data?.message || null;\n  const alertWithTopMargin = css`\n    margin-top: ${theme.spacing(2)};\n  `;\n\n  return (\n    <FadeIn in={showError} duration={duration}>\n      <Alert severity=\"error\" title={title} className={alertWithTopMargin}>\n        {message}\n      </Alert>\n    </FadeIn>\n  );\n};\n","import {\n  ByNamesMatcherMode,\n  DataFrame,\n  DynamicConfigValue,\n  FieldConfigSource,\n  FieldMatcherID,\n  FieldType,\n  getFieldDisplayName,\n  isSystemOverrideWithRef,\n  SystemConfigOverrideRule,\n} from '@grafana/data';\nimport { SeriesVisibilityChangeMode } from '@grafana/ui';\n\nconst displayOverrideRef = 'hideSeriesFrom';\nconst isHideSeriesOverride = isSystemOverrideWithRef(displayOverrideRef);\n\nexport function seriesVisibilityConfigFactory(\n  label: string,\n  mode: SeriesVisibilityChangeMode,\n  fieldConfig: FieldConfigSource,\n  data: DataFrame[]\n) {\n  const { overrides } = fieldConfig;\n\n  const displayName = label;\n  const currentIndex = overrides.findIndex(isHideSeriesOverride);\n\n  if (currentIndex < 0) {\n    if (mode === SeriesVisibilityChangeMode.ToggleSelection) {\n      const override = createOverride([displayName]);\n\n      return {\n        ...fieldConfig,\n        overrides: [override, ...fieldConfig.overrides],\n      };\n    }\n\n    const displayNames = getDisplayNames(data, displayName);\n    const override = createOverride(displayNames);\n\n    return {\n      ...fieldConfig,\n      overrides: [override, ...fieldConfig.overrides],\n    };\n  }\n\n  const overridesCopy = Array.from(overrides);\n  const [current] = overridesCopy.splice(currentIndex, 1) as SystemConfigOverrideRule[];\n\n  if (mode === SeriesVisibilityChangeMode.ToggleSelection) {\n    const existing = getExistingDisplayNames(current);\n\n    if (existing[0] === displayName && existing.length === 1) {\n      return {\n        ...fieldConfig,\n        overrides: overridesCopy,\n      };\n    }\n\n    const override = createOverride([displayName]);\n\n    return {\n      ...fieldConfig,\n      overrides: [override, ...overridesCopy],\n    };\n  }\n\n  const override = createExtendedOverride(current, displayName);\n\n  if (allFieldsAreExcluded(override, data)) {\n    return {\n      ...fieldConfig,\n      overrides: overridesCopy,\n    };\n  }\n\n  return {\n    ...fieldConfig,\n    overrides: [override, ...overridesCopy],\n  };\n}\n\nfunction createOverride(\n  names: string[],\n  mode = ByNamesMatcherMode.exclude,\n  property?: DynamicConfigValue\n): SystemConfigOverrideRule {\n  property = property ?? {\n    id: 'custom.hideFrom',\n    value: {\n      viz: true,\n      legend: false,\n      tooltip: false,\n    },\n  };\n\n  return {\n    __systemRef: displayOverrideRef,\n    matcher: {\n      id: FieldMatcherID.byNames,\n      options: {\n        mode: mode,\n        names: names,\n        prefix: mode === ByNamesMatcherMode.exclude ? 'All except:' : undefined,\n        readOnly: true,\n      },\n    },\n    properties: [\n      {\n        ...property,\n        value: {\n          viz: true,\n          legend: false,\n          tooltip: false,\n        },\n      },\n    ],\n  };\n}\n\nconst createExtendedOverride = (\n  current: SystemConfigOverrideRule,\n  displayName: string,\n  mode = ByNamesMatcherMode.exclude\n): SystemConfigOverrideRule => {\n  const property = current.properties.find((p) => p.id === 'custom.hideFrom');\n  const existing = getExistingDisplayNames(current);\n  const index = existing.findIndex((name) => name === displayName);\n\n  if (index < 0) {\n    existing.push(displayName);\n  } else {\n    existing.splice(index, 1);\n  }\n\n  return createOverride(existing, mode, property);\n};\n\nconst getExistingDisplayNames = (rule: SystemConfigOverrideRule): string[] => {\n  const names = rule.matcher.options?.names;\n  if (!Array.isArray(names)) {\n    return [];\n  }\n  return names;\n};\n\nconst allFieldsAreExcluded = (override: SystemConfigOverrideRule, data: DataFrame[]): boolean => {\n  return getExistingDisplayNames(override).length === getDisplayNames(data).length;\n};\n\nconst getDisplayNames = (data: DataFrame[], excludeName?: string): string[] => {\n  const unique = new Set<string>();\n\n  for (const frame of data) {\n    for (const field of frame.fields) {\n      if (field.type !== FieldType.number) {\n        continue;\n      }\n\n      const name = getFieldDisplayName(field, frame, data);\n\n      if (name === excludeName) {\n        continue;\n      }\n\n      unique.add(name);\n    }\n  }\n\n  return Array.from(unique);\n};\n","import { ExploreId, StoreState } from 'app/types';\n\nexport const isSplit = (state: StoreState) => Boolean(state.explore[ExploreId.left] && state.explore[ExploreId.right]);\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { stylesFactory, useTheme, Select, Button, Switch, Field } from '@grafana/ui';\nimport { GrafanaTheme } from '@grafana/data';\nimport appEvents from 'app/core/app_events';\nimport { ShowConfirmModalEvent } from '../../../types/events';\nimport { dispatch } from 'app/store/store';\nimport { notifyApp } from 'app/core/actions';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\n\nexport interface RichHistorySettingsProps {\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  onChangeRetentionPeriod: (option: { label: string; value: number }) => void;\n  toggleStarredTabAsFirstTab: () => void;\n  toggleactiveDatasourceOnly: () => void;\n  deleteRichHistory: () => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    container: css`\n      padding-left: ${theme.spacing.sm};\n      font-size: ${theme.typography.size.sm};\n      .space-between {\n        margin-bottom: ${theme.spacing.lg};\n      }\n    `,\n    input: css`\n      max-width: 200px;\n    `,\n    switch: css`\n      display: flex;\n      align-items: center;\n    `,\n    label: css`\n      margin-left: ${theme.spacing.md};\n    `,\n  };\n});\n\nconst retentionPeriodOptions = [\n  { value: 2, label: '2 days' },\n  { value: 5, label: '5 days' },\n  { value: 7, label: '1 week' },\n  { value: 14, label: '2 weeks' },\n];\n\nexport function RichHistorySettings(props: RichHistorySettingsProps) {\n  const {\n    retentionPeriod,\n    starredTabAsFirstTab,\n    activeDatasourceOnly,\n    onChangeRetentionPeriod,\n    toggleStarredTabAsFirstTab,\n    toggleactiveDatasourceOnly,\n    deleteRichHistory,\n  } = props;\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  const selectedOption = retentionPeriodOptions.find((v) => v.value === retentionPeriod);\n\n  const onDelete = () => {\n    appEvents.publish(\n      new ShowConfirmModalEvent({\n        title: 'Delete',\n        text: 'Are you sure you want to permanently delete your query history?',\n        yesText: 'Delete',\n        icon: 'trash-alt',\n        onConfirm: () => {\n          deleteRichHistory();\n          dispatch(notifyApp(createSuccessNotification('Query history deleted')));\n        },\n      })\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      <Field\n        label=\"History time span\"\n        description=\"Select the period of time for which Grafana will save your query history\"\n        className=\"space-between\"\n      >\n        <div className={styles.input}>\n          <Select value={selectedOption} options={retentionPeriodOptions} onChange={onChangeRetentionPeriod}></Select>\n        </div>\n      </Field>\n      <Field label=\"Default active tab\" description=\" \" className=\"space-between\">\n        <div className={styles.switch}>\n          <Switch value={starredTabAsFirstTab} onChange={toggleStarredTabAsFirstTab}></Switch>\n          <div className={styles.label}>Change the default active tab from “Query history” to “Starred”</div>\n        </div>\n      </Field>\n      <Field label=\"Data source behaviour\" description=\" \" className=\"space-between\">\n        <div className={styles.switch}>\n          <Switch value={activeDatasourceOnly} onChange={toggleactiveDatasourceOnly}></Switch>\n          <div className={styles.label}>Only show queries for data source currently active in Explore</div>\n        </div>\n      </Field>\n      <div\n        className={css`\n          font-weight: ${theme.typography.weight.bold};\n        `}\n      >\n        Clear query history\n      </div>\n      <div\n        className={css`\n          margin-bottom: ${theme.spacing.sm};\n        `}\n      >\n        Delete all of your query history, permanently.\n      </div>\n      <Button variant=\"destructive\" onClick={onDelete}>\n        Clear query history\n      </Button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { css } from '@emotion/css';\nimport { uniqBy } from 'lodash';\n\n// Types\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\n// Utils\nimport { stylesFactory, useTheme, RangeSlider, Select } from '@grafana/ui';\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\n\nimport {\n  SortOrder,\n  mapNumbertoTimeInSlider,\n  mapQueriesToHeadings,\n  createDatasourcesList,\n  filterAndSortQueries,\n} from 'app/core/utils/richHistory';\n\n// Components\nimport RichHistoryCard from './RichHistoryCard';\nimport { sortOrderOptions } from './RichHistory';\nimport { FilterInput } from 'app/core/components/FilterInput/FilterInput';\nimport { useDebounce } from 'react-use';\n\nexport interface Props {\n  queries: RichHistoryQuery[];\n  sortOrder: SortOrder;\n  activeDatasourceOnly: boolean;\n  datasourceFilters: SelectableValue[] | null;\n  retentionPeriod: number;\n  exploreId: ExploreId;\n  height: number;\n  onChangeSortOrder: (sortOrder: SortOrder) => void;\n  onSelectDatasourceFilters: (value: SelectableValue[]) => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, height: number) => {\n  const bgColor = theme.isLight ? theme.palette.gray5 : theme.palette.dark4;\n\n  /* 134px is based on the width of the Query history tabs bar, so the content is aligned to right side of the tab */\n  const cardWidth = '100% - 134px';\n  const sliderHeight = `${height - 180}px`;\n  return {\n    container: css`\n      display: flex;\n      .label-slider {\n        font-size: ${theme.typography.size.sm};\n        &:last-of-type {\n          margin-top: ${theme.spacing.lg};\n        }\n        &:first-of-type {\n          font-weight: ${theme.typography.weight.semibold};\n          margin-bottom: ${theme.spacing.md};\n        }\n      }\n    `,\n    containerContent: css`\n      width: calc(${cardWidth});\n    `,\n    containerSlider: css`\n      width: 129px;\n      margin-right: ${theme.spacing.sm};\n      .slider {\n        bottom: 10px;\n        height: ${sliderHeight};\n        width: 129px;\n        padding: ${theme.spacing.sm} 0;\n      }\n    `,\n    slider: css`\n      position: fixed;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing.sm};\n      .gf-form-select-box__multi-value {\n        background-color: ${bgColor};\n        padding: ${theme.spacing.xxs} ${theme.spacing.xs} ${theme.spacing.xxs} ${theme.spacing.sm};\n        border-radius: ${theme.border.radius.sm};\n      }\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    sessionName: css`\n      display: flex;\n      align-items: flex-start;\n      justify-content: flex-start;\n      margin-top: ${theme.spacing.lg};\n      h4 {\n        margin: 0 10px 0 0;\n      }\n    `,\n    heading: css`\n      font-size: ${theme.typography.heading.h4};\n      margin: ${theme.spacing.md} ${theme.spacing.xxs} ${theme.spacing.sm} ${theme.spacing.xxs};\n    `,\n    footer: css`\n      height: 60px;\n      margin-top: ${theme.spacing.lg};\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.weight.light};\n      font-size: ${theme.typography.size.sm};\n      a {\n        font-weight: ${theme.typography.weight.semibold};\n        margin-left: ${theme.spacing.xxs};\n      }\n    `,\n    queries: css`\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.regular};\n      margin-left: ${theme.spacing.xs};\n    `,\n  };\n});\n\nexport function RichHistoryQueriesTab(props: Props) {\n  const {\n    datasourceFilters,\n    onSelectDatasourceFilters,\n    queries,\n    onChangeSortOrder,\n    sortOrder,\n    activeDatasourceOnly,\n    retentionPeriod,\n    exploreId,\n    height,\n  } = props;\n\n  const [timeFilter, setTimeFilter] = useState<[number, number]>([0, retentionPeriod]);\n  const [filteredQueries, setFilteredQueries] = useState<RichHistoryQuery[]>([]);\n  const [searchInput, setSearchInput] = useState('');\n  const [debouncedSearchInput, setDebouncedSearchInput] = useState('');\n\n  const theme = useTheme();\n  const styles = getStyles(theme, height);\n\n  const datasourcesRetrievedFromQueryHistory = uniqBy(queries, 'datasourceName').map((d) => d.datasourceName);\n  const listOfDatasources = createDatasourcesList(datasourcesRetrievedFromQueryHistory);\n\n  useDebounce(\n    () => {\n      setDebouncedSearchInput(searchInput);\n    },\n    300,\n    [searchInput]\n  );\n\n  useEffect(() => {\n    setFilteredQueries(\n      filterAndSortQueries(\n        queries,\n        sortOrder,\n        datasourceFilters?.map((d) => d.value) as string[] | null,\n        debouncedSearchInput,\n        timeFilter\n      )\n    );\n  }, [timeFilter, queries, sortOrder, datasourceFilters, debouncedSearchInput]);\n\n  /* mappedQueriesToHeadings is an object where query headings (stringified dates/data sources)\n   * are keys and arrays with queries that belong to that headings are values.\n   */\n  const mappedQueriesToHeadings = mapQueriesToHeadings(filteredQueries, sortOrder);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerSlider}>\n        <div className={styles.slider}>\n          <div className=\"label-slider\">Filter history</div>\n          <div className=\"label-slider\">{mapNumbertoTimeInSlider(timeFilter[0])}</div>\n          <div className=\"slider\">\n            <RangeSlider\n              tooltipAlwaysVisible={false}\n              min={0}\n              max={retentionPeriod}\n              value={timeFilter}\n              orientation=\"vertical\"\n              formatTooltipResult={mapNumbertoTimeInSlider}\n              reverse={true}\n              onAfterChange={setTimeFilter as () => number[]}\n            />\n          </div>\n          <div className=\"label-slider\">{mapNumbertoTimeInSlider(timeFilter[1])}</div>\n        </div>\n      </div>\n\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!activeDatasourceOnly && (\n            <div aria-label=\"Filter datasources\" className={styles.multiselect}>\n              <Select\n                isMulti={true}\n                options={listOfDatasources}\n                value={datasourceFilters}\n                placeholder=\"Filter queries for data sources(s)\"\n                onChange={onSelectDatasourceFilters}\n              />\n            </div>\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              placeholder=\"Search queries\"\n              value={searchInput}\n              onChange={(value: string) => {\n                setSearchInput(value);\n              }}\n            />\n          </div>\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              value={sortOrderOptions.filter((order) => order.value === sortOrder)}\n              options={sortOrderOptions}\n              placeholder=\"Sort queries by\"\n              onChange={(e) => onChangeSortOrder(e.value as SortOrder)}\n            />\n          </div>\n        </div>\n        {Object.keys(mappedQueriesToHeadings).map((heading) => {\n          return (\n            <div key={heading}>\n              <div className={styles.heading}>\n                {heading} <span className={styles.queries}>{mappedQueriesToHeadings[heading].length} queries</span>\n              </div>\n              {mappedQueriesToHeadings[heading].map((q: RichHistoryQuery) => {\n                const idx = listOfDatasources.findIndex((d) => d.label === q.datasourceName);\n                return (\n                  <RichHistoryCard\n                    query={q}\n                    key={q.ts}\n                    exploreId={exploreId}\n                    dsImg={listOfDatasources[idx].imgUrl}\n                    isRemoved={listOfDatasources[idx].isRemoved}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n        <div className={styles.footer}>The history is local to your browser and is not shared with others.</div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { css } from '@emotion/css';\nimport { uniqBy } from 'lodash';\n\n// Types\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\n// Utils\nimport { stylesFactory, useTheme, Select } from '@grafana/ui';\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\nimport { filterAndSortQueries, createDatasourcesList, SortOrder } from 'app/core/utils/richHistory';\n\n// Components\nimport RichHistoryCard from './RichHistoryCard';\nimport { sortOrderOptions } from './RichHistory';\nimport { FilterInput } from 'app/core/components/FilterInput/FilterInput';\nimport { useDebounce } from 'react-use';\n\nexport interface Props {\n  queries: RichHistoryQuery[];\n  sortOrder: SortOrder;\n  activeDatasourceOnly: boolean;\n  datasourceFilters: SelectableValue[] | null;\n  exploreId: ExploreId;\n  onChangeSortOrder: (sortOrder: SortOrder) => void;\n  onSelectDatasourceFilters: (value: SelectableValue[]) => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  const bgColor = theme.isLight ? theme.palette.gray5 : theme.palette.dark4;\n  return {\n    container: css`\n      display: flex;\n    `,\n    containerContent: css`\n      width: 100%;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing.sm};\n      .gf-form-select-box__multi-value {\n        background-color: ${bgColor};\n        padding: ${theme.spacing.xxs} ${theme.spacing.xs} ${theme.spacing.xxs} ${theme.spacing.sm};\n        border-radius: ${theme.border.radius.sm};\n      }\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    footer: css`\n      height: 60px;\n      margin-top: ${theme.spacing.lg};\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.weight.light};\n      font-size: ${theme.typography.size.sm};\n      a {\n        font-weight: ${theme.typography.weight.semibold};\n        margin-left: ${theme.spacing.xxs};\n      }\n    `,\n  };\n});\n\nexport function RichHistoryStarredTab(props: Props) {\n  const {\n    datasourceFilters,\n    onSelectDatasourceFilters,\n    queries,\n    onChangeSortOrder,\n    sortOrder,\n    activeDatasourceOnly,\n    exploreId,\n  } = props;\n\n  const [filteredQueries, setFilteredQueries] = useState<RichHistoryQuery[]>([]);\n  const [searchInput, setSearchInput] = useState('');\n  const [debouncedSearchInput, setDebouncedSearchInput] = useState('');\n\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  const datasourcesRetrievedFromQueryHistory = uniqBy(queries, 'datasourceName').map((d) => d.datasourceName);\n  const listOfDatasources = createDatasourcesList(datasourcesRetrievedFromQueryHistory);\n\n  useDebounce(\n    () => {\n      setDebouncedSearchInput(searchInput);\n    },\n    300,\n    [searchInput]\n  );\n\n  useEffect(() => {\n    const starredQueries = queries.filter((q) => q.starred === true);\n    setFilteredQueries(\n      filterAndSortQueries(\n        starredQueries,\n        sortOrder,\n        datasourceFilters?.map((d) => d.value) as string[] | null,\n        debouncedSearchInput\n      )\n    );\n  }, [queries, sortOrder, datasourceFilters, debouncedSearchInput]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!activeDatasourceOnly && (\n            <div aria-label=\"Filter datasources\" className={styles.multiselect}>\n              <Select\n                isMulti={true}\n                options={listOfDatasources}\n                value={datasourceFilters}\n                placeholder=\"Filter queries for specific data sources(s)\"\n                onChange={onSelectDatasourceFilters}\n              />\n            </div>\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              placeholder=\"Search queries\"\n              value={searchInput}\n              onChange={(value: string) => {\n                setSearchInput(value);\n              }}\n            />\n          </div>\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              options={sortOrderOptions}\n              value={sortOrderOptions.filter((order) => order.value === sortOrder)}\n              placeholder=\"Sort queries by\"\n              onChange={(e) => onChangeSortOrder(e.value as SortOrder)}\n            />\n          </div>\n        </div>\n        {filteredQueries.map((q) => {\n          const idx = listOfDatasources.findIndex((d) => d.label === q.datasourceName);\n          return (\n            <RichHistoryCard\n              query={q}\n              key={q.ts}\n              exploreId={exploreId}\n              dsImg={listOfDatasources[idx].imgUrl}\n              isRemoved={listOfDatasources[idx].isRemoved}\n            />\n          );\n        })}\n        <div className={styles.footer}>The history is local to your browser and is not shared with others.</div>\n      </div>\n    </div>\n  );\n}\n","import React, { PureComponent } from 'react';\n\n//Services & Utils\nimport { RICH_HISTORY_SETTING_KEYS, SortOrder } from 'app/core/utils/richHistory';\nimport store from 'app/core/store';\nimport { Themeable, withTheme, TabbedContainer, TabConfig } from '@grafana/ui';\n\n//Types\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\nimport { SelectableValue } from '@grafana/data';\n\n//Components\nimport { RichHistorySettings } from './RichHistorySettings';\nimport { RichHistoryQueriesTab } from './RichHistoryQueriesTab';\nimport { RichHistoryStarredTab } from './RichHistoryStarredTab';\n\nexport enum Tabs {\n  RichHistory = 'Query history',\n  Starred = 'Starred',\n  Settings = 'Settings',\n}\n\nexport const sortOrderOptions = [\n  { label: 'Newest first', value: SortOrder.Descending },\n  { label: 'Oldest first', value: SortOrder.Ascending },\n  { label: 'Data source A-Z', value: SortOrder.DatasourceAZ },\n  { label: 'Data source Z-A', value: SortOrder.DatasourceZA },\n];\n\nexport interface RichHistoryProps extends Themeable {\n  richHistory: RichHistoryQuery[];\n  activeDatasourceInstance: string;\n  firstTab: Tabs;\n  exploreId: ExploreId;\n  height: number;\n  deleteRichHistory: () => void;\n  onClose: () => void;\n}\n\ninterface RichHistoryState {\n  sortOrder: SortOrder;\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  datasourceFilters: SelectableValue[] | null;\n}\n\nclass UnThemedRichHistory extends PureComponent<RichHistoryProps, RichHistoryState> {\n  constructor(props: RichHistoryProps) {\n    super(props);\n    this.state = {\n      sortOrder: SortOrder.Descending,\n      datasourceFilters: store.getObject(RICH_HISTORY_SETTING_KEYS.datasourceFilters, null),\n      retentionPeriod: store.getObject(RICH_HISTORY_SETTING_KEYS.retentionPeriod, 7),\n      starredTabAsFirstTab: store.getBool(RICH_HISTORY_SETTING_KEYS.starredTabAsFirstTab, false),\n      activeDatasourceOnly: store.getBool(RICH_HISTORY_SETTING_KEYS.activeDatasourceOnly, true),\n    };\n  }\n\n  onChangeRetentionPeriod = (retentionPeriod: { label: string; value: number }) => {\n    this.setState({\n      retentionPeriod: retentionPeriod.value,\n    });\n    store.set(RICH_HISTORY_SETTING_KEYS.retentionPeriod, retentionPeriod.value);\n  };\n\n  toggleStarredTabAsFirstTab = () => {\n    const starredTabAsFirstTab = !this.state.starredTabAsFirstTab;\n    this.setState({\n      starredTabAsFirstTab,\n    });\n    store.set(RICH_HISTORY_SETTING_KEYS.starredTabAsFirstTab, starredTabAsFirstTab);\n  };\n\n  toggleActiveDatasourceOnly = () => {\n    const activeDatasourceOnly = !this.state.activeDatasourceOnly;\n    this.setState({\n      activeDatasourceOnly,\n    });\n    store.set(RICH_HISTORY_SETTING_KEYS.activeDatasourceOnly, activeDatasourceOnly);\n  };\n\n  onSelectDatasourceFilters = (value: SelectableValue[] | null) => {\n    try {\n      store.setObject(RICH_HISTORY_SETTING_KEYS.datasourceFilters, value);\n    } catch (error) {\n      console.error(error);\n    }\n    /* Set data source filters to state even though they were not successfully saved in\n     * localStorage to allow interaction and filtering.\n     **/\n    this.setState({ datasourceFilters: value });\n  };\n\n  onChangeSortOrder = (sortOrder: SortOrder) => this.setState({ sortOrder });\n\n  /* If user selects activeDatasourceOnly === true, set datasource filter to currently active datasource.\n   * Filtering based on datasource won't be available. Otherwise set to null, as filtering will be\n   * available for user.\n   */\n  updateFilters() {\n    this.state.activeDatasourceOnly && this.props.activeDatasourceInstance\n      ? this.onSelectDatasourceFilters([\n          { label: this.props.activeDatasourceInstance, value: this.props.activeDatasourceInstance },\n        ])\n      : this.onSelectDatasourceFilters(this.state.datasourceFilters);\n  }\n\n  componentDidMount() {\n    this.updateFilters();\n  }\n\n  componentDidUpdate(prevProps: RichHistoryProps, prevState: RichHistoryState) {\n    if (\n      this.props.activeDatasourceInstance !== prevProps.activeDatasourceInstance ||\n      this.state.activeDatasourceOnly !== prevState.activeDatasourceOnly\n    ) {\n      this.updateFilters();\n    }\n  }\n\n  render() {\n    const { datasourceFilters, sortOrder, activeDatasourceOnly, retentionPeriod } = this.state;\n    const { richHistory, height, exploreId, deleteRichHistory, onClose, firstTab } = this.props;\n\n    const QueriesTab: TabConfig = {\n      label: 'Query history',\n      value: Tabs.RichHistory,\n      content: (\n        <RichHistoryQueriesTab\n          queries={richHistory}\n          sortOrder={sortOrder}\n          datasourceFilters={datasourceFilters}\n          activeDatasourceOnly={activeDatasourceOnly}\n          retentionPeriod={retentionPeriod}\n          onChangeSortOrder={this.onChangeSortOrder}\n          onSelectDatasourceFilters={this.onSelectDatasourceFilters}\n          exploreId={exploreId}\n          height={height}\n        />\n      ),\n      icon: 'history',\n    };\n\n    const StarredTab: TabConfig = {\n      label: 'Starred',\n      value: Tabs.Starred,\n      content: (\n        <RichHistoryStarredTab\n          queries={richHistory}\n          sortOrder={sortOrder}\n          datasourceFilters={datasourceFilters}\n          activeDatasourceOnly={activeDatasourceOnly}\n          onChangeSortOrder={this.onChangeSortOrder}\n          onSelectDatasourceFilters={this.onSelectDatasourceFilters}\n          exploreId={exploreId}\n        />\n      ),\n      icon: 'star',\n    };\n\n    const SettingsTab: TabConfig = {\n      label: 'Settings',\n      value: Tabs.Settings,\n      content: (\n        <RichHistorySettings\n          retentionPeriod={this.state.retentionPeriod}\n          starredTabAsFirstTab={this.state.starredTabAsFirstTab}\n          activeDatasourceOnly={this.state.activeDatasourceOnly}\n          onChangeRetentionPeriod={this.onChangeRetentionPeriod}\n          toggleStarredTabAsFirstTab={this.toggleStarredTabAsFirstTab}\n          toggleactiveDatasourceOnly={this.toggleActiveDatasourceOnly}\n          deleteRichHistory={deleteRichHistory}\n        />\n      ),\n      icon: 'sliders-v-alt',\n    };\n\n    let tabs = [QueriesTab, StarredTab, SettingsTab];\n    return (\n      <TabbedContainer tabs={tabs} onClose={onClose} defaultTab={firstTab} closeIconTooltip=\"Close query history\" />\n    );\n  }\n}\n\nexport const RichHistory = withTheme(UnThemedRichHistory);\n","import { GrafanaTheme } from '@grafana/data';\nimport { Icon, InfoBox, stylesFactory, useTheme } from '@grafana/ui';\nimport { css, cx } from '@emotion/css';\nimport React, { useState } from 'react';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => ({\n  infoBox: css`\n    margin-top: ${theme.spacing.xs};\n  `,\n}));\n\nexport const HelpToggle: React.FunctionComponent = ({ children }) => {\n  const [isHelpVisible, setIsHelpVisible] = useState(false);\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  return (\n    <>\n      <button className=\"gf-form-label query-keyword pointer\" onClick={(_) => setIsHelpVisible(!isHelpVisible)}>\n        Help\n        <Icon name={isHelpVisible ? 'angle-down' : 'angle-right'} />\n      </button>\n      {isHelpVisible && <InfoBox className={cx(styles.infoBox)}>{children}</InfoBox>}\n    </>\n  );\n};\n","//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { ButtonGroup, ButtonSelect, Icon, ToolbarButton, Tooltip } from '@grafana/ui';\nimport { DataQuery, urlUtil } from '@grafana/data';\n\nimport kbn from '../../core/utils/kbn';\nimport { getDashboardSrv } from '../dashboard/services/DashboardSrv';\nimport { StoreState } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\nimport { setDashboardQueriesToUpdateOnLoad } from '../dashboard/state/reducers';\nimport { isSplit } from './state/selectors';\nimport { locationService } from '@grafana/runtime';\n\ninterface Props {\n  exploreId: ExploreId;\n  splitted: boolean;\n  queries: DataQuery[];\n  originPanelId?: number | null;\n  setDashboardQueriesToUpdateOnLoad: typeof setDashboardQueriesToUpdateOnLoad;\n}\n\nexport const UnconnectedReturnToDashboardButton: FC<Props> = ({\n  originPanelId,\n  setDashboardQueriesToUpdateOnLoad,\n  queries,\n  splitted,\n}) => {\n  const withOriginId = originPanelId && Number.isInteger(originPanelId);\n\n  // If in split mode, or no origin id, escape early and return null\n  if (splitted || !withOriginId) {\n    return null;\n  }\n\n  const cleanQueries = (queries: DataQuery[]) => {\n    return queries.map((query: DataQuery & { context?: string }) => {\n      delete query.context;\n      delete query.key;\n      return query;\n    });\n  };\n\n  const returnToPanel = async ({ withChanges = false } = {}) => {\n    const dashboardSrv = getDashboardSrv();\n    const dash = dashboardSrv.getCurrent();\n    if (!dash) {\n      return;\n    }\n\n    const titleSlug = kbn.slugifyForUrl(dash.title);\n\n    if (withChanges) {\n      setDashboardQueriesToUpdateOnLoad({\n        panelId: originPanelId!,\n        queries: cleanQueries(queries),\n      });\n    }\n\n    const query: any = {};\n\n    if (withChanges || dash.panelInEdit) {\n      query.editPanel = originPanelId;\n    } else if (dash.panelInView) {\n      query.viewPanel = originPanelId;\n    }\n\n    locationService.push(urlUtil.renderUrl(`/d/${dash.uid}/:${titleSlug}`, query));\n  };\n\n  return (\n    <ButtonGroup>\n      <Tooltip content={'Return to panel'} placement=\"bottom\">\n        <ToolbarButton data-testid=\"returnButton\" title={'Return to panel'} onClick={() => returnToPanel()}>\n          <Icon name=\"arrow-left\" />\n        </ToolbarButton>\n      </Tooltip>\n      <ButtonSelect\n        data-testid=\"returnButtonWithChanges\"\n        options={[{ label: 'Return to panel with changes', value: '' }]}\n        onChange={() => returnToPanel({ withChanges: true })}\n      />\n    </ButtonGroup>\n  );\n};\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const splitted = isSplit(state);\n  const { datasourceInstance, queries, originPanelId } = explore[exploreId]!;\n\n  return {\n    exploreId,\n    datasourceInstance,\n    queries,\n    originPanelId,\n    splitted,\n  };\n}\n\nconst mapDispatchToProps = {\n  setDashboardQueriesToUpdateOnLoad,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UnconnectedReturnToDashboardButton);\n","// Libraries\nimport React, { PureComponent } from 'react';\nimport { debounce, has } from 'lodash';\nimport { hot } from 'react-hot-loader';\n// @ts-ignore\nimport { connect } from 'react-redux';\n// Components\nimport AngularQueryEditor from './QueryEditor';\nimport { QueryRowActions } from './QueryRowActions';\n// Types\nimport { StoreState } from 'app/types';\nimport {\n  DataQuery,\n  DataSourceApi,\n  PanelData,\n  HistoryItem,\n  TimeRange,\n  AbsoluteTimeRange,\n  LoadingState,\n  EventBusExtended,\n} from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { ExploreItemState, ExploreId } from 'app/types/explore';\nimport { highlightLogsExpressionAction } from './state/explorePane';\nimport { ErrorContainer } from './ErrorContainer';\nimport { changeQuery, modifyQueries, removeQueryRowAction, runQueries } from './state/query';\nimport { HelpToggle } from '../query/components/HelpToggle';\n\ninterface PropsFromParent {\n  exploreId: ExploreId;\n  index: number;\n}\n\nexport interface QueryRowProps extends PropsFromParent {\n  changeQuery: typeof changeQuery;\n  className?: string;\n  exploreId: ExploreId;\n  datasourceInstance: DataSourceApi;\n  highlightLogsExpressionAction: typeof highlightLogsExpressionAction;\n  history: HistoryItem[];\n  query: DataQuery;\n  modifyQueries: typeof modifyQueries;\n  range: TimeRange;\n  absoluteRange: AbsoluteTimeRange;\n  removeQueryRowAction: typeof removeQueryRowAction;\n  runQueries: typeof runQueries;\n  queryResponse: PanelData;\n  latency: number;\n  exploreEvents: EventBusExtended;\n}\n\ninterface QueryRowState {\n  textEditModeEnabled: boolean;\n}\n\n// Empty function to override blur execution on query field\nconst noopOnBlur = () => {};\n\nexport class QueryRow extends PureComponent<QueryRowProps, QueryRowState> {\n  state: QueryRowState = {\n    textEditModeEnabled: false,\n  };\n\n  onRunQuery = () => {\n    const { exploreId } = this.props;\n    this.props.runQueries(exploreId);\n  };\n\n  onChange = (query: DataQuery, override?: boolean) => {\n    const { datasourceInstance, exploreId, index } = this.props;\n    this.props.changeQuery(exploreId, query, index, override);\n    if (query && !override && datasourceInstance.getHighlighterExpression && index === 0) {\n      // Live preview of log search matches. Only use on first row for now\n      this.updateLogsHighlights(query);\n    }\n  };\n\n  onClickToggleDisabled = () => {\n    const { exploreId, index, query } = this.props;\n    const newQuery = {\n      ...query,\n      hide: !query.hide,\n    };\n    this.props.changeQuery(exploreId, newQuery, index, true);\n  };\n\n  onClickRemoveButton = () => {\n    const { exploreId, index } = this.props;\n    this.props.removeQueryRowAction({ exploreId, index });\n    this.props.runQueries(exploreId);\n  };\n\n  onClickToggleEditorMode = () => {\n    this.setState({ textEditModeEnabled: !this.state.textEditModeEnabled });\n  };\n\n  setReactQueryEditor = () => {\n    const { datasourceInstance } = this.props;\n    let QueryEditor;\n\n    // TODO:unification\n    if (datasourceInstance.components?.ExploreMetricsQueryField) {\n      QueryEditor = datasourceInstance.components.ExploreMetricsQueryField;\n    } else if (datasourceInstance.components?.ExploreLogsQueryField) {\n      QueryEditor = datasourceInstance.components.ExploreLogsQueryField;\n    } else if (datasourceInstance.components?.ExploreQueryField) {\n      QueryEditor = datasourceInstance.components.ExploreQueryField;\n    } else {\n      QueryEditor = datasourceInstance.components?.QueryEditor;\n    }\n    return QueryEditor;\n  };\n\n  renderQueryEditor = () => {\n    const { datasourceInstance, history, query, exploreEvents, range, queryResponse, exploreId } = this.props;\n\n    const queryErrors = queryResponse.error && queryResponse.error.refId === query.refId ? [queryResponse.error] : [];\n\n    const ReactQueryEditor = this.setReactQueryEditor();\n\n    let QueryEditor: JSX.Element;\n    if (ReactQueryEditor) {\n      QueryEditor = (\n        <ReactQueryEditor\n          datasource={datasourceInstance}\n          query={query}\n          history={history}\n          onRunQuery={this.onRunQuery}\n          onBlur={noopOnBlur}\n          onChange={this.onChange}\n          data={queryResponse}\n          range={range}\n          exploreId={exploreId}\n        />\n      );\n    } else {\n      QueryEditor = (\n        <AngularQueryEditor\n          error={queryErrors}\n          datasource={datasourceInstance}\n          onQueryChange={this.onChange}\n          onExecuteQuery={this.onRunQuery}\n          initialQuery={query}\n          exploreEvents={exploreEvents}\n          range={range}\n          textEditModeEnabled={this.state.textEditModeEnabled}\n        />\n      );\n    }\n\n    const DatasourceCheatsheet = datasourceInstance.components?.QueryEditorHelp;\n    return (\n      <>\n        {QueryEditor}\n        {DatasourceCheatsheet && (\n          <HelpToggle>\n            <DatasourceCheatsheet onClickExample={(query) => this.onChange(query)} datasource={datasourceInstance} />\n          </HelpToggle>\n        )}\n      </>\n    );\n  };\n\n  updateLogsHighlights = debounce((value: DataQuery) => {\n    const { datasourceInstance } = this.props;\n    if (datasourceInstance.getHighlighterExpression) {\n      const { exploreId } = this.props;\n      const expressions = datasourceInstance.getHighlighterExpression(value);\n      this.props.highlightLogsExpressionAction({ exploreId, expressions });\n    }\n  }, 500);\n\n  render() {\n    const { datasourceInstance, query, queryResponse, latency } = this.props;\n\n    const canToggleEditorModes = has(datasourceInstance, 'components.QueryCtrl.prototype.toggleEditorMode');\n    const isNotStarted = queryResponse.state === LoadingState.NotStarted;\n\n    // We show error without refId in ResponseErrorContainer so this condition needs to match se we don't loose errors.\n    const queryErrors = queryResponse.error && queryResponse.error.refId === query.refId ? [queryResponse.error] : [];\n\n    return (\n      <>\n        <div className=\"query-row\" aria-label={selectors.components.QueryEditorRows.rows}>\n          <div className=\"query-row-field flex-shrink-1\">{this.renderQueryEditor()}</div>\n          <QueryRowActions\n            canToggleEditorModes={canToggleEditorModes}\n            isDisabled={query.hide}\n            isNotStarted={isNotStarted}\n            latency={latency}\n            onClickToggleEditorMode={this.onClickToggleEditorMode}\n            onClickToggleDisabled={this.onClickToggleDisabled}\n            onClickRemoveButton={this.onClickRemoveButton}\n          />\n        </div>\n        {queryErrors.length > 0 && <ErrorContainer queryError={queryErrors[0]} />}\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId, index }: QueryRowProps) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const { datasourceInstance, history, queries, range, absoluteRange, queryResponse, latency, eventBridge } = item;\n  const query = queries[index];\n\n  return {\n    datasourceInstance,\n    history,\n    query,\n    range,\n    absoluteRange,\n    queryResponse,\n    latency,\n    exploreEvents: eventBridge,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeQuery,\n  highlightLogsExpressionAction,\n  modifyQueries,\n  removeQueryRowAction,\n  runQueries,\n};\n\nexport default hot(module)(\n  connect(mapStateToProps, mapDispatchToProps)(QueryRow) as React.ComponentType<PropsFromParent>\n);\n","import { useEffect, useRef } from 'react';\nvar useInterval = function (callback, delay) {\n    var savedCallback = useRef(function () { });\n    useEffect(function () {\n        savedCallback.current = callback;\n    });\n    useEffect(function () {\n        if (delay !== null) {\n            var interval_1 = setInterval(function () { return savedCallback.current(); }, delay || 0);\n            return function () { return clearInterval(interval_1); };\n        }\n        return undefined;\n    }, [delay]);\n};\nexport default useInterval;\n","import React, { FC } from 'react';\nimport { toDuration } from '@grafana/data';\n\nexport interface TimeProps {\n  timeInMs: number;\n  className?: string;\n  humanize?: boolean;\n}\n\nexport const Time: FC<TimeProps> = ({ timeInMs, className, humanize }) => {\n  return <span className={`elapsed-time ${className}`}>{formatTime(timeInMs, humanize)}</span>;\n};\n\nconst formatTime = (timeInMs: number, humanize = false): string => {\n  const inSeconds = timeInMs / 1000;\n\n  if (!humanize) {\n    return `${inSeconds.toFixed(1)}s`;\n  }\n\n  const duration = toDuration(inSeconds, 'seconds');\n  const hours = duration.hours();\n  const minutes = duration.minutes();\n  const seconds = duration.seconds();\n\n  if (hours) {\n    return `${hours}h ${minutes}m ${seconds}s`;\n  }\n\n  if (minutes) {\n    return `${minutes}m ${seconds}s`;\n  }\n\n  return `${seconds}s`;\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport { useInterval } from 'react-use';\nimport { Time, TimeProps } from './Time';\n\nconst INTERVAL = 150;\n\nexport interface ElapsedTimeProps extends Omit<TimeProps, 'timeInMs'> {\n  // Use this to reset the timer. Any value is allowed just need to be !== from the previous.\n  // Keep in mind things like [] !== [] or {} !== {}.\n  resetKey?: any;\n}\n\nexport const ElapsedTime: FC<ElapsedTimeProps> = ({ resetKey, humanize, className }) => {\n  const [elapsed, setElapsed] = useState(0); // the current value of elapsed\n\n  // hook that will schedule a interval and then update the elapsed value on every tick.\n  useInterval(() => setElapsed(elapsed + INTERVAL), INTERVAL);\n  // this effect will only be run when resetKey changes. This will reset the elapsed to 0.\n  useEffect(() => setElapsed(0), [resetKey]);\n\n  return <Time timeInMs={elapsed} className={className} humanize={humanize} />;\n};\n","import React, { PureComponent } from 'react';\nimport { css, cx } from '@emotion/css';\nimport tinycolor from 'tinycolor2';\n\nimport { LogMessageAnsi, Themeable, withTheme, getLogRowStyles, Icon, Button } from '@grafana/ui';\nimport { GrafanaTheme, LogRowModel, TimeZone, dateTimeFormat } from '@grafana/data';\n\nimport { ElapsedTime } from './ElapsedTime';\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  logsRowsLive: css`\n    label: logs-rows-live;\n    font-family: ${theme.typography.fontFamily.monospace};\n    font-size: ${theme.typography.size.sm};\n    display: flex;\n    flex-flow: column nowrap;\n    height: 60vh;\n    overflow-y: scroll;\n    :first-child {\n      margin-top: auto !important;\n    }\n  `,\n  logsRowFade: css`\n    label: logs-row-fresh;\n    color: ${theme.colors.text};\n    background-color: ${tinycolor(theme.palette.blue95).setAlpha(0.25).toString()};\n    animation: fade 1s ease-out 1s 1 normal forwards;\n    @keyframes fade {\n      from {\n        background-color: ${tinycolor(theme.palette.blue95).setAlpha(0.25).toString()};\n      }\n      to {\n        background-color: transparent;\n      }\n    }\n  `,\n  logsRowsIndicator: css`\n    font-size: ${theme.typography.size.md};\n    padding-top: ${theme.spacing.sm};\n    display: flex;\n    align-items: center;\n  `,\n  button: css`\n    margin-right: ${theme.spacing.sm};\n  `,\n  fullWidth: css`\n    width: 100%;\n  `,\n});\n\nexport interface Props extends Themeable {\n  logRows?: LogRowModel[];\n  timeZone: TimeZone;\n  stopLive: () => void;\n  onPause: () => void;\n  onResume: () => void;\n  isPaused: boolean;\n}\n\ninterface State {\n  logRowsToRender?: LogRowModel[];\n}\n\nclass LiveLogs extends PureComponent<Props, State> {\n  private liveEndDiv: HTMLDivElement | null = null;\n  private scrollContainerRef = React.createRef<HTMLTableSectionElement>();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logRowsToRender: props.logRows,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: Props, state: State) {\n    if (!nextProps.isPaused) {\n      return {\n        // We update what we show only if not paused. We keep any background subscriptions running and keep updating\n        // our state, but we do not show the updates, this allows us start again showing correct result after resuming\n        // without creating a gap in the log results.\n        logRowsToRender: nextProps.logRows,\n      };\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Handle pausing when user scrolls up so that we stop resetting his position to the bottom when new row arrives.\n   * We do not need to throttle it here much, adding new rows should be throttled/buffered itself in the query epics\n   * and after you pause we remove the handler and add it after you manually resume, so this should not be fired often.\n   */\n  onScroll = (event: React.SyntheticEvent) => {\n    const { isPaused, onPause } = this.props;\n    const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;\n    const distanceFromBottom = scrollHeight - (scrollTop + clientHeight);\n    if (distanceFromBottom >= 5 && !isPaused) {\n      onPause();\n    }\n  };\n\n  rowsToRender = () => {\n    const { isPaused } = this.props;\n    let { logRowsToRender: rowsToRender = [] } = this.state;\n    if (!isPaused) {\n      // A perf optimisation here. Show just 100 rows when streaming and full length when the streaming is paused.\n      rowsToRender = rowsToRender.slice(-100);\n    }\n    return rowsToRender;\n  };\n\n  render() {\n    const { theme, timeZone, onPause, onResume, isPaused } = this.props;\n    const styles = getStyles(theme);\n    const { logsRow, logsRowLocalTime, logsRowMessage } = getLogRowStyles(theme);\n\n    return (\n      <div>\n        <table className={styles.fullWidth}>\n          <tbody\n            onScroll={isPaused ? undefined : this.onScroll}\n            className={cx(['logs-rows', styles.logsRowsLive])}\n            ref={this.scrollContainerRef}\n          >\n            {this.rowsToRender().map((row: LogRowModel) => {\n              return (\n                <tr className={cx(logsRow, styles.logsRowFade)} key={row.uid}>\n                  <td className={cx(logsRowLocalTime)}>{dateTimeFormat(row.timeEpochMs, { timeZone })}</td>\n                  <td className={cx(logsRowMessage)}>{row.hasAnsi ? <LogMessageAnsi value={row.raw} /> : row.entry}</td>\n                </tr>\n              );\n            })}\n            <tr\n              ref={(element) => {\n                this.liveEndDiv = element;\n                // This is triggered on every update so on every new row. It keeps the view scrolled at the bottom by\n                // default.\n                if (this.liveEndDiv && !isPaused) {\n                  this.scrollContainerRef.current?.scrollTo(0, this.scrollContainerRef.current.scrollHeight);\n                }\n              }}\n            />\n          </tbody>\n        </table>\n        <div className={styles.logsRowsIndicator}>\n          <Button variant=\"secondary\" onClick={isPaused ? onResume : onPause} className={styles.button}>\n            <Icon name={isPaused ? 'play' : 'pause'} />\n            &nbsp;\n            {isPaused ? 'Resume' : 'Pause'}\n          </Button>\n          <Button variant=\"secondary\" onClick={this.props.stopLive} className={styles.button}>\n            <Icon name=\"square-shape\" size=\"lg\" type=\"mono\" />\n            &nbsp; Exit live mode\n          </Button>\n          {isPaused || (\n            <span>\n              Last line received: <ElapsedTime resetKey={this.props.logRows} humanize={true} /> ago\n            </span>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const LiveLogsWithTheme = withTheme(LiveLogs);\n","// Libraries\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { hot } from 'react-hot-loader';\n\n// Services & Utils\nimport store from 'app/core/store';\nimport { RICH_HISTORY_SETTING_KEYS } from 'app/core/utils/richHistory';\n\n// Types\nimport { ExploreItemState, StoreState } from 'app/types';\nimport { ExploreId, RichHistoryQuery } from 'app/types/explore';\n\n// Components, enums\nimport { RichHistory, Tabs } from './RichHistory';\n\n//Actions\nimport { deleteRichHistory } from '../state/history';\nimport { ExploreDrawer } from '../ExploreDrawer';\n\nexport interface Props {\n  width: number;\n  exploreId: ExploreId;\n  activeDatasourceInstance: string;\n  richHistory: RichHistoryQuery[];\n  firstTab: Tabs;\n  deleteRichHistory: typeof deleteRichHistory;\n  onClose: () => void;\n}\n\nexport function RichHistoryContainer(props: Props) {\n  const [height, setHeight] = useState(400);\n\n  const { richHistory, width, firstTab, activeDatasourceInstance, exploreId, deleteRichHistory, onClose } = props;\n\n  return (\n    <ExploreDrawer\n      width={width}\n      onResize={(_e, _dir, ref) => {\n        setHeight(Number(ref.style.height.slice(0, -2)));\n      }}\n    >\n      <RichHistory\n        richHistory={richHistory}\n        firstTab={firstTab}\n        activeDatasourceInstance={activeDatasourceInstance}\n        exploreId={exploreId}\n        deleteRichHistory={deleteRichHistory}\n        onClose={onClose}\n        height={height}\n      />\n    </ExploreDrawer>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const { datasourceInstance } = item;\n  const firstTab = store.getBool(RICH_HISTORY_SETTING_KEYS.starredTabAsFirstTab, false)\n    ? Tabs.Starred\n    : Tabs.RichHistory;\n  const { richHistory } = explore;\n  return {\n    richHistory,\n    firstTab,\n    activeDatasourceInstance: datasourceInstance?.name,\n  };\n}\n\nconst mapDispatchToProps = {\n  deleteRichHistory,\n};\n\nexport default hot(module)(connect(mapStateToProps, mapDispatchToProps)(RichHistoryContainer));\n","import React from 'react';\nimport { TabbedContainer, TabConfig } from '@grafana/ui';\nimport { PanelData, TimeZone } from '@grafana/data';\nimport { runQueries } from './state/query';\nimport { StoreState, ExploreItemState, ExploreId } from 'app/types';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\nimport { ExploreDrawer } from 'app/features/explore/ExploreDrawer';\nimport { InspectJSONTab } from 'app/features/inspector/InspectJSONTab';\nimport { QueryInspector } from 'app/features/inspector/QueryInspector';\nimport { InspectStatsTab } from 'app/features/inspector/InspectStatsTab';\nimport { InspectDataTab } from 'app/features/inspector/InspectDataTab';\nimport { InspectErrorTab } from 'app/features/inspector/InspectErrorTab';\n\ninterface DispatchProps {\n  runQueries: typeof runQueries;\n}\ninterface Props extends DispatchProps {\n  loading: boolean;\n  width: number;\n  exploreId: ExploreId;\n  queryResponse?: PanelData;\n  onClose: () => void;\n}\n\nexport function ExploreQueryInspector(props: Props) {\n  const { loading, width, onClose, queryResponse } = props;\n  const dataFrames = queryResponse?.series || [];\n  const error = queryResponse?.error;\n\n  const statsTab: TabConfig = {\n    label: 'Stats',\n    value: 'stats',\n    icon: 'chart-line',\n    content: <InspectStatsTab data={queryResponse!} timeZone={queryResponse?.request?.timezone as TimeZone} />,\n  };\n\n  const jsonTab: TabConfig = {\n    label: 'JSON',\n    value: 'json',\n    icon: 'brackets-curly',\n    content: <InspectJSONTab data={queryResponse} onClose={onClose} />,\n  };\n\n  const dataTab: TabConfig = {\n    label: 'Data',\n    value: 'data',\n    icon: 'database',\n    content: (\n      <InspectDataTab\n        data={dataFrames}\n        isLoading={loading}\n        options={{ withTransforms: false, withFieldConfig: false }}\n      />\n    ),\n  };\n\n  const queryTab: TabConfig = {\n    label: 'Query',\n    value: 'query',\n    icon: 'info-circle',\n    content: <QueryInspector data={dataFrames} onRefreshQuery={() => props.runQueries(props.exploreId)} />,\n  };\n\n  const tabs = [statsTab, queryTab, jsonTab, dataTab];\n  if (error) {\n    const errorTab: TabConfig = {\n      label: 'Error',\n      value: 'error',\n      icon: 'exclamation-triangle',\n      content: <InspectErrorTab error={error} />,\n    };\n    tabs.push(errorTab);\n  }\n  return (\n    <ExploreDrawer width={width} onResize={() => {}}>\n      <TabbedContainer tabs={tabs} onClose={onClose} closeIconTooltip=\"Close query inspector\" />\n    </ExploreDrawer>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const { loading, queryResponse } = item;\n\n  return {\n    loading,\n    queryResponse,\n  };\n}\n\nconst mapDispatchToProps: DispatchProps = {\n  runQueries,\n};\n\nexport default hot(module)(connect(mapStateToProps, mapDispatchToProps)(ExploreQueryInspector));\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar styles = {\n    top: {\n        width: '100%',\n        height: '10px',\n        top: '-5px',\n        left: '0px',\n        cursor: 'row-resize',\n    },\n    right: {\n        width: '10px',\n        height: '100%',\n        top: '0px',\n        right: '-5px',\n        cursor: 'col-resize',\n    },\n    bottom: {\n        width: '100%',\n        height: '10px',\n        bottom: '-5px',\n        left: '0px',\n        cursor: 'row-resize',\n    },\n    left: {\n        width: '10px',\n        height: '100%',\n        top: '0px',\n        left: '-5px',\n        cursor: 'col-resize',\n    },\n    topRight: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        right: '-10px',\n        top: '-10px',\n        cursor: 'ne-resize',\n    },\n    bottomRight: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        right: '-10px',\n        bottom: '-10px',\n        cursor: 'se-resize',\n    },\n    bottomLeft: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        left: '-10px',\n        bottom: '-10px',\n        cursor: 'sw-resize',\n    },\n    topLeft: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        left: '-10px',\n        top: '-10px',\n        cursor: 'nw-resize',\n    },\n};\nvar Resizer = /** @class */ (function (_super) {\n    __extends(Resizer, _super);\n    function Resizer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.onMouseDown = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        _this.onTouchStart = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        return _this;\n    }\n    Resizer.prototype.render = function () {\n        return (React.createElement(\"div\", { className: this.props.className || '', style: __assign(__assign({ position: 'absolute', userSelect: 'none' }, styles[this.props.direction]), (this.props.replaceStyles || {})), onMouseDown: this.onMouseDown, onTouchStart: this.onTouchStart }, this.props.children));\n    };\n    return Resizer;\n}(React.PureComponent));\nexports.Resizer = Resizer;\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RefreshPicker } from '@grafana/ui';\n\nimport { changeRefreshInterval } from './state/time';\nimport { setPausedStateAction, runQueries } from './state/query';\nimport { ExploreId } from '../../types';\n\n/**\n * Hook that gives you all the functions needed to control the live tailing.\n */\nexport function useLiveTailControls(exploreId: ExploreId) {\n  const dispatch = useDispatch();\n\n  const pause = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: true }));\n  }, [exploreId, dispatch]);\n\n  const resume = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: false }));\n  }, [exploreId, dispatch]);\n\n  const stop = useCallback(() => {\n    // We need to pause here first because there is transition where we are not live but live logs are still shown\n    // to cross fade with the normal view. This will prevent reordering of the logs in the live view during the\n    // transition.\n    pause();\n\n    // TODO referencing this from perspective of refresh picker when there is designated button for it now is not\n    //  great. Needs a bit of refactoring.\n    dispatch(changeRefreshInterval(exploreId, RefreshPicker.offOption.value));\n    dispatch(runQueries(exploreId));\n  }, [exploreId, dispatch, pause]);\n\n  const start = useCallback(() => {\n    dispatch(changeRefreshInterval(exploreId, RefreshPicker.liveOption.value));\n  }, [exploreId, dispatch]);\n\n  return {\n    pause,\n    resume,\n    stop,\n    start,\n  };\n}\n\ntype Props = {\n  exploreId: ExploreId;\n  children: (controls: ReturnType<typeof useLiveTailControls>) => React.ReactElement;\n};\n\n/**\n * If you can't use the hook you can use this as a render prop pattern.\n */\nexport function LiveTailControls(props: Props) {\n  const controls = useLiveTailControls(props.exploreId);\n  return props.children(controls);\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ExploreId, StoreState } from '../../types';\nimport { LoadingState } from '@grafana/data';\nimport { ErrorContainer } from './ErrorContainer';\n\ninterface Props {\n  exploreId: ExploreId;\n}\nexport function ResponseErrorContainer(props: Props) {\n  const queryResponse = useSelector((state: StoreState) => state.explore[props.exploreId]?.queryResponse);\n\n  // Only show error if it does not have refId. Otherwise let query row to handle it so this condition has to be matched\n  // with QueryRow.tsx so we don't loose errors.\n  const queryError =\n    queryResponse?.state === LoadingState.Error && queryResponse?.error && !queryResponse.error.refId\n      ? queryResponse.error\n      : undefined;\n\n  return <ErrorContainer queryError={queryError} />;\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { LinkButton, CallToActionCard, Icon, useTheme } from '@grafana/ui';\n\nexport const NoDataSourceCallToAction = () => {\n  const theme = useTheme();\n\n  const message =\n    'Explore requires at least one data source. Once you have added a data source, you can query it here.';\n  const footer = (\n    <>\n      <Icon name=\"rocket\" />\n      <> ProTip: You can also define data sources through configuration files. </>\n      <a\n        href=\"http://docs.grafana.org/administration/provisioning/#datasources?utm_source=explore\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"text-link\"\n      >\n        Learn more\n      </a>\n    </>\n  );\n\n  const ctaElement = (\n    <LinkButton size=\"lg\" href=\"datasources/new\" icon=\"database\">\n      Add data source\n    </LinkButton>\n  );\n\n  const cardClassName = css`\n    max-width: ${theme.breakpoints.lg};\n    margin-top: ${theme.spacing.md};\n    align-self: center;\n  `;\n\n  return (\n    <CallToActionCard callToActionElement={ctaElement} className={cardClassName} footer={footer} message={message} />\n  );\n};\n","import { DataLink, dateTime, Field, mapInternalLinkToExplore, TimeRange } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { Icon } from '@grafana/ui';\nimport { SplitOpen } from 'app/types/explore';\nimport { TraceToLogsOptions } from 'app/core/components/TraceToLogsSettings';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport React from 'react';\nimport { LokiQuery } from '../../../plugins/datasource/loki/types';\nimport { TraceSpan } from '@jaegertracing/jaeger-ui-components';\n\n/**\n * This is a factory for the link creator. It returns the function mainly so it can return undefined in which case\n * the trace view won't create any links and to capture the datasource and split function making it easier to memoize\n * with useMemo.\n */\nexport function createSpanLinkFactory(splitOpenFn: SplitOpen, traceToLogsOptions?: TraceToLogsOptions) {\n  // We should return if dataSourceUid is undefined otherwise getInstanceSettings would return testDataSource.\n  if (!traceToLogsOptions?.datasourceUid) {\n    return undefined;\n  }\n\n  const dataSourceSettings = getDatasourceSrv().getInstanceSettings(traceToLogsOptions.datasourceUid);\n\n  if (!dataSourceSettings) {\n    return undefined;\n  }\n\n  return function (span: TraceSpan): { href: string; onClick?: (event: any) => void; content: React.ReactNode } {\n    // This is reusing existing code from derived fields which may not be ideal match so some data is a bit faked at\n    // the moment. Issue is that the trace itself isn't clearly mapped to dataFrame (right now it's just a json blob\n    // inside a single field) so the dataLinks as config of that dataFrame abstraction breaks down a bit and we do\n    // it manually here instead of leaving it for the data source to supply the config.\n\n    const dataLink: DataLink<LokiQuery> = {\n      title: dataSourceSettings.name,\n      url: '',\n      internal: {\n        datasourceUid: dataSourceSettings.uid,\n        datasourceName: dataSourceSettings.name,\n        query: {\n          expr: getLokiQueryFromSpan(span, traceToLogsOptions.tags),\n          refId: '',\n        },\n      },\n    };\n\n    const link = mapInternalLinkToExplore({\n      link: dataLink,\n      internalLink: dataLink.internal!,\n      scopedVars: {},\n      range: getTimeRangeFromSpan(span),\n      field: {} as Field,\n      onClickFn: splitOpenFn,\n      replaceVariables: getTemplateSrv().replace.bind(getTemplateSrv()),\n    });\n\n    return {\n      href: link.href,\n      onClick: link.onClick,\n      content: <Icon name=\"gf-logs\" title=\"Explore the logs for this in split view\" />,\n    };\n  };\n}\n\n/**\n * Default keys to use when there are no configured tags.\n */\nconst defaultKeys = ['cluster', 'hostname', 'namespace', 'pod'];\n\nfunction getLokiQueryFromSpan(span: TraceSpan, keys?: string[]): string {\n  const keysToCheck = keys?.length ? keys : defaultKeys;\n  const tags = [...span.process.tags, ...span.tags].reduce((acc, tag) => {\n    if (keysToCheck.includes(tag.key)) {\n      acc.push(`${tag.key}=\"${tag.value}\"`);\n    }\n    return acc;\n  }, [] as string[]);\n  return `{${tags.join(', ')}}`;\n}\n\n/**\n * Gets a time range from the span. Naively this could be just start and end time of the span but we also want some\n * buffer around that just so we do not miss some logs which may not have timestamps aligned with the span. Right\n * now the buffers are hardcoded which may be a bit weird for very short spans but at the same time, fractional buffers\n * with very short spans could mean microseconds and that could miss some logs relevant to that spans. In the future\n * something more intelligent should probably be implemented\n */\nfunction getTimeRangeFromSpan(span: TraceSpan): TimeRange {\n  const from = dateTime(span.startTime / 1000 - 1000 * 60 * 60);\n  const spanEndMs = (span.startTime + span.duration) / 1000;\n  const to = dateTime(spanEndMs + 5 * 1000);\n\n  return {\n    from,\n    to,\n    // Weirdly Explore does not handle ISO string which would have been the default stringification if passed as object\n    // and we have to use this custom format :( .\n    raw: {\n      from: from.utc().format('YYYYMMDDTHHmmss'),\n      to: to.utc().format('YYYYMMDDTHHmmss'),\n    },\n  };\n}\n","import { GrafanaTheme } from '@grafana/data';\nimport {\n  Button,\n  Input,\n  Popover,\n  PopoverController,\n  stylesFactory,\n  Tooltip as GrafanaTooltip,\n  useTheme,\n} from '@grafana/ui';\nimport { ButtonProps, Elements, PopoverProps, TooltipProps } from '@jaegertracing/jaeger-ui-components';\nimport cx from 'classnames';\nimport { css } from '@emotion/css';\nimport React, { useRef } from 'react';\n\n/**\n * Right now Jaeger components need some UI elements to be injected. This is to get rid of AntD UI library that was\n * used by default.\n */\n\n// This needs to be static to prevent remounting on every render.\nexport const UIElements: Elements = {\n  Popover({ children, content, overlayClassName }: PopoverProps) {\n    const popoverRef = useRef<HTMLElement>(null);\n\n    return (\n      <PopoverController content={content} hideAfter={300}>\n        {(showPopper, hidePopper, popperProps) => {\n          return (\n            <>\n              {popoverRef.current && (\n                <Popover\n                  {...popperProps}\n                  referenceElement={popoverRef.current}\n                  wrapperClassName={overlayClassName}\n                  onMouseLeave={hidePopper}\n                  onMouseEnter={showPopper}\n                />\n              )}\n\n              {React.cloneElement(children, {\n                ref: popoverRef,\n                onMouseEnter: showPopper,\n                onMouseLeave: hidePopper,\n              })}\n            </>\n          );\n        }}\n      </PopoverController>\n    );\n  },\n  Tooltip({ children, title }: TooltipProps) {\n    return <GrafanaTooltip content={title}>{children}</GrafanaTooltip>;\n  },\n  Icon: (() => null as any) as any,\n  Dropdown: (() => null as any) as any,\n  Menu: (() => null as any) as any,\n  MenuItem: (() => null as any) as any,\n  Button({ onClick, children, className }: ButtonProps) {\n    return (\n      <Button variant=\"secondary\" onClick={onClick} className={className}>\n        {children}\n      </Button>\n    );\n  },\n  Divider,\n  Input(props) {\n    return <Input {...props} />;\n  },\n  InputGroup({ children, className, style }) {\n    return (\n      <span className={className} style={style}>\n        {children}\n      </span>\n    );\n  },\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    Divider: css`\n      display: inline-block;\n      background: ${theme.isDark ? '#242424' : '#e8e8e8'};\n      width: 1px;\n      height: 0.9em;\n      margin: 0 8px;\n      vertical-align: middle;\n    `,\n  };\n});\n\nfunction Divider({ className }: { className?: string }) {\n  const styles = getStyles(useTheme());\n  return <div style={{}} className={cx(styles.Divider, className)} />;\n}\n","import { useCallback, useState } from 'react';\nimport { TraceSpan } from '@jaegertracing/jaeger-ui-components';\n\n/**\n * Children state means whether spans are collapsed or not. Also provides some functions to manipulate that state.\n */\nexport function useChildrenState() {\n  const [childrenHiddenIDs, setChildrenHiddenIDs] = useState(new Set<string>());\n\n  const expandOne = useCallback(\n    function expandOne(spans: TraceSpan[]) {\n      if (childrenHiddenIDs.size === 0) {\n        return;\n      }\n      let prevExpandedDepth = -1;\n      let expandNextHiddenSpan = true;\n      const newChildrenHiddenIDs = spans.reduce((res, s) => {\n        if (s.depth <= prevExpandedDepth) {\n          expandNextHiddenSpan = true;\n        }\n        if (expandNextHiddenSpan && res.has(s.spanID)) {\n          res.delete(s.spanID);\n          expandNextHiddenSpan = false;\n          prevExpandedDepth = s.depth;\n        }\n        return res;\n      }, new Set(childrenHiddenIDs));\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  const collapseOne = useCallback(\n    function collapseOne(spans: TraceSpan[]) {\n      if (shouldDisableCollapse(spans, childrenHiddenIDs)) {\n        return;\n      }\n      let nearestCollapsedAncestor: TraceSpan | undefined;\n      const newChildrenHiddenIDs = spans.reduce((res, curSpan) => {\n        if (nearestCollapsedAncestor && curSpan.depth <= nearestCollapsedAncestor.depth) {\n          res.add(nearestCollapsedAncestor.spanID);\n          if (curSpan.hasChildren) {\n            nearestCollapsedAncestor = curSpan;\n          }\n        } else if (curSpan.hasChildren && !res.has(curSpan.spanID)) {\n          nearestCollapsedAncestor = curSpan;\n        }\n        return res;\n      }, new Set(childrenHiddenIDs));\n      // The last one\n      if (nearestCollapsedAncestor) {\n        newChildrenHiddenIDs.add(nearestCollapsedAncestor.spanID);\n      }\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  const expandAll = useCallback(function expandAll() {\n    setChildrenHiddenIDs(new Set<string>());\n  }, []);\n\n  const collapseAll = useCallback(\n    function collapseAll(spans: TraceSpan[]) {\n      if (shouldDisableCollapse(spans, childrenHiddenIDs)) {\n        return;\n      }\n      const newChildrenHiddenIDs = spans.reduce((res, s) => {\n        if (s.hasChildren) {\n          res.add(s.spanID);\n        }\n        return res;\n      }, new Set<string>());\n\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  const childrenToggle = useCallback(\n    function childrenToggle(spanID: string) {\n      const newChildrenHiddenIDs = new Set(childrenHiddenIDs);\n      if (childrenHiddenIDs.has(spanID)) {\n        newChildrenHiddenIDs.delete(spanID);\n      } else {\n        newChildrenHiddenIDs.add(spanID);\n      }\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  return {\n    childrenHiddenIDs,\n    expandOne,\n    collapseOne,\n    expandAll,\n    collapseAll,\n    childrenToggle,\n  };\n}\n\nfunction shouldDisableCollapse(allSpans: TraceSpan[], hiddenSpansIds: Set<string>) {\n  const allParentSpans = allSpans.filter((s) => s.hasChildren);\n  return allParentSpans.length === hiddenSpansIds.size;\n}\n","import { useCallback, useState } from 'react';\nimport { DetailState } from '@jaegertracing/jaeger-ui-components';\nimport { TraceLog } from '@jaegertracing/jaeger-ui-components/src/types/trace';\n\n/**\n * Keeps state of the span detail. This means whether span details are open but also state of each detail subitem\n * like logs or tags.\n */\nexport function useDetailState() {\n  const [detailStates, setDetailStates] = useState(new Map<string, DetailState>());\n\n  const toggleDetail = useCallback(\n    function toggleDetail(spanID: string) {\n      const newDetailStates = new Map(detailStates);\n      if (newDetailStates.has(spanID)) {\n        newDetailStates.delete(spanID);\n      } else {\n        newDetailStates.set(spanID, new DetailState());\n      }\n      setDetailStates(newDetailStates);\n    },\n    [detailStates]\n  );\n\n  const detailLogItemToggle = useCallback(\n    function detailLogItemToggle(spanID: string, log: TraceLog) {\n      const old = detailStates.get(spanID);\n      if (!old) {\n        return;\n      }\n      const detailState = old.toggleLogItem(log);\n      const newDetailStates = new Map(detailStates);\n      newDetailStates.set(spanID, detailState);\n      return setDetailStates(newDetailStates);\n    },\n    [detailStates]\n  );\n\n  return {\n    detailStates,\n    toggleDetail,\n    detailLogItemToggle,\n    detailLogsToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('logs', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailWarningsToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('warnings', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailStackTracesToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('stackTraces', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailReferencesToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('references', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailProcessToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('process', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailTagsToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('tags', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n  };\n}\n\nfunction makeDetailSubsectionToggle(\n  subSection: 'tags' | 'process' | 'logs' | 'warnings' | 'references' | 'stackTraces',\n  detailStates: Map<string, DetailState>,\n  setDetailStates: (detailStates: Map<string, DetailState>) => void\n) {\n  return (spanID: string) => {\n    const old = detailStates.get(spanID);\n    if (!old) {\n      return;\n    }\n    let detailState;\n    if (subSection === 'tags') {\n      detailState = old.toggleTags();\n    } else if (subSection === 'process') {\n      detailState = old.toggleProcess();\n    } else if (subSection === 'warnings') {\n      detailState = old.toggleWarnings();\n    } else if (subSection === 'references') {\n      detailState = old.toggleReferences();\n    } else if (subSection === 'stackTraces') {\n      detailState = old.toggleStackTraces();\n    } else {\n      detailState = old.toggleLogs();\n    }\n    const newDetailStates = new Map(detailStates);\n    newDetailStates.set(spanID, detailState);\n    setDetailStates(newDetailStates);\n  };\n}\n","import { DataFrame, DataFrameView, TraceSpanRow } from '@grafana/data';\nimport { colors, useTheme } from '@grafana/ui';\nimport {\n  ThemeOptions,\n  ThemeProvider,\n  ThemeType,\n  Trace,\n  TracePageHeader,\n  TraceProcess,\n  TraceResponse,\n  TraceTimelineViewer,\n  transformTraceData,\n  TTraceTimeline,\n  UIElementsContext,\n} from '@jaegertracing/jaeger-ui-components';\nimport { TraceToLogsData } from 'app/core/components/TraceToLogsSettings';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { StoreState } from 'app/types';\nimport { ExploreId, SplitOpen } from 'app/types/explore';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { createSpanLinkFactory } from './createSpanLink';\nimport { UIElements } from './uiElements';\nimport { useChildrenState } from './useChildrenState';\nimport { useDetailState } from './useDetailState';\nimport { useHoverIndentGuide } from './useHoverIndentGuide';\nimport { useSearch } from './useSearch';\nimport { useViewRange } from './useViewRange';\n\nfunction noop(): {} {\n  return {};\n}\n\ntype Props = {\n  dataFrames: DataFrame[];\n  splitOpenFn: SplitOpen;\n  exploreId: ExploreId;\n};\n\nexport function TraceView(props: Props) {\n  const { expandOne, collapseOne, childrenToggle, collapseAll, childrenHiddenIDs, expandAll } = useChildrenState();\n  const {\n    detailStates,\n    toggleDetail,\n    detailLogItemToggle,\n    detailLogsToggle,\n    detailProcessToggle,\n    detailReferencesToggle,\n    detailTagsToggle,\n    detailWarningsToggle,\n    detailStackTracesToggle,\n  } = useDetailState();\n  const { removeHoverIndentGuideId, addHoverIndentGuideId, hoverIndentGuideIds } = useHoverIndentGuide();\n  const { viewRange, updateViewRangeTime, updateNextViewRangeTime } = useViewRange();\n\n  /**\n   * Keeps state of resizable name column width\n   */\n  const [spanNameColumnWidth, setSpanNameColumnWidth] = useState(0.25);\n  /**\n   * State of the top minimap, slim means it is collapsed.\n   */\n  const [slim, setSlim] = useState(false);\n\n  const traceProp = useMemo(() => transformDataFrames(props.dataFrames), [props.dataFrames]);\n  const { search, setSearch, spanFindMatches } = useSearch(traceProp?.spans);\n  const dataSourceName = useSelector((state: StoreState) => state.explore[props.exploreId]?.datasourceInstance?.name);\n  const traceToLogsOptions = (getDatasourceSrv().getInstanceSettings(dataSourceName)?.jsonData as TraceToLogsData)\n    ?.tracesToLogs;\n\n  const theme = useTheme();\n  const traceTheme = useMemo(\n    () =>\n      ({\n        type: theme.isDark ? ThemeType.Dark : ThemeType.Light,\n        servicesColorPalette: colors,\n        components: {\n          TraceName: {\n            fontSize: theme.typography.size.lg,\n          },\n        },\n      } as ThemeOptions),\n    [theme]\n  );\n\n  const traceTimeline: TTraceTimeline = useMemo(\n    () => ({\n      childrenHiddenIDs,\n      detailStates,\n      hoverIndentGuideIds,\n      shouldScrollToFirstUiFindMatch: false,\n      spanNameColumnWidth,\n      traceID: traceProp?.traceID,\n    }),\n    [childrenHiddenIDs, detailStates, hoverIndentGuideIds, spanNameColumnWidth, traceProp?.traceID]\n  );\n\n  const createSpanLink = useMemo(() => createSpanLinkFactory(props.splitOpenFn, traceToLogsOptions), [\n    props.splitOpenFn,\n    traceToLogsOptions,\n  ]);\n  const scrollElement = document.getElementsByClassName('scrollbar-view')[0];\n  const onSlimViewClicked = useCallback(() => setSlim(!slim), [slim]);\n\n  if (!props.dataFrames?.length || !traceProp) {\n    return null;\n  }\n\n  return (\n    <ThemeProvider value={traceTheme}>\n      <UIElementsContext.Provider value={UIElements}>\n        <TracePageHeader\n          canCollapse={false}\n          clearSearch={noop}\n          focusUiFindMatches={noop}\n          hideMap={false}\n          hideSummary={false}\n          nextResult={noop}\n          onSlimViewClicked={onSlimViewClicked}\n          onTraceGraphViewClicked={noop}\n          prevResult={noop}\n          resultCount={0}\n          slimView={slim}\n          textFilter={null}\n          trace={traceProp}\n          traceGraphView={false}\n          updateNextViewRangeTime={updateNextViewRangeTime}\n          updateViewRangeTime={updateViewRangeTime}\n          viewRange={viewRange}\n          searchValue={search}\n          onSearchValueChange={setSearch}\n          hideSearchButtons={true}\n        />\n        <TraceTimelineViewer\n          registerAccessors={noop}\n          scrollToFirstVisibleSpan={noop}\n          findMatchesIDs={spanFindMatches}\n          trace={traceProp}\n          traceTimeline={traceTimeline}\n          updateNextViewRangeTime={updateNextViewRangeTime}\n          updateViewRangeTime={updateViewRangeTime}\n          viewRange={viewRange}\n          focusSpan={noop}\n          createLinkToExternalSpan={noop as any}\n          setSpanNameColumnWidth={setSpanNameColumnWidth}\n          collapseAll={collapseAll}\n          collapseOne={collapseOne}\n          expandAll={expandAll}\n          expandOne={expandOne}\n          childrenToggle={childrenToggle}\n          clearShouldScrollToFirstUiFindMatch={noop}\n          detailLogItemToggle={detailLogItemToggle}\n          detailLogsToggle={detailLogsToggle}\n          detailWarningsToggle={detailWarningsToggle}\n          detailStackTracesToggle={detailStackTracesToggle}\n          detailReferencesToggle={detailReferencesToggle}\n          detailProcessToggle={detailProcessToggle}\n          detailTagsToggle={detailTagsToggle}\n          detailToggle={toggleDetail}\n          setTrace={noop}\n          addHoverIndentGuideId={addHoverIndentGuideId}\n          removeHoverIndentGuideId={removeHoverIndentGuideId}\n          linksGetter={noop as any}\n          uiFind={search}\n          createSpanLink={createSpanLink}\n          scrollElement={scrollElement}\n        />\n      </UIElementsContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nfunction transformDataFrames(frames: DataFrame[]): Trace | null {\n  // At this point we only show single trace.\n  const frame = frames[0];\n  if (!frame) {\n    return null;\n  }\n  let data: TraceResponse =\n    frame.fields.length === 1\n      ? // For backward compatibility when we sent whole json response in a single field/value\n        frame.fields[0].values.get(0)\n      : transformTraceDataFrame(frame);\n  return transformTraceData(data);\n}\n\nfunction transformTraceDataFrame(frame: DataFrame): TraceResponse {\n  const view = new DataFrameView<TraceSpanRow>(frame);\n  const processes: Record<string, TraceProcess> = {};\n  for (let i = 0; i < view.length; i++) {\n    const span = view.get(i);\n    if (!processes[span.serviceName]) {\n      processes[span.serviceName] = {\n        serviceName: span.serviceName,\n        tags: span.serviceTags,\n      };\n    }\n  }\n\n  return {\n    traceID: view.get(0).traceID,\n    processes,\n    spans: view.toArray().map((s) => {\n      return {\n        ...s,\n        duration: s.duration * 1000,\n        startTime: s.startTime * 1000,\n        processID: s.serviceName,\n        flags: 0,\n        references: s.parentSpanID ? [{ refType: 'CHILD_OF', spanID: s.parentSpanID, traceID: s.traceID }] : undefined,\n        logs: s.logs?.map((l) => ({ ...l, timestamp: l.timestamp * 1000 })) || [],\n      };\n    }),\n  };\n}\n","import { useCallback, useState } from 'react';\n\n/**\n * This is used internally to handle hover state of indent guide. As indent guides are separate\n * components per each row/span and you need to highlight all in multiple rows to make the effect of single line\n * they need this kind of common imperative state changes.\n *\n * Ideally would be changed to trace view internal state.\n */\nexport function useHoverIndentGuide() {\n  const [hoverIndentGuideIds, setHoverIndentGuideIds] = useState(new Set<string>());\n\n  const addHoverIndentGuideId = useCallback(function addHoverIndentGuideId(spanID: string) {\n    setHoverIndentGuideIds((prevState) => {\n      const newHoverIndentGuideIds = new Set(prevState);\n      newHoverIndentGuideIds.add(spanID);\n      return newHoverIndentGuideIds;\n    });\n  }, []);\n\n  const removeHoverIndentGuideId = useCallback(function removeHoverIndentGuideId(spanID: string) {\n    setHoverIndentGuideIds((prevState) => {\n      const newHoverIndentGuideIds = new Set(prevState);\n      newHoverIndentGuideIds.delete(spanID);\n      return newHoverIndentGuideIds;\n    });\n  }, []);\n\n  return { hoverIndentGuideIds, addHoverIndentGuideId, removeHoverIndentGuideId };\n}\n","import { useCallback, useState } from 'react';\nimport { ViewRangeTimeUpdate, ViewRange } from '@jaegertracing/jaeger-ui-components';\n\n/**\n * Controls state of the zoom function that can be used through minimap in header or on the timeline. ViewRange contains\n * state not only for current range that is showing but range that is currently being selected by the user.\n */\nexport function useViewRange() {\n  const [viewRange, setViewRange] = useState<ViewRange>({\n    time: {\n      current: [0, 1],\n    },\n  });\n\n  const updateNextViewRangeTime = useCallback(function updateNextViewRangeTime(update: ViewRangeTimeUpdate) {\n    setViewRange(\n      (prevRange): ViewRange => {\n        const time = { ...prevRange.time, ...update };\n        return { ...prevRange, time };\n      }\n    );\n  }, []);\n\n  const updateViewRangeTime = useCallback(function updateViewRangeTime(start: number, end: number) {\n    const current: [number, number] = [start, end];\n    const time = { current };\n    setViewRange(\n      (prevRange): ViewRange => {\n        return { ...prevRange, time };\n      }\n    );\n  }, []);\n\n  return { viewRange, updateViewRangeTime, updateNextViewRangeTime };\n}\n","import { useMemo, useState } from 'react';\nimport { filterSpans, TraceSpan } from '@jaegertracing/jaeger-ui-components';\n\n/**\n * Controls the state of search input that highlights spans if they match the search string.\n * @param spans\n */\nexport function useSearch(spans?: TraceSpan[]) {\n  const [search, setSearch] = useState('');\n  const spanFindMatches: Set<string> | undefined | null = useMemo(() => {\n    return search && spans ? filterSpans(search, spans) : undefined;\n  }, [search, spans]);\n\n  return { search, setSearch, spanFindMatches };\n}\n","import React from 'react';\nimport { Collapse } from '@grafana/ui';\nimport { DataFrame } from '@grafana/data';\nimport { TraceView } from './TraceView';\nimport { ExploreId, SplitOpen } from '../../../types';\n\ninterface Props {\n  dataFrames: DataFrame[];\n  splitOpenFn: SplitOpen;\n  exploreId: ExploreId;\n}\nexport function TraceViewContainer(props: Props) {\n  const { dataFrames, splitOpenFn, exploreId } = props;\n\n  return (\n    <Collapse label=\"Trace View\" isOpen>\n      <TraceView exploreId={exploreId} dataFrames={dataFrames} splitOpenFn={splitOpenFn} />\n    </Collapse>\n  );\n}\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar resizer_1 = require(\"./resizer\");\nvar fast_memoize_1 = __importDefault(require(\"fast-memoize\"));\nvar DEFAULT_SIZE = {\n    width: 'auto',\n    height: 'auto',\n};\nvar clamp = fast_memoize_1.default(function (n, min, max) { return Math.max(Math.min(n, max), min); });\nvar snap = fast_memoize_1.default(function (n, size) { return Math.round(n / size) * size; });\nvar hasDirection = fast_memoize_1.default(function (dir, target) {\n    return new RegExp(dir, 'i').test(target);\n});\nvar findClosestSnap = fast_memoize_1.default(function (n, snapArray, snapGap) {\n    if (snapGap === void 0) { snapGap = 0; }\n    var closestGapIndex = snapArray.reduce(function (prev, curr, index) { return (Math.abs(curr - n) < Math.abs(snapArray[prev] - n) ? index : prev); }, 0);\n    var gap = Math.abs(snapArray[closestGapIndex] - n);\n    return snapGap === 0 || gap < snapGap ? snapArray[closestGapIndex] : n;\n});\nvar endsWith = fast_memoize_1.default(function (str, searchStr) {\n    return str.substr(str.length - searchStr.length, searchStr.length) === searchStr;\n});\nvar getStringSize = fast_memoize_1.default(function (n) {\n    n = n.toString();\n    if (n === 'auto') {\n        return n;\n    }\n    if (endsWith(n, 'px')) {\n        return n;\n    }\n    if (endsWith(n, '%')) {\n        return n;\n    }\n    if (endsWith(n, 'vh')) {\n        return n;\n    }\n    if (endsWith(n, 'vw')) {\n        return n;\n    }\n    if (endsWith(n, 'vmax')) {\n        return n;\n    }\n    if (endsWith(n, 'vmin')) {\n        return n;\n    }\n    return n + \"px\";\n});\nvar getPixelSize = function (size, parentSize) {\n    if (size && typeof size === 'string') {\n        if (endsWith(size, '%')) {\n            var ratio = Number(size.replace('%', '')) / 100;\n            return parentSize * ratio;\n        }\n        else if (endsWith(size, 'vw')) {\n            var ratio = Number(size.replace('vw', '')) / 100;\n            return window.innerWidth * ratio;\n        }\n        else if (endsWith(size, 'vh')) {\n            var ratio = Number(size.replace('vh', '')) / 100;\n            return window.innerHeight * ratio;\n        }\n    }\n    return size;\n};\nvar calculateNewMax = fast_memoize_1.default(function (parentSize, maxWidth, maxHeight, minWidth, minHeight) {\n    maxWidth = getPixelSize(maxWidth, parentSize.width);\n    maxHeight = getPixelSize(maxHeight, parentSize.height);\n    minWidth = getPixelSize(minWidth, parentSize.width);\n    minHeight = getPixelSize(minHeight, parentSize.height);\n    return {\n        maxWidth: typeof maxWidth === 'undefined' ? undefined : Number(maxWidth),\n        maxHeight: typeof maxHeight === 'undefined' ? undefined : Number(maxHeight),\n        minWidth: typeof minWidth === 'undefined' ? undefined : Number(minWidth),\n        minHeight: typeof minHeight === 'undefined' ? undefined : Number(minHeight),\n    };\n});\nvar definedProps = [\n    'style',\n    'className',\n    'grid',\n    'snap',\n    'bounds',\n    'size',\n    'defaultSize',\n    'minWidth',\n    'minHeight',\n    'maxWidth',\n    'maxHeight',\n    'lockAspectRatio',\n    'lockAspectRatioExtraWidth',\n    'lockAspectRatioExtraHeight',\n    'enable',\n    'handleStyles',\n    'handleClasses',\n    'handleWrapperStyle',\n    'handleWrapperClass',\n    'children',\n    'onResizeStart',\n    'onResize',\n    'onResizeStop',\n    'handleComponent',\n    'scale',\n    'resizeRatio',\n    'snapGap',\n];\n// HACK: This class is used to calculate % size.\nvar baseClassName = '__resizable_base__';\nvar Resizable = /** @class */ (function (_super) {\n    __extends(Resizable, _super);\n    function Resizable(props) {\n        var _this = _super.call(this, props) || this;\n        _this.ratio = 1;\n        _this.resizable = null;\n        // For parent boundary\n        _this.parentLeft = 0;\n        _this.parentTop = 0;\n        // For boundary\n        _this.resizableLeft = 0;\n        _this.resizableTop = 0;\n        // For target boundary\n        _this.targetLeft = 0;\n        _this.targetTop = 0;\n        _this.ref = function (c) {\n            if (c) {\n                _this.resizable = c;\n            }\n        };\n        _this.state = {\n            isResizing: false,\n            width: typeof (_this.propsSize && _this.propsSize.width) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.width,\n            height: typeof (_this.propsSize && _this.propsSize.height) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.height,\n            direction: 'right',\n            original: {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            },\n            backgroundStyle: {\n                height: '100%',\n                width: '100%',\n                backgroundColor: 'rgba(0,0,0,0)',\n                cursor: 'auto',\n                opacity: 0,\n                position: 'fixed',\n                zIndex: 9999,\n                top: '0',\n                left: '0',\n                bottom: '0',\n                right: '0',\n            },\n        };\n        _this.onResizeStart = _this.onResizeStart.bind(_this);\n        _this.onMouseMove = _this.onMouseMove.bind(_this);\n        _this.onMouseUp = _this.onMouseUp.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(Resizable.prototype, \"parentNode\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            return this.resizable.parentNode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"propsSize\", {\n        get: function () {\n            return this.props.size || this.props.defaultSize || DEFAULT_SIZE;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"base\", {\n        get: function () {\n            var parent = this.parentNode;\n            if (!parent) {\n                return undefined;\n            }\n            var children = [].slice.call(parent.children);\n            for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                var n = children_1[_i];\n                if (n instanceof HTMLElement) {\n                    if (n.classList.contains(baseClassName)) {\n                        return n;\n                    }\n                }\n            }\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"size\", {\n        get: function () {\n            var width = 0;\n            var height = 0;\n            if (typeof window !== 'undefined' && this.resizable) {\n                var orgWidth = this.resizable.offsetWidth;\n                var orgHeight = this.resizable.offsetHeight;\n                // HACK: Set position `relative` to get parent size.\n                //       This is because when re-resizable set `absolute`, I can not get base width correctly.\n                var orgPosition = this.resizable.style.position;\n                if (orgPosition !== 'relative') {\n                    this.resizable.style.position = 'relative';\n                }\n                // INFO: Use original width or height if set auto.\n                width = this.resizable.style.width !== 'auto' ? this.resizable.offsetWidth : orgWidth;\n                height = this.resizable.style.height !== 'auto' ? this.resizable.offsetHeight : orgHeight;\n                // Restore original position\n                this.resizable.style.position = orgPosition;\n            }\n            return { width: width, height: height };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"sizeStyle\", {\n        get: function () {\n            var _this = this;\n            var size = this.props.size;\n            var getSize = function (key) {\n                if (typeof _this.state[key] === 'undefined' || _this.state[key] === 'auto') {\n                    return 'auto';\n                }\n                if (_this.propsSize && _this.propsSize[key] && endsWith(_this.propsSize[key].toString(), '%')) {\n                    if (endsWith(_this.state[key].toString(), '%')) {\n                        return _this.state[key].toString();\n                    }\n                    var parentSize = _this.getParentSize();\n                    var value = Number(_this.state[key].toString().replace('px', ''));\n                    var percent = (value / parentSize[key]) * 100;\n                    return percent + \"%\";\n                }\n                return getStringSize(_this.state[key]);\n            };\n            var width = size && typeof size.width !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.width)\n                : getSize('width');\n            var height = size && typeof size.height !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.height)\n                : getSize('height');\n            return { width: width, height: height };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Resizable.prototype.getParentSize = function () {\n        if (!this.base || !this.parentNode) {\n            return { width: window.innerWidth, height: window.innerHeight };\n        }\n        // INFO: To calculate parent width with flex layout\n        var wrapChanged = false;\n        var wrap = this.parentNode.style.flexWrap;\n        var minWidth = this.base.style.minWidth;\n        if (wrap !== 'wrap') {\n            wrapChanged = true;\n            this.parentNode.style.flexWrap = 'wrap';\n            // HACK: Use relative to get parent padding size\n        }\n        this.base.style.position = 'relative';\n        this.base.style.minWidth = '100%';\n        var size = {\n            width: this.base.offsetWidth,\n            height: this.base.offsetHeight,\n        };\n        this.base.style.position = 'absolute';\n        if (wrapChanged) {\n            this.parentNode.style.flexWrap = wrap;\n        }\n        this.base.style.minWidth = minWidth;\n        return size;\n    };\n    Resizable.prototype.bindEvents = function () {\n        if (typeof window !== 'undefined') {\n            window.addEventListener('mouseup', this.onMouseUp);\n            window.addEventListener('mousemove', this.onMouseMove);\n            window.addEventListener('mouseleave', this.onMouseUp);\n            window.addEventListener('touchmove', this.onMouseMove);\n            window.addEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.unbindEvents = function () {\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('mouseup', this.onMouseUp);\n            window.removeEventListener('mousemove', this.onMouseMove);\n            window.removeEventListener('mouseleave', this.onMouseUp);\n            window.removeEventListener('touchmove', this.onMouseMove);\n            window.removeEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.componentDidMount = function () {\n        if (!this.resizable) {\n            return;\n        }\n        var computedStyle = window.getComputedStyle(this.resizable);\n        this.setState({\n            width: this.state.width || this.size.width,\n            height: this.state.height || this.size.height,\n            flexBasis: computedStyle.flexBasis !== 'auto' ? computedStyle.flexBasis : undefined,\n        });\n        var parent = this.parentNode;\n        if (!(parent instanceof HTMLElement)) {\n            return;\n        }\n        if (this.base) {\n            return;\n        }\n        var element = document.createElement('div');\n        element.style.width = '100%';\n        element.style.height = '100%';\n        element.style.position = 'absolute';\n        element.style.transform = 'scale(0, 0)';\n        element.style.left = '0';\n        element.style.flex = '0';\n        if (element.classList) {\n            element.classList.add(baseClassName);\n        }\n        else {\n            element.className += baseClassName;\n        }\n        parent.appendChild(element);\n    };\n    Resizable.prototype.componentWillUnmount = function () {\n        if (typeof window !== 'undefined') {\n            this.unbindEvents();\n            var parent_1 = this.parentNode;\n            if (!this.base || !parent_1) {\n                return;\n            }\n            if (!(parent_1 instanceof HTMLElement) || !(this.base instanceof Node)) {\n                return;\n            }\n            parent_1.removeChild(this.base);\n        }\n    };\n    Resizable.prototype.createSizeForCssProperty = function (newSize, kind) {\n        var propsSize = this.propsSize && this.propsSize[kind];\n        return this.state[kind] === 'auto' &&\n            this.state.original[kind] === newSize &&\n            (typeof propsSize === 'undefined' || propsSize === 'auto')\n            ? 'auto'\n            : newSize;\n    };\n    Resizable.prototype.calculateNewMaxFromBoundary = function (maxWidth, maxHeight) {\n        if (this.props.bounds === 'parent') {\n            var parent_2 = this.parentNode;\n            if (parent_2 instanceof HTMLElement) {\n                var boundWidth = parent_2.offsetWidth + (this.parentLeft - this.resizableLeft);\n                var boundHeight = parent_2.offsetHeight + (this.parentTop - this.resizableTop);\n                maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n                maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n            }\n        }\n        else if (this.props.bounds === 'window') {\n            if (typeof window !== 'undefined') {\n                var boundWidth = window.innerWidth - this.resizableLeft;\n                var boundHeight = window.innerHeight - this.resizableTop;\n                maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n                maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n            }\n        }\n        else if (this.props.bounds instanceof HTMLElement) {\n            var boundWidth = this.props.bounds.offsetWidth + (this.targetLeft - this.resizableLeft);\n            var boundHeight = this.props.bounds.offsetHeight + (this.targetTop - this.resizableTop);\n            maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n            maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n        }\n        return { maxWidth: maxWidth, maxHeight: maxHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromDirection = function (clientX, clientY) {\n        var scale = this.props.scale || 1;\n        var resizeRatio = this.props.resizeRatio || 1;\n        var _a = this.state, direction = _a.direction, original = _a.original;\n        var _b = this.props, lockAspectRatio = _b.lockAspectRatio, lockAspectRatioExtraHeight = _b.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _b.lockAspectRatioExtraWidth;\n        var newWidth = original.width;\n        var newHeight = original.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (hasDirection('right', direction)) {\n            newWidth = original.width + ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('left', direction)) {\n            newWidth = original.width - ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('bottom', direction)) {\n            newHeight = original.height + ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        if (hasDirection('top', direction)) {\n            newHeight = original.height - ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromAspectRatio = function (newWidth, newHeight, max, min) {\n        var _a = this.props, lockAspectRatio = _a.lockAspectRatio, lockAspectRatioExtraHeight = _a.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _a.lockAspectRatioExtraWidth;\n        var computedMinWidth = typeof min.width === 'undefined' ? 10 : min.width;\n        var computedMaxWidth = typeof max.width === 'undefined' || max.width < 0 ? newWidth : max.width;\n        var computedMinHeight = typeof min.height === 'undefined' ? 10 : min.height;\n        var computedMaxHeight = typeof max.height === 'undefined' || max.height < 0 ? newHeight : max.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (lockAspectRatio) {\n            var extraMinWidth = (computedMinHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMaxWidth = (computedMaxHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMinHeight = (computedMinWidth - extraWidth) / this.ratio + extraHeight;\n            var extraMaxHeight = (computedMaxWidth - extraWidth) / this.ratio + extraHeight;\n            var lockedMinWidth = Math.max(computedMinWidth, extraMinWidth);\n            var lockedMaxWidth = Math.min(computedMaxWidth, extraMaxWidth);\n            var lockedMinHeight = Math.max(computedMinHeight, extraMinHeight);\n            var lockedMaxHeight = Math.min(computedMaxHeight, extraMaxHeight);\n            newWidth = clamp(newWidth, lockedMinWidth, lockedMaxWidth);\n            newHeight = clamp(newHeight, lockedMinHeight, lockedMaxHeight);\n        }\n        else {\n            newWidth = clamp(newWidth, computedMinWidth, computedMaxWidth);\n            newHeight = clamp(newHeight, computedMinHeight, computedMaxHeight);\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.setBoundingClientRect = function () {\n        // For parent boundary\n        if (this.props.bounds === 'parent') {\n            var parent_3 = this.parentNode;\n            if (parent_3 instanceof HTMLElement) {\n                var parentRect = parent_3.getBoundingClientRect();\n                this.parentLeft = parentRect.left;\n                this.parentTop = parentRect.top;\n            }\n        }\n        // For target(html element) boundary\n        if (this.props.bounds instanceof HTMLElement) {\n            var targetRect = this.props.bounds.getBoundingClientRect();\n            this.targetLeft = targetRect.left;\n            this.targetTop = targetRect.top;\n        }\n        // For boundary\n        if (this.resizable) {\n            var _a = this.resizable.getBoundingClientRect(), left = _a.left, top_1 = _a.top;\n            this.resizableLeft = left;\n            this.resizableTop = top_1;\n        }\n    };\n    Resizable.prototype.onResizeStart = function (event, direction) {\n        if (!this.resizable) {\n            return;\n        }\n        var clientX = 0;\n        var clientY = 0;\n        if (event.nativeEvent instanceof MouseEvent) {\n            clientX = event.nativeEvent.clientX;\n            clientY = event.nativeEvent.clientY;\n            // When user click with right button the resize is stuck in resizing mode\n            // until users clicks again, dont continue if right click is used.\n            // HACK: MouseEvent does not have `which` from flow-bin v0.68.\n            if (event.nativeEvent.which === 3) {\n                return;\n            }\n        }\n        else if (event.nativeEvent instanceof TouchEvent) {\n            clientX = event.nativeEvent.touches[0].clientX;\n            clientY = event.nativeEvent.touches[0].clientY;\n        }\n        if (this.props.onResizeStart) {\n            if (this.resizable) {\n                var startResize = this.props.onResizeStart(event, direction, this.resizable);\n                if (startResize === false) {\n                    return;\n                }\n            }\n        }\n        // Fix #168\n        if (this.props.size) {\n            if (typeof this.props.size.height !== 'undefined' && this.props.size.height !== this.state.height) {\n                this.setState({ height: this.props.size.height });\n            }\n            if (typeof this.props.size.width !== 'undefined' && this.props.size.width !== this.state.width) {\n                this.setState({ width: this.props.size.width });\n            }\n        }\n        // For lockAspectRatio case\n        this.ratio =\n            typeof this.props.lockAspectRatio === 'number' ? this.props.lockAspectRatio : this.size.width / this.size.height;\n        var flexBasis;\n        var computedStyle = window.getComputedStyle(this.resizable);\n        if (computedStyle.flexBasis !== 'auto') {\n            var parent_4 = this.parentNode;\n            if (parent_4) {\n                var dir = window.getComputedStyle(parent_4).flexDirection;\n                this.flexDir = dir.startsWith('row') ? 'row' : 'column';\n                flexBasis = computedStyle.flexBasis;\n            }\n        }\n        // For boundary\n        this.setBoundingClientRect();\n        this.bindEvents();\n        var state = {\n            original: {\n                x: clientX,\n                y: clientY,\n                width: this.size.width,\n                height: this.size.height,\n            },\n            isResizing: true,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: window.getComputedStyle(event.target).cursor || 'auto' }),\n            direction: direction,\n            flexBasis: flexBasis,\n        };\n        this.setState(state);\n    };\n    Resizable.prototype.onMouseMove = function (event) {\n        if (!this.state.isResizing || !this.resizable) {\n            return;\n        }\n        var _a = this.props, maxWidth = _a.maxWidth, maxHeight = _a.maxHeight, minWidth = _a.minWidth, minHeight = _a.minHeight;\n        var clientX = event instanceof MouseEvent ? event.clientX : event.touches[0].clientX;\n        var clientY = event instanceof MouseEvent ? event.clientY : event.touches[0].clientY;\n        var _b = this.state, direction = _b.direction, original = _b.original, width = _b.width, height = _b.height;\n        var parentSize = this.getParentSize();\n        var max = calculateNewMax(parentSize, maxWidth, maxHeight, minWidth, minHeight);\n        maxWidth = max.maxWidth;\n        maxHeight = max.maxHeight;\n        minWidth = max.minWidth;\n        minHeight = max.minHeight;\n        // Calculate new size\n        var _c = this.calculateNewSizeFromDirection(clientX, clientY), newHeight = _c.newHeight, newWidth = _c.newWidth;\n        // Calculate max size from boundary settings\n        var boundaryMax = this.calculateNewMaxFromBoundary(maxWidth, maxHeight);\n        // Calculate new size from aspect ratio\n        var newSize = this.calculateNewSizeFromAspectRatio(newWidth, newHeight, { width: boundaryMax.maxWidth, height: boundaryMax.maxHeight }, { width: minWidth, height: minHeight });\n        newWidth = newSize.newWidth;\n        newHeight = newSize.newHeight;\n        if (this.props.grid) {\n            var newGridWidth = snap(newWidth, this.props.grid[0]);\n            var newGridHeight = snap(newHeight, this.props.grid[1]);\n            var gap = this.props.snapGap || 0;\n            newWidth = gap === 0 || Math.abs(newGridWidth - newWidth) <= gap ? newGridWidth : newWidth;\n            newHeight = gap === 0 || Math.abs(newGridHeight - newHeight) <= gap ? newGridHeight : newHeight;\n        }\n        if (this.props.snap && this.props.snap.x) {\n            newWidth = findClosestSnap(newWidth, this.props.snap.x, this.props.snapGap);\n        }\n        if (this.props.snap && this.props.snap.y) {\n            newHeight = findClosestSnap(newHeight, this.props.snap.y, this.props.snapGap);\n        }\n        var delta = {\n            width: newWidth - original.width,\n            height: newHeight - original.height,\n        };\n        if (width && typeof width === 'string') {\n            if (endsWith(width, '%')) {\n                var percent = (newWidth / parentSize.width) * 100;\n                newWidth = percent + \"%\";\n            }\n            else if (endsWith(width, 'vw')) {\n                var vw = (newWidth / window.innerWidth) * 100;\n                newWidth = vw + \"vw\";\n            }\n            else if (endsWith(width, 'vh')) {\n                var vh = (newWidth / window.innerHeight) * 100;\n                newWidth = vh + \"vh\";\n            }\n        }\n        if (height && typeof height === 'string') {\n            if (endsWith(height, '%')) {\n                var percent = (newHeight / parentSize.height) * 100;\n                newHeight = percent + \"%\";\n            }\n            else if (endsWith(height, 'vw')) {\n                var vw = (newHeight / window.innerWidth) * 100;\n                newHeight = vw + \"vw\";\n            }\n            else if (endsWith(height, 'vh')) {\n                var vh = (newHeight / window.innerHeight) * 100;\n                newHeight = vh + \"vh\";\n            }\n        }\n        var newState = {\n            width: this.createSizeForCssProperty(newWidth, 'width'),\n            height: this.createSizeForCssProperty(newHeight, 'height'),\n        };\n        if (this.flexDir === 'row') {\n            newState.flexBasis = newState.width;\n        }\n        else if (this.flexDir === 'column') {\n            newState.flexBasis = newState.height;\n        }\n        this.setState(newState);\n        if (this.props.onResize) {\n            this.props.onResize(event, direction, this.resizable, delta);\n        }\n    };\n    Resizable.prototype.onMouseUp = function (event) {\n        var _a = this.state, isResizing = _a.isResizing, direction = _a.direction, original = _a.original;\n        if (!isResizing || !this.resizable) {\n            return;\n        }\n        var delta = {\n            width: this.size.width - original.width,\n            height: this.size.height - original.height,\n        };\n        if (this.props.onResizeStop) {\n            this.props.onResizeStop(event, direction, this.resizable, delta);\n        }\n        if (this.props.size) {\n            this.setState(this.props.size);\n        }\n        this.unbindEvents();\n        this.setState({\n            isResizing: false,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: 'auto' }),\n        });\n    };\n    Resizable.prototype.updateSize = function (size) {\n        this.setState({ width: size.width, height: size.height });\n    };\n    Resizable.prototype.renderResizer = function () {\n        var _this = this;\n        var _a = this.props, enable = _a.enable, handleStyles = _a.handleStyles, handleClasses = _a.handleClasses, handleWrapperStyle = _a.handleWrapperStyle, handleWrapperClass = _a.handleWrapperClass, handleComponent = _a.handleComponent;\n        if (!enable) {\n            return null;\n        }\n        var resizers = Object.keys(enable).map(function (dir) {\n            if (enable[dir] !== false) {\n                return (React.createElement(resizer_1.Resizer, { key: dir, direction: dir, onResizeStart: _this.onResizeStart, replaceStyles: handleStyles && handleStyles[dir], className: handleClasses && handleClasses[dir] }, handleComponent && handleComponent[dir] ? handleComponent[dir] : null));\n            }\n            return null;\n        });\n        // #93 Wrap the resize box in span (will not break 100% width/height)\n        return (React.createElement(\"span\", { className: handleWrapperClass, style: handleWrapperStyle }, resizers));\n    };\n    Resizable.prototype.render = function () {\n        var _this = this;\n        var extendsProps = Object.keys(this.props).reduce(function (acc, key) {\n            if (definedProps.indexOf(key) !== -1) {\n                return acc;\n            }\n            acc[key] = _this.props[key];\n            return acc;\n        }, {});\n        var style = __assign(__assign(__assign({ position: 'relative', userSelect: this.state.isResizing ? 'none' : 'auto' }, this.props.style), this.sizeStyle), { maxWidth: this.props.maxWidth, maxHeight: this.props.maxHeight, minWidth: this.props.minWidth, minHeight: this.props.minHeight, boxSizing: 'border-box', flexShrink: 0 });\n        if (this.state.flexBasis) {\n            style.flexBasis = this.state.flexBasis;\n        }\n        return (React.createElement(\"div\", __assign({ ref: this.ref, style: style, className: this.props.className }, extendsProps),\n            this.state.isResizing && React.createElement(\"div\", { style: this.state.backgroundStyle }),\n            this.props.children,\n            this.renderResizer()));\n    };\n    Resizable.defaultProps = {\n        onResizeStart: function () { },\n        onResize: function () { },\n        onResizeStop: function () { },\n        enable: {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true,\n            topRight: true,\n            bottomRight: true,\n            bottomLeft: true,\n            topLeft: true,\n        },\n        style: {},\n        grid: [1, 1],\n        lockAspectRatio: false,\n        lockAspectRatioExtraWidth: 0,\n        lockAspectRatioExtraHeight: 0,\n        scale: 1,\n        resizeRatio: 1,\n        snapGap: 0,\n    };\n    return Resizable;\n}(React.PureComponent));\nexports.Resizable = Resizable;\n","import {\n  AbsoluteTimeRange,\n  applyFieldOverrides,\n  compareArrayValues,\n  compareDataFrameStructures,\n  createFieldConfigRegistry,\n  DataFrame,\n  dateTime,\n  Field,\n  FieldColorModeId,\n  FieldConfigSource,\n  getFrameDisplayName,\n  GrafanaTheme,\n  TimeZone,\n} from '@grafana/data';\nimport {\n  DrawStyle,\n  Icon,\n  LegendDisplayMode,\n  PanelContext,\n  PanelContextProvider,\n  SeriesVisibilityChangeMode,\n  TimeSeries,\n  TooltipDisplayMode,\n  TooltipPlugin,\n  useStyles,\n  useTheme2,\n  ZoomPlugin,\n} from '@grafana/ui';\nimport { defaultGraphConfig, getGraphFieldConfig } from 'app/plugins/panel/timeseries/config';\nimport { ContextMenuPlugin } from 'app/plugins/panel/timeseries/plugins/ContextMenuPlugin';\nimport { ExemplarsPlugin } from 'app/plugins/panel/timeseries/plugins/ExemplarsPlugin';\nimport { css, cx } from '@emotion/css';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { splitOpen } from './state/main';\nimport { getFieldLinksForExplore } from './utils/links';\nimport { usePrevious } from 'react-use';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport appEvents from 'app/core/app_events';\nimport { seriesVisibilityConfigFactory } from '../dashboard/dashgrid/SeriesVisibilityConfigFactory';\nimport { identity } from 'lodash';\n\nconst MAX_NUMBER_OF_TIME_SERIES = 20;\n\ninterface Props {\n  data: DataFrame[];\n  height: number;\n  annotations?: DataFrame[];\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  onUpdateTimeRange: (absoluteRange: AbsoluteTimeRange) => void;\n  onHiddenSeriesChanged?: (hiddenSeries: string[]) => void;\n  tooltipDisplayMode: TooltipDisplayMode;\n  splitOpenFn?: typeof splitOpen;\n}\n\nexport function ExploreGraphNGPanel({\n  data,\n  height,\n  timeZone,\n  absoluteRange,\n  onUpdateTimeRange,\n  annotations,\n  tooltipDisplayMode,\n  splitOpenFn,\n  onHiddenSeriesChanged,\n}: Props) {\n  const theme = useTheme2();\n  const [showAllTimeSeries, setShowAllTimeSeries] = useState(false);\n  const [baseStructureRev, setBaseStructureRev] = useState(1);\n\n  const previousData = usePrevious(data);\n  const structureChangesRef = useRef(0);\n\n  if (data && previousData && !compareArrayValues(previousData, data, compareDataFrameStructures)) {\n    structureChangesRef.current++;\n  }\n\n  const structureRev = baseStructureRev + structureChangesRef.current;\n\n  const [fieldConfig, setFieldConfig] = useState<FieldConfigSource>({\n    defaults: {\n      color: {\n        mode: FieldColorModeId.PaletteClassic,\n      },\n      custom: {\n        drawStyle: DrawStyle.Line,\n        fillOpacity: 0,\n        pointSize: 5,\n      },\n    },\n    overrides: [],\n  });\n\n  const style = useStyles(getStyles);\n  const timeRange = {\n    from: dateTime(absoluteRange.from),\n    to: dateTime(absoluteRange.to),\n    raw: {\n      from: dateTime(absoluteRange.from),\n      to: dateTime(absoluteRange.to),\n    },\n  };\n\n  const dataWithConfig = useMemo(() => {\n    const registry = createFieldConfigRegistry(getGraphFieldConfig(defaultGraphConfig), 'Explore');\n    return applyFieldOverrides({\n      fieldConfig,\n      data,\n      timeZone,\n      replaceVariables: (value) => value, // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n      theme,\n      fieldConfigRegistry: registry,\n    });\n  }, [fieldConfig, data, timeZone, theme]);\n\n  useEffect(() => {\n    if (onHiddenSeriesChanged) {\n      const hiddenFrames: string[] = [];\n      dataWithConfig.forEach((frame) => {\n        const allFieldsHidden = frame.fields.map((field) => field.config?.custom?.hideFrom?.viz).every(identity);\n        if (allFieldsHidden) {\n          hiddenFrames.push(getFrameDisplayName(frame));\n        }\n      });\n      onHiddenSeriesChanged(hiddenFrames);\n    }\n  }, [dataWithConfig, onHiddenSeriesChanged]);\n\n  const seriesToShow = showAllTimeSeries ? dataWithConfig : dataWithConfig.slice(0, MAX_NUMBER_OF_TIME_SERIES);\n\n  const getFieldLinks = (field: Field, rowIndex: number) => {\n    return getFieldLinksForExplore({ field, rowIndex, splitOpenFn, range: timeRange });\n  };\n\n  const panelContext: PanelContext = {\n    eventBus: appEvents,\n    onToggleSeriesVisibility(label: string, mode: SeriesVisibilityChangeMode) {\n      setBaseStructureRev((r) => r + 1);\n      setFieldConfig(seriesVisibilityConfigFactory(label, mode, fieldConfig, data));\n    },\n  };\n\n  return (\n    <PanelContextProvider value={panelContext}>\n      {dataWithConfig.length > MAX_NUMBER_OF_TIME_SERIES && !showAllTimeSeries && (\n        <div className={cx([style.timeSeriesDisclaimer])}>\n          <Icon className={style.disclaimerIcon} name=\"exclamation-triangle\" />\n          {`Showing only ${MAX_NUMBER_OF_TIME_SERIES} time series. `}\n          <span\n            className={cx([style.showAllTimeSeries])}\n            onClick={() => {\n              structureChangesRef.current++;\n              setShowAllTimeSeries(true);\n            }}\n          >{`Show all ${dataWithConfig.length}`}</span>\n        </div>\n      )}\n      <AutoSizer disableHeight>\n        {({ width }) => (\n          <TimeSeries\n            frames={seriesToShow}\n            structureRev={structureRev}\n            width={width}\n            height={height}\n            timeRange={timeRange}\n            legend={{ displayMode: LegendDisplayMode.List, placement: 'bottom', calcs: [] }}\n            timeZone={timeZone}\n          >\n            {(config, alignedDataFrame) => {\n              return (\n                <>\n                  <ZoomPlugin config={config} onZoom={onUpdateTimeRange} />\n                  <TooltipPlugin\n                    config={config}\n                    data={alignedDataFrame}\n                    mode={tooltipDisplayMode}\n                    timeZone={timeZone}\n                  />\n                  <ContextMenuPlugin config={config} data={alignedDataFrame} timeZone={timeZone} />\n                  {annotations && (\n                    <ExemplarsPlugin\n                      config={config}\n                      exemplars={annotations}\n                      timeZone={timeZone}\n                      getFieldLinks={getFieldLinks}\n                    />\n                  )}\n                </>\n              );\n            }}\n          </TimeSeries>\n        )}\n      </AutoSizer>\n    </PanelContextProvider>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  timeSeriesDisclaimer: css`\n    label: time-series-disclaimer;\n    width: 300px;\n    margin: ${theme.spacing.sm} auto;\n    padding: 10px 0;\n    border-radius: ${theme.border.radius.md};\n    text-align: center;\n    background-color: ${theme.colors.bg1};\n  `,\n  disclaimerIcon: css`\n    label: disclaimer-icon;\n    color: ${theme.palette.yellow};\n    margin-right: ${theme.spacing.xs};\n  `,\n  showAllTimeSeries: css`\n    label: show-all-time-series;\n    cursor: pointer;\n    color: ${theme.colors.linkExternal};\n  `,\n});\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { css } from 'emotion';\nimport { Collapse } from '@grafana/ui';\nimport { AbsoluteTimeRange, Field, LogRowModel, RawTimeRange } from '@grafana/data';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport { splitOpen } from './state/main';\nimport { addResultsToCache, clearCache } from './state/query';\nimport { updateTimeRange } from './state/time';\nimport { getTimeZone } from '../profile/state/selectors';\nimport { LiveLogsWithTheme } from './LiveLogs';\nimport { Logs } from './Logs';\nimport { LogsCrossFadeTransition } from './utils/LogsCrossFadeTransition';\nimport { LiveTailControls } from './useLiveTailControls';\nimport { getFieldLinksForExplore } from './utils/links';\n\ninterface LogsContainerProps extends PropsFromRedux {\n  exploreId: ExploreId;\n  scanRange?: RawTimeRange;\n  syncedTimes: boolean;\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  onStartScanning: () => void;\n  onStopScanning: () => void;\n}\n\nexport class LogsContainer extends PureComponent<LogsContainerProps> {\n  onChangeTime = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  getLogRowContext = async (row: LogRowModel, options?: any): Promise<any> => {\n    const { datasourceInstance } = this.props;\n\n    if (datasourceInstance?.getLogRowContext) {\n      return datasourceInstance.getLogRowContext(row, options);\n    }\n\n    return [];\n  };\n\n  showContextToggle = (row?: LogRowModel): boolean => {\n    const { datasourceInstance } = this.props;\n\n    if (datasourceInstance?.showContextToggle) {\n      return datasourceInstance.showContextToggle(row);\n    }\n\n    return false;\n  };\n\n  getFieldLinks = (field: Field, rowIndex: number) => {\n    const { splitOpen: splitOpenFn, range } = this.props;\n    return getFieldLinksForExplore({ field, rowIndex, splitOpenFn, range });\n  };\n\n  render() {\n    const {\n      loading,\n      logsHighlighterExpressions,\n      logRows,\n      logsMeta,\n      logsSeries,\n      logsQueries,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      onStartScanning,\n      onStopScanning,\n      absoluteRange,\n      timeZone,\n      visibleRange,\n      scanning,\n      range,\n      isLive,\n      exploreId,\n      addResultsToCache,\n      clearCache,\n    } = this.props;\n\n    if (!logRows) {\n      return null;\n    }\n\n    // We need to override css overflow of divs in Collapse element to enable sticky Logs navigation\n    const styleOverridesForStickyNavigation = css`\n      & > div {\n        overflow: visible;\n        & > div {\n          overflow: visible;\n        }\n      }\n    `;\n\n    return (\n      <>\n        <LogsCrossFadeTransition visible={isLive}>\n          <Collapse label=\"Logs\" loading={false} isOpen>\n            <LiveTailControls exploreId={exploreId}>\n              {(controls) => (\n                <LiveLogsWithTheme\n                  logRows={logRows}\n                  timeZone={timeZone}\n                  stopLive={controls.stop}\n                  isPaused={this.props.isPaused}\n                  onPause={controls.pause}\n                  onResume={controls.resume}\n                />\n              )}\n            </LiveTailControls>\n          </Collapse>\n        </LogsCrossFadeTransition>\n        <LogsCrossFadeTransition visible={!isLive}>\n          <Collapse label=\"Logs\" loading={loading} isOpen className={styleOverridesForStickyNavigation}>\n            <Logs\n              logRows={logRows}\n              logsMeta={logsMeta}\n              logsSeries={logsSeries}\n              logsQueries={logsQueries}\n              highlighterExpressions={logsHighlighterExpressions}\n              loading={loading}\n              onChangeTime={this.onChangeTime}\n              onClickFilterLabel={onClickFilterLabel}\n              onClickFilterOutLabel={onClickFilterOutLabel}\n              onStartScanning={onStartScanning}\n              onStopScanning={onStopScanning}\n              absoluteRange={absoluteRange}\n              visibleRange={visibleRange}\n              timeZone={timeZone}\n              scanning={scanning}\n              scanRange={range.raw}\n              showContextToggle={this.showContextToggle}\n              getRowContext={this.getLogRowContext}\n              getFieldLinks={this.getFieldLinks}\n              addResultsToCache={() => addResultsToCache(exploreId)}\n              clearCache={() => clearCache(exploreId)}\n            />\n          </Collapse>\n        </LogsCrossFadeTransition>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const {\n    logsHighlighterExpressions,\n    logsResult,\n    loading,\n    scanning,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    range,\n    absoluteRange,\n  } = item;\n  const timeZone = getTimeZone(state.user);\n\n  return {\n    loading,\n    logsHighlighterExpressions,\n    logRows: logsResult?.rows,\n    logsMeta: logsResult?.meta,\n    logsSeries: logsResult?.series,\n    logsQueries: logsResult?.queries,\n    visibleRange: logsResult?.visibleRange,\n    scanning,\n    timeZone,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    range,\n    absoluteRange,\n  };\n}\n\nconst mapDispatchToProps = {\n  updateTimeRange,\n  splitOpen,\n  addResultsToCache,\n  clearCache,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default hot(module)(connector(LogsContainer));\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { hot } from 'react-hot-loader';\nimport classNames from 'classnames';\nimport { css } from '@emotion/css';\n\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { Icon, IconButton, SetInterval, ToolbarButton, ToolbarButtonRow, Tooltip } from '@grafana/ui';\nimport { DataSourceInstanceSettings, RawTimeRange, TimeRange, TimeZone } from '@grafana/data';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport { StoreState } from 'app/types/store';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { changeDatasource } from './state/datasource';\nimport { splitClose, splitOpen } from './state/main';\nimport { syncTimes, changeRefreshInterval } from './state/time';\nimport { getTimeZone } from '../profile/state/selectors';\nimport { updateTimeZoneForSession } from '../profile/state/reducers';\nimport { ExploreTimeControls } from './ExploreTimeControls';\nimport { LiveTailButton } from './LiveTailButton';\nimport { RunButton } from './RunButton';\nimport { LiveTailControls } from './useLiveTailControls';\nimport { cancelQueries, clearQueries, runQueries, clearCache } from './state/query';\nimport ReturnToDashboardButton from './ReturnToDashboardButton';\nimport { isSplit } from './state/selectors';\n\ninterface OwnProps {\n  exploreId: ExploreId;\n  onChangeTime: (range: RawTimeRange, changedByScanner?: boolean) => void;\n}\n\ninterface StateProps {\n  datasourceMissing: boolean;\n  loading: boolean;\n  range: TimeRange;\n  timeZone: TimeZone;\n  splitted: boolean;\n  syncedTimes: boolean;\n  refreshInterval?: string;\n  hasLiveOption: boolean;\n  isLive: boolean;\n  isPaused: boolean;\n  datasourceLoading?: boolean | null;\n  containerWidth: number;\n  datasourceName?: string;\n}\n\ninterface DispatchProps {\n  changeDatasource: typeof changeDatasource;\n  clearAll: typeof clearQueries;\n  cancelQueries: typeof cancelQueries;\n  runQueries: typeof runQueries;\n  closeSplit: typeof splitClose;\n  split: typeof splitOpen;\n  syncTimes: typeof syncTimes;\n  changeRefreshInterval: typeof changeRefreshInterval;\n  onChangeTimeZone: typeof updateTimeZoneForSession;\n  clearCache: typeof clearCache;\n}\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\nexport class UnConnectedExploreToolbar extends PureComponent<Props> {\n  onChangeDatasource = async (dsSettings: DataSourceInstanceSettings) => {\n    this.props.changeDatasource(this.props.exploreId, dsSettings.name, { importQueries: true });\n  };\n\n  onClearAll = () => {\n    this.props.clearAll(this.props.exploreId);\n  };\n\n  onRunQuery = (loading = false) => {\n    const { clearCache, runQueries, cancelQueries, exploreId } = this.props;\n    if (loading) {\n      return cancelQueries(exploreId);\n    } else {\n      // We want to give user a chance tu re-run the query even if it is saved in cache\n      clearCache(exploreId);\n      return runQueries(exploreId);\n    }\n  };\n\n  onChangeRefreshInterval = (item: string) => {\n    const { changeRefreshInterval, exploreId } = this.props;\n    changeRefreshInterval(exploreId, item);\n  };\n\n  onChangeTimeSync = () => {\n    const { syncTimes, exploreId } = this.props;\n    syncTimes(exploreId);\n  };\n\n  render() {\n    const {\n      datasourceMissing,\n      closeSplit,\n      exploreId,\n      loading,\n      range,\n      timeZone,\n      splitted,\n      syncedTimes,\n      refreshInterval,\n      onChangeTime,\n      split,\n      hasLiveOption,\n      isLive,\n      isPaused,\n      containerWidth,\n      onChangeTimeZone,\n    } = this.props;\n\n    const showSmallDataSourcePicker = (splitted ? containerWidth < 700 : containerWidth < 800) || false;\n    const showSmallTimePicker = splitted || containerWidth < 1210;\n\n    return (\n      <div className={splitted ? 'explore-toolbar splitted' : 'explore-toolbar'}>\n        <div className=\"explore-toolbar-item\">\n          <div className=\"explore-toolbar-header\">\n            <div className=\"explore-toolbar-header-title\">\n              {exploreId === 'left' && (\n                <span className=\"navbar-page-btn\">\n                  <Icon\n                    name=\"compass\"\n                    size=\"lg\"\n                    className={css`\n                      margin-right: 6px;\n                      margin-bottom: 3px;\n                    `}\n                  />\n                  Explore\n                </span>\n              )}\n            </div>\n            {splitted && (\n              <IconButton\n                title=\"Close split pane\"\n                className=\"explore-toolbar-header-close\"\n                onClick={() => closeSplit(exploreId)}\n                name=\"times\"\n              />\n            )}\n          </div>\n        </div>\n        <div className=\"explore-toolbar-item\">\n          <div className=\"explore-toolbar-content\">\n            {!datasourceMissing ? (\n              <div className=\"explore-toolbar-content-item\">\n                <div\n                  className={classNames(\n                    'explore-ds-picker',\n                    showSmallDataSourcePicker ? 'explore-ds-picker--small' : ''\n                  )}\n                >\n                  <DataSourcePicker\n                    onChange={this.onChangeDatasource}\n                    current={this.props.datasourceName}\n                    hideTextValue={showSmallDataSourcePicker}\n                  />\n                </div>\n              </div>\n            ) : null}\n            <ToolbarButtonRow>\n              <ReturnToDashboardButton exploreId={exploreId} />\n\n              {exploreId === 'left' && !splitted ? (\n                <ToolbarButton\n                  iconOnly={splitted}\n                  title=\"Split\"\n                  /* This way ToolbarButton doesn't add event as a parameter when invoking split function\n                   * which breaks splitting functionality\n                   */\n                  onClick={() => split()}\n                  icon=\"columns\"\n                  disabled={isLive}\n                >\n                  Split\n                </ToolbarButton>\n              ) : null}\n\n              <Tooltip content={'Copy shortened link'} placement=\"bottom\">\n                <ToolbarButton icon=\"share-alt\" onClick={() => createAndCopyShortLink(window.location.href)} />\n              </Tooltip>\n\n              {!isLive && (\n                <ExploreTimeControls\n                  exploreId={exploreId}\n                  range={range}\n                  timeZone={timeZone}\n                  onChangeTime={onChangeTime}\n                  splitted={splitted}\n                  syncedTimes={syncedTimes}\n                  onChangeTimeSync={this.onChangeTimeSync}\n                  hideText={showSmallTimePicker}\n                  onChangeTimeZone={onChangeTimeZone}\n                />\n              )}\n\n              {!isLive && (\n                <ToolbarButton title=\"Clear all\" onClick={this.onClearAll} icon=\"trash-alt\" iconOnly={splitted}>\n                  Clear all\n                </ToolbarButton>\n              )}\n\n              <RunButton\n                refreshInterval={refreshInterval}\n                onChangeRefreshInterval={this.onChangeRefreshInterval}\n                isSmall={splitted || showSmallTimePicker}\n                isLive={isLive}\n                loading={loading || (isLive && !isPaused)}\n                onRun={this.onRunQuery}\n                showDropdown={!isLive}\n              />\n\n              {refreshInterval && <SetInterval func={this.onRunQuery} interval={refreshInterval} loading={loading} />}\n\n              {hasLiveOption && (\n                <LiveTailControls exploreId={exploreId}>\n                  {(controls) => (\n                    <LiveTailButton\n                      splitted={splitted}\n                      isLive={isLive}\n                      isPaused={isPaused}\n                      start={controls.start}\n                      pause={controls.pause}\n                      resume={controls.resume}\n                      stop={controls.stop}\n                    />\n                  )}\n                </LiveTailControls>\n              )}\n            </ToolbarButtonRow>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState, { exploreId }: OwnProps): StateProps => {\n  const syncedTimes = state.explore.syncedTimes;\n  const exploreItem: ExploreItemState = state.explore[exploreId]!;\n  const {\n    datasourceInstance,\n    datasourceMissing,\n    range,\n    refreshInterval,\n    loading,\n    isLive,\n    isPaused,\n    containerWidth,\n  } = exploreItem;\n\n  const hasLiveOption = !!datasourceInstance?.meta?.streaming;\n\n  return {\n    datasourceMissing,\n    datasourceName: datasourceInstance?.name,\n    loading,\n    range,\n    timeZone: getTimeZone(state.user),\n    splitted: isSplit(state),\n    refreshInterval,\n    hasLiveOption,\n    isLive,\n    isPaused,\n    syncedTimes,\n    containerWidth,\n  };\n};\n\nconst mapDispatchToProps: DispatchProps = {\n  changeDatasource,\n  changeRefreshInterval,\n  clearAll: clearQueries,\n  cancelQueries,\n  runQueries,\n  closeSplit: splitClose,\n  split: splitOpen,\n  syncTimes,\n  onChangeTimeZone: updateTimeZoneForSession,\n  clearCache,\n};\n\nexport const ExploreToolbar = hot(module)(connect(mapStateToProps, mapDispatchToProps)(UnConnectedExploreToolbar));\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Components\nimport QueryRow from './QueryRow';\n\n// Types\nimport { ExploreId } from 'app/types/explore';\n\ninterface QueryRowsProps {\n  className?: string;\n  exploreId: ExploreId;\n  queryKeys: string[];\n}\n\nexport default class QueryRows extends PureComponent<QueryRowsProps> {\n  render() {\n    const { className = '', exploreId, queryKeys } = this.props;\n    return (\n      <div className={className}>\n        {queryKeys.map((key, index) => {\n          return <QueryRow key={key} exploreId={exploreId} index={index} />;\n        })}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport memoizeOne from 'memoize-one';\nimport { DataQuery, ExploreUrlState, EventBusExtended, EventBusSrv } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport store from 'app/core/store';\nimport { lastSavedUrl, cleanupPaneAction } from './state/main';\nimport { initializeExplore, refreshExplore } from './state/explorePane';\nimport { ExploreId } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport {\n  DEFAULT_RANGE,\n  ensureQueries,\n  getTimeRange,\n  getTimeRangeFromUrl,\n  lastUsedDatasourceKeyForOrgId,\n  parseUrlState,\n} from 'app/core/utils/explore';\nimport { getTimeZone } from '../profile/state/selectors';\nimport Explore from './Explore';\n\ninterface OwnProps {\n  exploreId: ExploreId;\n  urlQuery: string;\n  split: boolean;\n}\n\ninterface Props extends OwnProps, ConnectedProps<typeof connector> {}\n\n/**\n * This component is responsible for handling initialization of an Explore pane and triggering synchronization\n * of state based on URL changes and preventing any infinite loops.\n */\nexport class ExplorePaneContainerUnconnected extends React.PureComponent<Props> {\n  el: any;\n  exploreEvents: EventBusExtended;\n\n  constructor(props: Props) {\n    super(props);\n    this.exploreEvents = new EventBusSrv();\n    this.state = {\n      openDrawer: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { initialized, exploreId, initialDatasource, initialQueries, initialRange, originPanelId } = this.props;\n    const width = this.el?.offsetWidth ?? 0;\n\n    // initialize the whole explore first time we mount and if browser history contains a change in datasource\n    if (!initialized) {\n      this.props.initializeExplore(\n        exploreId,\n        initialDatasource,\n        initialQueries,\n        initialRange,\n        width,\n        this.exploreEvents,\n        originPanelId\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.exploreEvents.removeAllListeners();\n    this.props.cleanupPaneAction({ exploreId: this.props.exploreId });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.refreshExplore(prevProps.urlQuery);\n  }\n\n  refreshExplore = (prevUrlQuery: string) => {\n    const { exploreId, urlQuery } = this.props;\n\n    // Update state from url only if it changed and only if the change wasn't initialised by redux to prevent any loops\n    if (urlQuery !== prevUrlQuery && urlQuery !== lastSavedUrl[exploreId]) {\n      this.props.refreshExplore(exploreId, urlQuery);\n    }\n  };\n\n  getRef = (el: any) => {\n    this.el = el;\n  };\n\n  render() {\n    const exploreClass = this.props.split ? 'explore explore-split' : 'explore';\n    return (\n      <div className={exploreClass} ref={this.getRef} aria-label={selectors.pages.Explore.General.container}>\n        {this.props.initialized && <Explore exploreId={this.props.exploreId} />}\n      </div>\n    );\n  }\n}\n\nconst ensureQueriesMemoized = memoizeOne(ensureQueries);\nconst getTimeRangeFromUrlMemoized = memoizeOne(getTimeRangeFromUrl);\n\nfunction mapStateToProps(state: StoreState, props: OwnProps) {\n  const urlState = parseUrlState(props.urlQuery);\n  const timeZone = getTimeZone(state.user);\n\n  const { datasource, queries, range: urlRange, originPanelId } = (urlState || {}) as ExploreUrlState;\n  const initialDatasource = datasource || store.get(lastUsedDatasourceKeyForOrgId(state.user.orgId));\n  const initialQueries: DataQuery[] = ensureQueriesMemoized(queries);\n  const initialRange = urlRange\n    ? getTimeRangeFromUrlMemoized(urlRange, timeZone)\n    : getTimeRange(timeZone, DEFAULT_RANGE);\n\n  return {\n    initialized: state.explore[props.exploreId]?.initialized,\n    initialDatasource,\n    initialQueries,\n    initialRange,\n    originPanelId,\n  };\n}\n\nconst mapDispatchToProps = {\n  initializeExplore,\n  refreshExplore,\n  cleanupPaneAction,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport const ExplorePaneContainer = connector(ExplorePaneContainerUnconnected);\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { ExploreId, ExploreQueryParams } from 'app/types/explore';\nimport { ErrorBoundaryAlert } from '@grafana/ui';\nimport { lastSavedUrl, resetExploreAction, richHistoryUpdatedAction } from './state/main';\nimport { getRichHistory } from '../../core/utils/richHistory';\nimport { ExplorePaneContainer } from './ExplorePaneContainer';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { NavModel } from '@grafana/data';\nimport { Branding } from '../../core/components/Branding/Branding';\n\nimport { getNavModel } from '../../core/selectors/navModel';\nimport { StoreState } from 'app/types';\n\ninterface RouteProps extends GrafanaRouteComponentProps<{}, ExploreQueryParams> {}\ninterface OwnProps {}\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    navModel: getNavModel(state.navIndex, 'explore'),\n  };\n};\n\nconst mapDispatchToProps = {\n  resetExploreAction,\n  richHistoryUpdatedAction,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = OwnProps & RouteProps & ConnectedProps<typeof connector>;\nclass WrapperUnconnected extends PureComponent<Props> {\n  updatePageDocumentTitle(navModel: NavModel) {\n    if (navModel) {\n      document.title = `${navModel.main.text} - ${Branding.AppTitle}`;\n    } else {\n      document.title = Branding.AppTitle;\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.resetExploreAction({});\n  }\n\n  componentDidMount() {\n    lastSavedUrl.left = undefined;\n    lastSavedUrl.right = undefined;\n\n    const richHistory = getRichHistory();\n    this.props.richHistoryUpdatedAction({ richHistory });\n    this.updatePageDocumentTitle(this.props.navModel);\n  }\n\n  render() {\n    const { left, right } = this.props.queryParams;\n    const hasSplit = Boolean(left) && Boolean(right);\n\n    return (\n      <div className=\"page-scrollbar-wrapper\">\n        <div className=\"explore-wrapper\">\n          <ErrorBoundaryAlert style=\"page\">\n            <ExplorePaneContainer split={hasSplit} exploreId={ExploreId.left} urlQuery={left} />\n          </ErrorBoundaryAlert>\n          {hasSplit && (\n            <ErrorBoundaryAlert style=\"page\">\n              <ExplorePaneContainer split={hasSplit} exploreId={ExploreId.right} urlQuery={right} />\n            </ErrorBoundaryAlert>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Wrapper = connector(WrapperUnconnected);\n\nexport default Wrapper;\n","import React from 'react';\nimport { LogsDedupStrategy, LogsMetaItem, LogsMetaKind, LogRowModel } from '@grafana/data';\nimport { Button, Tooltip, Icon, LogLabels } from '@grafana/ui';\nimport { MAX_CHARACTERS } from '@grafana/ui/src/components/Logs/LogRowMessage';\nimport { MetaInfoText, MetaItemProps } from './MetaInfoText';\n\nexport type Props = {\n  meta: LogsMetaItem[];\n  dedupStrategy: LogsDedupStrategy;\n  dedupCount: number;\n  showDetectedFields: string[];\n  hasUnescapedContent: boolean;\n  forceEscape: boolean;\n  logRows: LogRowModel[];\n  onEscapeNewlines: () => void;\n  clearDetectedFields: () => void;\n};\n\nexport const LogsMetaRow: React.FC<Props> = React.memo(\n  ({\n    meta,\n    dedupStrategy,\n    dedupCount,\n    showDetectedFields,\n    clearDetectedFields,\n    hasUnescapedContent,\n    forceEscape,\n    onEscapeNewlines,\n    logRows,\n  }) => {\n    const logsMetaItem: Array<LogsMetaItem | MetaItemProps> = [...meta];\n\n    // Add deduplication info\n    if (dedupStrategy !== LogsDedupStrategy.none) {\n      logsMetaItem.push({\n        label: 'Dedup count',\n        value: dedupCount,\n        kind: LogsMetaKind.Number,\n      });\n    }\n    // Add info about limit for highlighting\n    if (logRows.some((r) => r.entry.length > MAX_CHARACTERS)) {\n      logsMetaItem.push({\n        label: 'Info',\n        value: 'Logs with more than 100,000 characters could not be parsed and highlighted',\n        kind: LogsMetaKind.String,\n      });\n    }\n\n    // Add detected fields info\n    if (showDetectedFields?.length > 0) {\n      logsMetaItem.push(\n        {\n          label: 'Showing only detected fields',\n          value: renderMetaItem(showDetectedFields, LogsMetaKind.LabelsMap),\n        },\n        {\n          label: '',\n          value: (\n            <Button variant=\"secondary\" size=\"sm\" onClick={clearDetectedFields}>\n              Show all detected fields\n            </Button>\n          ),\n        }\n      );\n    }\n\n    // Add unescaped content info\n    if (hasUnescapedContent) {\n      logsMetaItem.push({\n        label: 'Your logs might have incorrectly escaped content',\n        value: (\n          <Tooltip\n            content=\"We suggest to try to fix the escaping of your log lines first. This is an experimental feature, your logs might not be correctly escaped.\"\n            placement=\"right\"\n          >\n            <Button variant=\"secondary\" size=\"sm\" onClick={onEscapeNewlines}>\n              <span>{forceEscape ? 'Remove escaping' : 'Escape newlines'}&nbsp;</span>\n              <Icon name=\"exclamation-triangle\" className=\"muted\" size=\"sm\" />\n            </Button>\n          </Tooltip>\n        ),\n      });\n    }\n\n    return (\n      <>\n        {logsMetaItem && (\n          <MetaInfoText\n            metaItems={logsMetaItem.map((item) => {\n              return {\n                label: item.label,\n                value: 'kind' in item ? renderMetaItem(item.value, item.kind) : item.value,\n              };\n            })}\n          />\n        )}\n      </>\n    );\n  }\n);\n\nLogsMetaRow.displayName = 'LogsMetaRow';\n\nfunction renderMetaItem(value: any, kind: LogsMetaKind) {\n  if (kind === LogsMetaKind.LabelsMap) {\n    return (\n      <span className=\"logs-meta-item__labels\">\n        <LogLabels labels={value} />\n      </span>\n    );\n  } else if (kind === LogsMetaKind.Error) {\n    return <span className=\"logs-meta-item__error\">{value}</span>;\n  }\n  return value;\n}\n","import React from 'react';\nimport { css, cx } from 'emotion';\nimport { dateTimeFormat, systemDateFormats, TimeZone, GrafanaTheme, AbsoluteTimeRange } from '@grafana/data';\nimport { useTheme, stylesFactory, CustomScrollbar, Spinner } from '@grafana/ui';\nimport { LogsPage } from './LogsNavigation';\n\ntype Props = {\n  pages: LogsPage[];\n  currentPageIndex: number;\n  oldestLogsFirst: boolean;\n  timeZone: TimeZone;\n  loading: boolean;\n  changeTime: (range: AbsoluteTimeRange) => void;\n};\n\nexport function LogsNavigationPages({\n  pages,\n  currentPageIndex,\n  oldestLogsFirst,\n  timeZone,\n  loading,\n  changeTime,\n}: Props) {\n  const formatTime = (time: number) => {\n    return `${dateTimeFormat(time, {\n      format: systemDateFormats.interval.second,\n      timeZone: timeZone,\n    })}`;\n  };\n\n  const createPageContent = (page: LogsPage, index: number) => {\n    if (currentPageIndex === index && loading) {\n      return <Spinner />;\n    }\n    const topContent = formatTime(oldestLogsFirst ? page.logsRange.from : page.logsRange.to);\n    const bottomContent = formatTime(oldestLogsFirst ? page.logsRange.to : page.logsRange.from);\n    return `${topContent} — ${bottomContent}`;\n  };\n\n  const theme = useTheme();\n  const styles = getStyles(theme, loading);\n\n  return (\n    <CustomScrollbar autoHide>\n      <div className={styles.pagesWrapper} data-testid=\"logsNavigationPages\">\n        <div className={styles.pagesContainer}>\n          {pages.map((page: LogsPage, index: number) => (\n            <div\n              data-testid={`page${index + 1}`}\n              className={styles.page}\n              key={page.queryRange.to}\n              onClick={() => !loading && changeTime({ from: page.queryRange.from, to: page.queryRange.to })}\n            >\n              <div className={cx(styles.line, { selectedBg: currentPageIndex === index })} />\n              <div className={cx(styles.time, { selectedText: currentPageIndex === index })}>\n                {createPageContent(page, index)}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </CustomScrollbar>\n  );\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, loading: boolean) => {\n  return {\n    pagesWrapper: css`\n      height: 100%;\n      padding-left: ${theme.spacing.xs};\n      display: flex;\n      flex-direction: column;\n      overflow-y: scroll;\n      &::after {\n        content: '';\n        display: block;\n        background: repeating-linear-gradient(\n          135deg,\n          ${theme.colors.bg1},\n          ${theme.colors.bg1} 5px,\n          ${theme.colors.bg2} 5px,\n          ${theme.colors.bg2} 15px\n        );\n        width: 3px;\n        height: inherit;\n        margin-bottom: 8px;\n      }\n    `,\n    pagesContainer: css`\n      display: flex;\n      padding: 0;\n      flex-direction: column;\n    `,\n    page: css`\n      display: flex;\n      margin: ${theme.spacing.md} 0;\n      cursor: ${loading ? 'auto' : 'pointer'};\n      white-space: normal;\n      .selectedBg {\n        background: ${theme.colors.bgBlue2};\n      }\n      .selectedText {\n        color: ${theme.colors.bgBlue2};\n      }\n    `,\n    line: css`\n      width: 3px;\n      height: 100%;\n      align-items: center;\n      background: ${theme.colors.textWeak};\n    `,\n    time: css`\n      width: 60px;\n      min-height: 80px;\n      font-size: ${theme.typography.size.sm};\n      padding-left: ${theme.spacing.xs};\n      display: flex;\n      align-items: center;\n    `,\n  };\n});\n","import React, { memo, useState, useEffect, useRef } from 'react';\nimport { isEqual } from 'lodash';\nimport { css } from 'emotion';\nimport { LogsSortOrder, AbsoluteTimeRange, TimeZone, DataQuery, GrafanaTheme } from '@grafana/data';\nimport { Button, Icon, Spinner, useTheme, stylesFactory } from '@grafana/ui';\nimport { LogsNavigationPages } from './LogsNavigationPages';\n\ntype Props = {\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  queries: DataQuery[];\n  loading: boolean;\n  visibleRange: AbsoluteTimeRange;\n  logsSortOrder?: LogsSortOrder | null;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  scrollToTopLogs: () => void;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n};\n\nexport type LogsPage = {\n  logsRange: AbsoluteTimeRange;\n  queryRange: AbsoluteTimeRange;\n};\n\nfunction LogsNavigation({\n  absoluteRange,\n  logsSortOrder,\n  timeZone,\n  loading,\n  onChangeTime,\n  scrollToTopLogs,\n  visibleRange,\n  queries,\n  clearCache,\n  addResultsToCache,\n}: Props) {\n  const [pages, setPages] = useState<LogsPage[]>([]);\n  const [currentPageIndex, setCurrentPageIndex] = useState(0);\n\n  // These refs are to determine, if we want to clear up logs navigation when totally new query is run\n  const expectedQueriesRef = useRef<DataQuery[]>();\n  const expectedRangeRef = useRef<AbsoluteTimeRange>();\n  // This ref is to store range span for future queres based on firstly selected time range\n  // e.g. if last 5 min selected, always run 5 min range\n  const rangeSpanRef = useRef(0);\n\n  const oldestLogsFirst = logsSortOrder === LogsSortOrder.Ascending;\n  const onFirstPage = currentPageIndex === 0;\n  const onLastPage = currentPageIndex === pages.length - 1;\n  const theme = useTheme();\n  const styles = getStyles(theme, oldestLogsFirst, loading);\n\n  // Main effect to set pages and index\n  useEffect(() => {\n    const newPage = { logsRange: visibleRange, queryRange: absoluteRange };\n    let newPages: LogsPage[] = [];\n    // We want to start new pagination if queries change or if absolute range is different than expected\n    if (!isEqual(expectedRangeRef.current, absoluteRange) || !isEqual(expectedQueriesRef.current, queries)) {\n      clearCache();\n      setPages([newPage]);\n      setCurrentPageIndex(0);\n      expectedQueriesRef.current = queries;\n      rangeSpanRef.current = absoluteRange.to - absoluteRange.from;\n    } else {\n      setPages((pages) => {\n        // Remove duplicates with new query\n        newPages = pages.filter((page) => !isEqual(newPage.queryRange, page.queryRange));\n        // Sort pages based on logsOrder so they visually align with displayed logs\n        newPages = [...newPages, newPage].sort((a, b) => sortPages(a, b, logsSortOrder));\n        // Set new pages\n\n        return newPages;\n      });\n\n      // Set current page index\n      const index = newPages.findIndex((page) => page.queryRange.to === absoluteRange.to);\n      setCurrentPageIndex(index);\n    }\n    addResultsToCache();\n  }, [visibleRange, absoluteRange, logsSortOrder, queries, clearCache, addResultsToCache]);\n\n  useEffect(() => {\n    return () => clearCache();\n    // We can't enforce the eslint rule here because we only want to run when component unmounts.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const changeTime = ({ from, to }: AbsoluteTimeRange) => {\n    expectedRangeRef.current = { from, to };\n    onChangeTime({ from, to });\n  };\n\n  const sortPages = (a: LogsPage, b: LogsPage, logsSortOrder?: LogsSortOrder | null) => {\n    if (logsSortOrder === LogsSortOrder.Ascending) {\n      return a.queryRange.to > b.queryRange.to ? 1 : -1;\n    }\n    return a.queryRange.to > b.queryRange.to ? -1 : 1;\n  };\n\n  const olderLogsButton = (\n    <Button\n      data-testid=\"olderLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        //If we are not on the last page, use next page's range\n        if (!onLastPage) {\n          changeTime({\n            from: pages[currentPageIndex + 1].queryRange.from,\n            to: pages[currentPageIndex + 1].queryRange.to,\n          });\n        } else {\n          //If we are on the last page, create new range\n          changeTime({ from: visibleRange.from - rangeSpanRef.current, to: visibleRange.from });\n        }\n      }}\n      disabled={loading}\n    >\n      <div className={styles.navButtonContent}>\n        {loading ? <Spinner /> : <Icon name={oldestLogsFirst ? 'angle-up' : 'angle-down'} size=\"lg\" />}\n        Older logs\n      </div>\n    </Button>\n  );\n\n  const newerLogsButton = (\n    <Button\n      data-testid=\"newerLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        //If we are not on the first page, use previous page's range\n        if (!onFirstPage) {\n          changeTime({\n            from: pages[currentPageIndex - 1].queryRange.from,\n            to: pages[currentPageIndex - 1].queryRange.to,\n          });\n        }\n        //If we are on the first page, button is disabled and we do nothing\n      }}\n      disabled={loading || onFirstPage}\n    >\n      <div className={styles.navButtonContent}>\n        {loading && <Spinner />}\n        {onFirstPage || loading ? null : <Icon name={oldestLogsFirst ? 'angle-down' : 'angle-up'} size=\"lg\" />}\n        {onFirstPage ? 'Start of range' : 'Newer logs'}\n      </div>\n    </Button>\n  );\n\n  return (\n    <div className={styles.navContainer}>\n      {oldestLogsFirst ? olderLogsButton : newerLogsButton}\n      <LogsNavigationPages\n        pages={pages}\n        currentPageIndex={currentPageIndex}\n        oldestLogsFirst={oldestLogsFirst}\n        timeZone={timeZone}\n        loading={loading}\n        changeTime={changeTime}\n      />\n      {oldestLogsFirst ? newerLogsButton : olderLogsButton}\n      <Button\n        data-testid=\"scrollToTop\"\n        className={styles.scrollToTopButton}\n        variant=\"secondary\"\n        onClick={scrollToTopLogs}\n        title=\"Scroll to top\"\n      >\n        <Icon name=\"arrow-up\" size=\"lg\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default memo(LogsNavigation);\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, oldestLogsFirst: boolean, loading: boolean) => {\n  return {\n    navContainer: css`\n      max-height: 95vh;\n      display: flex;\n      flex-direction: column;\n      justify-content: ${oldestLogsFirst ? 'flex-start' : 'space-between'};\n      position: sticky;\n      top: ${theme.spacing.md};\n      right: 0;\n    `,\n    navButton: css`\n      width: 58px;\n      height: 68px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      line-height: 1;\n    `,\n    navButtonContent: css`\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 100%;\n      white-space: normal;\n    `,\n    scrollToTopButton: css`\n      width: 40px;\n      height: 40px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      margin-top: ${theme.spacing.sm};\n    `,\n  };\n});\n","import React, { PureComponent, createRef } from 'react';\nimport { css } from '@emotion/css';\nimport { capitalize } from 'lodash';\nimport memoizeOne from 'memoize-one';\n\nimport {\n  rangeUtil,\n  RawTimeRange,\n  LogLevel,\n  TimeZone,\n  AbsoluteTimeRange,\n  LogsDedupStrategy,\n  LogRowModel,\n  LogsDedupDescription,\n  LogsMetaItem,\n  LogsSortOrder,\n  LinkModel,\n  Field,\n  GrafanaTheme,\n  DataQuery,\n  DataFrame,\n} from '@grafana/data';\nimport {\n  RadioButtonGroup,\n  LogRows,\n  Button,\n  InlineField,\n  InlineFieldRow,\n  InlineSwitch,\n  withTheme,\n  stylesFactory,\n  TooltipDisplayMode,\n} from '@grafana/ui';\nimport store from 'app/core/store';\nimport { dedupLogRows, filterLogLevels } from 'app/core/logs_model';\nimport { LogsMetaRow } from './LogsMetaRow';\nimport LogsNavigation from './LogsNavigation';\nimport { RowContextOptions } from '@grafana/ui/src/components/Logs/LogRowContextProvider';\nimport { ExploreGraphNGPanel } from './ExploreGraphNGPanel';\n\nconst SETTINGS_KEYS = {\n  showLabels: 'grafana.explore.logs.showLabels',\n  showTime: 'grafana.explore.logs.showTime',\n  wrapLogMessage: 'grafana.explore.logs.wrapLogMessage',\n};\n\ninterface Props {\n  logRows: LogRowModel[];\n  logsMeta?: LogsMetaItem[];\n  logsSeries?: DataFrame[];\n  logsQueries?: DataQuery[];\n  visibleRange?: AbsoluteTimeRange;\n  theme: GrafanaTheme;\n  highlighterExpressions?: string[];\n  loading: boolean;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  scanning?: boolean;\n  scanRange?: RawTimeRange;\n  showContextToggle?: (row?: LogRowModel) => boolean;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  onStartScanning?: () => void;\n  onStopScanning?: () => void;\n  getRowContext?: (row: LogRowModel, options?: RowContextOptions) => Promise<any>;\n  getFieldLinks: (field: Field, rowIndex: number) => Array<LinkModel<Field>>;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n}\n\ninterface State {\n  showLabels: boolean;\n  showTime: boolean;\n  wrapLogMessage: boolean;\n  dedupStrategy: LogsDedupStrategy;\n  hiddenLogLevels: LogLevel[];\n  logsSortOrder: LogsSortOrder | null;\n  isFlipping: boolean;\n  showDetectedFields: string[];\n  forceEscape: boolean;\n}\n\nexport class UnthemedLogs extends PureComponent<Props, State> {\n  flipOrderTimer: NodeJS.Timeout;\n  cancelFlippingTimer: NodeJS.Timeout;\n  topLogsRef = createRef<HTMLDivElement>();\n\n  state: State = {\n    showLabels: store.getBool(SETTINGS_KEYS.showLabels, false),\n    showTime: store.getBool(SETTINGS_KEYS.showTime, true),\n    wrapLogMessage: store.getBool(SETTINGS_KEYS.wrapLogMessage, true),\n    dedupStrategy: LogsDedupStrategy.none,\n    hiddenLogLevels: [],\n    logsSortOrder: null,\n    isFlipping: false,\n    showDetectedFields: [],\n    forceEscape: false,\n  };\n\n  componentWillUnmount() {\n    clearTimeout(this.flipOrderTimer);\n    clearTimeout(this.cancelFlippingTimer);\n  }\n\n  onChangeLogsSortOrder = () => {\n    this.setState({ isFlipping: true });\n    // we are using setTimeout here to make sure that disabled button is rendered before the rendering of reordered logs\n    this.flipOrderTimer = setTimeout(() => {\n      this.setState((prevState) => {\n        if (prevState.logsSortOrder === null || prevState.logsSortOrder === LogsSortOrder.Descending) {\n          return { logsSortOrder: LogsSortOrder.Ascending };\n        }\n        return { logsSortOrder: LogsSortOrder.Descending };\n      });\n    }, 0);\n    this.cancelFlippingTimer = setTimeout(() => this.setState({ isFlipping: false }), 1000);\n  };\n\n  onEscapeNewlines = () => {\n    this.setState((prevState) => ({\n      forceEscape: !prevState.forceEscape,\n    }));\n  };\n\n  onChangeDedup = (dedupStrategy: LogsDedupStrategy) => {\n    this.setState({ dedupStrategy });\n  };\n\n  onChangeLabels = (event?: React.SyntheticEvent) => {\n    const target = event && (event.target as HTMLInputElement);\n    if (target) {\n      const showLabels = target.checked;\n      this.setState({\n        showLabels,\n      });\n      store.set(SETTINGS_KEYS.showLabels, showLabels);\n    }\n  };\n\n  onChangeTime = (event?: React.SyntheticEvent) => {\n    const target = event && (event.target as HTMLInputElement);\n    if (target) {\n      const showTime = target.checked;\n      this.setState({\n        showTime,\n      });\n      store.set(SETTINGS_KEYS.showTime, showTime);\n    }\n  };\n\n  onChangewrapLogMessage = (event?: React.SyntheticEvent) => {\n    const target = event && (event.target as HTMLInputElement);\n    if (target) {\n      const wrapLogMessage = target.checked;\n      this.setState({\n        wrapLogMessage,\n      });\n      store.set(SETTINGS_KEYS.wrapLogMessage, wrapLogMessage);\n    }\n  };\n\n  onToggleLogLevel = (hiddenRawLevels: string[]) => {\n    const hiddenLogLevels = hiddenRawLevels.map((level) => LogLevel[level as LogLevel]);\n    this.setState({ hiddenLogLevels });\n  };\n\n  onClickScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStartScanning) {\n      this.props.onStartScanning();\n    }\n  };\n\n  onClickStopScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStopScanning) {\n      this.props.onStopScanning();\n    }\n  };\n\n  showDetectedField = (key: string) => {\n    const index = this.state.showDetectedFields.indexOf(key);\n\n    if (index === -1) {\n      this.setState((state) => {\n        return {\n          showDetectedFields: state.showDetectedFields.concat(key),\n        };\n      });\n    }\n  };\n\n  hideDetectedField = (key: string) => {\n    const index = this.state.showDetectedFields.indexOf(key);\n    if (index > -1) {\n      this.setState((state) => {\n        return {\n          showDetectedFields: state.showDetectedFields.filter((k) => key !== k),\n        };\n      });\n    }\n  };\n\n  clearDetectedFields = () => {\n    this.setState((state) => {\n      return {\n        showDetectedFields: [],\n      };\n    });\n  };\n\n  checkUnescapedContent = memoizeOne((logRows: LogRowModel[]) => {\n    return !!logRows.some((r) => r.hasUnescapedContent);\n  });\n\n  dedupRows = memoizeOne((logRows: LogRowModel[], dedupStrategy: LogsDedupStrategy) => {\n    const dedupedRows = dedupLogRows(logRows, dedupStrategy);\n    const dedupCount = dedupedRows.reduce((sum, row) => (row.duplicates ? sum + row.duplicates : sum), 0);\n    return { dedupedRows, dedupCount };\n  });\n\n  filterRows = memoizeOne((logRows: LogRowModel[], hiddenLogLevels: LogLevel[]) => {\n    return filterLogLevels(logRows, new Set(hiddenLogLevels));\n  });\n\n  scrollToTopLogs = () => this.topLogsRef.current?.scrollIntoView();\n\n  render() {\n    const {\n      logRows,\n      logsMeta,\n      logsSeries,\n      visibleRange,\n      highlighterExpressions,\n      loading = false,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      timeZone,\n      scanning,\n      scanRange,\n      showContextToggle,\n      absoluteRange,\n      onChangeTime,\n      getFieldLinks,\n      theme,\n      logsQueries,\n      clearCache,\n      addResultsToCache,\n    } = this.props;\n\n    const {\n      showLabels,\n      showTime,\n      wrapLogMessage,\n      dedupStrategy,\n      hiddenLogLevels,\n      logsSortOrder,\n      isFlipping,\n      showDetectedFields,\n      forceEscape,\n    } = this.state;\n\n    const styles = getStyles(theme);\n    const hasData = logRows && logRows.length > 0;\n    const hasUnescapedContent = this.checkUnescapedContent(logRows);\n\n    const filteredLogs = this.filterRows(logRows, hiddenLogLevels);\n    const { dedupedRows, dedupCount } = this.dedupRows(filteredLogs, dedupStrategy);\n\n    const scanText = scanRange ? `Scanning ${rangeUtil.describeTimeRange(scanRange)}` : 'Scanning...';\n\n    return (\n      <>\n        <div className={styles.infoText}>\n          This datasource does not support full-range histograms. The graph is based on the logs seen in the response.\n        </div>\n        {logsSeries && logsSeries.length ? (\n          <ExploreGraphNGPanel\n            data={logsSeries}\n            height={150}\n            tooltipDisplayMode={TooltipDisplayMode.Multi}\n            absoluteRange={visibleRange || absoluteRange}\n            timeZone={timeZone}\n            onUpdateTimeRange={onChangeTime}\n            onHiddenSeriesChanged={this.onToggleLogLevel}\n          />\n        ) : undefined}\n        <div className={styles.logOptions} ref={this.topLogsRef}>\n          <InlineFieldRow>\n            <InlineField label=\"Time\" transparent>\n              <InlineSwitch value={showTime} onChange={this.onChangeTime} transparent />\n            </InlineField>\n            <InlineField label=\"Unique labels\" transparent>\n              <InlineSwitch value={showLabels} onChange={this.onChangeLabels} transparent />\n            </InlineField>\n            <InlineField label=\"Wrap lines\" transparent>\n              <InlineSwitch value={wrapLogMessage} onChange={this.onChangewrapLogMessage} transparent />\n            </InlineField>\n            <InlineField label=\"Dedup\" transparent>\n              <RadioButtonGroup\n                options={Object.keys(LogsDedupStrategy).map((dedupType: LogsDedupStrategy) => ({\n                  label: capitalize(dedupType),\n                  value: dedupType,\n                  description: LogsDedupDescription[dedupType],\n                }))}\n                value={dedupStrategy}\n                onChange={this.onChangeDedup}\n                className={styles.radioButtons}\n              />\n            </InlineField>\n          </InlineFieldRow>\n          <Button\n            variant=\"secondary\"\n            disabled={isFlipping}\n            title={logsSortOrder === LogsSortOrder.Ascending ? 'Change to newest first' : 'Change to oldest first'}\n            aria-label=\"Flip results order\"\n            className={styles.flipButton}\n            onClick={this.onChangeLogsSortOrder}\n          >\n            {isFlipping ? 'Flipping...' : 'Flip results order'}\n          </Button>\n        </div>\n        <LogsMetaRow\n          logRows={logRows}\n          meta={logsMeta || []}\n          dedupStrategy={dedupStrategy}\n          dedupCount={dedupCount}\n          hasUnescapedContent={hasUnescapedContent}\n          forceEscape={forceEscape}\n          showDetectedFields={showDetectedFields}\n          onEscapeNewlines={this.onEscapeNewlines}\n          clearDetectedFields={this.clearDetectedFields}\n        />\n        <div className={styles.logsSection}>\n          <div className={styles.logRows}>\n            <LogRows\n              logRows={logRows}\n              deduplicatedRows={dedupedRows}\n              dedupStrategy={dedupStrategy}\n              getRowContext={this.props.getRowContext}\n              highlighterExpressions={highlighterExpressions}\n              onClickFilterLabel={onClickFilterLabel}\n              onClickFilterOutLabel={onClickFilterOutLabel}\n              showContextToggle={showContextToggle}\n              showLabels={showLabels}\n              showTime={showTime}\n              enableLogDetails={true}\n              forceEscape={forceEscape}\n              wrapLogMessage={wrapLogMessage}\n              timeZone={timeZone}\n              getFieldLinks={getFieldLinks}\n              logsSortOrder={logsSortOrder}\n              showDetectedFields={showDetectedFields}\n              onClickShowDetectedField={this.showDetectedField}\n              onClickHideDetectedField={this.hideDetectedField}\n            />\n          </div>\n          <LogsNavigation\n            logsSortOrder={logsSortOrder}\n            visibleRange={visibleRange ?? absoluteRange}\n            absoluteRange={absoluteRange}\n            timeZone={timeZone}\n            onChangeTime={onChangeTime}\n            loading={loading}\n            queries={logsQueries ?? []}\n            scrollToTopLogs={this.scrollToTopLogs}\n            addResultsToCache={addResultsToCache}\n            clearCache={clearCache}\n          />\n        </div>\n        {!loading && !hasData && !scanning && (\n          <div className={styles.noData}>\n            No logs found.\n            <Button size=\"xs\" fill=\"text\" onClick={this.onClickScan}>\n              Scan for older logs\n            </Button>\n          </div>\n        )}\n\n        {scanning && (\n          <div className={styles.noData}>\n            <span>{scanText}</span>\n            <Button size=\"xs\" fill=\"text\" onClick={this.onClickStopScan}>\n              Stop scan\n            </Button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const Logs = withTheme(UnthemedLogs);\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    noData: css`\n      > * {\n        margin-left: 0.5em;\n      }\n    `,\n    logOptions: css`\n      display: flex;\n      justify-content: space-between;\n      align-items: baseline;\n      flex-wrap: wrap;\n      background-color: ${theme.colors.bg1};\n      padding: ${theme.spacing.sm} ${theme.spacing.md};\n      border-radius: ${theme.border.radius.md};\n      margin: ${theme.spacing.md} 0 ${theme.spacing.sm};\n      border: 1px solid ${theme.colors.border2};\n    `,\n    flipButton: css`\n      margin: ${theme.spacing.xs} 0 0 ${theme.spacing.sm};\n    `,\n    radioButtons: css`\n      margin: 0 ${theme.spacing.sm};\n    `,\n    logsSection: css`\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n    `,\n    logRows: css`\n      overflow-x: scroll;\n    `,\n    infoText: css`\n      font-size: ${theme.typography.size.sm};\n      color: ${theme.colors.textWeak};\n    `,\n  };\n});\n","import React, { memo } from 'react';\nimport { css } from '@emotion/css';\nimport { GrafanaTheme } from '@grafana/data';\nimport { useStyles } from '@grafana/ui';\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  metaContainer: css`\n    flex: 1;\n    color: ${theme.colors.textWeak};\n    margin-bottom: ${theme.spacing.d};\n    min-width: 30%;\n    display: flex;\n    flex-wrap: wrap;\n  `,\n  metaItem: css`\n    margin-right: ${theme.spacing.d};\n    margin-top: ${theme.spacing.xs};\n    display: flex;\n    align-items: baseline;\n\n    .logs-meta-item__error {\n      color: ${theme.palette.red};\n    }\n  `,\n  metaLabel: css`\n    margin-right: calc(${theme.spacing.d} / 2);\n    font-size: ${theme.typography.size.sm};\n    font-weight: ${theme.typography.weight.semibold};\n  `,\n  metaValue: css`\n    font-family: ${theme.typography.fontFamily.monospace};\n    font-size: ${theme.typography.size.sm};\n  `,\n});\n\nexport interface MetaItemProps {\n  label?: string;\n  value: string | JSX.Element;\n}\n\nexport const MetaInfoItem = memo(function MetaInfoItem(props: MetaItemProps) {\n  const style = useStyles(getStyles);\n  const { label, value } = props;\n\n  return (\n    <div className={style.metaItem}>\n      {label && <span className={style.metaLabel}>{label}:</span>}\n      <span className={style.metaValue}>{value}</span>\n    </div>\n  );\n});\n\nexport interface MetaInfoTextProps {\n  metaItems: MetaItemProps[];\n}\n\nexport const MetaInfoText = memo(function MetaInfoText(props: MetaInfoTextProps) {\n  const style = useStyles(getStyles);\n  const { metaItems } = props;\n\n  return (\n    <div className={style.metaContainer}>\n      {metaItems.map((item, index) => (\n        <MetaInfoItem key={`${index}-${item.label}`} label={item.label} value={item.value} />\n      ))}\n    </div>\n  );\n});\n\nexport default MetaInfoText;\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { GrafanaTheme } from '@grafana/data';\nimport { stylesFactory, Button, HorizontalGroup, useTheme } from '@grafana/ui';\n\ntype Props = {\n  addQueryRowButtonDisabled?: boolean;\n  addQueryRowButtonHidden?: boolean;\n  richHistoryButtonActive?: boolean;\n  queryInspectorButtonActive?: boolean;\n\n  onClickAddQueryRowButton: () => void;\n  onClickRichHistoryButton: () => void;\n  onClickQueryInspectorButton: () => void;\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    containerMargin: css`\n      margin-top: ${theme.spacing.md};\n    `,\n  };\n});\nexport function SecondaryActions(props: Props) {\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  return (\n    <div className={styles.containerMargin}>\n      <HorizontalGroup>\n        {!props.addQueryRowButtonHidden && (\n          <Button\n            variant=\"secondary\"\n            aria-label=\"Add row button\"\n            onClick={props.onClickAddQueryRowButton}\n            disabled={props.addQueryRowButtonDisabled}\n            icon=\"plus\"\n          >\n            Add query\n          </Button>\n        )}\n        <Button\n          variant=\"secondary\"\n          aria-label=\"Rich history button\"\n          className={cx({ ['explore-active-button']: props.richHistoryButtonActive })}\n          onClick={props.onClickRichHistoryButton}\n          icon=\"history\"\n        >\n          Query history\n        </Button>\n        <Button\n          variant=\"secondary\"\n          aria-label=\"Query inspector button\"\n          className={cx({ ['explore-active-button']: props.queryInspectorButtonActive })}\n          onClick={props.onClickQueryInspectorButton}\n          icon=\"info-circle\"\n        >\n          Inspector\n        </Button>\n      </HorizontalGroup>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Icon } from '@grafana/ui';\n\nfunction formatLatency(value: number) {\n  return `${(value / 1000).toFixed(1)}s`;\n}\n\nexport type Props = {\n  canToggleEditorModes: boolean;\n  isDisabled?: boolean;\n  isNotStarted: boolean;\n  latency: number;\n  onClickToggleEditorMode: () => void;\n  onClickToggleDisabled: () => void;\n  onClickRemoveButton: () => void;\n};\n\nexport function QueryRowActions(props: Props) {\n  const {\n    canToggleEditorModes,\n    onClickToggleEditorMode,\n    onClickToggleDisabled,\n    onClickRemoveButton,\n    isDisabled,\n    isNotStarted,\n    latency,\n  } = props;\n\n  return (\n    <div className=\"gf-form-inline flex-shrink-0\">\n      {canToggleEditorModes && (\n        <div className=\"gf-form\">\n          <button\n            aria-label=\"Edit mode button\"\n            className=\"gf-form-label gf-form-label--btn\"\n            onClick={onClickToggleEditorMode}\n          >\n            <Icon name=\"pen\" />\n          </button>\n        </div>\n      )}\n      <div className=\"gf-form\">\n        <button disabled className=\"gf-form-label\" title=\"Query row latency\">\n          {formatLatency(latency)}\n        </button>\n      </div>\n      <div className=\"gf-form\">\n        <button\n          disabled={isNotStarted}\n          className=\"gf-form-label gf-form-label--btn\"\n          onClick={onClickToggleDisabled}\n          title={isDisabled ? 'Enable query' : 'Disable query'}\n        >\n          <Icon name={isDisabled ? 'eye-slash' : 'eye'} />\n        </button>\n      </div>\n      <div className=\"gf-form\">\n        <button className=\"gf-form-label gf-form-label--btn\" onClick={onClickRemoveButton} title=\"Remove query\">\n          <Icon name=\"minus\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Tooltip, ToolbarButton } from '@grafana/ui';\n\ninterface TimeSyncButtonProps {\n  isSynced: boolean;\n  onClick: () => void;\n}\n\nexport function TimeSyncButton(props: TimeSyncButtonProps) {\n  const { onClick, isSynced } = props;\n\n  const syncTimesTooltip = () => {\n    const { isSynced } = props;\n    const tooltip = isSynced ? 'Unsync all views' : 'Sync all views to this time range';\n    return <>{tooltip}</>;\n  };\n\n  return (\n    <Tooltip content={syncTimesTooltip} placement=\"bottom\">\n      <ToolbarButton\n        icon=\"link\"\n        variant={isSynced ? 'active' : 'default'}\n        aria-label={isSynced ? 'Synced times' : 'Unsynced times'}\n        onClick={onClick}\n      />\n    </Tooltip>\n  );\n}\n","// Libaries\nimport React, { Component } from 'react';\n\n// Types\nimport { ExploreId } from 'app/types';\nimport { TimeRange, TimeZone, RawTimeRange, dateTimeForTimeZone, dateMath } from '@grafana/data';\n\n// State\n\n// Components\nimport { TimeSyncButton } from './TimeSyncButton';\nimport { TimePickerWithHistory } from 'app/core/components/TimePicker/TimePickerWithHistory';\n\n// Utils & Services\nimport { getShiftedTimeRange, getZoomedTimeRange } from 'app/core/utils/timePicker';\n\nexport interface Props {\n  exploreId: ExploreId;\n  hideText?: boolean;\n  range: TimeRange;\n  timeZone: TimeZone;\n  splitted: boolean;\n  syncedTimes: boolean;\n  onChangeTimeSync: () => void;\n  onChangeTime: (range: RawTimeRange) => void;\n  onChangeTimeZone: (timeZone: TimeZone) => void;\n}\n\nexport class ExploreTimeControls extends Component<Props> {\n  onMoveTimePicker = (direction: number) => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getShiftedTimeRange(direction, range);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  onMoveForward = () => this.onMoveTimePicker(1);\n  onMoveBack = () => this.onMoveTimePicker(-1);\n\n  onChangeTimePicker = (timeRange: TimeRange) => {\n    const adjustedFrom = dateMath.isMathString(timeRange.raw.from) ? timeRange.raw.from : timeRange.from;\n    const adjustedTo = dateMath.isMathString(timeRange.raw.to) ? timeRange.raw.to : timeRange.to;\n\n    this.props.onChangeTime({\n      from: adjustedFrom,\n      to: adjustedTo,\n    });\n  };\n\n  onZoom = () => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getZoomedTimeRange(range, 2);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  render() {\n    const { range, timeZone, splitted, syncedTimes, onChangeTimeSync, hideText, onChangeTimeZone } = this.props;\n    const timeSyncButton = splitted ? <TimeSyncButton onClick={onChangeTimeSync} isSynced={syncedTimes} /> : undefined;\n    const timePickerCommonProps = {\n      value: range,\n      timeZone,\n      onMoveBackward: this.onMoveBack,\n      onMoveForward: this.onMoveForward,\n      onZoom: this.onZoom,\n      hideText,\n    };\n\n    return (\n      <TimePickerWithHistory\n        {...timePickerCommonProps}\n        timeSyncButton={timeSyncButton}\n        isSynced={syncedTimes}\n        onChange={this.onChangeTimePicker}\n        onChangeTimeZone={onChangeTimeZone}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport memoizeOne from 'memoize-one';\nimport { css } from '@emotion/css';\nimport { CSSTransition } from 'react-transition-group';\n\nconst transitionDuration = 500;\n// We add a bit of delay to the transition as another perf optimisation. As at the start we need to render\n// quite a bit of new rows, if we start transition at the same time there can be frame rate drop. This gives time\n// for react to first render them and then do the animation.\nconst transitionDelay = 100;\n\nconst getStyles = memoizeOne(() => {\n  return {\n    logsEnter: css`\n      label: logsEnter;\n      position: absolute;\n      opacity: 0;\n      height: auto;\n      width: 100%;\n    `,\n    logsEnterActive: css`\n      label: logsEnterActive;\n      opacity: 1;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n    logsExit: css`\n      label: logsExit;\n      position: absolute;\n      opacity: 1;\n      height: auto;\n      width: 100%;\n    `,\n    logsExitActive: css`\n      label: logsExitActive;\n      opacity: 0;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n  };\n});\n\ntype Props = {\n  children: React.ReactNode;\n  visible: boolean;\n};\n\n/**\n * Cross fade transition component that is tied a bit too much to the logs containers so not very useful elsewhere\n * right now.\n */\nexport function LogsCrossFadeTransition(props: Props) {\n  const { visible, children } = props;\n  const styles = getStyles();\n  return (\n    <CSSTransition\n      in={visible}\n      mountOnEnter={true}\n      unmountOnExit={true}\n      timeout={transitionDuration + transitionDelay}\n      classNames={{\n        enter: styles.logsEnter,\n        enterActive: styles.logsEnterActive,\n        exit: styles.logsExit,\n        exitActive: styles.logsExitActive,\n      }}\n    >\n      {children}\n    </CSSTransition>\n  );\n}\n","import { useCallback, useState } from 'react';\nvar useToggle = function (initialValue) {\n    var _a = useState(initialValue), value = _a[0], setValue = _a[1];\n    var toggle = useCallback(function (nextValue) {\n        if (typeof nextValue === 'boolean') {\n            setValue(nextValue);\n        }\n        else {\n            setValue(function (currentValue) { return !currentValue; });\n        }\n    }, [setValue]);\n    return [value, toggle];\n};\nexport default useToggle;\n","import React from 'react';\nimport { useToggle } from 'react-use';\nimport { Badge, Collapse, useStyles2, useTheme2 } from '@grafana/ui';\nimport { applyFieldOverrides, DataFrame, GrafanaTheme2, TimeRange } from '@grafana/data';\nimport { css } from '@emotion/css';\nimport { ExploreId, StoreState } from '../../types';\nimport { splitOpen } from './state/main';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useLinks } from './utils/links';\nimport { NodeGraph } from '../../plugins/panel/nodeGraph';\nimport { useCategorizeFrames } from '../../plugins/panel/nodeGraph/useCategorizeFrames';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  warningText: css`\n    label: warningText;\n    font-size: ${theme.typography.bodySmall.fontSize};\n    color: ${theme.colors.text.secondary};\n  `,\n});\n\ninterface Props {\n  // Edges and Nodes are separate frames\n  dataFrames: DataFrame[];\n  exploreId: ExploreId;\n  range: TimeRange;\n  splitOpen: typeof splitOpen;\n  // When showing the node graph together with trace view we do some changes so it works better.\n  withTraceView?: boolean;\n}\nexport function UnconnectedNodeGraphContainer(props: Props & ConnectedProps<typeof connector>) {\n  const { dataFrames, range, splitOpen, withTraceView } = props;\n  const getLinks = useLinks(range, splitOpen);\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  // This is implicit dependency that is needed for links to work. At some point when replacing variables in the link\n  // it requires field to have a display property which is added by the overrides even though we don't add any field\n  // overrides in explore.\n  const frames = applyFieldOverrides({\n    fieldConfig: {\n      defaults: {},\n      overrides: [],\n    },\n    data: dataFrames,\n    // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n    replaceVariables: (value) => value,\n    theme,\n  });\n\n  const { nodes } = useCategorizeFrames(frames);\n  const [open, toggleOpen] = useToggle(false);\n\n  const countWarning =\n    withTraceView && nodes[0]?.length > 1000 ? (\n      <span className={styles.warningText}> ({nodes[0].length} nodes, can be slow to load)</span>\n    ) : null;\n\n  return (\n    <Collapse\n      label={\n        <span>\n          Node graph{countWarning}{' '}\n          <Badge text={'Beta'} color={'blue'} icon={'rocket'} tooltip={'This visualization is in beta'} />\n        </span>\n      }\n      collapsible={withTraceView}\n      // We allow collapsing this only when it is shown together with trace view.\n      isOpen={withTraceView ? open : true}\n      onToggle={withTraceView ? () => toggleOpen() : undefined}\n    >\n      <div style={{ height: withTraceView ? 500 : 600 }}>\n        <NodeGraph dataFrames={frames} getLinks={getLinks} />\n      </div>\n    </Collapse>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  return {\n    range: state.explore[exploreId]!.range,\n  };\n}\n\nconst mapDispatchToProps = {\n  splitOpen,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport const NodeGraphContainer = connector(UnconnectedNodeGraphContainer);\n","import React from 'react';\nimport { RefreshPicker, defaultIntervals } from '@grafana/ui';\nimport { getTimeSrv } from 'app/features/dashboard/services/TimeSrv';\n\nexport type Props = {\n  isSmall?: boolean;\n  loading: boolean;\n  isLive: boolean;\n  onRun: (loading: boolean) => void;\n  refreshInterval?: string;\n  onChangeRefreshInterval: (interval: string) => void;\n  showDropdown: boolean;\n};\n\nexport function RunButton(props: Props) {\n  const { isSmall, loading, onRun, onChangeRefreshInterval, refreshInterval, showDropdown, isLive } = props;\n  const intervals = getTimeSrv().getValidIntervals(defaultIntervals);\n  let text: string | undefined;\n\n  if (isLive) {\n    return null;\n  }\n\n  if (!isSmall) {\n    text = loading ? 'Cancel' : 'Run query';\n  }\n\n  return (\n    <RefreshPicker\n      onIntervalChanged={onChangeRefreshInterval}\n      value={refreshInterval}\n      isLoading={loading}\n      text={text}\n      intervals={intervals}\n      isLive={isLive}\n      onRefresh={() => onRun(loading)}\n      noIntervalPicker={!showDropdown}\n      primary={true}\n    />\n  );\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { CSSTransition } from 'react-transition-group';\nimport { useTheme, Tooltip, stylesFactory, ButtonGroup, ToolbarButton } from '@grafana/ui';\nimport { GrafanaTheme } from '@grafana/data';\n\ntype LiveTailButtonProps = {\n  splitted: boolean;\n  start: () => void;\n  stop: () => void;\n  pause: () => void;\n  resume: () => void;\n  isLive: boolean;\n  isPaused: boolean;\n};\n\nexport function LiveTailButton(props: LiveTailButtonProps) {\n  const { start, pause, resume, isLive, isPaused, stop, splitted } = props;\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  const buttonVariant = isLive && !isPaused ? 'active' : 'default';\n  const onClickMain = isLive ? (isPaused ? resume : pause) : start;\n\n  return (\n    <ButtonGroup>\n      <Tooltip\n        content={isLive && !isPaused ? <>Pause the live stream</> : <>Start live stream your logs</>}\n        placement=\"bottom\"\n      >\n        <ToolbarButton\n          iconOnly={splitted}\n          variant={buttonVariant}\n          icon={!isLive || isPaused ? 'play' : 'pause'}\n          onClick={onClickMain}\n        >\n          {isLive && isPaused ? 'Paused' : 'Live'}\n        </ToolbarButton>\n      </Tooltip>\n\n      <CSSTransition\n        mountOnEnter={true}\n        unmountOnExit={true}\n        timeout={100}\n        in={isLive}\n        classNames={{\n          enter: styles.stopButtonEnter,\n          enterActive: styles.stopButtonEnterActive,\n          exit: styles.stopButtonExit,\n          exitActive: styles.stopButtonExitActive,\n        }}\n      >\n        <Tooltip content={<>Stop and exit the live stream</>} placement=\"bottom\">\n          <ToolbarButton variant={buttonVariant} onClick={stop} icon=\"square-shape\" />\n        </Tooltip>\n      </CSSTransition>\n    </ButtonGroup>\n  );\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    stopButtonEnter: css`\n      label: stopButtonEnter;\n      width: 0;\n      opacity: 0;\n      overflow: hidden;\n    `,\n    stopButtonEnterActive: css`\n      label: stopButtonEnterActive;\n      opacity: 1;\n      width: 32px;\n    `,\n    stopButtonExit: css`\n      label: stopButtonExit;\n      width: 32px;\n      opacity: 1;\n      overflow: hidden;\n    `,\n    stopButtonExitActive: css`\n      label: stopButtonExitActive;\n      opacity: 0;\n      width: 0;\n    `,\n  };\n});\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { css, cx } from '@emotion/css';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport memoizeOne from 'memoize-one';\nimport { selectors } from '@grafana/e2e-selectors';\nimport {\n  ErrorBoundaryAlert,\n  stylesFactory,\n  withTheme,\n  CustomScrollbar,\n  Collapse,\n  TooltipDisplayMode,\n} from '@grafana/ui';\nimport {\n  AbsoluteTimeRange,\n  DataQuery,\n  DataSourceApi,\n  GrafanaTheme,\n  LoadingState,\n  PanelData,\n  RawTimeRange,\n  TimeZone,\n  LogsModel,\n  DataFrame,\n} from '@grafana/data';\n\nimport LogsContainer from './LogsContainer';\nimport QueryRows from './QueryRows';\nimport TableContainer from './TableContainer';\nimport RichHistoryContainer from './RichHistory/RichHistoryContainer';\nimport ExploreQueryInspector from './ExploreQueryInspector';\nimport { splitOpen } from './state/main';\nimport { changeSize } from './state/explorePane';\nimport { updateTimeRange } from './state/time';\nimport { scanStopAction, addQueryRow, modifyQueries, setQueries, scanStart } from './state/query';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport { ExploreToolbar } from './ExploreToolbar';\nimport { NoDataSourceCallToAction } from './NoDataSourceCallToAction';\nimport { getTimeZone } from '../profile/state/selectors';\nimport { SecondaryActions } from './SecondaryActions';\nimport { FILTER_FOR_OPERATOR, FILTER_OUT_OPERATOR, FilterItem } from '@grafana/ui/src/components/Table/types';\nimport { ExploreGraphNGPanel } from './ExploreGraphNGPanel';\nimport { NodeGraphContainer } from './NodeGraphContainer';\nimport { ResponseErrorContainer } from './ResponseErrorContainer';\nimport { TraceViewContainer } from './TraceView/TraceViewContainer';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    exploreMain: css`\n      label: exploreMain;\n      // Is needed for some transition animations to work.\n      position: relative;\n      margin-top: 21px;\n    `,\n    button: css`\n      label: button;\n      margin: 1em 4px 0 0;\n    `,\n    queryContainer: css`\n      label: queryContainer;\n      // Need to override normal css class and don't want to count on ordering of the classes in html.\n      height: auto !important;\n      flex: unset !important;\n      padding: ${theme.panelPadding}px;\n    `,\n  };\n});\n\nexport interface ExploreProps {\n  changeSize: typeof changeSize;\n  datasourceInstance: DataSourceApi | null;\n  datasourceMissing: boolean;\n  exploreId: ExploreId;\n  modifyQueries: typeof modifyQueries;\n  scanning?: boolean;\n  scanRange?: RawTimeRange;\n  scanStart: typeof scanStart;\n  scanStopAction: typeof scanStopAction;\n  setQueries: typeof setQueries;\n  queryKeys: string[];\n  isLive: boolean;\n  syncedTimes: boolean;\n  updateTimeRange: typeof updateTimeRange;\n  graphResult: DataFrame[] | null;\n  logsResult?: LogsModel;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  onHiddenSeriesChanged?: (hiddenSeries: string[]) => void;\n  queryResponse: PanelData;\n  originPanelId: number;\n  addQueryRow: typeof addQueryRow;\n  theme: GrafanaTheme;\n  loading: boolean;\n  showMetrics: boolean;\n  showTable: boolean;\n  showLogs: boolean;\n  showTrace: boolean;\n  showNodeGraph: boolean;\n  splitOpen: typeof splitOpen;\n}\n\nenum ExploreDrawer {\n  RichHistory,\n  QueryInspector,\n}\n\ninterface ExploreState {\n  openDrawer?: ExploreDrawer;\n}\n\n/**\n * Explore provides an area for quick query iteration for a given datasource.\n * Once a datasource is selected it populates the query section at the top.\n * When queries are run, their results are being displayed in the main section.\n * The datasource determines what kind of query editor it brings, and what kind\n * of results viewers it supports. The state is managed entirely in Redux.\n *\n * SPLIT VIEW\n *\n * Explore can have two Explore areas side-by-side. This is handled in `Wrapper.tsx`.\n * Since there can be multiple Explores (e.g., left and right) each action needs\n * the `exploreId` as first parameter so that the reducer knows which Explore state\n * is affected.\n *\n * DATASOURCE REQUESTS\n *\n * A click on Run Query creates transactions for all DataQueries for all expanded\n * result viewers. New runs are discarding previous runs. Upon completion a transaction\n * saves the result. The result viewers construct their data from the currently existing\n * transactions.\n *\n * The result viewers determine some of the query options sent to the datasource, e.g.,\n * `format`, to indicate eventual transformations by the datasources' result transformers.\n */\nexport class Explore extends React.PureComponent<ExploreProps, ExploreState> {\n  constructor(props: ExploreProps) {\n    super(props);\n    this.state = {\n      openDrawer: undefined,\n    };\n  }\n\n  onChangeTime = (rawRange: RawTimeRange) => {\n    const { updateTimeRange, exploreId } = this.props;\n    updateTimeRange({ exploreId, rawRange });\n  };\n\n  // Use this in help pages to set page to a single query\n  onClickExample = (query: DataQuery) => {\n    this.props.setQueries(this.props.exploreId, [query]);\n  };\n\n  onCellFilterAdded = (filter: FilterItem) => {\n    const { value, key, operator } = filter;\n    if (operator === FILTER_FOR_OPERATOR) {\n      this.onClickFilterLabel(key, value);\n    }\n\n    if (operator === FILTER_OUT_OPERATOR) {\n      this.onClickFilterOutLabel(key, value);\n    }\n  };\n\n  onClickFilterLabel = (key: string, value: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER', key, value });\n  };\n\n  onClickFilterOutLabel = (key: string, value: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER_OUT', key, value });\n  };\n\n  onClickAddQueryRowButton = () => {\n    const { exploreId, queryKeys } = this.props;\n    this.props.addQueryRow(exploreId, queryKeys.length);\n  };\n\n  onModifyQueries = (action: any, index?: number) => {\n    const { datasourceInstance } = this.props;\n    if (datasourceInstance?.modifyQuery) {\n      const modifier = (queries: DataQuery, modification: any) =>\n        datasourceInstance.modifyQuery!(queries, modification);\n      this.props.modifyQueries(this.props.exploreId, action, modifier, index);\n    }\n  };\n\n  onResize = (size: { height: number; width: number }) => {\n    this.props.changeSize(this.props.exploreId, size);\n  };\n\n  onStartScanning = () => {\n    // Scanner will trigger a query\n    this.props.scanStart(this.props.exploreId);\n  };\n\n  onStopScanning = () => {\n    this.props.scanStopAction({ exploreId: this.props.exploreId });\n  };\n\n  onUpdateTimeRange = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  toggleShowRichHistory = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.RichHistory ? undefined : ExploreDrawer.RichHistory,\n      };\n    });\n  };\n\n  toggleShowQueryInspector = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.QueryInspector ? undefined : ExploreDrawer.QueryInspector,\n      };\n    });\n  };\n\n  renderEmptyState() {\n    return (\n      <div className=\"explore-container\">\n        <NoDataSourceCallToAction />\n      </div>\n    );\n  }\n\n  renderGraphPanel() {\n    const { graphResult, absoluteRange, timeZone, splitOpen, queryResponse, loading } = this.props;\n    return (\n      <Collapse label=\"Graph\" loading={loading} isOpen>\n        <ExploreGraphNGPanel\n          data={graphResult!}\n          height={400}\n          tooltipDisplayMode={TooltipDisplayMode.Single}\n          absoluteRange={absoluteRange}\n          timeZone={timeZone}\n          onUpdateTimeRange={this.onUpdateTimeRange}\n          annotations={queryResponse.annotations}\n          splitOpenFn={splitOpen}\n        />\n      </Collapse>\n    );\n  }\n\n  renderTablePanel(width: number) {\n    const { exploreId, datasourceInstance } = this.props;\n    return (\n      <TableContainer\n        ariaLabel={selectors.pages.Explore.General.table}\n        width={width}\n        exploreId={exploreId}\n        onCellFilterAdded={datasourceInstance?.modifyQuery ? this.onCellFilterAdded : undefined}\n      />\n    );\n  }\n\n  renderLogsPanel() {\n    const { exploreId, syncedTimes } = this.props;\n    return (\n      <LogsContainer\n        exploreId={exploreId}\n        syncedTimes={syncedTimes}\n        onClickFilterLabel={this.onClickFilterLabel}\n        onClickFilterOutLabel={this.onClickFilterOutLabel}\n        onStartScanning={this.onStartScanning}\n        onStopScanning={this.onStopScanning}\n      />\n    );\n  }\n\n  renderNodeGraphPanel() {\n    const { exploreId, showTrace, queryResponse } = this.props;\n    return (\n      <NodeGraphContainer\n        dataFrames={this.getNodeGraphDataFrames(queryResponse.series)}\n        exploreId={exploreId}\n        withTraceView={showTrace}\n      />\n    );\n  }\n\n  getNodeGraphDataFrames = memoizeOne((frames: DataFrame[]) => {\n    // TODO: this not in sync with how other types of responses are handled. Other types have a query response\n    //  processing pipeline which ends up populating redux state with proper data. As we move towards more dataFrame\n    //  oriented API it seems like a better direction to move such processing into to visualisations and do minimal\n    //  and lazy processing here. Needs bigger refactor so keeping nodeGraph and Traces as they are for now.\n    return frames.filter((frame) => frame.meta?.preferredVisualisationType === 'nodeGraph');\n  });\n\n  renderTraceViewPanel() {\n    const { queryResponse, splitOpen, exploreId } = this.props;\n    const dataFrames = queryResponse.series.filter((series) => series.meta?.preferredVisualisationType === 'trace');\n\n    return (\n      // If there is no data (like 404) we show a separate error so no need to show anything here\n      dataFrames.length && <TraceViewContainer exploreId={exploreId} dataFrames={dataFrames} splitOpenFn={splitOpen} />\n    );\n  }\n\n  render() {\n    const {\n      datasourceInstance,\n      datasourceMissing,\n      exploreId,\n      queryKeys,\n      graphResult,\n      queryResponse,\n      isLive,\n      theme,\n      showMetrics,\n      showTable,\n      showLogs,\n      showTrace,\n      showNodeGraph,\n    } = this.props;\n    const { openDrawer } = this.state;\n    const styles = getStyles(theme);\n    const showPanels = queryResponse && queryResponse.state !== LoadingState.NotStarted;\n    const showRichHistory = openDrawer === ExploreDrawer.RichHistory;\n    const showQueryInspector = openDrawer === ExploreDrawer.QueryInspector;\n\n    return (\n      <CustomScrollbar autoHeightMin={'100%'}>\n        <ExploreToolbar exploreId={exploreId} onChangeTime={this.onChangeTime} />\n        {datasourceMissing ? this.renderEmptyState() : null}\n        {datasourceInstance && (\n          <div className=\"explore-container\">\n            <div className={cx('panel-container', styles.queryContainer)}>\n              <QueryRows exploreId={exploreId} queryKeys={queryKeys} />\n              <SecondaryActions\n                addQueryRowButtonDisabled={isLive}\n                // We cannot show multiple traces at the same time right now so we do not show add query button.\n                //TODO:unification\n                addQueryRowButtonHidden={false}\n                richHistoryButtonActive={showRichHistory}\n                queryInspectorButtonActive={showQueryInspector}\n                onClickAddQueryRowButton={this.onClickAddQueryRowButton}\n                onClickRichHistoryButton={this.toggleShowRichHistory}\n                onClickQueryInspectorButton={this.toggleShowQueryInspector}\n              />\n              <ResponseErrorContainer exploreId={exploreId} />\n            </div>\n            <AutoSizer onResize={this.onResize} disableHeight>\n              {({ width }) => {\n                if (width === 0) {\n                  return null;\n                }\n\n                return (\n                  <main className={cx(styles.exploreMain)} style={{ width }}>\n                    <ErrorBoundaryAlert>\n                      {showPanels && (\n                        <>\n                          {showMetrics && graphResult && (\n                            <ErrorBoundaryAlert>{this.renderGraphPanel()}</ErrorBoundaryAlert>\n                          )}\n                          {showTable && <ErrorBoundaryAlert>{this.renderTablePanel(width)}</ErrorBoundaryAlert>}\n                          {showLogs && <ErrorBoundaryAlert>{this.renderLogsPanel()}</ErrorBoundaryAlert>}\n                          {showNodeGraph && <ErrorBoundaryAlert>{this.renderNodeGraphPanel()}</ErrorBoundaryAlert>}\n                          {showTrace && <ErrorBoundaryAlert>{this.renderTraceViewPanel()}</ErrorBoundaryAlert>}\n                        </>\n                      )}\n                      {showRichHistory && (\n                        <RichHistoryContainer\n                          width={width}\n                          exploreId={exploreId}\n                          onClose={this.toggleShowRichHistory}\n                        />\n                      )}\n                      {showQueryInspector && (\n                        <ExploreQueryInspector\n                          exploreId={exploreId}\n                          width={width}\n                          onClose={this.toggleShowQueryInspector}\n                        />\n                      )}\n                    </ErrorBoundaryAlert>\n                  </main>\n                );\n              }}\n            </AutoSizer>\n          </div>\n        )}\n      </CustomScrollbar>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: ExploreProps): Partial<ExploreProps> {\n  const explore = state.explore;\n  const { syncedTimes } = explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const timeZone = getTimeZone(state.user);\n  const {\n    datasourceInstance,\n    datasourceMissing,\n    queryKeys,\n    isLive,\n    graphResult,\n    logsResult,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    absoluteRange,\n    queryResponse,\n    showNodeGraph,\n    loading,\n  } = item;\n\n  return {\n    datasourceInstance,\n    datasourceMissing,\n    queryKeys,\n    isLive,\n    graphResult,\n    logsResult: logsResult ?? undefined,\n    absoluteRange,\n    queryResponse,\n    syncedTimes,\n    timeZone,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    showNodeGraph,\n    loading,\n  };\n}\n\nconst mapDispatchToProps: Partial<ExploreProps> = {\n  changeSize,\n  modifyQueries,\n  scanStart,\n  scanStopAction,\n  setQueries,\n  updateTimeRange,\n  addQueryRow,\n  splitOpen,\n};\n\nexport default compose(\n  hot(module),\n  connect(mapStateToProps, mapDispatchToProps),\n  withTheme\n)(Explore) as React.ComponentType<{ exploreId: ExploreId }>;\n","import { useEffect, useRef } from 'react';\nvar usePrevious = function (state) {\n    var ref = useRef();\n    useEffect(function () {\n        ref.current = state;\n    });\n    return ref.current;\n};\nexport default usePrevious;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { hot } from 'react-hot-loader';\nimport { css, cx } from '@emotion/css';\nimport { stylesFactory, useTheme, TextArea, Button, IconButton } from '@grafana/ui';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { GrafanaTheme, DataSourceApi } from '@grafana/data';\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\nimport { createUrlFromRichHistory, createQueryText } from 'app/core/utils/richHistory';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { copyStringToClipboard } from 'app/core/utils/explore';\nimport appEvents from 'app/core/app_events';\nimport { dispatch } from 'app/store/store';\nimport { notifyApp } from 'app/core/actions';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { StoreState } from 'app/types';\n\nimport { updateRichHistory } from '../state/history';\nimport { changeDatasource } from '../state/datasource';\nimport { setQueries } from '../state/query';\nimport { ShowConfirmModalEvent } from '../../../types/events';\n\nexport interface Props {\n  query: RichHistoryQuery;\n  dsImg: string;\n  isRemoved: boolean;\n  changeDatasource: typeof changeDatasource;\n  updateRichHistory: typeof updateRichHistory;\n  setQueries: typeof setQueries;\n  exploreId: ExploreId;\n  datasourceInstance: DataSourceApi;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, isRemoved: boolean) => {\n  /* Hard-coded value so all buttons and icons on right side of card are aligned */\n  const rigtColumnWidth = '240px';\n  const rigtColumnContentWidth = '170px';\n\n  /* If datasource was removed, card will have inactive color */\n  const cardColor = theme.colors.bg2;\n\n  return {\n    queryCard: css`\n      display: flex;\n      flex-direction: column;\n      border: 1px solid ${theme.colors.border1};\n      margin: ${theme.spacing.sm} 0;\n      background-color: ${cardColor};\n      border-radius: ${theme.border.radius.sm};\n      .starred {\n        color: ${theme.palette.orange};\n      }\n    `,\n    cardRow: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${theme.spacing.sm};\n      border-bottom: none;\n      :first-of-type {\n        border-bottom: 1px solid ${theme.colors.border1};\n        padding: ${theme.spacing.xs} ${theme.spacing.sm};\n      }\n      img {\n        height: ${theme.typography.size.base};\n        max-width: ${theme.typography.size.base};\n        margin-right: ${theme.spacing.sm};\n      }\n    `,\n    datasourceContainer: css`\n      display: flex;\n      align-items: center;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.semibold};\n    `,\n    queryActionButtons: css`\n      max-width: ${rigtColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      font-size: ${theme.typography.size.base};\n      button {\n        margin-left: ${theme.spacing.sm};\n      }\n    `,\n    queryContainer: css`\n      font-weight: ${theme.typography.weight.semibold};\n      width: calc(100% - ${rigtColumnWidth});\n    `,\n    queryRow: css`\n      border-top: 1px solid ${theme.colors.border1};\n      word-break: break-all;\n      padding: 4px 2px;\n      :first-child {\n        border-top: none;\n        padding: 0 0 4px 0;\n      }\n    `,\n    updateCommentContainer: css`\n      width: calc(100% + ${rigtColumnWidth});\n      margin-top: ${theme.spacing.sm};\n    `,\n    comment: css`\n      overflow-wrap: break-word;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.regular};\n      margin-top: ${theme.spacing.xs};\n    `,\n    commentButtonRow: css`\n      > * {\n        margin-right: ${theme.spacing.sm};\n      }\n    `,\n    textArea: css`\n      width: 100%;\n    `,\n    runButton: css`\n      max-width: ${rigtColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      button {\n        height: auto;\n        padding: ${theme.spacing.xs} ${theme.spacing.md};\n        line-height: 1.4;\n        span {\n          white-space: normal !important;\n        }\n      }\n    `,\n  };\n});\n\nexport function RichHistoryCard(props: Props) {\n  const {\n    query,\n    dsImg,\n    isRemoved,\n    updateRichHistory,\n    changeDatasource,\n    exploreId,\n    datasourceInstance,\n    setQueries,\n  } = props;\n  const [activeUpdateComment, setActiveUpdateComment] = useState(false);\n  const [comment, setComment] = useState<string | undefined>(query.comment);\n  const [queryDsInstance, setQueryDsInstance] = useState<DataSourceApi | undefined>(undefined);\n\n  useEffect(() => {\n    const getQueryDsInstance = async () => {\n      const ds = await getDataSourceSrv().get(query.datasourceName);\n      setQueryDsInstance(ds);\n    };\n\n    getQueryDsInstance();\n  }, [query.datasourceName]);\n\n  const theme = useTheme();\n  const styles = getStyles(theme, isRemoved);\n\n  const onRunQuery = async () => {\n    const queriesToRun = query.queries;\n    if (query.datasourceName !== datasourceInstance?.name) {\n      await changeDatasource(exploreId, query.datasourceName, { importQueries: true });\n      setQueries(exploreId, queriesToRun);\n    } else {\n      setQueries(exploreId, queriesToRun);\n    }\n  };\n\n  const onCopyQuery = () => {\n    const queriesToCopy = query.queries.map((q) => createQueryText(q, queryDsInstance)).join('\\n');\n    copyStringToClipboard(queriesToCopy);\n    dispatch(notifyApp(createSuccessNotification('Query copied to clipboard')));\n  };\n\n  const onCreateShortLink = async () => {\n    const link = createUrlFromRichHistory(query);\n    await createAndCopyShortLink(link);\n  };\n\n  const onDeleteQuery = () => {\n    // For starred queries, we want confirmation. For non-starred, we don't.\n    if (query.starred) {\n      appEvents.publish(\n        new ShowConfirmModalEvent({\n          title: 'Delete',\n          text: 'Are you sure you want to permanently delete your starred query?',\n          yesText: 'Delete',\n          icon: 'trash-alt',\n          onConfirm: () => {\n            updateRichHistory(query.ts, 'delete');\n            dispatch(notifyApp(createSuccessNotification('Query deleted')));\n          },\n        })\n      );\n    } else {\n      updateRichHistory(query.ts, 'delete');\n      dispatch(notifyApp(createSuccessNotification('Query deleted')));\n    }\n  };\n\n  const onStarrQuery = () => {\n    updateRichHistory(query.ts, 'starred');\n  };\n\n  const toggleActiveUpdateComment = () => setActiveUpdateComment(!activeUpdateComment);\n\n  const onUpdateComment = () => {\n    updateRichHistory(query.ts, 'comment', comment);\n    setActiveUpdateComment(false);\n  };\n\n  const onCancelUpdateComment = () => {\n    setActiveUpdateComment(false);\n    setComment(query.comment);\n  };\n\n  const onKeyDown = (keyEvent: React.KeyboardEvent) => {\n    if (keyEvent.key === 'Enter' && (keyEvent.shiftKey || keyEvent.ctrlKey)) {\n      onUpdateComment();\n    }\n\n    if (keyEvent.key === 'Escape') {\n      onCancelUpdateComment();\n    }\n  };\n\n  const updateComment = (\n    <div className={styles.updateCommentContainer} aria-label={comment ? 'Update comment form' : 'Add comment form'}>\n      <TextArea\n        value={comment}\n        placeholder={comment ? undefined : 'An optional description of what the query does.'}\n        onChange={(e) => setComment(e.currentTarget.value)}\n        className={styles.textArea}\n      />\n      <div className={styles.commentButtonRow}>\n        <Button onClick={onUpdateComment} aria-label=\"Submit button\">\n          Save comment\n        </Button>\n        <Button variant=\"secondary\" onClick={onCancelUpdateComment}>\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n\n  const queryActionButtons = (\n    <div className={styles.queryActionButtons}>\n      <IconButton\n        name=\"comment-alt\"\n        onClick={toggleActiveUpdateComment}\n        title={query.comment?.length > 0 ? 'Edit comment' : 'Add comment'}\n      />\n      <IconButton name=\"copy\" onClick={onCopyQuery} title=\"Copy query to clipboard\" />\n      {!isRemoved && (\n        <IconButton name=\"share-alt\" onClick={onCreateShortLink} title=\"Copy shortened link to clipboard\" />\n      )}\n      <IconButton name=\"trash-alt\" title={'Delete query'} onClick={onDeleteQuery} />\n      <IconButton\n        name={query.starred ? 'favorite' : 'star'}\n        iconType={query.starred ? 'mono' : 'default'}\n        onClick={onStarrQuery}\n        title={query.starred ? 'Unstar query' : 'Star query'}\n      />\n    </div>\n  );\n\n  return (\n    <div className={styles.queryCard} onKeyDown={onKeyDown}>\n      <div className={styles.cardRow}>\n        <div className={styles.datasourceContainer}>\n          <img src={dsImg} aria-label=\"Data source icon\" />\n          <div aria-label=\"Data source name\">\n            {isRemoved ? 'Data source does not exist anymore' : query.datasourceName}\n          </div>\n        </div>\n        {queryActionButtons}\n      </div>\n      <div className={cx(styles.cardRow)}>\n        <div className={styles.queryContainer}>\n          {query.queries.map((q, i) => {\n            const queryText = createQueryText(q, queryDsInstance);\n            return (\n              <div aria-label=\"Query text\" key={`${q}-${i}`} className={styles.queryRow}>\n                {queryText}\n              </div>\n            );\n          })}\n          {!activeUpdateComment && query.comment && (\n            <div aria-label=\"Query comment\" className={styles.comment}>\n              {query.comment}\n            </div>\n          )}\n          {activeUpdateComment && updateComment}\n        </div>\n        {!activeUpdateComment && (\n          <div className={styles.runButton}>\n            <Button variant=\"secondary\" onClick={onRunQuery} disabled={isRemoved}>\n              {datasourceInstance?.name === query.datasourceName ? 'Run query' : 'Switch data source and run query'}\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const { datasourceInstance } = explore[exploreId]!;\n  return {\n    exploreId,\n    datasourceInstance,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  updateRichHistory,\n  setQueries,\n};\n\nexport default hot(module)(connect(mapStateToProps, mapDispatchToProps)(RichHistoryCard));\n","// Libraries\nimport React from 'react';\nimport { Resizable, ResizeCallback } from 're-resizable';\nimport { css, cx, keyframes } from '@emotion/css';\n\n// Services & Utils\nimport { stylesFactory, useTheme2 } from '@grafana/ui';\n\n// Types\nimport { GrafanaTheme2 } from '@grafana/data';\n\nconst drawerSlide = keyframes`\n  0% {\n    transform: translateY(400px);\n  }\n\n  100% {\n    transform: translateY(0px);\n  }\n`;\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      position: fixed !important;\n      bottom: 0;\n      background: ${theme.colors.background.primary};\n      border-top: 1px solid ${theme.colors.border.weak};\n      margin: ${theme.spacing(0, -2, 0, -2)};\n      box-shadow: ${theme.shadows.z3};\n      z-index: ${theme.zIndex.sidemenu};\n    `,\n    drawerActive: css`\n      opacity: 1;\n      animation: 0.5s ease-out ${drawerSlide};\n    `,\n    rzHandle: css`\n      background: ${theme.colors.secondary.main};\n      transition: 0.3s background ease-in-out;\n      position: relative;\n      width: 200px !important;\n      height: 7px !important;\n      left: calc(50% - 100px) !important;\n      top: -4px !important;\n      cursor: grab;\n      border-radius: 4px;\n      &:hover {\n        background: ${theme.colors.secondary.shade};\n      }\n    `,\n  };\n});\n\nexport interface Props {\n  width: number;\n  children: React.ReactNode;\n  onResize?: ResizeCallback;\n}\n\nexport function ExploreDrawer(props: Props) {\n  const { width, children, onResize } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const drawerWidth = `${width + 31.5}px`;\n\n  return (\n    <Resizable\n      className={cx(styles.container, styles.drawerActive)}\n      defaultSize={{ width: drawerWidth, height: '400px' }}\n      handleClasses={{ top: styles.rzHandle }}\n      enable={{\n        top: true,\n        right: false,\n        bottom: false,\n        left: false,\n        topRight: false,\n        bottomRight: false,\n        bottomLeft: false,\n        topLeft: false,\n      }}\n      maxHeight=\"100vh\"\n      maxWidth={drawerWidth}\n      minWidth={drawerWidth}\n      onResize={onResize}\n    >\n      {children}\n    </Resizable>\n  );\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Services\nimport { getAngularLoader, AngularComponent } from '@grafana/runtime';\n\n// Types\nimport { DataQuery, TimeRange, EventBusExtended } from '@grafana/data';\nimport 'app/features/plugins/plugin_loader';\n\ninterface QueryEditorProps {\n  error?: any;\n  datasource: any;\n  onExecuteQuery?: () => void;\n  onQueryChange?: (value: DataQuery) => void;\n  initialQuery: DataQuery;\n  exploreEvents: EventBusExtended;\n  range: TimeRange;\n  textEditModeEnabled?: boolean;\n}\n\nexport default class QueryEditor extends PureComponent<QueryEditorProps, any> {\n  element: any;\n  component: AngularComponent;\n  angularScope: any;\n\n  async componentDidMount() {\n    if (!this.element) {\n      return;\n    }\n\n    const { datasource, initialQuery, exploreEvents, range } = this.props;\n\n    const loader = getAngularLoader();\n    const template = '<plugin-component type=\"query-ctrl\"> </plugin-component>';\n    const target = { datasource: datasource.name, ...initialQuery };\n    const scopeProps = {\n      ctrl: {\n        datasource,\n        target,\n        range,\n        refresh: () => {\n          setTimeout(() => {\n            // the \"hide\" attribute of the quries can be changed from the \"outside\",\n            // it will be applied to \"this.props.initialQuery.hide\", but not to \"target.hide\".\n            // so we have to apply it.\n            if (target.hide !== this.props.initialQuery.hide) {\n              target.hide = this.props.initialQuery.hide;\n            }\n            this.props.onQueryChange?.(target);\n            this.props.onExecuteQuery?.();\n          }, 1);\n        },\n        onQueryChange: () => {\n          setTimeout(() => {\n            this.props.onQueryChange?.(target);\n          }, 1);\n        },\n        events: exploreEvents,\n        panel: { datasource, targets: [target] },\n        dashboard: {},\n      },\n    };\n\n    this.component = loader.load(this.element, scopeProps, template);\n    this.angularScope = scopeProps.ctrl;\n\n    setTimeout(() => {\n      this.props.onQueryChange?.(target);\n      this.props.onExecuteQuery?.();\n    }, 1);\n  }\n\n  componentDidUpdate(prevProps: QueryEditorProps) {\n    const hasToggledEditorMode = prevProps.textEditModeEnabled !== this.props.textEditModeEnabled;\n    const hasNewError = prevProps.error !== this.props.error;\n\n    if (this.component) {\n      if (hasToggledEditorMode && this.angularScope && this.angularScope.toggleEditorMode) {\n        this.angularScope.toggleEditorMode();\n      }\n\n      if (this.angularScope) {\n        this.angularScope.range = this.props.range;\n      }\n\n      if (hasNewError || hasToggledEditorMode) {\n        // Some query controllers listen to data error events and need a digest\n        // for some reason this needs to be done in next tick\n        setTimeout(this.component.digest);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.component) {\n      this.component.destroy();\n    }\n  }\n\n  render() {\n    return <div className=\"gf-form-query\" ref={(element) => (this.element = element)} style={{ width: '100%' }} />;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\nimport { DataFrame, TimeRange, ValueLinkConfig } from '@grafana/data';\nimport { Collapse, Table } from '@grafana/ui';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport { splitOpen } from './state/main';\nimport { config } from 'app/core/config';\nimport { PANEL_BORDER } from 'app/core/constants';\nimport { MetaInfoText } from './MetaInfoText';\nimport { FilterItem } from '@grafana/ui/src/components/Table/types';\nimport { getFieldLinksForExplore } from './utils/links';\n\ninterface TableContainerProps {\n  ariaLabel?: string;\n  exploreId: ExploreId;\n  loading: boolean;\n  width: number;\n  onCellFilterAdded?: (filter: FilterItem) => void;\n  tableResult?: DataFrame;\n  splitOpen: typeof splitOpen;\n  range: TimeRange;\n}\n\nexport class TableContainer extends PureComponent<TableContainerProps> {\n  getTableHeight() {\n    const { tableResult } = this.props;\n\n    if (!tableResult || tableResult.length === 0) {\n      return 200;\n    }\n\n    // tries to estimate table height\n    return Math.max(Math.min(600, tableResult.length * 35) + 35);\n  }\n\n  render() {\n    const { loading, onCellFilterAdded, tableResult, width, splitOpen, range, ariaLabel } = this.props;\n\n    const height = this.getTableHeight();\n    const tableWidth = width - config.theme.panelPadding * 2 - PANEL_BORDER;\n    const hasTableResult = tableResult?.length;\n\n    if (tableResult && tableResult.length) {\n      // Bit of code smell here. We need to add links here to the frame modifying the frame on every render.\n      // Should work fine in essence but still not the ideal way to pass props. In logs container we do this\n      // differently and sidestep this getLinks API on a dataframe\n      for (const field of tableResult.fields) {\n        field.getLinks = (config: ValueLinkConfig) => {\n          return getFieldLinksForExplore({ field, rowIndex: config.valueRowIndex!, splitOpenFn: splitOpen, range });\n        };\n      }\n    }\n\n    return (\n      <Collapse label=\"Table\" loading={loading} isOpen>\n        {hasTableResult ? (\n          <Table\n            ariaLabel={ariaLabel}\n            data={tableResult!}\n            width={tableWidth}\n            height={height}\n            onCellFilterAdded={onCellFilterAdded}\n          />\n        ) : (\n          <MetaInfoText metaItems={[{ value: '0 series returned' }]} />\n        )}\n      </Collapse>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const { loading: loadingInState, tableResult, range } = item;\n  const loading = tableResult && tableResult.length > 0 ? false : loadingInState;\n  return { loading, tableResult, range };\n}\n\nconst mapDispatchToProps = {\n  splitOpen,\n};\n\nexport default hot(module)(connect(mapStateToProps, mapDispatchToProps)(TableContainer));\n"],"sourceRoot":""}