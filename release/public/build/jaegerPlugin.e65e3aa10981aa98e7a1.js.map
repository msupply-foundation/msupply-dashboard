{"version":3,"file":"jaegerPlugin.e65e3aa10981aa98e7a1.js","mappings":"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","sources":["webpack://grafana/./public/app/core/components/NodeGraphSettings.tsx","webpack://grafana/./public/app/core/components/TraceToLogsSettings.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/graphTransform.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/util.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/components/AdvancedOptions.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/components/SearchForm.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/datasource.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/components/ConfigEditor.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/module.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/components/QueryEditor.tsx","webpack://grafana/./.yarn/cache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/body_parser.js","webpack://grafana/./.yarn/cache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/body_parser_stream.js","webpack://grafana/./.yarn/cache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/logfmt_parser.js","webpack://grafana/./.yarn/cache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/logger.js","webpack://grafana/./.yarn/cache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/request_logger.js","webpack://grafana/./.yarn/cache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/streaming.js","webpack://grafana/./.yarn/cache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/stringify.js","webpack://grafana/./.yarn/cache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/logfmt.js","webpack://grafana/./.yarn/cache/split-npm-0.2.10-a950dc8c82-9eb1195608.zip/node_modules/split/index.js","webpack://grafana/./.yarn/cache/through-npm-2.3.8-df5f72a16e-a38c3e0598.zip/node_modules/through/index.js"],"sourcesContent":["import React from 'react';\nimport { css } from '@emotion/css';\nimport {\n  DataSourceJsonData,\n  DataSourcePluginOptionsEditorProps,\n  GrafanaTheme,\n  updateDatasourcePluginJsonDataOption,\n} from '@grafana/data';\nimport { InlineField, InlineFieldRow, InlineSwitch, useStyles } from '@grafana/ui';\n\nexport interface NodeGraphOptions {\n  enabled?: boolean;\n}\n\nexport interface NodeGraphData extends DataSourceJsonData {\n  nodeGraph?: NodeGraphOptions;\n}\n\ninterface Props extends DataSourcePluginOptionsEditorProps<NodeGraphData> {}\n\nexport function NodeGraphSettings({ options, onOptionsChange }: Props) {\n  const styles = useStyles(getStyles);\n\n  return (\n    <div className={styles.container}>\n      <h3 className=\"page-heading\">Node Graph</h3>\n      <InlineFieldRow className={styles.row}>\n        <InlineField\n          tooltip=\"Enables the Node Graph visualization in the trace viewer.\"\n          label=\"Enable Node Graph\"\n          labelWidth={26}\n        >\n          <InlineSwitch\n            id=\"enableNodeGraph\"\n            value={options.jsonData.nodeGraph?.enabled}\n            onChange={(event: React.SyntheticEvent<HTMLInputElement>) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'nodeGraph', {\n                ...options.jsonData.nodeGraph,\n                enabled: event.currentTarget.checked,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  container: css`\n    label: container;\n    width: 100%;\n  `,\n  row: css`\n    label: row;\n    align-items: baseline;\n  `,\n});\n","import { css } from '@emotion/css';\nimport {\n  DataSourceJsonData,\n  DataSourcePluginOptionsEditorProps,\n  GrafanaTheme,\n  updateDatasourcePluginJsonDataOption,\n} from '@grafana/data';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport { InlineField, InlineFieldRow, Input, TagsInput, useStyles, InlineSwitch } from '@grafana/ui';\nimport React from 'react';\n\nexport interface TraceToLogsOptions {\n  datasourceUid?: string;\n  tags?: string[];\n  spanStartTimeShift?: string;\n  spanEndTimeShift?: string;\n  filterByTraceID?: boolean;\n  filterBySpanID?: boolean;\n  lokiSearch?: boolean;\n}\n\nexport interface TraceToLogsData extends DataSourceJsonData {\n  tracesToLogs?: TraceToLogsOptions;\n}\n\ninterface Props extends DataSourcePluginOptionsEditorProps<TraceToLogsData> {}\n\nexport function TraceToLogsSettings({ options, onOptionsChange }: Props) {\n  const styles = useStyles(getStyles);\n\n  return (\n    <div className={css({ width: '100%' })}>\n      <h3 className=\"page-heading\">Trace to logs</h3>\n\n      <div className={styles.infoText}>\n        Trace to logs lets you navigate from a trace span to the selected data source&apos;s log.\n      </div>\n\n      <InlineFieldRow>\n        <InlineField tooltip=\"The data source the trace is going to navigate to\" label=\"Data source\" labelWidth={26}>\n          <DataSourcePicker\n            inputId=\"trace-to-logs-data-source-picker\"\n            pluginId=\"loki\"\n            current={options.jsonData.tracesToLogs?.datasourceUid}\n            noDefault={true}\n            width={40}\n            onChange={(ds) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                datasourceUid: ds.uid,\n                tags: options.jsonData.tracesToLogs?.tags,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField\n          tooltip=\"Tags that will be used in the Loki query. Default tags: 'cluster', 'hostname', 'namespace', 'pod'\"\n          label=\"Tags\"\n          labelWidth={26}\n        >\n          <TagsInput\n            tags={options.jsonData.tracesToLogs?.tags}\n            width={40}\n            onChange={(tags) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                datasourceUid: options.jsonData.tracesToLogs?.datasourceUid,\n                tags: tags,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField\n          label=\"Span start time shift\"\n          labelWidth={26}\n          grow\n          tooltip=\"Shifts the start time of the span. Default 0 (Time units can be used here, for example: 5s, 1m, 3h)\"\n        >\n          <Input\n            type=\"text\"\n            placeholder=\"1h\"\n            width={40}\n            onChange={(v) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                ...options.jsonData.tracesToLogs,\n                spanStartTimeShift: v.currentTarget.value,\n              })\n            }\n            value={options.jsonData.tracesToLogs?.spanStartTimeShift || ''}\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField\n          label=\"Span end time shift\"\n          labelWidth={26}\n          grow\n          tooltip=\"Shifts the end time of the span. Default 0 Time units can be used here, for example: 5s, 1m, 3h\"\n        >\n          <Input\n            type=\"text\"\n            placeholder=\"1h\"\n            width={40}\n            onChange={(v) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                ...options.jsonData.tracesToLogs,\n                spanEndTimeShift: v.currentTarget.value,\n              })\n            }\n            value={options.jsonData.tracesToLogs?.spanEndTimeShift || ''}\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField\n          label=\"Filter by Trace ID\"\n          labelWidth={26}\n          grow\n          tooltip=\"Filters logs by Trace ID. Appends '|=<trace id>' to the query.\"\n        >\n          <InlineSwitch\n            id=\"filterByTraceID\"\n            value={options.jsonData.tracesToLogs?.filterByTraceID}\n            onChange={(event: React.SyntheticEvent<HTMLInputElement>) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                ...options.jsonData.tracesToLogs,\n                filterByTraceID: event.currentTarget.checked,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField\n          label=\"Filter by Span ID\"\n          labelWidth={26}\n          grow\n          tooltip=\"Filters logs by Span ID. Appends '|=<span id>' to the query.\"\n        >\n          <InlineSwitch\n            id=\"filterBySpanID\"\n            value={options.jsonData.tracesToLogs?.filterBySpanID}\n            onChange={(event: React.SyntheticEvent<HTMLInputElement>) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                ...options.jsonData.tracesToLogs,\n                filterBySpanID: event.currentTarget.checked,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Loki Search\" labelWidth={26} grow tooltip=\"Use this logs data source to search for traces.\">\n          <InlineSwitch\n            id=\"lokiSearch\"\n            defaultChecked={true}\n            value={options.jsonData.tracesToLogs?.lokiSearch}\n            onChange={(event: React.SyntheticEvent<HTMLInputElement>) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                ...options.jsonData.tracesToLogs,\n                lokiSearch: event.currentTarget.checked,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  infoText: css`\n    padding-bottom: ${theme.spacing.md};\n    color: ${theme.colors.textSemiWeak};\n  `,\n});\n","import { DataFrame, NodeGraphDataFrameFieldNames as Fields } from '@grafana/data';\nimport { Span, TraceResponse } from './types';\nimport { getNonOverlappingDuration, getStats, makeFrames, makeSpanMap } from '../../../core/utils/tracing';\n\ninterface Node {\n  [Fields.id]: string;\n  [Fields.title]: string;\n  [Fields.subTitle]: string;\n  [Fields.mainStat]: string;\n  [Fields.secondaryStat]: string;\n  [Fields.color]: number;\n}\n\ninterface Edge {\n  [Fields.id]: string;\n  [Fields.target]: string;\n  [Fields.source]: string;\n}\n\nexport function createGraphFrames(data: TraceResponse): DataFrame[] {\n  const { nodes, edges } = convertTraceToGraph(data);\n  const [nodesFrame, edgesFrame] = makeFrames();\n\n  for (const node of nodes) {\n    nodesFrame.add(node);\n  }\n\n  for (const edge of edges) {\n    edgesFrame.add(edge);\n  }\n\n  return [nodesFrame, edgesFrame];\n}\n\nfunction convertTraceToGraph(data: TraceResponse): { nodes: Node[]; edges: Edge[] } {\n  const nodes: Node[] = [];\n  const edges: Edge[] = [];\n\n  const traceDuration = findTraceDuration(data.spans);\n\n  const spanMap = makeSpanMap((index) => {\n    if (index >= data.spans.length) {\n      return undefined;\n    }\n    const span = data.spans[index];\n    return {\n      span,\n      id: span.spanID,\n      parentIds: span.references?.filter((r) => r.refType === 'CHILD_OF').map((r) => r.spanID) || [],\n    };\n  });\n\n  for (const span of data.spans) {\n    const process = data.processes[span.processID];\n\n    const ranges: Array<[number, number]> = spanMap[span.spanID].children.map((c) => {\n      const span = spanMap[c].span;\n      return [span.startTime, span.startTime + span.duration];\n    });\n    const childrenDuration = getNonOverlappingDuration(ranges);\n    const selfDuration = span.duration - childrenDuration;\n    const stats = getStats(span.duration / 1000, traceDuration / 1000, selfDuration / 1000);\n\n    nodes.push({\n      [Fields.id]: span.spanID,\n      [Fields.title]: process?.serviceName ?? '',\n      [Fields.subTitle]: span.operationName,\n      [Fields.mainStat]: stats.main,\n      [Fields.secondaryStat]: stats.secondary,\n      [Fields.color]: selfDuration / traceDuration,\n    });\n\n    const parentSpanID = span.references?.find((r) => r.refType === 'CHILD_OF')?.spanID;\n    // Sometimes some span can be missing. Don't add edges for those.\n    if (parentSpanID && spanMap[parentSpanID].span) {\n      edges.push({\n        [Fields.id]: parentSpanID + '--' + span.spanID,\n        [Fields.target]: span.spanID,\n        [Fields.source]: parentSpanID,\n      });\n    }\n  }\n\n  return { nodes, edges };\n}\n\n/**\n * Get the duration of the whole trace as it isn't a part of the response data.\n * Note: Seems like this should be the same as just longest span, but this is probably safer.\n */\nfunction findTraceDuration(spans: Span[]): number {\n  let traceEndTime = 0;\n  let traceStartTime = Infinity;\n\n  for (const span of spans) {\n    if (span.startTime < traceStartTime) {\n      traceStartTime = span.startTime;\n    }\n\n    if (span.startTime + span.duration > traceEndTime) {\n      traceEndTime = span.startTime + span.duration;\n    }\n  }\n\n  return traceEndTime - traceStartTime;\n}\n","import logfmt from 'logfmt';\n\nexport function convertTagsLogfmt(tags: string | undefined) {\n  if (!tags) {\n    return '';\n  }\n  const data: any = logfmt.parse(tags);\n  Object.keys(data).forEach((key) => {\n    const value = data[key];\n    if (typeof value !== 'string') {\n      data[key] = String(value);\n    }\n  });\n  return JSON.stringify(data);\n}\n\nexport function transformToLogfmt(tags: string | undefined) {\n  if (!tags) {\n    return '';\n  }\n  try {\n    return logfmt.stringify(JSON.parse(tags));\n  } catch {\n    return tags;\n  }\n}\n","import { css } from '@emotion/css';\nimport { GrafanaTheme } from '@grafana/data';\nimport { Icon, InlineField, InlineFieldRow, InlineLabel, Input, useStyles } from '@grafana/ui';\nimport React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { JaegerQuery } from '../types';\n\nconst durationPlaceholder = 'e.g. 1.2s, 100ms, 500us';\n\ntype Props = {\n  query: JaegerQuery;\n  onChange: (value: JaegerQuery) => void;\n};\n\nexport function AdvancedOptions({ query, onChange }: Props) {\n  const [showAdvancedOptions, setShowAdvancedOptions] = useState(false);\n  const styles = useStyles(getStyles);\n\n  return (\n    <div>\n      <InlineFieldRow>\n        <div className={styles.advancedOptionsContainer} onClick={() => setShowAdvancedOptions(!showAdvancedOptions)}>\n          <InlineLabel as=\"div\">\n            Advanced options{' '}\n            <Icon className={showAdvancedOptions ? styles.angleUp : styles.angleDown} name=\"angle-down\" />\n          </InlineLabel>\n        </div>\n      </InlineFieldRow>\n      <CSSTransition\n        in={showAdvancedOptions}\n        mountOnEnter={true}\n        unmountOnExit={true}\n        timeout={300}\n        classNames={styles}\n      >\n        <div>\n          <InlineFieldRow>\n            <InlineField label=\"Min Duration\" labelWidth={21} grow>\n              <Input\n                id=\"minDuration\"\n                name=\"minDuration\"\n                value={query.minDuration || ''}\n                placeholder={durationPlaceholder}\n                onChange={(v) =>\n                  onChange({\n                    ...query,\n                    minDuration: v.currentTarget.value,\n                  })\n                }\n              />\n            </InlineField>\n          </InlineFieldRow>\n          <InlineFieldRow>\n            <InlineField label=\"Max Duration\" labelWidth={21} grow>\n              <Input\n                id=\"maxDuration\"\n                name=\"maxDuration\"\n                value={query.maxDuration || ''}\n                placeholder={durationPlaceholder}\n                onChange={(v) =>\n                  onChange({\n                    ...query,\n                    maxDuration: v.currentTarget.value,\n                  })\n                }\n              />\n            </InlineField>\n          </InlineFieldRow>\n          <InlineFieldRow>\n            <InlineField label=\"Limit\" labelWidth={21} grow tooltip=\"Maximum numbers of returned results\">\n              <Input\n                id=\"limit\"\n                name=\"limit\"\n                value={query.limit || ''}\n                type=\"number\"\n                onChange={(v) =>\n                  onChange({\n                    ...query,\n                    limit: v.currentTarget.value ? parseInt(v.currentTarget.value, 10) : undefined,\n                  })\n                }\n              />\n            </InlineField>\n          </InlineFieldRow>\n        </div>\n      </CSSTransition>\n    </div>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme) {\n  return {\n    advancedOptionsContainer: css`\n      margin: 0 ${theme.spacing.xs} ${theme.spacing.xs} 0;\n      width: 100%;\n      cursor: pointer;\n    `,\n    enter: css`\n      label: enter;\n      height: 0;\n      opacity: 0;\n    `,\n    enterActive: css`\n      label: enterActive;\n      height: 108px;\n      opacity: 1;\n      transition: height 300ms ease, opacity 300ms ease;\n    `,\n    exit: css`\n      label: exit;\n      height: 108px;\n      opacity: 1;\n    `,\n    exitActive: css`\n      label: exitActive;\n      height: 0;\n      opacity: 0;\n      transition: height 300ms ease, opacity 300ms ease;\n    `,\n    angleUp: css`\n      transform: rotate(-180deg);\n      transition: transform 300ms;\n    `,\n    angleDown: css`\n      transform: rotate(0deg);\n      transition: transform 300ms;\n    `,\n  };\n}\n","import { css } from '@emotion/css';\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField, InlineFieldRow, Input, Select } from '@grafana/ui';\nimport React, { useEffect, useState } from 'react';\nimport { JaegerDatasource } from '../datasource';\nimport { JaegerQuery } from '../types';\nimport { transformToLogfmt } from '../util';\nimport { AdvancedOptions } from './AdvancedOptions';\n\ntype Props = {\n  datasource: JaegerDatasource;\n  query: JaegerQuery;\n  onChange: (value: JaegerQuery) => void;\n};\n\nexport const ALL_OPERATIONS_KEY = 'All';\nconst allOperationsOption: SelectableValue<string> = {\n  label: ALL_OPERATIONS_KEY,\n  value: undefined,\n};\n\nexport function SearchForm({ datasource, query, onChange }: Props) {\n  const [serviceOptions, setServiceOptions] = useState<Array<SelectableValue<string>>>();\n  const [operationOptions, setOperationOptions] = useState<Array<SelectableValue<string>>>();\n\n  useEffect(() => {\n    const getServices = async () => {\n      const services = await loadServices({\n        dataSource: datasource,\n        url: '/api/services',\n        notFoundLabel: 'No service found',\n      });\n      setServiceOptions(services);\n    };\n    getServices();\n  }, [datasource]);\n\n  useEffect(() => {\n    const getOperations = async () => {\n      const operations = await loadServices({\n        dataSource: datasource,\n        url: `/api/services/${encodeURIComponent(query.service!)}/operations`,\n        notFoundLabel: 'No operation found',\n      });\n      setOperationOptions([allOperationsOption, ...operations]);\n    };\n    if (query.service) {\n      getOperations();\n    }\n  }, [datasource, query.service]);\n\n  return (\n    <div className={css({ maxWidth: '500px' })}>\n      <InlineFieldRow>\n        <InlineField label=\"Service\" labelWidth={14} grow>\n          <Select\n            inputId=\"service\"\n            menuShouldPortal\n            options={serviceOptions}\n            value={serviceOptions?.find((v) => v.value === query.service) || null}\n            onChange={(v) => {\n              onChange({\n                ...query,\n                service: v.value!,\n                operation: query.service !== v.value ? undefined : query.operation,\n              });\n            }}\n            menuPlacement=\"bottom\"\n            isClearable\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Operation\" labelWidth={14} grow disabled={!query.service}>\n          <Select\n            inputId=\"operation\"\n            menuShouldPortal\n            options={operationOptions}\n            value={operationOptions?.find((v) => v.value === query.operation) || null}\n            onChange={(v) =>\n              onChange({\n                ...query,\n                operation: v.value!,\n              })\n            }\n            menuPlacement=\"bottom\"\n            isClearable\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Tags\" labelWidth={14} grow>\n          <Input\n            id=\"tags\"\n            value={transformToLogfmt(query.tags)}\n            placeholder=\"http.status_code=200 error=true\"\n            onChange={(v) =>\n              onChange({\n                ...query,\n                tags: v.currentTarget.value,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <AdvancedOptions query={query} onChange={onChange} />\n    </div>\n  );\n}\n\ntype Options = { dataSource: JaegerDatasource; url: string; notFoundLabel: string };\n\nconst loadServices = async ({ dataSource, url, notFoundLabel }: Options): Promise<Array<SelectableValue<string>>> => {\n  const services: string[] | null = await dataSource.metadataRequest(url);\n\n  if (!services) {\n    return [{ label: notFoundLabel, value: notFoundLabel }];\n  }\n\n  const serviceOptions: SelectableValue[] = services.sort().map((service) => ({\n    label: service,\n    value: service,\n  }));\n\n  return serviceOptions;\n};\n","import { identity, omit, pick, pickBy } from 'lodash';\nimport { lastValueFrom, Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  DataSourceJsonData,\n  dateMath,\n  DateTime,\n  FieldType,\n  MutableDataFrame,\n} from '@grafana/data';\nimport { BackendSrvRequest, getBackendSrv, getTemplateSrv } from '@grafana/runtime';\n\nimport { serializeParams } from 'app/core/utils/fetch';\nimport { getTimeSrv, TimeSrv } from 'app/features/dashboard/services/TimeSrv';\nimport { createTableFrame, createTraceFrame } from './responseTransform';\nimport { createGraphFrames } from './graphTransform';\nimport { JaegerQuery } from './types';\nimport { convertTagsLogfmt } from './util';\nimport { ALL_OPERATIONS_KEY } from './components/SearchForm';\nimport { NodeGraphOptions } from 'app/core/components/NodeGraphSettings';\n\nexport interface JaegerJsonData extends DataSourceJsonData {\n  nodeGraph?: NodeGraphOptions;\n}\n\nexport class JaegerDatasource extends DataSourceApi<JaegerQuery, JaegerJsonData> {\n  uploadedJson: string | ArrayBuffer | null = null;\n  nodeGraph?: NodeGraphOptions;\n  constructor(\n    private instanceSettings: DataSourceInstanceSettings<JaegerJsonData>,\n    private readonly timeSrv: TimeSrv = getTimeSrv()\n  ) {\n    super(instanceSettings);\n    this.nodeGraph = instanceSettings.jsonData.nodeGraph;\n  }\n\n  async metadataRequest(url: string, params?: Record<string, any>): Promise<any> {\n    const res = await lastValueFrom(this._request(url, params, { hideFromInspector: true }));\n    return res.data.data;\n  }\n\n  query(options: DataQueryRequest<JaegerQuery>): Observable<DataQueryResponse> {\n    // At this moment we expect only one target. In case we somehow change the UI to be able to show multiple\n    // traces at one we need to change this.\n    const target: JaegerQuery = options.targets[0];\n    if (!target) {\n      return of({ data: [emptyTraceDataFrame] });\n    }\n\n    if (target.queryType !== 'search' && target.query) {\n      return this._request(`/api/traces/${encodeURIComponent(target.query)}`).pipe(\n        map((response) => {\n          const traceData = response?.data?.data?.[0];\n          if (!traceData) {\n            return { data: [emptyTraceDataFrame] };\n          }\n          let data = [createTraceFrame(traceData)];\n          if (this.nodeGraph?.enabled) {\n            data.push(...createGraphFrames(traceData));\n          }\n          return {\n            data,\n          };\n        })\n      );\n    }\n\n    if (target.queryType === 'upload') {\n      if (!this.uploadedJson) {\n        return of({ data: [] });\n      }\n\n      try {\n        const traceData = JSON.parse(this.uploadedJson as string).data[0];\n        let data = [createTraceFrame(traceData)];\n        if (this.nodeGraph?.enabled) {\n          data.push(...createGraphFrames(traceData));\n        }\n        return of({ data });\n      } catch (error) {\n        return of({ error: { message: 'JSON is not valid Jaeger format' }, data: [] });\n      }\n    }\n\n    let jaegerQuery = pick(target, ['operation', 'service', 'tags', 'minDuration', 'maxDuration', 'limit']);\n    // remove empty properties\n    jaegerQuery = pickBy(jaegerQuery, identity);\n    if (jaegerQuery.tags) {\n      jaegerQuery = {\n        ...jaegerQuery,\n        tags: convertTagsLogfmt(getTemplateSrv().replace(jaegerQuery.tags, options.scopedVars)),\n      };\n    }\n\n    if (jaegerQuery.operation === ALL_OPERATIONS_KEY) {\n      jaegerQuery = omit(jaegerQuery, 'operation');\n    }\n\n    // TODO: this api is internal, used in jaeger ui. Officially they have gRPC api that should be used.\n    return this._request(`/api/traces`, {\n      ...jaegerQuery,\n      ...this.getTimeRange(),\n      lookback: 'custom',\n    }).pipe(\n      map((response) => {\n        return {\n          data: [createTableFrame(response.data.data, this.instanceSettings)],\n        };\n      })\n    );\n  }\n\n  async testDatasource(): Promise<any> {\n    return lastValueFrom(\n      this._request('/api/services').pipe(\n        map((res) => {\n          const values: any[] = res?.data?.data || [];\n          const testResult =\n            values.length > 0\n              ? { status: 'success', message: 'Data source connected and services found.' }\n              : {\n                  status: 'error',\n                  message:\n                    'Data source connected, but no services received. Verify that Jaeger is configured properly.',\n                };\n          return testResult;\n        }),\n        catchError((err: any) => {\n          let message = 'Jaeger: ';\n          if (err.statusText) {\n            message += err.statusText;\n          } else {\n            message += 'Cannot connect to Jaeger';\n          }\n\n          if (err.status) {\n            message += `. ${err.status}`;\n          }\n\n          if (err.data && err.data.message) {\n            message += `. ${err.data.message}`;\n          } else if (err.data) {\n            message += `. ${JSON.stringify(err.data)}`;\n          }\n          return of({ status: 'error', message: message });\n        })\n      )\n    );\n  }\n\n  getTimeRange(): { start: number; end: number } {\n    const range = this.timeSrv.timeRange();\n    return {\n      start: getTime(range.from, false),\n      end: getTime(range.to, true),\n    };\n  }\n\n  getQueryDisplayText(query: JaegerQuery) {\n    return query.query || '';\n  }\n\n  private _request(apiUrl: string, data?: any, options?: Partial<BackendSrvRequest>): Observable<Record<string, any>> {\n    const params = data ? serializeParams(data) : '';\n    const url = `${this.instanceSettings.url}${apiUrl}${params.length ? `?${params}` : ''}`;\n    const req = {\n      ...options,\n      url,\n    };\n\n    return getBackendSrv().fetch(req);\n  }\n}\n\nfunction getTime(date: string | DateTime, roundUp: boolean) {\n  if (typeof date === 'string') {\n    date = dateMath.parse(date, roundUp)!;\n  }\n  return date.valueOf() * 1000;\n}\n\nconst emptyTraceDataFrame = new MutableDataFrame({\n  fields: [\n    {\n      name: 'trace',\n      type: FieldType.trace,\n      values: [],\n    },\n  ],\n  meta: {\n    preferredVisualisationType: 'trace',\n    custom: {\n      traceFormat: 'jaeger',\n    },\n  },\n});\n","import { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { DataSourceHttpSettings } from '@grafana/ui';\nimport { NodeGraphSettings } from 'app/core/components/NodeGraphSettings';\nimport { TraceToLogsSettings } from 'app/core/components/TraceToLogsSettings';\nimport React from 'react';\n\nexport type Props = DataSourcePluginOptionsEditorProps;\n\nexport const ConfigEditor: React.FC<Props> = ({ options, onOptionsChange }) => {\n  return (\n    <>\n      <DataSourceHttpSettings\n        defaultUrl=\"http://localhost:16686\"\n        dataSourceConfig={options}\n        showAccessOptions={false}\n        onChange={onOptionsChange}\n      />\n\n      <div className=\"gf-form-group\">\n        <TraceToLogsSettings options={options} onOptionsChange={onOptionsChange} />\n      </div>\n      <div className=\"gf-form-group\">\n        <NodeGraphSettings options={options} onOptionsChange={onOptionsChange} />\n      </div>\n    </>\n  );\n};\n","import { DataSourcePlugin } from '@grafana/data';\nimport { JaegerDatasource } from './datasource';\nimport { QueryEditor } from './components/QueryEditor';\nimport { ConfigEditor } from './components/ConfigEditor';\n\nexport const plugin = new DataSourcePlugin(JaegerDatasource).setConfigEditor(ConfigEditor).setQueryEditor(QueryEditor);\n","import { css } from '@emotion/css';\nimport { QueryEditorProps } from '@grafana/data';\nimport { FileDropzone, InlineField, InlineFieldRow, QueryField, RadioButtonGroup, useTheme2 } from '@grafana/ui';\nimport React from 'react';\nimport { JaegerDatasource } from '../datasource';\nimport { JaegerQuery, JaegerQueryType } from '../types';\nimport { SearchForm } from './SearchForm';\n\ntype Props = QueryEditorProps<JaegerDatasource, JaegerQuery>;\n\nexport function QueryEditor({ datasource, query, onChange, onRunQuery }: Props) {\n  const theme = useTheme2();\n\n  const onChangeQuery = (value: string) => {\n    const nextQuery: JaegerQuery = { ...query, query: value };\n    onChange(nextQuery);\n  };\n\n  const renderEditorBody = () => {\n    switch (query.queryType) {\n      case 'search':\n        return <SearchForm datasource={datasource} query={query} onChange={onChange} />;\n      case 'upload':\n        return (\n          <div className={css({ padding: theme.spacing(2) })}>\n            <FileDropzone\n              options={{ multiple: false }}\n              onLoad={(result) => {\n                datasource.uploadedJson = result;\n                onRunQuery();\n              }}\n            />\n          </div>\n        );\n      default:\n        return (\n          <InlineFieldRow>\n            <InlineField label=\"Trace ID\" labelWidth={14} grow>\n              <QueryField\n                query={query.query}\n                onChange={onChangeQuery}\n                onRunQuery={onRunQuery}\n                onBlur={() => {}}\n                placeholder={'Enter a Trace ID (run with Shift+Enter)'}\n                portalOrigin=\"jaeger\"\n              />\n            </InlineField>\n          </InlineFieldRow>\n        );\n    }\n  };\n\n  return (\n    <>\n      <div className={css({ width: '100%' })}>\n        <InlineFieldRow>\n          <InlineField label=\"Query type\">\n            <RadioButtonGroup<JaegerQueryType>\n              options={[\n                { value: 'search', label: 'Search' },\n                { value: undefined, label: 'TraceID' },\n                { value: 'upload', label: 'JSON file' },\n              ]}\n              value={query.queryType}\n              onChange={(v) =>\n                onChange({\n                  ...query,\n                  queryType: v,\n                })\n              }\n              size=\"md\"\n            />\n          </InlineField>\n        </InlineFieldRow>\n        {renderEditorBody()}\n      </div>\n    </>\n  );\n}\n","\n/*\nModule dependencies.\n*/\n\n/*\nJSON:\n\nParse logplex request bodies, providing the\nparsed object as `req.body`.\n\nOptions: none\n\n@param content_type {String} use when Content-Type matches this string\n@param parser {Function} parsing function takes String body and returns new body\n@return {Function}\n@api public\n*/\n\nexports = module.exports = function(options) {\n  var limit;\n  if (options == null) options = {};\n\n  return function(req, res, next) {\n    if (req._body) return next();\n    var is_mime = req.header('content-type') === options.contentType;\n    if (!is_mime) return next();\n    req._body = true;\n    req.body = req.body || {};\n    var buf;\n    buf = \"\";\n    req.setEncoding(\"utf8\");\n    req.on(\"data\", function(chunk) {\n      return buf += chunk;\n    });\n    req.on(\"end\", function() {\n      try {\n        var lines = []\n        buf.trim().split(\"\\n\").forEach(function(line){\n          lines.push(options.parser(line))\n        })\n        req.body = lines;\n      } catch (err) {\n        err.body = buf;\n        err.status = 400;\n        return next(err);\n      }\n      return next();\n    });\n  };\n};\n","var split = require('split');\nvar through = require('through');\nvar Readable = require('stream').Readable;\nvar PassThrough = require('stream').PassThrough;\nvar logfmt   = require('../logfmt');\n\nexports = module.exports = function(options){\n  if(options == null) options = {};\n  var mime = options.contentType || \"application/logplex-1\";\n\n  return function(req, res, next) {\n\n    //honor already parsed bodies\n    if (req._body) return next();\n\n    //mime-type check\n    var is_mime = req.header('content-type') === mime;\n    if (!is_mime) return next();\n    req._body = true;\n    req.body = new PassThrough({objectMode: true});\n    req.pipe(logfmt.streamParser()).pipe(req.body);\n\n    return next();\n  }\n}\n\n","exports.debug = false;\n\nexports.parse = function(line) {\n  var key = '';\n  var value = '';\n  var is_number = true;\n  var in_key    = false;\n  var in_value  = false;\n  var in_quote  = false;\n  var had_quote = false;\n  var object    = {};\n  var debug     = exports.debug;\n\n  if(line[line.length - 1] == '\\n'){\n    line = line.slice(0,line.length - 1)\n  }\n\n  for(var i=0; i <= line.length; i++){\n\n    if((line[i] == ' ' && !in_quote) || i == line.length){\n      if(in_key && key.length > 0){\n        object[key] = true;\n      }else if(in_value){\n        if(value == 'true') value = true;\n        else if(value == 'false') value = false;\n        else if(value === '' && !had_quote) value = null;\n        object[key] = value;\n        value = '';\n      }\n\n      if(i == line.length) break;\n      else {\n        in_key   = false;\n        in_value = false;\n        in_quote = false;\n        had_quote = false;\n      }\n    }\n\n    if(line[i] == '=' && !in_quote){\n      if(debug) console.log('split')\n      //split\n      in_key = false;\n      in_value = true;\n    }\n    else if(line[i] == '\\\\'){\n      i ++ ;\n      value += line[i];\n      if(debug) console.log('escape: ' + line[i])\n    }\n    else if(line[i] == '\"'){\n      had_quote = true;\n      in_quote = !in_quote;\n      if(debug) console.log('in quote: ' + in_quote)\n    }\n    else if(line[i] != ' ' && !in_value && !in_key){\n      if(debug) console.log('start key with: ' + line[i])\n      in_key = true;\n      key = line[i];\n    }\n    else if(in_key){\n      if(debug) console.log('add to key: ' + line[i])\n      key += line[i]\n    }\n    else if(in_value){\n      if(debug) console.log('add to value: ' + line[i])\n      value += line[i];\n    }\n  }\n\n  return object;\n}\n","exports.log = function(data, stream) {\n  this.stream = this.stream || process.stdout;\n  if(stream == undefined) stream = this.stream;\n\n  var logData = Object.assign({}, this.defaultData, data);\n\n  if(this.timers){\n    for(var key in this.timers){\n      var now = (new Date()).getTime()\n      logData[key] = (now - this.timers[key]).toString() + 'ms' ;\n    }\n  }\n\n  stream.write(this.stringify(logData) + \"\\n\");\n}\n\nexports.time = function(label) {\n  var logfmt = require('../logfmt');\n  var startTime = (new Date()).getTime();\n  var label  = label || 'elapsed';\n  var timer  = new logfmt();\n  timer.stream = this.stream;\n  timer.defaultData = this.defaultData;\n  timer.timers = Object.assign({}, this.timers)\n  timer.timers[label] = startTime;\n  return timer;\n}\n\nexports.namespace = function(object) {\n  var logfmt = require('../logfmt');\n  var namespaced = new logfmt()\n  var namespace  = Object.assign({}, this.defaultData, object);\n  namespaced.stream = this.stream;\n  namespaced.defaultData = namespace\n  namespaced.timers = this.timers;\n  return namespaced;\n}\n\nexports.error = function(err, id) {\n  this.maxErrorLines = this.maxErrorLines || 10;\n  if (id === undefined) {\n    id = Math.random().toString().slice(2, 12);\n  }\n  var errorLogger = this.namespace({\n    error: true,\n    id:id,\n    now: (new Date()).toISOString()\n  })\n  errorLogger.log({ message:err.message });\n  if (err.stack) {\n    var stack = err.stack.split('\\n');\n    for (var line in stack) {\n      if (line >= this.maxErrorLines) break;\n      errorLogger.log({ line:line, trace:stack[line] });\n    }\n  }\n}\n","var commonFormatter = function(req, res){\n  if((typeof req.path) == 'function'){\n    //in restify path is a function\n    var path = req.path();\n  }\n  else{\n    //in express it is an attribute\n    var path = req.originalUrl || req.path || req.url;\n  }\n\n  var httpHeader = req.header && req.header('x-forwarded-for')\n  var requestID  = req.header && req.header('x-request-id')\n\n  var ip = req.ip || httpHeader\n                  || req.connection.remoteAddress;\n\n  var requestData =  {\n    ip: ip,\n    time: (new Date()).toISOString(),\n    method: req.method,\n    path: path,\n    \"status\": res.statusCode,\n  }\n\n  if (requestID) {\n    requestData.request_id = requestID;\n  }\n\n  if(res.get){\n    requestData.content_length = res.get('content-length');\n    requestData.content_type = res.get('content-type');\n  }\n  return requestData;\n}\n\nvar immediateLogger = function(logger, options, formatter){\n  return function(req, res, next){\n    var data = formatter(req, res);\n    logger.log(data);\n    next();\n  }\n}\n\nvar timingLogger = function(logger, options, formatter){\n  return function(req, res, next){\n    var elapsed = options.elapsed || 'elapsed';\n    var timer   = logger.time(elapsed);\n    var end = res.end;\n    res.end = function(chunk, encoding) {\n      var data = formatter(req, res);\n      res.end = end;\n      res.end(chunk, encoding);\n      timer.log(data);\n    };\n    next();\n  }\n}\n\nexports.init = function(logger, options, formatter) {\n  this.logger = logger;\n\n  if(!formatter && !options){\n    formatter = commonFormatter;\n    options = {};\n  }\n  else if(!formatter){\n    if(typeof options == 'function'){\n      formatter = options;\n      options = {};\n    }else{\n      formatter = commonFormatter;\n    }\n  }\n  options = options || {};\n\n  if(options.immediate){\n    return immediateLogger(logger, options, formatter);\n  }else{\n    return timingLogger(logger, options, formatter);\n  }\n}\n\nexports.commonFormatter = commonFormatter;\n","var split       = require('split')\nvar through     = require('through');\nvar PassThrough = require('stream').PassThrough;\n\n//returns a stream that splits and parses logfmt into objects\nexports.streamParser = function(options){\n  var options = options || {};\n\n  var streamParser = new PassThrough();\n  var self = this;\n\n  var logfmtStream = through(function(line){\n    if(line !== '') this.queue(self.parse(line))\n  })\n\n  // When a source stream is piped to us, undo that pipe, and save\n  // off the source stream piped into our internally managed streams.\n  streamParser.on('pipe', function(source) {\n    if(source.unpipe) source.unpipe(this);\n    this.transformStream = source.pipe(split()).pipe(logfmtStream);\n  });\n\n  // When we're piped to another stream, instead pipe our internal\n  // transform stream to that destination.\n  streamParser.pipe = function(destination, options) {\n    return this.transformStream.pipe(destination, options);\n  };\n\n  return streamParser;\n}\n\n// returns a stream that stringifies objects\nexports.streamStringify = function(options){\n  var self = this;\n  var options = options || {};\n  if(options.hasOwnProperty('delimiter')){\n    var delim = options.delimiter;\n  }else{\n    var delim = \"\\n\";\n  }\n\n  return through(function(data){\n    this.queue(self.stringify(data) + delim)\n  }, function(){\n    this.queue(null)\n  })\n}\n","exports.stringify = function(data){\n  var line = '';\n\n  for(var key in data) {\n    var value = data[key];\n    var is_null = false;\n    if(value == null) {\n      is_null = true;\n      value = '';\n    }\n    else value = value.toString();\n\n    var needs_quoting  = value.indexOf(' ') > -1 || value.indexOf('=') > -1;\n    var needs_escaping = value.indexOf('\"') > -1 || value.indexOf(\"\\\\\") > -1;\n\n    if(needs_escaping) value = value.replace(/[\"\\\\]/g, '\\\\$&');\n    if(needs_quoting) value = '\"' + value + '\"';\n    if(value === '' && !is_null) value = '\"\"';\n\n    line += key + '=' + value + ' ';\n  }\n\n  //trim traling space\n  return line.substring(0,line.length-1);\n}\n\n","//constructor\nfunction logfmt() {\n}\nmodule.exports = logfmt;\n\nvar streaming        = require('./lib/streaming');\nvar bodyParser       = require('./lib/body_parser');\nvar bodyParserStream = require('./lib/body_parser_stream');\nvar logfmtParser     = require('./lib/logfmt_parser');\nvar logger           = require('./lib/logger');\nvar requestLogger    = require('./lib/request_logger');\nvar serializer       = require('./lib/stringify');\n\n//Build up logfmt prototype\nObject.assign(logfmt.prototype, logger);\nObject.assign(logfmt.prototype, streaming);\n\nlogfmt.prototype.stringify = serializer.stringify;\nlogfmt.prototype.parse = logfmtParser.parse;\n\n// Synchronous body parser\nlogfmt.prototype.bodyParser = function(options) {\n  options || (options = {});\n  var mime = options.contentType || \"application/logplex-1\";\n  return bodyParser({ contentType: mime, parser: this.parse });\n};\n\n// Stream parser\nlogfmt.prototype.bodyParserStream = function(options) {\n  options || (options = {});\n  var mime = options.contentType || \"application/logplex-1\";\n  return bodyParserStream({ contentType: mime });\n};\n\nlogfmt.prototype.requestLogger = function(options, formatter) {\n  return requestLogger.init(this, options, formatter);\n};\n\nlogfmt.prototype.requestLogger.commonFormatter = requestLogger.commonFormatter;\n\nObject.assign(logfmt, logfmt.prototype);\n","//filter will reemit the data if cb(err,pass) pass is truthy\n\n// reduce is more tricky\n// maybe we want to group the reductions or emit progress updates occasionally\n// the most basic reduce just emits one 'data' event after it has recieved 'end'\n\n\nvar through = require('through')\nvar Decoder = require('string_decoder').StringDecoder\n\nmodule.exports = split\n\n//TODO pass in a function to map across the lines.\n\nfunction split (matcher, mapper) {\n  var decoder = new Decoder()\n  var soFar = ''\n  if('function' === typeof matcher)\n    mapper = matcher, matcher = null\n  if (!matcher)\n    matcher = /\\r?\\n/\n\n  function emit(stream, piece) {\n    if(mapper) {\n      try {\n        piece = mapper(piece)\n      }\n      catch (err) {\n        return stream.emit('error', err)\n      }\n      if('undefined' !== typeof piece)\n        stream.queue(piece)\n    }\n    else\n      stream.queue(piece)\n  }\n\n  function next (stream, buffer) { \n    var pieces = (soFar + buffer).split(matcher)\n    soFar = pieces.pop()\n\n    for (var i = 0; i < pieces.length; i++) {\n      var piece = pieces[i]\n      emit(stream, piece)\n    }\n  }\n\n  return through(function (b) {\n    next(this, decoder.write(b))\n  },\n  function () {\n    if(decoder.end) \n      next(this, decoder.end())\n    if(soFar != null)\n      emit(this, soFar)\n    this.queue(null)\n  })\n}\n\n","var Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end, opts) {\n  write = write || function (data) { this.queue(data) }\n  end = end || function () { this.queue(null) }\n\n  var ended = false, destroyed = false, buffer = [], _ended = false\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false\n\n//  stream.autoPause   = !(opts && opts.autoPause   === false)\n  stream.autoDestroy = !(opts && opts.autoDestroy === false)\n\n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n\n  function drain() {\n    while(buffer.length && !stream.paused) {\n      var data = buffer.shift()\n      if(null === data)\n        return stream.emit('end')\n      else\n        stream.emit('data', data)\n    }\n  }\n\n  stream.queue = stream.push = function (data) {\n//    console.error(ended)\n    if(_ended) return stream\n    if(data === null) _ended = true\n    buffer.push(data)\n    drain()\n    return stream\n  }\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable && stream.autoDestroy)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  function _end () {\n    stream.writable = false\n    end.call(stream)\n    if(!stream.readable && stream.autoDestroy)\n      stream.destroy()\n  }\n\n  stream.end = function (data) {\n    if(ended) return\n    ended = true\n    if(arguments.length) stream.write(data)\n    _end() // will emit or queue\n    return stream\n  }\n\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    buffer.length = 0\n    stream.writable = stream.readable = false\n    stream.emit('close')\n    return stream\n  }\n\n  stream.pause = function () {\n    if(stream.paused) return\n    stream.paused = true\n    return stream\n  }\n\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n      stream.emit('resume')\n    }\n    drain()\n    //may have become paused again,\n    //as drain emits 'data'.\n    if(!stream.paused)\n      stream.emit('drain')\n    return stream\n  }\n  return stream\n}\n\n"],"names":["NodeGraphSettings","options","onOptionsChange","styles","useStyles","getStyles","className","container","InlineFieldRow","row","InlineField","tooltip","label","labelWidth","InlineSwitch","id","value","jsonData","nodeGraph","enabled","onChange","event","updateDatasourcePluginJsonDataOption","currentTarget","checked","theme","css","TraceToLogsSettings","width","infoText","DataSourcePicker","inputId","pluginId","current","tracesToLogs","datasourceUid","noDefault","ds","uid","tags","TagsInput","grow","Input","type","placeholder","v","spanStartTimeShift","spanEndTimeShift","filterByTraceID","filterBySpanID","defaultChecked","lokiSearch","spacing","md","colors","textSemiWeak","createGraphFrames","data","nodes","edges","traceDuration","spans","traceEndTime","traceStartTime","Infinity","span","startTime","duration","findTraceDuration","spanMap","makeSpanMap","index","length","spanID","parentIds","references","filter","r","refType","map","process","processes","processID","ranges","children","c","childrenDuration","getNonOverlappingDuration","selfDuration","stats","getStats","push","Fields","serviceName","operationName","main","secondary","parentSpanID","find","convertTraceToGraph","nodesFrame","edgesFrame","makeFrames","node","add","edge","convertTagsLogfmt","logfmt","Object","keys","forEach","key","String","JSON","stringify","transformToLogfmt","parse","durationPlaceholder","AdvancedOptions","query","showAdvancedOptions","setShowAdvancedOptions","useState","advancedOptionsContainer","onClick","InlineLabel","as","Icon","angleUp","angleDown","name","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","minDuration","maxDuration","limit","parseInt","undefined","xs","enter","enterActive","exit","exitActive","allOperationsOption","SearchForm","datasource","serviceOptions","setServiceOptions","operationOptions","setOperationOptions","useEffect","async","services","loadServices","dataSource","url","notFoundLabel","getServices","service","operations","encodeURIComponent","getOperations","maxWidth","Select","menuShouldPortal","operation","menuPlacement","isClearable","disabled","metadataRequest","sort","JaegerDatasource","DataSourceApi","constructor","instanceSettings","timeSrv","getTimeSrv","super","this","params","lastValueFrom","_request","hideFromInspector","target","targets","of","emptyTraceDataFrame","queryType","pipe","response","traceData","createTraceFrame","uploadedJson","error","message","jaegerQuery","pick","pickBy","identity","getTemplateSrv","replace","scopedVars","omit","getTimeRange","lookback","createTableFrame","res","status","catchError","err","statusText","range","timeRange","start","getTime","from","end","to","getQueryDisplayText","apiUrl","serializeParams","req","getBackendSrv","fetch","date","roundUp","dateMath","valueOf","MutableDataFrame","fields","FieldType","values","meta","preferredVisualisationType","custom","traceFormat","plugin","DataSourcePlugin","setConfigEditor","DataSourceHttpSettings","defaultUrl","dataSourceConfig","showAccessOptions","setQueryEditor","onRunQuery","useTheme2","onChangeQuery","nextQuery","RadioButtonGroup","size","padding","FileDropzone","multiple","onLoad","result","QueryField","onBlur","portalOrigin","renderEditorBody","module","exports","next","_body","header","contentType","body","buf","setEncoding","on","chunk","lines","trim","split","line","parser","PassThrough","mime","objectMode","streamParser","debug","in_key","in_value","in_quote","had_quote","object","slice","i","console","log","stream","stdout","logData","assign","defaultData","timers","now","Date","toString","write","time","timer","namespace","namespaced","maxErrorLines","Math","random","errorLogger","toISOString","stack","trace","commonFormatter","path","originalUrl","httpHeader","requestID","requestData","ip","connection","remoteAddress","method","statusCode","request_id","get","content_length","content_type","init","logger","formatter","immediate","immediateLogger","elapsed","encoding","timingLogger","through","self","logfmtStream","queue","source","unpipe","transformStream","destination","streamStringify","hasOwnProperty","delim","delimiter","is_null","needs_quoting","indexOf","substring","streaming","bodyParser","bodyParserStream","logfmtParser","requestLogger","serializer","prototype","Decoder","matcher","mapper","decoder","soFar","emit","piece","buffer","pieces","pop","b","Stream","opts","ended","destroyed","_ended","drain","paused","shift","_end","writable","call","readable","autoDestroy","destroy","nextTick","arguments","pause","resume"],"sourceRoot":""}