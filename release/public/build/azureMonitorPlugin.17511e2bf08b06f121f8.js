(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{CLTJ:function(e,t,s){"use strict";s.r(t);var i=s("Obii"),r=s("LvDl"),a=s.n(r),n=s("LzXI"),o=s("QJKl"),c=s("mkUw"),u=s("q1tI"),l=s.n(u),h=s("wZee"),p=s.n(h),d=s("nKUr");function m({definition:e,language:t}){return e&&(p.a.languages[t]=p.a.languages[t]||e),{renderDecoration(e,t,s){const{children:i,decoration:r}=e;if("prism-token"!==r.type)return s();const a="token "+r.data.get("types");return Object(d.jsx)("span",{className:a,children:i})},decorateNode(e,s,i){if("paragraph"!==e.type)return[];const r=e.getTexts().toArray(),a=r.map(e=>e.text).join("\n"),n=p.a.languages[t],o=p.a.tokenize(a,n),c=[];let u=r.shift(),l=u,h=0,d=0,m=0;function g(t,s){const i=`${s||""} ${t.type||""} ${t.alias||""}`;if("string"==typeof t||"string"==typeof t.content){u=l,h=d;const a="string"==typeof t?t:t.content,n=a.split("\n").length-1,o=a.length-n,p=m+o;let g=u.text.length-h,f=o;for(d=h+f;g<f;)l=r.shift(),f=o-g,g=l.text.length,d=f;if("string"!=typeof t||s){const t=e.createDecoration({anchor:{key:u.key,offset:h},focus:{key:l.key,offset:d},type:"prism-token",data:{types:i}});c.push(t)}m=p}else if(t.content&&t.content.length)for(const e of t.content)g(e,i)}for(const e of o)g(e);return c}}}var g=s("kDLi");function f(){return(f=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var i in s)Object.prototype.hasOwnProperty.call(s,i)&&(e[i]=s[i])}return e}).apply(this,arguments)}class b extends l.a.PureComponent{constructor(...e){super(...e),this.el=void 0,this.getRef=e=>{this.el=e}}componentDidUpdate(e){this.props.isSelected&&!e.isSelected&&function(e){if(!e||!e.offsetParent)return;const t=e.offsetParent;(e.offsetTop>t.scrollTop+t.offsetHeight||e.offsetTop<t.scrollTop)&&(t.scrollTop=e.offsetTop-t.offsetTop)}(this.el)}render(){const{hint:e,isSelected:t,label:s,onClickItem:i}=this.props,r=t?"typeahead-item typeahead-item__selected":"typeahead-item";return Object(d.jsxs)("li",{ref:this.getRef,className:r,onClick:()=>i(s),children:[s,e&&t?Object(d.jsx)("div",{className:"typeahead-item-hint",children:e}):null]})}}class y extends l.a.PureComponent{render(){const{items:e,label:t,selected:s,onClickItem:i}=this.props;return Object(d.jsxs)("li",{className:"typeahead-group",children:[Object(d.jsx)("div",{className:"typeahead-group__title",children:t}),Object(d.jsx)("ul",{className:"typeahead-group__list",children:e.map(e=>{const t="object"==typeof e?e.text:e,r="object"==typeof e?e.display||e.text:e;return Object(d.jsx)(b,{onClickItem:i,isSelected:s.indexOf(t)>-1,hint:e.hint,label:r},t)})})]})}}class v extends l.a.PureComponent{render(){const{groupedItems:e,menuRef:t,selectedItems:s,onClickItem:i}=this.props;return Object(d.jsx)("ul",{className:"typeahead",ref:t,children:e.map(e=>Object(d.jsx)(y,f({onClickItem:i,selected:s},e),e.label))})}}var x=v,w=s("WUic"),M=s("0aAt"),S=s("LBMm"),j=s("i8i4"),O=s.n(j);function I(e){return e?e.reduce((e,t)=>e.concat(t.items),[]):[]}const A=e=>{const t=e.split("\n").map(e=>M.a.create({type:"paragraph",nodes:[M.m.create(e)]}));return M.d.create({nodes:t})};class C extends l.a.Component{constructor(e){super(e),this.node=void 0;const{index:t=0,prefix:s="query"}=e;this.node=document.createElement("div"),this.node.classList.add("slate-typeahead",`slate-typeahead-${s}-${t}`),document.body.appendChild(this.node)}componentWillUnmount(){document.body.removeChild(this.node)}render(){return O.a.createPortal(this.props.children,this.node)}}class k extends l.a.Component{constructor(e,t){super(e,t),this.menuEl=void 0,this.plugins=void 0,this.resetTimer=void 0,this.onChange=({value:e})=>{const t=e.document!==this.state.value.document;this.setState({value:e},()=>{t&&(requestAnimationFrame(()=>this.onTypeahead()),this.onChangeQuery())})},this.onChangeQuery=()=>{const{onQueryChange:e}=this.props;e&&e(c.a.serialize(this.state.value))},this.onKeyDown=(e,t,s)=>{const{typeaheadIndex:i,suggestions:r}=this.state,a=e;switch(a.key){case"Escape":if(this.menuEl)return a.preventDefault(),a.stopPropagation(),this.resetTypeahead(),!0;break;case" ":if(a.ctrlKey)return a.preventDefault(),this.onTypeahead(!0),!0;break;case"Tab":case"Enter":if(this.menuEl&&null!==i){if(a.preventDefault(),!r||!r.length||a.shiftKey||a.ctrlKey)return s();const e=I(r),n=e[Math.abs(i)%e.length||0];return this.applyTypeahead(t,n)}break;case"ArrowDown":this.menuEl&&(a.preventDefault(),this.setState({typeaheadIndex:(i||0)+1}));break;case"ArrowUp":this.menuEl&&(a.preventDefault(),this.setState({typeaheadIndex:Math.max(0,(i||0)-1)}))}return s()},this.onTypeahead=(e=!1,t)=>e,this.applyTypeahead=(e,t)=>({value:new M.n}),this.resetTypeahead=e=>{this.setState({suggestions:[],typeaheadIndex:null,typeaheadPrefix:"",typeaheadContext:null},e)},this.handleBlur=(e,t,s)=>{const{onBlur:i}=this.props;return this.resetTimer=setTimeout(this.resetTypeahead,100),i&&i(),this.restoreEscapeKeyBinding(),s()},this.handleFocus=(e,t,s)=>{const{onFocus:i}=this.props;return i&&i(),this.removeEscapeKeyBinding(),s()},this.onClickItem=e=>{const{suggestions:t}=this.state;if(!t||0===t.length)return;const s=this.applyTypeahead();this.onChange(s)},this.updateMenu=()=>{const{suggestions:e}=this.state,t=this.menuEl,s=window.getSelection();if(!t||!s)return;const i=s.anchorNode;if(e&&e.length>0){if(i&&i.parentElement){const e=i.parentElement.getBoundingClientRect(),s=window.scrollX,r=window.scrollY,a=window.innerHeight,n=e.left+s-2,o=e.top+r+e.height+4,c=a-o-10;requestAnimationFrame(()=>{t.style.opacity=1,t.style.top=o+"px",t.style.left=n+"px",t.style.maxHeight=c+"px"})}}else t.removeAttribute("style")},this.menuRef=e=>{this.menuEl=e},this.renderMenu=()=>{const{portalPrefix:e}=this.props,{suggestions:t,typeaheadIndex:s}=this.state;if(!(t&&t.length>0))return null;let i=Math.max(s,0);const r=I(t);i=i%r.length||0;const a=(null!==s&&r.length>0?[r[i]]:[]).map(e=>"object"==typeof e?e.text:e);return Object(d.jsx)(C,{prefix:e,children:Object(d.jsx)(x,{menuRef:this.menuRef,selectedItems:a,onClickItem:this.onClickItem,groupedItems:t})})};const{prismDefinition:s={},prismLanguage:i="kusto"}=e;var r;this.plugins=[Object(g.BracesPlugin)(),Object(g.ClearPlugin)(),Object(g.RunnerPlugin)({handler:e.onPressEnter}),Object(g.NewlinePlugin)(),m({definition:s,language:i})],this.state={labelKeys:{},labelValues:{},suggestions:[],typeaheadIndex:null,typeaheadPrefix:"",value:(r=e.initialQuery||"",M.n.create({document:A(r)}))}}componentDidMount(){this.updateMenu()}componentWillUnmount(){this.restoreEscapeKeyBinding(),clearTimeout(this.resetTimer)}componentDidUpdate(){this.updateMenu()}removeEscapeKeyBinding(){w.a.unbind("esc","keydown")}restoreEscapeKeyBinding(){w.a.initGlobals()}render(){return Object(d.jsxs)("div",{className:"slate-query-field",children:[this.renderMenu(),Object(d.jsx)(S.a,{autoCorrect:!1,onBlur:this.handleBlur,onKeyDown:this.onKeyDown,onChange:this.onChange,onFocus:this.handleFocus,placeholder:this.props.placeholder,plugins:this.plugins,spellCheck:!1,value:this.state.value})]})}}var T=k;const N=[{text:"!between",hint:"Matches the input that is outside the inclusive range."},{text:"as",hint:"Binds a name to the operator's input tabular expression."},{text:"between",hint:"Matches the input that is inside the inclusive range."},{text:"consume",hint:"The `consume` operator consumes the tabular data stream handed to it. It is\r\nmostly used for triggering the query side-effect without actually returning\r\nthe results back to the caller."},{text:"count",hint:"Returns the number of records in the input record set."},{text:"datatable",hint:"Returns a table whose schema and values are defined in the query itself."},{text:"distinct",hint:"Produces a table with the distinct combination of the provided columns of the input table."},{text:"evaluate",hint:"Invokes a service-side query extension (plugin)."},{text:"extend",hint:"Create calculated columns and append them to the result set."},{text:"externaldata",hint:"Returns a table whose schema is defined in the query itself, and whose data is read from an external raw file."},{text:"facet",hint:"Returns a set of tables, one for each specified column.\r\nEach table specifies the list of values taken by its column.\r\nAn additional table can be created by using the `with` clause."},{text:"find",hint:"Finds rows that match a predicate across a set of tables."},{text:"fork",hint:"Runs multiple consumer operators in parallel."},{text:"getschema",hint:"Produce a table that represents a tabular schema of the input."},{text:"in",hint:"Filters a recordset based on the provided set of values."},{text:"invoke",hint:"Invokes lambda that receives the source of `invoke` as tabular parameter argument."},{text:"join",hint:"Merge the rows of two tables to form a new table by matching values of the specified column(s) from each table."},{text:"limit",hint:"Return up to the specified number of rows."},{text:"make-series",hint:"Create series of specified aggregated values along specified axis."},{text:"mvexpand",hint:"Expands multi-value array or property bag."},{text:"order",hint:"Sort the rows of the input table into order by one or more columns."},{text:"parse",hint:"Evaluates a string expression and parses its value into one or more calculated columns."},{text:"print",hint:"Evaluates one or more scalar expressions and inserts the results (as a single-row table with as many columns as there are expressions) into the output."},{text:"project",hint:"Select the columns to include, rename or drop, and insert new computed columns."},{text:"project-away",hint:"Select what  columns to exclude from the input."},{text:"project-rename",hint:"Renames columns in the result output."},{text:"range",hint:"Generates a single-column table of values."},{text:"reduce",hint:"Groups a set of strings together based on values similarity."},{text:"render",hint:"Instructs the user agent to render the results of the query in a particular way."},{text:"sample",hint:"Returns up to the specified number of random rows from the input table."},{text:"sample-distinct",hint:"Returns a single column that contains up to the specified number of distinct values of the requested column."},{text:"search",hint:"The search operator provides a multi-table/multi-column search experience."},{text:"serialize",hint:"Marks that order of the input row set is safe for window functions usage."},{text:"sort",hint:"Sort the rows of the input table into order by one or more columns."},{text:"summarize",hint:"Produces a table that aggregates the content of the input table."},{text:"take",hint:"Return up to the specified number of rows."},{text:"top",hint:"Returns the first *N* records sorted by the specified columns."},{text:"top-hitters",hint:"Returns an approximation of the first *N* results (assuming skewed distribution of the input)."},{text:"top-nested",hint:"Produces hierarchical top results, where each level is a drill-down based on previous level values."},{text:"union",hint:"Takes two or more tables and returns the rows of all of them."},{text:"where",hint:"Filters a table to the subset of rows that satisfy a predicate."}],D=[{text:"abs",hint:"Calculates the absolute value of the input."},{text:"acos",hint:"Returns the angle whose cosine is the specified number (the inverse operation of [`cos()`](cosfunction.md)) ."},{text:"ago",hint:"Subtracts the given timespan from the current UTC clock time."},{text:"any",hint:"Returns random non-empty value from the specified expression values."},{text:"arg_max",hint:"Finds a row in the group that maximizes *ExprToMaximize*, and returns the value of *ExprToReturn* (or `*` to return the entire row)."},{text:"arg_min",hint:"Finds a row in the group that minimizes *ExprToMinimize*, and returns the value of *ExprToReturn* (or `*` to return the entire row)."},{text:"argmax",hint:"Finds a row in the group that maximizes *ExprToMaximize*, and returns the value of *ExprToReturn* (or `*` to return the entire row)."},{text:"argmin",hint:"Finds a row in the group that minimizes *ExprToMinimize*, and returns the value of *ExprToReturn* (or `*` to return the entire row)."},{text:"array_concat",hint:"Concatenates a number of dynamic arrays to a single array."},{text:"array_length",hint:"Calculates the number of elements in a dynamic array."},{text:"array_slice",hint:"Extracts a slice of a dynamic array."},{text:"array_split",hint:"Splits an array to multiple arrays according to the split indices and packs the generated array in a dynamic array."},{text:"asin",hint:"Returns the angle whose sine is the specified number (the inverse operation of [`sin()`](sinfunction.md)) ."},{text:"assert",hint:"Checks for a condition; if the condition is false, outputs error messages and fails the query."},{text:"atan",hint:"Returns the angle whose tangent is the specified number (the inverse operation of [`tan()`](tanfunction.md)) ."},{text:"atan2",hint:"Calculates the angle, in radians, between the positive x-axis and the ray from the origin to the point (y, x)."},{text:"avg",hint:"Calculates the average of *Expr* across the group."},{text:"avgif",hint:"Calculates the [average](avg-aggfunction.md) of *Expr* across the group for which *Predicate* evaluates to `true`."},{text:"bag_keys",hint:"Enumerates all the root keys in a dynamic property-bag object."},{text:"base64_decodestring",hint:"Decodes a base64 string to a UTF-8 string"},{text:"base64_encodestring",hint:"Encodes a string as base64 string"},{text:"beta_cdf",hint:"Returns the standard cumulative beta distribution function."},{text:"beta_inv",hint:"Returns the inverse of the beta cumulative probability beta density function."},{text:"beta_pdf",hint:"Returns the probability density beta function."},{text:"bin",hint:"Rounds values down to an integer multiple of a given bin size."},{text:"bin_at",hint:"Rounds values down to a fixed-size 'bin', with control over the bin's starting point.\r\n(See also [`bin function`](./binfunction.md).)"},{text:"bin_auto",hint:"Rounds values down to a fixed-size 'bin', with control over the bin size and starting point provided by a query property."},{text:"binary_and",hint:"Returns a result of the bitwise `and` operation between two values."},{text:"binary_not",hint:"Returns a bitwise negation of the input value."},{text:"binary_or",hint:"Returns a result of the bitwise `or` operation of the two values."},{text:"binary_shift_left",hint:"Returns binary shift left operation on a pair of numbers."},{text:"binary_shift_right",hint:"Returns binary shift right operation on a pair of numbers."},{text:"binary_xor",hint:"Returns a result of the bitwise `xor` operation of the two values."},{text:"buildschema",hint:"Returns the minimal schema that admits all values of *DynamicExpr*."},{text:"case",hint:"Evaluates a list of predicates and returns the first result expression whose predicate is satisfied."},{text:"ceiling",hint:"Calculates the smallest integer greater than, or equal to, the specified numeric expression."},{text:"cluster",hint:"Changes the reference of the query to a remote cluster."},{text:"coalesce",hint:"Evaluates a list of expressions and returns the first non-null (or non-empty for string) expression."},{text:"cos",hint:"Returns the cosine function."},{text:"cot",hint:"Calculates the trigonometric cotangent of the specified angle, in radians."},{text:"count",hint:"Returns a count of the records per summarization group (or in total if summarization is done without grouping)."},{text:"countif",hint:"Returns a count of rows for which *Predicate* evaluates to `true`."},{text:"countof",hint:"Counts occurrences of a substring in a string. Plain string matches may overlap; regex matches do not."},{text:"current_principal",hint:"Returns the current principal running this query."},{text:"cursor_after",hint:"A predicate over the records of a table to compare their ingestion time\r\nagainst a database cursor."},{text:"cursor_before_or_at",hint:"A predicate over the records of a table to compare their ingestion time\r\nagainst a database cursor."},{text:"database",hint:"Changes the reference of the query to a specific database within the cluster scope."},{text:"datetime_add",hint:"Calculates a new [datetime](./scalar-data-types/datetime.md) from a specified datepart multiplied by a specified amount, added to a specified [datetime](./scalar-data-types/datetime.md)."},{text:"datetime_diff",hint:"Calculates calendarian difference between two [datetime](./scalar-data-types/datetime.md) values."},{text:"datetime_part",hint:"Extracts the requested date part as an integer value."},{text:"dayofmonth",hint:"Returns the integer number representing the day number of the given month"},{text:"dayofweek",hint:"Returns the integer number of days since the preceding Sunday, as a `timespan`."},{text:"dayofyear",hint:"Returns the integer number represents the day number of the given year."},{text:"dcount",hint:"Returns an estimate of the number of distinct values of *Expr* in the group."},{text:"dcount_hll",hint:"Calculates the dcount from hll results (which was generated by [hll](hll-aggfunction.md) or [hll_merge](hll-merge-aggfunction.md))."},{text:"dcountif",hint:"Returns an estimate of the number of distinct values of *Expr* of rows for which *Predicate* evaluates to `true`."},{text:"degrees",hint:"Converts angle value in radians into value in degrees, using formula `degrees = (180 / PI ) * angle_in_radians`"},{text:"distance",hint:"Returns the distance between two points in meters."},{text:"endofday",hint:"Returns the end of the day containing the date, shifted by an offset, if provided."},{text:"endofmonth",hint:"Returns the end of the month containing the date, shifted by an offset, if provided."},{text:"endofweek",hint:"Returns the end of the week containing the date, shifted by an offset, if provided."},{text:"endofyear",hint:"Returns the end of the year containing the date, shifted by an offset, if provided."},{text:"estimate_data_size",hint:"Returns an estimated data size of the selected columns of the tabular expression."},{text:"exp",hint:"The base-e exponential function of x, which is e raised to the power x: e^x."},{text:"exp10",hint:"The base-10 exponential function of x, which is 10 raised to the power x: 10^x.  \r\n**Syntax**"},{text:"exp2",hint:"The base-2 exponential function of x, which is 2 raised to the power x: 2^x."},{text:"extent_id",hint:'Returns a unique identifier that identifies the data shard ("extent") that the current record resides in.'},{text:"extent_tags",hint:'Returns a dynamic array with the [tags](../management/extents-overview.md#extent-tagging) of the data shard ("extent") that the current record resides in.'},{text:"extract",hint:"Get a match for a [regular expression](./re2.md) from a text string."},{text:"extract_all",hint:"Get all matches for a [regular expression](./re2.md) from a text string."},{text:"extractjson",hint:"Get a specified element out of a JSON text using a path expression."},{text:"floor",hint:"An alias for [`bin()`](binfunction.md)."},{text:"format_datetime",hint:"Formats a datetime parameter based on the format pattern parameter."},{text:"format_timespan",hint:"Formats a timespan parameter based on the format pattern parameter."},{text:"gamma",hint:"Computes [gamma function](https://en.wikipedia.org/wiki/Gamma_function)"},{text:"getmonth",hint:"Get the month number (1-12) from a datetime."},{text:"gettype",hint:"Returns the runtime type of its single argument."},{text:"getyear",hint:"Returns the year part of the `datetime` argument."},{text:"hash",hint:"Returns a hash value for the input value."},{text:"hash_sha256",hint:"Returns a sha256 hash value for the input value."},{text:"hll",hint:"Calculates the Intermediate results of [dcount](dcount-aggfunction.md) across the group."},{text:"hll_merge",hint:"Merges hll results (scalar version of the aggregate version [`hll_merge()`](hll-merge-aggfunction.md))."},{text:"hourofday",hint:"Returns the integer number representing the hour number of the given date"},{text:"iff",hint:"Evaluates the first argument (the predicate), and returns the value of either the second or third arguments, depending on whether the predicate evaluated to `true` (second) or `false` (third)."},{text:"iif",hint:"Evaluates the first argument (the predicate), and returns the value of either the second or third arguments, depending on whether the predicate evaluated to `true` (second) or `false` (third)."},{text:"indexof",hint:"Function reports the zero-based index of the first occurrence of a specified string within input string."},{text:"ingestion_time",hint:"Retrieves the record's `$IngestionTime` hidden `datetime` column, or null."},{text:"iscolumnexists",hint:"Returns a boolean value indicating if the given string argument exists in the schema produced by the preceding tabular operator."},{text:"isempty",hint:"Returns `true` if the argument is an empty string or is null."},{text:"isfinite",hint:"Returns whether input is a finite value (is neither infinite nor NaN)."},{text:"isinf",hint:"Returns whether input is an infinite (positive or negative) value."},{text:"isnan",hint:"Returns whether input is Not-a-Number (NaN) value."},{text:"isnotempty",hint:"Returns `true` if the argument is not an empty string nor it is a null."},{text:"isnotnull",hint:"Returns `true` if the argument is not null."},{text:"isnull",hint:"Evaluates its sole argument and returns a `bool` value indicating if the argument evaluates to a null value."},{text:"log",hint:"Returns the natural logarithm function."},{text:"log10",hint:"Returns the common (base-10) logarithm function."},{text:"log2",hint:"Returns the base-2 logarithm function."},{text:"loggamma",hint:"Computes log of absolute value of the [gamma function](https://en.wikipedia.org/wiki/Gamma_function)"},{text:"make_datetime",hint:"Creates a [datetime](./scalar-data-types/datetime.md) scalar value from the specified date and time."},{text:"make_dictionary",hint:"Returns a `dynamic` (JSON) property-bag (dictionary) of all the values of *Expr* in the group."},{text:"make_string",hint:"Returns the string generated by the Unicode characters."},{text:"make_timespan",hint:"Creates a [timespan](./scalar-data-types/timespan.md) scalar value from the specified time period."},{text:"makelist",hint:"Returns a `dynamic` (JSON) array of all the values of *Expr* in the group."},{text:"makeset",hint:"Returns a `dynamic` (JSON) array of the set of distinct values that *Expr* takes in the group."},{text:"materialize",hint:"Allows caching a sub-query result during the time of query execution in a way that other subqueries can reference the partial result."},{text:"max",hint:"Returns the maximum value across the group."},{text:"max_of",hint:"Returns the maximum value of several evaluated numeric expressions."},{text:"merge_tdigests",hint:"Merges tdigest results (scalar version of the aggregate version [`merge_tdigests()`](merge-tdigests-aggfunction.md))."},{text:"min",hint:"Returns the minimum value agross the group."},{text:"min_of",hint:"Returns the minimum value of several evaluated numeric expressions."},{text:"monthofyear",hint:"Returns the integer number represents the month number of the given year."},{text:"next",hint:"Returns the value of a column in a row that it at some offset following the\r\ncurrent row in a [serialized row set](./windowsfunctions.md#serialized-row-set)."},{text:"not",hint:"Reverses the value of its `bool` argument."},{text:"now",hint:"Returns the current UTC clock time, optionally offset by a given timespan.\r\nThis function can be used multiple times in a statement and the clock time being referenced will be the same for all instances."},{text:"pack",hint:"Creates a `dynamic` object (property bag) from a list of names and values."},{text:"pack_all",hint:"Creates a `dynamic` object (property bag) from all the columns of the tabular expression."},{text:"pack_array",hint:"Packs all input values into a dynamic array."},{text:"parse_ipv4",hint:"Converts input to integer (signed 64-bit) number representation."},{text:"parse_json",hint:"Interprets a `string` as a [JSON value](https://json.org/)) and returns the value as [`dynamic`](./scalar-data-types/dynamic.md). \r\nIt is superior to using [extractjson() function](./extractjsonfunction.md)\r\nwhen you need to extract more than one element of a JSON compound object."},{text:"parse_path",hint:'Parses a file path `string` and returns a [`dynamic`](./scalar-data-types/dynamic.md) object that contains the following parts of the path: \r\nScheme, RootPath, DirectoryPath, DirectoryName, FileName, Extension, AlternateDataStreamName.\r\nIn addition to the simple paths with both types of slashes, supports paths with schemas (e.g. "file://..."), shared paths (e.g. "\\\\shareddrive\\users..."), long paths (e.g "\\\\?\\C:...""), alternate data streams (e.g. "file1.exe:file2.exe")'},{text:"parse_url",hint:"Parses an absolute URL `string` and returns a [`dynamic`](./scalar-data-types/dynamic.md) object contains all parts of the URL (Scheme, Host, Port, Path, Username, Password, Query Parameters, Fragment)."},{text:"parse_urlquery",hint:"Parses a url query `string` and returns a [`dynamic`](./scalar-data-types/dynamic.md) object contains the Query parameters."},{text:"parse_user_agent",hint:"Interprets a user-agent string, which identifies the user's browser and provides certain system details to servers hosting the websites the user visits. The result is returned as [`dynamic`](./scalar-data-types/dynamic.md)."},{text:"parse_version",hint:"Converts input string representation of version to a comparable decimal number."},{text:"parse_xml",hint:"Interprets a `string` as a XML value, converts the value to a [JSON value](https://json.org/) and returns the value as  [`dynamic`](./scalar-data-types/dynamic.md)."},{text:"percentile",hint:"Returns an estimate for the specified [nearest-rank percentile](#nearest-rank-percentile) of the population defined by *Expr*. \r\nThe accuracy depends on the density of population in the region of the percentile."},{text:"percentile_tdigest",hint:"Calculates the percentile result from tdigest results (which was generated by [tdigest](tdigest-aggfunction.md) or [merge-tdigests](merge-tdigests-aggfunction.md))"},{text:"percentrank_tdigest",hint:"Calculates the approximate rank of the value in a set where rank is expressed as percentage of set's size. \r\nThis function can be viewed as the inverse of the percentile."},{text:"pi",hint:"Returns the constant value of Pi (π)."},{text:"point",hint:"Returns a dynamic array representation of a point."},{text:"pow",hint:"Returns a result of raising to power"},{text:"prev",hint:"Returns the value of a column in a row that it at some offset prior to the\r\ncurrent row in a [serialized row set](./windowsfunctions.md#serialized-row-set)."},{text:"radians",hint:"Converts angle value in degrees into value in radians, using formula `radians = (PI / 180 ) * angle_in_degrees`"},{text:"rand",hint:"Returns a random number."},{text:"range",hint:"Generates a dynamic array holding a series of equally-spaced values."},{text:"repeat",hint:"Generates a dynamic array holding a series of equal values."},{text:"replace",hint:"Replace all regex matches with another string."},{text:"reverse",hint:"Function makes reverse of input string."},{text:"round",hint:"Returns the rounded source to the specified precision."},{text:"row_cumsum",hint:"Calculates the cumulative sum of a column in a [serialized row set](./windowsfunctions.md#serialized-row-set)."},{text:"row_number",hint:"Returns the current row's index in a [serialized row set](./windowsfunctions.md#serialized-row-set).\r\nThe row index starts by default at `1` for the first row, and is incremented by `1` for each additional row.\r\nOptionally, the row index can start at a different value than `1`.\r\nAdditionally, the row index may be reset according to some provided predicate."},{text:"series_add",hint:"Calculates the element-wise addition of two numeric series inputs."},{text:"series_decompose",hint:"Applies a decomposition transformation on a series."},{text:"series_decompose_anomalies",hint:"Anomaly Detection based on series decomposition (refer to [series_decompose()](series-decomposefunction.md))"},{text:"series_decompose_forecast",hint:"Forecast based on series decomposition."},{text:"series_divide",hint:"Calculates the element-wise division of two numeric series inputs."},{text:"series_equals",hint:"Calculates the element-wise equals (`==`) logic operation of two numeric series inputs."},{text:"series_fill_backward",hint:"Performs backward fill interpolation of missing values in a series."},{text:"series_fill_const",hint:"Replaces missing values in a series with a specified constant value."},{text:"series_fill_forward",hint:"Performs forward fill interpolation of missing values in a series."},{text:"series_fill_linear",hint:"Performs linear interpolation of missing values in a series."},{text:"series_fir",hint:"Applies a Finite Impulse Response filter on a series."},{text:"series_fit_2lines",hint:"Applies two segments linear regression on a series, returning multiple columns."},{text:"series_fit_2lines_dynamic",hint:"Applies two segments linear regression on a series, returning dynamic object."},{text:"series_fit_line",hint:"Applies linear regression on a series, returning multiple columns."},{text:"series_fit_line_dynamic",hint:"Applies linear regression on a series, returning dynamic object."},{text:"series_greater",hint:"Calculates the element-wise greater (`>`) logic operation of two numeric series inputs."},{text:"series_greater_equals",hint:"Calculates the element-wise greater or equals (`>=`) logic operation of two numeric series inputs."},{text:"series_iir",hint:"Applies a Infinite Impulse Response filter on a series."},{text:"series_less",hint:"Calculates the element-wise less (`<`) logic operation of two numeric series inputs."},{text:"series_less_equals",hint:"Calculates the element-wise less or equal (`<=`) logic operation of two numeric series inputs."},{text:"series_multiply",hint:"Calculates the element-wise multiplication of two numeric series inputs."},{text:"series_not_equals",hint:"Calculates the element-wise not equals (`!=`) logic operation of two numeric series inputs."},{text:"series_outliers",hint:"Scores anomaly points in a series."},{text:"series_periods_detect",hint:"Finds the most significant periods that exist in a time series."},{text:"series_periods_validate",hint:"Checks whether a time series contains periodic patterns of given lengths."},{text:"series_seasonal",hint:"Calculates the seasonal component of a series according to the detected or given seasonal period."},{text:"series_stats",hint:"Returns statistics for a series in multiple columns."},{text:"series_stats_dynamic",hint:"Returns statistics for a series in dynamic object."},{text:"series_subtract",hint:"Calculates the element-wise subtraction of two numeric series inputs."},{text:"sign",hint:"Sign of a numeric expression"},{text:"sin",hint:"Returns the sine function."},{text:"split",hint:"Splits a given string according to a given delimiter and returns a string array with the contained substrings."},{text:"sqrt",hint:"Returns the square root function."},{text:"startofday",hint:"Returns the start of the day containing the date, shifted by an offset, if provided."},{text:"startofmonth",hint:"Returns the start of the month containing the date, shifted by an offset, if provided."},{text:"startofweek",hint:"Returns the start of the week containing the date, shifted by an offset, if provided."},{text:"startofyear",hint:"Returns the start of the year containing the date, shifted by an offset, if provided."},{text:"stdev",hint:"Calculates the standard deviation of *Expr* across the group, considering the group as a [sample](https://en.wikipedia.org/wiki/Sample_%28statistics%29)."},{text:"stdevif",hint:"Calculates the [stdev](stdev-aggfunction.md) of *Expr* across the group for which *Predicate* evaluates to `true`."},{text:"stdevp",hint:"Calculates the standard deviation of *Expr* across the group, considering the group as a [population](https://en.wikipedia.org/wiki/Statistical_population)."},{text:"strcat",hint:"Concatenates between 1 and 64 arguments."},{text:"strcat_array",hint:"Creates a concatenated string of array values using specified delimiter."},{text:"strcat_delim",hint:"Concatenates between 2 and 64 arguments, with delimiter, provided as first argument."},{text:"strcmp",hint:"Compares two strings."},{text:"string_size",hint:"Returns the size, in bytes, of the input string."},{text:"strlen",hint:"Returns the length, in characters, of the input string."},{text:"strrep",hint:"Repeats given [string](./scalar-data-types/string.md) provided amount of times."},{text:"substring",hint:"Extracts a substring from a source string starting from some index to the end of the string."},{text:"sum",hint:"Calculates the sum of *Expr* across the group."},{text:"sumif",hint:"Returns a sum of *Expr* for which *Predicate* evaluates to `true`."},{text:"table",hint:"References specific table using an query-time evaluated string-expression."},{text:"tan",hint:"Returns the tangent function."},{text:"tdigest",hint:"Calculates the Intermediate results of [`percentiles()`](percentiles-aggfunction.md) across the group."},{text:"tdigest_merge",hint:"Merges tdigest results (scalar version of the aggregate version [`tdigest_merge()`](tdigest-merge-aggfunction.md))."},{text:"tobool",hint:"Converts input to boolean (signed 8-bit) representation."},{text:"todatetime",hint:"Converts input to [datetime](./scalar-data-types/datetime.md) scalar."},{text:"todecimal",hint:"Converts input to decimal number representation."},{text:"todouble",hint:"Converts the input to a value of type `real`. (`todouble()` and `toreal()` are synonyms.)"},{text:"todynamic",hint:"Interprets a `string` as a [JSON value](https://json.org/) and returns the value as [`dynamic`](./scalar-data-types/dynamic.md)."},{text:"toguid",hint:"Converts input to [`guid`](./scalar-data-types/guid.md) representation."},{text:"tohex",hint:"Converts input to a hexadecimal string."},{text:"toint",hint:"Converts input to integer (signed 32-bit) number representation."},{text:"tolong",hint:"Converts input to long (signed 64-bit) number representation."},{text:"tolower",hint:"Converts input string to lower case."},{text:"toscalar",hint:"Returns a scalar constant value of the evaluated expression."},{text:"tostring",hint:"Converts input to a string representation."},{text:"totimespan",hint:"Converts input  to [timespan](./scalar-data-types/timespan.md) scalar."},{text:"toupper",hint:"Converts a string to upper case."},{text:"translate",hint:"Replaces a set of characters ('searchList') with another set of characters ('replacementList') in a given a string.\r\nThe function searches for characters in the 'searchList' and replaces them with the corresponding characters in 'replacementList'"},{text:"treepath",hint:"Enumerates all the path expressions that identify leaves in a dynamic object."},{text:"trim",hint:"Removes all leading and trailing matches of the specified regular expression."},{text:"trim_end",hint:"Removes trailing match of the specified regular expression."},{text:"trim_start",hint:"Removes leading match of the specified regular expression."},{text:"url_decode",hint:"The function converts encoded URL into a to regular URL representation."},{text:"url_encode",hint:"The function converts characters of the input URL into a format that can be transmitted over the Internet."},{text:"variance",hint:"Calculates the variance of *Expr* across the group, considering the group as a [sample](https://en.wikipedia.org/wiki/Sample_%28statistics%29)."},{text:"varianceif",hint:"Calculates the [variance](variance-aggfunction.md) of *Expr* across the group for which *Predicate* evaluates to `true`."},{text:"variancep",hint:"Calculates the variance of *Expr* across the group, considering the group as a [population](https://en.wikipedia.org/wiki/Statistical_population)."},{text:"weekofyear",hint:"Returns the integer number represents the week number."},{text:"welch_test",hint:"Computes the p_value of the [Welch-test function](https://en.wikipedia.org/wiki/Welch%27s_t-test)"},{text:"zip",hint:"The `zip` function accepts any number of `dynamic` arrays, and returns an\r\narray whose elements are each an array holding the elements of the input\r\narrays of the same index."}],R=["by","on","contains","notcontains","containscs","notcontainscs","startswith","has","matches","regex","true","false","and","or","typeof","int","string","date","datetime","time","long","real","​boolean","bool"],z=[{text:"$__timeFilter",display:"$__timeFilter()",hint:"Macro that uses the selected timerange in Grafana to filter the query."},{text:"$__timeTo",display:"$__timeTo()",hint:"Returns the From datetime from the Grafana picker. Example: datetime(2018-06-05T20:09:58.907Z)."},{text:"$__timeFrom",display:"$__timeFrom()",hint:"Returns the From datetime from the Grafana picker. Example: datetime(2018-06-05T18:09:58.907Z)."},{text:"$__escapeMulti",display:"$__escapeMulti()",hint:"Macro to escape multi-value template variables that contain illegal characters."},{text:"$__contains",display:"$__contains()",hint:"Macro for multi-value template variables."}],q={comment:{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0},"function-context":{pattern:/[a-z0-9_]+\([^)]*\)?/i,inside:{}},duration:{pattern:new RegExp(["SECONDS","MINUTES","HOURS","DAYS","WEEKS","MONTHS","YEARS"].join("?|")+"?","i"),alias:"number"},builtin:new RegExp(`\\b(?:${D.map(e=>e.text).join("|")})(?=\\s*\\()`,"i"),string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},keyword:new RegExp(`\\b(?:${R.join("|")}|${N.map(e=>e.text).join("|")}|\\*)\\b`,"i"),boolean:/\b(?:true|false)\b/,number:/\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/-|\+|\*|\/|>|<|==|<=?|>=?|<>|!~|~|=|\|/,punctuation:/[{};(),.:]/,variable:/(\[\[(.+?)\]\])|(\$(.+?))\b/};q["function-context"].inside={argument:{pattern:/[a-z0-9_]+(?=:)/i,alias:"symbol"},duration:q.duration,number:q.number,builtin:q.builtin,string:q.string,variable:q.variable};var _=q;const G=e=>e.replace(/[{}[\]="(),!~+\-*/^%]/g,"").trim(),F=e=>({text:e});class E extends T{constructor(e,t){super(e,t),this.fields=void 0,this.events=void 0,this.schema=void 0,this.onTypeahead=(e=!1)=>{const t=window.getSelection();if(t&&t.anchorNode){const s=t.anchorNode.parentElement;if(null===s)return;if(!s.closest(".slate-query-field")||this.state.value.isBlurred)return;const i=t.getRangeAt(0),r=t.anchorNode.textContent;if(null===r)return;const a=i.startOffset;let n=G(r.substr(0,a));const o=this.state.value.anchorOffset,u=this.state.value.anchorText.text.slice(0,o);let l=[];const h=s.classList;let p=null;if(h.contains("function-context"))p="context-function",l=this.getColumnSuggestions();else if(u.match(/(where\s(\w+\b)?$)/i))p="context-where",l=this.getColumnSuggestions();else if(u.match(/(summarize\s(\w+\b)?$)/i))p="context-summarize",l=this.getFunctionSuggestions();else if(u.match(/(summarize\s(.+\s)?by\s+([^,\s]+,\s*)*([^,\s]+\b)?$)/i))p="context-summarize-by",l=this.getColumnSuggestions();else if(u.match(/(by\s+([^,\s]+,\s*)*([^,\s]+\b)?$)/i))p="context-by",l=this.getColumnSuggestions();else if(u.match(/(on\s(.+\b)?$)/i))p="context-join-on",l=this.getColumnSuggestions();else if(u.match(/(join\s+(\(\s+)?(\w+\b)?$)/i))p="context-join",l=this.getTableSuggestions();else if(u.match(/(distinct\s(.+\b)?$)/i))p="context-distinct",l=this.getColumnSuggestions();else if(u.match(/(database\(\"(\w+)\"\)\.(.+\b)?$)/i)){p="context-database-table";const e=this.getDBFromDatabaseFunction(u);l=this.getTableSuggestions(e),n=n.replace(".","")}else if($(c.a.serialize(this.state.value)).match(/^\s*\w*$/i)){if(p="context-new",!this.schema)return this.fetchSchema(),void setTimeout(this.onTypeahead,0);l=this.getInitialSuggestions()}else if(!n||h.contains("argument")||e)!0===e&&(p="context-builtin-forced",u.match(/\s$/i)&&(n=""),l=this.getKeywordSuggestions());else{if(u.match(/\s$/i))return void(n="");n=function(e){const t=/(?:.*\s)?([^\s]+\s*)$/gi.exec(e);if(t&&t.length>1)return t[1];return""}(n),p="context-builtin",l=this.getKeywordSuggestions()}let d=0;n=n.toLowerCase();const m=l.map(e=>(e.items&&n&&!e.skipFilter&&(e.items=e.items.filter(e=>e.text.length>=n.length),e.prefixMatch?e.items=e.items.filter(e=>0===e.text.toLowerCase().indexOf(n)):e.items=e.items.filter(e=>e.text.toLowerCase().indexOf(n)>-1)),d+=e.items.length,e)).filter(e=>e.items.length>0);this.setState({typeaheadPrefix:n,typeaheadContext:p,typeaheadText:r,suggestions:d>0?m:[]})}},this.applyTypeahead=(e,t)=>{const{typeaheadPrefix:s,typeaheadContext:i,typeaheadText:r}=this.state;let a=t.text||t;const n=g.DOMUtil.getNextCharacter();"function"===t.type?n&&"("===n||(a+="("):"context-function"===i?n&&")"===n||(a+=")"):n&&" "===n||(a+=" ");const o=t.deleteBackwards||s.length,c=G(r).length-s.length,u=r.indexOf(s),l=s&&(c>0&&u>-1||a===r)?c+u:0;return this.resetTypeahead(()=>e.deleteBackward(o).deleteForward(l).insertText(a).moveForward(0).focus()),e},this.schema={Databases:{Default:{}}},this.onTypeahead=Object(r.debounce)(this.onTypeahead,100)}componentDidMount(){super.componentDidMount(),this.fetchSchema()}getInitialSuggestions(){return this.getTableSuggestions()}getKeywordSuggestions(){return[{prefixMatch:!0,label:"Keywords",items:R.map(F)},{prefixMatch:!0,label:"Operators",items:N},{prefixMatch:!0,label:"Functions",items:D.map(e=>(e.type="function",e))},{prefixMatch:!0,label:"Macros",items:z.map(e=>(e.type="function",e))},{prefixMatch:!0,label:"Tables",items:Object(r.map)(this.schema.Databases.Default.Tables,e=>({text:e.Name}))}]}getFunctionSuggestions(){return[{prefixMatch:!0,label:"Functions",items:D.map(e=>(e.type="function",e))},{prefixMatch:!0,label:"Macros",items:z.map(e=>(e.type="function",e))}]}getTableSuggestions(e="Default"){return this.schema.Databases[e]?[{prefixMatch:!0,label:"Tables",items:Object(r.map)(this.schema.Databases[e].Tables,e=>({text:e.Name}))}]:[]}getColumnSuggestions(){const e=this.getTableFromContext();if(e){const t=this.schema.Databases.Default.Tables[e];if(t)return[{prefixMatch:!0,label:"Fields",items:Object(r.map)(t.OrderedColumns,e=>({text:e.Name,hint:e.Type}))}]}return[]}getTableFromContext(){const e=$(c.a.serialize(this.state.value)),t=/^\s*(\w+)\s*|/g.exec(e);return t&&t.length>1&&t[0]&&t[1]?t[1]:null}getDBFromDatabaseFunction(e){const t=/database\(\"(\w+)\"\)/gi.exec(e);return t&&t.length>1&&t[0]&&t[1]?t[1]:void 0}async fetchSchema(){let e=await this.props.getSchema();e?("AppInsights"===e.Type&&(e=function(e){const t={Databases:{Default:{}}};return t.Databases.Default=e,t}(e)),this.schema=e):this.schema={Databases:{Default:{}}}}}function $(e){let t=e.replace(/\/\/.*$/gm,"");return t=t.replace("\n"," "),t}var X=s("txxJ");class L extends u.Component{constructor(e){super(e),this.onChangeQuery=e=>{const{index:t,change:s}=this.props,{query:i}=this.state,r=i!==e;this.setState({edited:r,query:e}),s&&s(e,t)},this.onPressEnter=()=>{const{execute:e}=this.props;e&&e()},this.state={edited:!1,query:e.query||""}}render(){const{variables:e,getSchema:t,placeholder:s}=this.props,{edited:i,query:r}=this.state;return Object(d.jsx)("div",{className:"gf-form-input",style:{height:"auto"},children:Object(d.jsx)(E,{initialQuery:i?null:r,onPressEnter:this.onPressEnter,onQueryChange:this.onChangeQuery,prismLanguage:"kusto",prismDefinition:_,placeholder:s,templateVariables:e,getSchema:t})})}}L.defaultProps={placeholder:"Enter a query"},X.c.directive("kustoEditor",["reactDirective",e=>e(L,["change","database","execute","query","variables","placeholder",["getSchema",{watchDepth:"reference"}]])]);var P=s("ufKV"),V=s("dH6a");class Q{static buildAzureMonitorGetMetricNamespacesUrl(e,t,s,i,r,a){if((i.match(/\//g)||[]).length>1){const n=r.split("/"),o=i.substring(i.lastIndexOf("/")+1);return`${e}/${t}/resourceGroups/${s}/providers/${i.substring(0,i.lastIndexOf("/"))}/${n[0]}/${o}/${n[1]}/providers/microsoft.insights/metricNamespaces?api-version=`+a}return`${e}/${t}/resourceGroups/${s}/providers/${i}/${r}/providers/microsoft.insights/metricNamespaces?api-version=`+a}static buildAzureMonitorGetMetricNamesUrl(e,t,s,i,r,a,n){if((i.match(/\//g)||[]).length>1){const o=r.split("/"),c=i.substring(i.lastIndexOf("/")+1);return`${e}/${t}/resourceGroups/${s}/providers/${i.substring(0,i.lastIndexOf("/"))}/${o[0]}/${c}/${o[1]}/providers/microsoft.insights/metricdefinitions?api-version=${n}&metricnamespace=${encodeURIComponent(a)}`}return`${e}/${t}/resourceGroups/${s}/providers/${i}/${r}/providers/microsoft.insights/metricdefinitions?api-version=${n}&metricnamespace=${encodeURIComponent(a)}`}}class U{static parseResponseValues(e,t,s){const i=[];if(!e)return i;for(let a=0;a<e.data.value.length;a++)if(!Object(r.find)(i,["value",Object(r.get)(e.data.value[a],s)])){const n=Object(r.get)(e.data.value[a],s),o=Object(r.get)(e.data.value[a],t,n);i.push({text:o,value:n})}return i}static parseResourceNames(e,t){const s=[];if(!e)return s;for(let i=0;i<e.data.value.length;i++)e.data.value[i].type===t&&s.push({text:e.data.value[i].name,value:e.data.value[i].name});return s}static parseMetadata(e,t){var s,i;const r=["None","Average","Minimum","Maximum","Total","Count"],a=null==e?void 0:e.value.find(e=>e.name.value===t);return a?{primaryAggType:a.primaryAggregationType,supportedAggTypes:a.supportedAggregationTypes||r,supportedTimeGrains:[{label:"Auto",value:"auto"},...U.parseTimeGrains(null!==(s=a.metricAvailabilities)&&void 0!==s?s:[])],dimensions:U.parseDimensions(null!==(i=a.dimensions)&&void 0!==i?i:[])}:{primaryAggType:"",supportedAggTypes:r,supportedTimeGrains:[],dimensions:[]}}static parseTimeGrains(e){const t=[];return e?(e.forEach(e=>{e.timeGrain&&t.push({label:o.a.createTimeGrainFromISO8601Duration(e.timeGrain),value:e.timeGrain})}),t):t}static parseDimensions(e){return e.map(e=>({label:e.localizedValue||e.value,value:e.value}))}static parseSubscriptions(e){const t=[];if(!e)return t;for(let s=0;s<e.data.value.length;s++)Object(r.find)(t,["value",Object(r.get)(e.data.value[s],"subscriptionId")])||t.push({text:""+Object(r.get)(e.data.value[s],"displayName"),value:Object(r.get)(e.data.value[s],"subscriptionId")});return t}static parseSubscriptionsForSelect(e){const t=[];if(!e)return t;for(let s=0;s<e.data.value.length;s++)Object(r.find)(t,["value",Object(r.get)(e.data.value[s],"subscriptionId")])||t.push({label:`${Object(r.get)(e.data.value[s],"displayName")} - ${Object(r.get)(e.data.value[s],"subscriptionId")}`,value:Object(r.get)(e.data.value[s],"subscriptionId")});return t}static parseWorkspacesForSelect(e){const t=[];if(!e)return t;for(let s=0;s<e.data.value.length;s++)Object(r.find)(t,["value",Object(r.get)(e.data.value[s].properties,"customerId")])||t.push({label:Object(r.get)(e.data.value[s],"name"),value:Object(r.get)(e.data.value[s].properties,"customerId")});return t}}class B{constructor(e){this.supportedMetricNamespaces={azuremonitor:["Microsoft.AnalysisServices/servers","Microsoft.ApiManagement/service","Microsoft.AppConfiguration/configurationStores","Microsoft.Automation/automationAccounts","Microsoft.Batch/batchAccounts","Microsoft.Cache/redis","Microsoft.ClassicCompute/virtualMachines","Microsoft.ClassicCompute/domainNames/slots/roles","Microsoft.CognitiveServices/accounts","Microsoft.Compute/virtualMachines","Microsoft.Compute/virtualMachineScaleSets","Microsoft.ContainerInstance/containerGroups","Microsoft.ContainerRegistry/registries","Microsoft.ContainerService/managedClusters","Microsoft.CustomerInsights/hubs","Microsoft.DataBoxEdge/dataBoxEdgeDevices","Microsoft.DataFactory/datafactories","Microsoft.DataFactory/factories","Microsoft.DataLakeAnalytics/accounts","Microsoft.DataLakeStore/accounts","Microsoft.DBforMariaDB/servers","Microsoft.DBforMySQL/servers","Microsoft.DBforPostgreSQL/servers","Microsoft.Devices/IotHubs","Microsoft.Devices/provisioningServices","Microsoft.DocumentDB/databaseAccounts","Microsoft.EventGrid/topics","Microsoft.EventGrid/eventSubscriptions","Microsoft.EventGrid/extensionTopics","Microsoft.EventHub/namespaces","Microsoft.EventHub/clusters","Microsoft.HDInsight/clusters","Microsoft.Insights/AutoscaleSettings","Microsoft.Insights/components","Microsoft.KeyVault/vaults","Microsoft.Kusto/clusters","Microsoft.LocationBasedServices/accounts","Microsoft.Logic/workflows","Microsoft.Logic/integrationServiceEnvironments","Microsoft.NetApp/netAppAccounts/capacityPools","Microsoft.NetApp/netAppAccounts/capacityPools/volumes","Microsoft.Network/networkInterfaces","Microsoft.Network/loadBalancers","Microsoft.Network/dnsZones","Microsoft.Network/publicIPAddresses","Microsoft.Network/azureFirewalls","Microsoft.Network/applicationGateways","Microsoft.Network/virtualNetworkGateways","Microsoft.Network/expressRouteCircuits","Microsoft.Network/expressRouteCircuits/Peerings","Microsoft.Network/connections","Microsoft.Network/trafficManagerProfiles","Microsoft.Network/networkWatchers/connectionMonitors","Microsoft.Network/frontdoors","Microsoft.Network/natGateways","Microsoft.Network/vpngateways","Microsoft.Network/virtualNetworkGateways","Microsoft.NotificationHubs/namespaces/notificationHubs","Microsoft.OperationalInsights/workspaces","Microsoft.PowerBIDedicated/capacities","Microsoft.Relay/namespaces","Microsoft.Search/searchServices","Microsoft.ServiceBus/namespaces","Microsoft.SignalRService/SignalR","Microsoft.Sql/servers/databases","Microsoft.Sql/servers/elasticPools","Microsoft.Sql/managedInstances","Microsoft.Storage/storageAccounts","Microsoft.Storage/storageAccounts/blobServices","Microsoft.Storage/storageAccounts/fileServices","Microsoft.Storage/storageAccounts/queueServices","Microsoft.Storage/storageAccounts/tableServices","Microsoft.StorageSync/storageSyncServices","Microsoft.StorageSync/storageSyncServices/syncGroups","Microsoft.StorageSync/storageSyncServices/syncGroups/serverEndpoints","Microsoft.StorageSync/storageSyncServices/registeredServers","Microsoft.StreamAnalytics/streamingJobs","Microsoft.Web/serverfarms","Microsoft.Web/sites","Microsoft.Web/sites/slots","Microsoft.Web/hostingEnvironments/multiRolePools","Microsoft.Web/hostingEnvironments/workerPools"],govazuremonitor:["Microsoft.AnalysisServices/servers","Microsoft.ApiManagement/service","Microsoft.Batch/batchAccounts","Microsoft.Cache/redis","Microsoft.ClassicCompute/virtualMachines","Microsoft.ClassicCompute/domainNames/slots/roles","Microsoft.CognitiveServices/accounts","Microsoft.Compute/virtualMachines","Microsoft.Compute/virtualMachineScaleSets","Microsoft.ContainerRegistry/registries","Microsoft.DBforMySQL/servers","Microsoft.DBforPostgreSQL/servers","Microsoft.Devices/IotHubs","Microsoft.Devices/provisioningServices","Microsoft.EventGrid/topics","Microsoft.EventGrid/eventSubscriptions","Microsoft.EventGrid/extensionTopics","Microsoft.EventHub/namespaces","Microsoft.EventHub/clusters","Microsoft.Insights/AutoscaleSettings","Microsoft.KeyVault/vaults","Microsoft.Logic/workflows","Microsoft.Network/networkInterfaces","Microsoft.Network/loadBalancers","Microsoft.Network/dnsZones","Microsoft.Network/publicIPAddresses","Microsoft.Network/azureFirewalls","Microsoft.Network/applicationGateways","Microsoft.Network/virtualNetworkGateways","Microsoft.Network/expressRouteCircuits","Microsoft.Network/expressRouteCircuits/Peerings","Microsoft.Network/connections","Microsoft.Network/trafficManagerProfiles","Microsoft.Network/networkWatchers/connectionMonitors","Microsoft.Network/frontdoors","Microsoft.NotificationHubs/namespaces/notificationHubs","Microsoft.OperationalInsights/workspaces","Microsoft.PowerBIDedicated/capacities","Microsoft.Relay/namespaces","Microsoft.ServiceBus/namespaces","Microsoft.Sql/servers/databases","Microsoft.Sql/servers/elasticPools","Microsoft.Sql/managedInstances","Microsoft.Storage/storageAccounts","Microsoft.Storage/storageAccounts/blobServices","Microsoft.Storage/storageAccounts/fileServices","Microsoft.Storage/storageAccounts/queueServices","Microsoft.Storage/storageAccounts/tableServices","Microsoft.Web/serverfarms","Microsoft.Web/sites","Microsoft.Web/sites/slots","Microsoft.Web/hostingEnvironments/multiRolePools","Microsoft.Web/hostingEnvironments/workerPools"],germanyazuremonitor:["Microsoft.AnalysisServices/servers","Microsoft.Batch/batchAccounts","Microsoft.Cache/redis","Microsoft.ClassicCompute/virtualMachines","Microsoft.ClassicCompute/domainNames/slots/roles","Microsoft.Compute/virtualMachines","Microsoft.Compute/virtualMachineScaleSets","Microsoft.DBforMySQL/servers","Microsoft.DBforPostgreSQL/servers","Microsoft.Devices/IotHubs","Microsoft.Devices/provisioningServices","Microsoft.EventHub/namespaces","Microsoft.EventHub/clusters","Microsoft.Insights/AutoscaleSettings","Microsoft.KeyVault/vaults","Microsoft.Network/networkInterfaces","Microsoft.Network/loadBalancers","Microsoft.Network/dnsZones","Microsoft.Network/publicIPAddresses","Microsoft.Network/azureFirewalls","Microsoft.Network/applicationGateways","Microsoft.Network/virtualNetworkGateways","Microsoft.Network/expressRouteCircuits","Microsoft.Network/expressRouteCircuits/Peerings","Microsoft.Network/connections","Microsoft.Network/trafficManagerProfiles","Microsoft.Network/networkWatchers/connectionMonitors","Microsoft.Network/frontdoors","Microsoft.NotificationHubs/namespaces/notificationHubs","Microsoft.OperationalInsights/workspaces","Microsoft.PowerBIDedicated/capacities","Microsoft.Relay/namespaces","Microsoft.ServiceBus/namespaces","Microsoft.Sql/servers/databases","Microsoft.Sql/servers/elasticPools","Microsoft.Sql/managedInstances","Microsoft.Storage/storageAccounts","Microsoft.Storage/storageAccounts/blobServices","Microsoft.Storage/storageAccounts/fileServices","Microsoft.Storage/storageAccounts/queueServices","Microsoft.Storage/storageAccounts/tableServices","Microsoft.StreamAnalytics/streamingJobs","Microsoft.Web/serverfarms","Microsoft.Web/sites","Microsoft.Web/sites/slots","Microsoft.Web/hostingEnvironments/multiRolePools","Microsoft.Web/hostingEnvironments/workerPools"],chinaazuremonitor:["Microsoft.AnalysisServices/servers","Microsoft.Batch/batchAccounts","Microsoft.Cache/redis","Microsoft.ClassicCompute/virtualMachines","Microsoft.ClassicCompute/domainNames/slots/roles","Microsoft.CognitiveServices/accounts","Microsoft.Compute/virtualMachines","Microsoft.Compute/virtualMachineScaleSets","Microsoft.ContainerRegistry/registries","Microsoft.DBforMySQL/servers","Microsoft.DBforPostgreSQL/servers","Microsoft.Devices/IotHubs","Microsoft.Devices/provisioningServices","Microsoft.EventHub/namespaces","Microsoft.Insights/AutoscaleSettings","Microsoft.KeyVault/vaults","Microsoft.Logic/workflows","Microsoft.Network/networkInterfaces","Microsoft.Network/loadBalancers","Microsoft.Network/dnsZones","Microsoft.Network/publicIPAddresses","Microsoft.Network/azureFirewalls","Microsoft.Network/applicationGateways","Microsoft.Network/virtualNetworkGateways","Microsoft.Network/expressRouteCircuits","Microsoft.Network/expressRouteCircuits/Peerings","Microsoft.Network/connections","Microsoft.Network/trafficManagerProfiles","Microsoft.Network/networkWatchers/connectionMonitors","Microsoft.Network/frontdoors","Microsoft.NotificationHubs/namespaces/notificationHubs","Microsoft.PowerBIDedicated/capacities","Microsoft.Relay/namespaces","Microsoft.ServiceBus/namespaces","Microsoft.Sql/servers/databases","Microsoft.Sql/servers/elasticPools","Microsoft.Sql/managedInstances","Microsoft.Storage/storageAccounts","Microsoft.Storage/storageAccounts/blobServices","Microsoft.Storage/storageAccounts/fileServices","Microsoft.Storage/storageAccounts/queueServices","Microsoft.Storage/storageAccounts/tableServices","Microsoft.StreamAnalytics/streamingJobs","Microsoft.Web/serverfarms","Microsoft.Web/sites","Microsoft.Web/sites/slots","Microsoft.Web/hostingEnvironments/multiRolePools","Microsoft.Web/hostingEnvironments/workerPools"]},this.cloudName=e}get(){return this.supportedMetricNamespaces[this.cloudName]}}var W=s("t8hP"),K=s("0/uQ"),H=s("psW0"),J=s("NPB1"),Z=s("R3SJ"),Y=s("y5pu"),ee=s("fX17");const te={None:0,Total:1,Minimum:2,Maximum:3,Average:4,Count:7};class se extends W.DataSourceWithBackend{constructor(e){super(e),this.apiVersion="2018-01-01",this.apiPreviewVersion="2017-12-01-preview",this.defaultSubscriptionId=void 0,this.baseUrl=void 0,this.resourceGroup=void 0,this.resourceName=void 0,this.url=void 0,this.supportedMetricNamespaces=[],this.timeSrv=void 0,this.instanceSettings=e,this.timeSrv=Object(J.a)(),this.defaultSubscriptionId=e.jsonData.subscriptionId;const t=Object(Z.b)(e),s=Object(Y.d)(t);this.baseUrl=`/${s}/subscriptions`,this.url=e.url,this.supportedMetricNamespaces=new B(t).get()}isConfigured(){return!this.validateDatasource()}filterQuery(e){return!!(!0!==e.hide&&e.azureMonitor.resourceGroup&&"select"!==e.azureMonitor.resourceGroup&&e.azureMonitor.resourceName&&"select"!==e.azureMonitor.resourceName&&e.azureMonitor.metricDefinition&&"select"!==e.azureMonitor.metricDefinition&&e.azureMonitor.metricName&&"select"!==e.azureMonitor.metricName&&e.azureMonitor.aggregation&&"select"!==e.azureMonitor.aggregation)}query(e){const t=e.targets.reduce((e,t)=>(e[t.refId]=t,e),{});return super.query(e).pipe(Object(H.b)(e=>Object(K.a)(this.processResponse(e,t))))}async processResponse(e,t){if(e.data)for(const s of e.data){const e=t[s.refId];if(e&&e.azureMonitor){const t=this.buildAzurePortalUrl(e.azureMonitor,e.subscription,this.timeSrv.timeRange());for(const e of s.fields)e.config.links=[{url:t,title:"View in Azure Portal",targetBlank:!0}]}}return e}stringifyAzurePortalUrlParam(e){const t="string"==typeof e?e:JSON.stringify(e);return encodeURIComponent(t)}buildAzurePortalUrl(e,t,s){var i;const r=null!==(i=e.aggregation&&te[e.aggregation])&&void 0!==i?i:te.Average,a=this.stringifyAzurePortalUrlParam({v2charts:[{metrics:[{resourceMetadata:{id:`/subscriptions/${t}/resourceGroups/${e.resourceGroup}/providers/${e.metricDefinition}/${e.resourceName}`},name:e.metricName,aggregationType:r,namespace:e.metricNamespace,metricVisualization:{displayName:e.metricName,resourceDisplayName:e.resourceName}}]}]});return`https://portal.azure.com/#blade/Microsoft_Azure_MonitoringMetrics/Metrics.ReactView/Referer/MetricsExplorer/TimeContext/${this.stringifyAzurePortalUrlParam({absolute:{startTime:s.from,endTime:s.to}})}/ChartDefinition/${a}`}applyTemplateVariables(e,t){const s=e.azureMonitor;s.timeGrainUnit&&"auto"!==s.timeGrain&&(s.timeGrain=o.a.createISO8601Duration(s.timeGrain,s.timeGrainUnit));const i=Object(W.getTemplateSrv)(),r=i.replace(e.subscription||this.defaultSubscriptionId,t),a=i.replace(s.resourceGroup,t),n=i.replace(s.resourceName,t),c=i.replace(s.metricNamespace,t),u=i.replace(s.metricDefinition,t),l=i.replace((s.timeGrain||"").toString(),t),h=i.replace(s.aggregation,t),p=i.replace(s.top||"",t),d=s.dimensionFilters.filter(e=>e.dimension&&"None"!==e.dimension).map(e=>{var s;const r=i.replace(null!==(s=e.filter)&&void 0!==s?s:"",t);return{dimension:i.replace(e.dimension,t),operator:e.operator||"eq",filter:r||"*"}});return{refId:e.refId,subscription:r,queryType:P.b.AzureMonitor,azureMonitor:{resourceGroup:a,resourceName:n,metricDefinition:u,timeGrain:l,allowedTimeGrainsMs:s.allowedTimeGrainsMs,metricName:i.replace(s.metricName,t),metricNamespace:c&&"select"!==c?c:u,aggregation:h,dimensionFilters:d,top:p||"10",alias:s.alias,format:e.format}}}metricFindQueryInternal(e){if(e.match(/^Subscriptions\(\)/i))return this.getSubscriptions();if(e.match(/^ResourceGroups\(\)/i)&&this.defaultSubscriptionId)return this.getResourceGroups(this.defaultSubscriptionId);const t=e.match(/^ResourceGroups\(([^\)]+?)(,\s?([^,]+?))?\)/i);if(t)return this.getResourceGroups(this.toVariable(t[1]));const s=e.match(/^Namespaces\(([^\)]+?)(,\s?([^,]+?))?\)/i);if(s&&this.defaultSubscriptionId&&!s[3])return this.getMetricDefinitions(this.defaultSubscriptionId,this.toVariable(s[1]));const i=e.match(/^Namespaces\(([^,]+?),\s?([^,]+?)\)/i);if(i)return this.getMetricDefinitions(this.toVariable(i[1]),this.toVariable(i[2]));const r=e.match(/^ResourceNames\(([^,]+?),\s?([^,]+?)\)/i);if(r&&this.defaultSubscriptionId){const e=this.toVariable(r[1]),t=this.toVariable(r[2]);return this.getResourceNames(this.defaultSubscriptionId,e,t)}const a=e.match(/^ResourceNames\(([^,]+?),\s?([^,]+?),\s?(.+?)\)/i);if(a){const e=this.toVariable(a[1]),t=this.toVariable(a[2]),s=this.toVariable(a[3]);return this.getResourceNames(e,t,s)}const n=e.match(/^MetricNamespace\(([^,]+?),\s?([^,]+?),\s?([^,]+?)\)/i);if(n&&this.defaultSubscriptionId){const e=this.toVariable(n[1]),t=this.toVariable(n[2]),s=this.toVariable(n[3]);return this.getMetricNamespaces(this.defaultSubscriptionId,e,t,s)}const o=e.match(/^metricnamespace\(([^,]+?),\s?([^,]+?),\s?([^,]+?),\s?([^,]+?)\)/i);if(o){const e=this.toVariable(o[1]),t=this.toVariable(o[2]),s=this.toVariable(o[3]),i=this.toVariable(o[4]);return this.getMetricNamespaces(e,t,s,i)}const c=e.match(/^MetricNames\(([^,]+?),\s?([^,]+?),\s?([^,]+?),\s?([^,]+?)\)/i);if(c&&this.defaultSubscriptionId&&-1===c[3].indexOf(",")){const e=this.toVariable(c[1]),t=this.toVariable(c[2]),s=this.toVariable(c[3]),i=this.toVariable(c[4]);return this.getMetricNames(this.defaultSubscriptionId,e,t,s,i)}const u=e.match(/^MetricNames\(([^,]+?),\s?([^,]+?),\s?([^,]+?),\s?([^,]+?),\s?(.+?)\)/i);if(u){const e=this.toVariable(u[1]),t=this.toVariable(u[2]),s=this.toVariable(u[3]),i=this.toVariable(u[4]),r=this.toVariable(u[5]);return this.getMetricNames(e,t,s,i,r)}return null}toVariable(e){return Object(W.getTemplateSrv)().replace((e||"").trim())}async getSubscriptions(){if(!this.isConfigured())return[];const e=this.baseUrl+"?api-version=2019-03-01";return await this.doRequest(e).then(e=>U.parseSubscriptions(e))}getResourceGroups(e){const t=`${this.baseUrl}/${e}/resourceGroups?api-version=${this.apiVersion}`;return this.doRequest(t).then(e=>U.parseResponseValues(e,"name","name"))}getMetricDefinitions(e,t){const s=`${this.baseUrl}/${e}/resourceGroups/${t}/resources?api-version=${this.apiVersion}`;return this.doRequest(s).then(e=>U.parseResponseValues(e,"type","type")).then(e=>Object(r.filter)(e,e=>{for(let t=0;t<this.supportedMetricNamespaces.length;t++)if(e.value.toLowerCase()===this.supportedMetricNamespaces[t].toLowerCase())return!0;return!1})).then(e=>{let t=!1;for(let s=0;s<e.length;s++)if("Microsoft.Storage/storageAccounts"===e[s].value){t=!0;break}return t&&(e.push({text:"Microsoft.Storage/storageAccounts/blobServices",value:"Microsoft.Storage/storageAccounts/blobServices"}),e.push({text:"Microsoft.Storage/storageAccounts/fileServices",value:"Microsoft.Storage/storageAccounts/fileServices"}),e.push({text:"Microsoft.Storage/storageAccounts/tableServices",value:"Microsoft.Storage/storageAccounts/tableServices"}),e.push({text:"Microsoft.Storage/storageAccounts/queueServices",value:"Microsoft.Storage/storageAccounts/queueServices"})),e.map(e=>({value:e.value,text:ee.d[e.value.toLowerCase()]||e.value}))})}getResourceNames(e,t,s){const i=`${this.baseUrl}/${e}/resourceGroups/${t}/resources?api-version=${this.apiVersion}`;return this.doRequest(i).then(e=>{if(!Object(r.startsWith)(s,"Microsoft.Storage/storageAccounts/"))return U.parseResourceNames(e,s);const t=U.parseResourceNames(e,"Microsoft.Storage/storageAccounts");for(let e=0;e<t.length;e++)t[e].text+="/default",t[e].value+="/default";return t})}getMetricNamespaces(e,t,s,i){const r=Q.buildAzureMonitorGetMetricNamespacesUrl(this.baseUrl,e,t,s,i,this.apiPreviewVersion);return this.doRequest(r).then(e=>U.parseResponseValues(e,"name","properties.metricNamespaceName"))}getMetricNames(e,t,s,i,r){const a=Q.buildAzureMonitorGetMetricNamesUrl(this.baseUrl,e,t,s,i,r,this.apiVersion);return this.doRequest(a).then(e=>U.parseResponseValues(e,"name.localizedValue","name.value"))}getMetricMetadata(e,t,s,i,r,a){const n=Q.buildAzureMonitorGetMetricNamesUrl(this.baseUrl,e,t,s,i,r,this.apiVersion);return this.doRequest(n).then(e=>U.parseMetadata(e.data,a))}async testDatasource(){const e=this.validateDatasource();if(e)return Promise.resolve(e);try{const e=this.baseUrl+"?api-version=2019-03-01";return await this.doRequest(e).then(e=>200===e.status?{status:"success",message:"Successfully queried the Azure Monitor service.",title:"Success"}:{status:"error",message:"Returned http status code "+e.status})}catch(e){let t="Azure Monitor: ";return t+=e.statusText?e.statusText+": ":"",e.data&&e.data.error&&e.data.error.code?t+=e.data.error.code+". "+e.data.error.message:e.data&&e.data.error?t+=e.data.error:e.data?t+=e.data:t+="Cannot connect to Azure Monitor REST API.",{status:"error",message:t}}}validateDatasource(){if("clientsecret"===Object(Z.a)(this.instanceSettings)){if(!this.isValidConfigField(this.instanceSettings.jsonData.tenantId))return{status:"error",message:"The Tenant Id field is required."};if(!this.isValidConfigField(this.instanceSettings.jsonData.clientId))return{status:"error",message:"The Client Id field is required."}}}isValidConfigField(e){return"string"==typeof e&&e.length>0}doRequest(e,t=1){return Object(W.getBackendSrv)().datasourceRequest({url:this.url+e,method:"GET"}).catch(s=>{if(t>0)return this.doRequest(e,t-1);throw s})}}class ie{constructor(e){this.results=e}parseQueryResult(){let e=[],t=[];for(let s=0;s<this.results.length;s++)if(this.results[s].query.raw){const i=this.results[s].query.xaxis,a=this.results[s].query.yaxis,n=this.results[s].query.spliton;t=this.results[s].result.data.Tables[0].Columns;const o=this.results[s].result.data.Tables[0].Rows;e=Object(r.concat)(e,this.parseRawQueryResultRow(this.results[s].query,t,o,i,a,n))}else{const t=this.results[s].result.data.value,i=this.results[s].query.alias;e=Object(r.concat)(e,this.parseQueryResultRow(this.results[s].query,t,i))}return e}parseRawQueryResultRow(e,t,s,i,a,n){const o=[],c=Object(r.map)(t,e=>({text:e.ColumnName,value:e.ColumnName})),u=t.findIndex(e=>e.ColumnName===i),l=a.split(","),h={};Object(r.forEach)(l,e=>{h[e]=t.findIndex(t=>t.ColumnName===e)});const p=t.findIndex(e=>e.ColumnName===n),d="timestamp"===i;return Object(r.forEach)(s,t=>{Object(r.forEach)(h,(s,i)=>{const r=-1===p?ie.findOrCreateBucket(o,i):ie.findOrCreateBucket(o,t[p]),a=d?ie.dateTimeToEpoch(t[u]):t[u];r.datapoints.push([t[s],a]),r.refId=e.refId,r.query=e.query,r.columnsForDropdown=c})}),o}parseQueryResultRow(e,t,s){const i=[];if(ie.isSingleValue(t)){const s=ie.getMetricFieldKey(t),r=ie.getKeyForAggregationField(t[s]),a=ie.dateTimeToEpoch(t.end);return i.push({target:s,datapoints:[[t[s][r],a]],refId:e.refId,query:e.query}),i}if(ie.hasSegmentsField(t.segments[0]))for(let r=0;r<t.segments.length;r++){const a=ie.dateTimeToEpoch(t.segments[r].end);for(let n=0;n<t.segments[r].segments.length;n++){const o=ie.getMetricFieldKey(t.segments[r].segments[n]),c=ie.getKeyForAggregationField(t.segments[r].segments[n][o]),u=this.getTargetName(t.segments[r].segments[n],s),l=ie.findOrCreateBucket(i,u);l.datapoints.push([t.segments[r].segments[n][o][c],a]),l.refId=e.refId,l.meta={query:e.query}}}else{const s=ie.getMetricFieldKey(t.segments[0]),r=ie.findOrCreateBucket(i,s);for(let e=0;e<t.segments.length;e++){const i=ie.dateTimeToEpoch(t.segments[e].end),a=ie.getKeyForAggregationField(t.segments[e][s]);r.datapoints.push([t.segments[e][s][a],i])}r.refId=e.refId,r.query=e.query}return i}getTargetName(e,t){let s="",i="",a="";for(const t in e)Object(r.isObject)(e[t])?s=t:(i=t,a=e[t]);if(t){const e=/\{\{([\s\S]+?)\}\}/g;return t.replace(e,(e,t,r)=>{const n=t||r;return"metric"===n?s:"groupbyname"===n?i:"groupbyvalue"===n?a:e})}return s+`{${i}="${a}"}`}static isSingleValue(e){return!ie.hasSegmentsField(e)}static findOrCreateBucket(e,t){let s=Object(r.find)(e,["target",t]);return s||(s={target:t,datapoints:[]},e.push(s)),s}static hasSegmentsField(e){const t=Object(r.keys)(e);return Object(r.indexOf)(t,"segments")>-1}static getMetricFieldKey(e){const t=Object(r.keys)(e);return Object(r.filter)(Object(r.without)(t,"start","end"),t=>Object(r.isObject)(e[t]))[0]}static getKeyForAggregationField(e){const t=Object(r.keys)(e);return Object(r.intersection)(t,["sum","avg","min","max","count","unique"])[0]}static dateTimeToEpoch(e){return Object(i.dateTime)(e).valueOf()}static parseMetricNames(e){const t=Object(r.keys)(e.data.metrics);return ie.toTextValueList(t)}parseMetadata(e){const t=this.results.data.metrics[e];if(!t)throw Error("No data found for metric: "+e);return{primaryAggType:t.defaultAggregation,supportedAggTypes:t.supportedAggregations,supportedGroupBy:t.supportedGroupBy.all}}parseGroupBys(){return ie.toTextValueList(this.results.supportedGroupBy)}parseQuerySchema(){const e={Type:"AppInsights",Tables:{}};if(this.results&&this.results.data&&this.results.data.Tables)for(let t=0;t<this.results.data.Tables[0].Rows.length;t++){const s=this.results.data.Tables[0].Rows[t],i=s[0],r=s[1],a=s[2];e.Tables[i]?e.Tables[i].OrderedColumns.push({Name:r,Type:a}):e.Tables[i]={Name:i,OrderedColumns:[{Name:r,Type:a}]}}return e}static toTextValueList(e){const t=[];for(let s=0;s<e.length;s++)t.push({text:e[s],value:e[s]});return t}}class re extends W.DataSourceWithBackend{constructor(e){super(e),this.url=void 0,this.baseUrl=void 0,this.version="beta",this.applicationId=void 0,this.logAnalyticsColumns={},this.applicationId=e.jsonData.appInsightsAppId||"";const t=Object(Z.b)(e),s=Object(Y.a)(t);this.baseUrl=`/${s}/${this.version}/apps/${this.applicationId}`,this.url=e.url||""}isConfigured(){return!!this.applicationId&&this.applicationId.length>0}createRawQueryRequest(e,t,s){return e.xaxis&&!e.timeColumn&&(e.timeColumn=e.xaxis),e.yaxis&&!e.valueColumn&&(e.valueColumn=e.yaxis),e.spliton&&!e.segmentColumn&&(e.segmentColumn=e.spliton),{type:"timeSeriesQuery",raw:!1,appInsights:{rawQuery:!0,rawQueryString:Object(W.getTemplateSrv)().replace(e.rawQueryString,t.scopedVars),timeColumn:e.timeColumn,valueColumn:e.valueColumn,segmentColumn:e.segmentColumn}}}applyTemplateVariables(e,t){const s=e.appInsights,i=s;i.timeGrainCount?s.timeGrain=o.a.createISO8601Duration(i.timeGrainCount,s.timeGrainUnit):s.timeGrainUnit&&"auto"!==s.timeGrain&&(s.timeGrain=o.a.createISO8601Duration(s.timeGrain,s.timeGrainUnit)),i.groupBy&&!s.dimension&&(s.dimension=[i.groupBy]),i.filter&&!s.dimensionFilter&&(s.dimensionFilter=i.filter),Object(r.isString)(s.dimension)&&("None"===s.dimension?s.dimension=[]:s.dimension=[s.dimension]),s.dimension||(s.dimension=[]);const a=Object(W.getTemplateSrv)();return{type:"timeSeriesQuery",refId:e.refId,format:e.format,queryType:P.b.ApplicationInsights,appInsights:{timeGrain:a.replace((s.timeGrain||"").toString(),t),metricName:a.replace(s.metricName,t),aggregation:a.replace(s.aggregation,t),dimension:s.dimension.map(e=>a.replace(e,t)),dimensionFilter:a.replace(s.dimensionFilter,t),alias:s.alias,format:e.format}}}metricFindQueryInternal(e){if(e.match(/^AppInsightsMetricNames\(\)/i))return this.getMetricNames();const t=e.match(/^AppInsightsGroupBys\(([^\)]+?)(,\s?([^,]+?))?\)/i);if(t){const e=t[1];return this.getGroupBys(Object(W.getTemplateSrv)().replace(e))}return null}testDatasource(){const e=this.baseUrl+"/metrics/metadata";return this.doRequest(e).then(e=>200===e.status?{status:"success",message:"Successfully queried the Application Insights service.",title:"Success"}:{status:"error",message:"Application Insights: Returned http status code "+e.status}).catch(e=>{let t="Application Insights: ";return t+=e.statusText?e.statusText+": ":"",e.data&&e.data.error&&"PathNotFoundError"===e.data.error.code?t+="Invalid Application Id for Application Insights service.":e.data&&e.data.error?t+=e.data.error.code+". "+e.data.error.message:t+="Cannot connect to Application Insights REST API.",{status:"error",message:t}})}doRequest(e,t=1){return Object(W.getBackendSrv)().datasourceRequest({url:this.url+e,method:"GET"}).catch(s=>{if(t>0)return this.doRequest(e,t-1);throw s})}getMetricNames(){const e=this.baseUrl+"/metrics/metadata";return this.doRequest(e).then(ie.parseMetricNames)}getMetricMetadata(e){const t=this.baseUrl+"/metrics/metadata";return this.doRequest(t).then(t=>new ie(t).parseMetadata(e))}getGroupBys(e){return this.getMetricMetadata(e).then(e=>new ie(e).parseGroupBys())}getQuerySchema(){const e=this.baseUrl+"/query/schema";return this.doRequest(e).then(e=>new ie(e).parseQuerySchema())}}class ae{constructor(e,t,s){this.rawQueryString=e,this.options=t,this.defaultTimeField=s}generate(){let e=this.rawQueryString;const t=/\$__([_a-zA-Z0-9]+)\(([^\)]*)\)/gi;e=e.replace(t,(e,t,s)=>"contains"===t?this.getMultiContains(s):e),e=e.replace(/\$__escapeMulti\(('[^]*')\)/gi,(e,t)=>this.escape(t)),this.options&&(e=e.replace(t,(e,t,s)=>"timeFilter"===t?this.getTimeFilter(s,this.options):"timeFrom"===t?this.getFrom(this.options):"timeTo"===t?this.getUntil(this.options):e),e=e.replace(/\$__interval/gi,this.options.interval));const s=e;e=encodeURIComponent(e);return{uriString:"query="+e,rawQuery:s}}getFrom(e){const t=e.range.from;return`datetime(${Object(i.dateTime)(t).startOf("minute").toISOString()})`}getUntil(e){if("now"===e.rangeRaw.to){const e=Date.now();return`datetime(${Object(i.dateTime)(e).startOf("minute").toISOString()})`}{const t=e.range.to;return`datetime(${Object(i.dateTime)(t).startOf("minute").toISOString()})`}}getTimeFilter(e,t){const s=e||this.defaultTimeField;return"now"===t.rangeRaw.to?`${s} >= ${this.getFrom(t)}`:`${s}  >= ${this.getFrom(t)} and ${s} <= ${this.getUntil(t)}`}getMultiContains(e){const t=e.indexOf(","),s=e.substring(0,t),i=e.substring(e.indexOf(",")+1);return i&&"all"===i.toLowerCase().trim()?"1 == 1":`${s.trim()} in (${i.trim()})`}escape(e){return e.substring(1,e.length-1).split("','").map(e=>`@'${e}'`).join(", ")}}class ne{constructor(e){this.columns=void 0,this.results=e}parseQueryResult(){let e=[],t=[];for(let s=0;s<this.results.length;s++){if(0===this.results[s].result.data.tables.length)continue;t=this.results[s].result.data.tables[0].columns;const i=this.results[s].result.data.tables[0].rows;e="time_series"===this.results[s].query.resultFormat?Object(r.concat)(e,this.parseTimeSeriesResult(this.results[s].query,t,i)):Object(r.concat)(e,this.parseTableResult(this.results[s].query,t,i))}return e}parseTimeSeriesResult(e,t,s){const i=[];let a=-1,n=-1,o=-1;for(let e=0;e<t.length;e++)-1===a&&"datetime"===t[e].type&&(a=e),-1===n&&"string"===t[e].type&&(n=e),-1===o&&["int","long","real","double"].indexOf(t[e].type)>-1&&(o=e);if(-1===a)throw new Error("No datetime column found in the result. The Time Series format requires a time column.");return Object(r.forEach)(s,s=>{const r=ne.dateTimeToEpoch(s[a]),c=n>-1?s[n]:t[o].name,u=ne.findOrCreateBucket(i,c);u.datapoints.push([s[o],r]),u.refId=e.refId,u.meta={executedQueryString:e.query}}),i}parseTableResult(e,t,s){return{type:"table",columns:Object(r.map)(t,e=>({text:e.name,type:e.type})),rows:s,refId:e.refId,meta:{executedQueryString:e.query}}}parseToVariables(){const e=this.parseQueryResult(),t=[];return Object(r.forEach)(e,e=>{Object(r.forEach)(Object(r.flattenDeep)(e.rows),e=>{t.push({text:e,value:e})})}),t}transformToAnnotations(e){const t=this.parseQueryResult(),s=[];return Object(r.forEach)(t,t=>{let i=-1,a=-1,n=-1;for(let e=0;e<t.columns.length;e++)-1===i&&"datetime"===t.columns[e].type&&(i=e),-1===a&&"text"===t.columns[e].text.toLowerCase()&&(a=e),-1===n&&"tags"===t.columns[e].text.toLowerCase()&&(n=e);Object(r.forEach)(t.rows,t=>{s.push({annotation:e.annotation,time:Math.floor(ne.dateTimeToEpoch(t[i])),text:t[a]?t[a].toString():"",tags:t[n]?t[n].trim().split(/\s*,\s*/):[]})})}),s}static findOrCreateBucket(e,t){let s=Object(r.find)(e,["target",t]);return s||(s={target:t,datapoints:[],refId:"",query:""},e.push(s)),s}static dateTimeToEpoch(e){return Object(i.dateTime)(e).valueOf()}static parseSubscriptions(e){const t=[];if(!e)return t;for(let s=0;s<e.data.value.length;s++)Object(r.find)(t,["value",Object(r.get)(e.data.value[s],"subscriptionId")])||t.push({text:""+Object(r.get)(e.data.value[s],"displayName"),value:Object(r.get)(e.data.value[s],"subscriptionId")});return t}}const oe=/([\w\W]+):([\w]+)(?:\s?=\s?([\w\W]+))?/;function ce(e){return e.functions?e.functions.map(e=>{const t=e.parameters&&e.parameters.split(", ").map(e=>{const t=e.match(oe);if(!t)return;const[,s,i,r]=t;return{name:s,type:i,defaultValue:r,cslDefaultValue:r}}).filter(e=>!!e);return{name:e.name,body:e.body,inputParameters:t||[]}}):[]}var ue=s("BZ/6");class le extends W.DataSourceWithBackend{constructor(e){super(e),this.url=void 0,this.baseUrl=void 0,this.applicationId=void 0,this.defaultSubscriptionId=void 0,this.azureMonitorUrl=void 0,this.defaultOrFirstWorkspace=void 0,this.cache=void 0,this.instanceSettings=e,this.cache=new Map;const t=Object(Z.b)(e),s=Object(Y.b)(t);this.baseUrl="/"+s;const i=Object(Y.c)(t);this.azureMonitorUrl=`/${i}/subscriptions`,this.url=e.url||"";const r=Object(Z.g)(e);this.defaultSubscriptionId=r?e.jsonData.subscriptionId:e.jsonData.logAnalyticsSubscriptionId,this.defaultOrFirstWorkspace=this.instanceSettings.jsonData.logAnalyticsDefaultWorkspace||""}isConfigured(){return!this.validateDatasource()}async getSubscriptions(){if(!this.isConfigured())return[];const e=this.azureMonitorUrl+"?api-version=2019-03-01";return await this.doRequest(e).then(e=>ne.parseSubscriptions(e))}async getWorkspaces(e){const t=await this.getWorkspaceList(e);return Object(r.map)(t.data.value,e=>({text:e.name,value:e.id}))||[]}getWorkspaceList(e){const t=Object(W.getTemplateSrv)().replace(e||this.defaultSubscriptionId),s=this.azureMonitorUrl+`/${t}/providers/Microsoft.OperationalInsights/workspaces?api-version=2017-04-26-preview`;return this.doRequest(s,!0)}async getMetadata(e){const t=`${this.baseUrl}/v1${e}/metadata`,s=await this.doRequest(t);if(!s.ok)throw new Error("Unable to get metadata for workspace");return s.data}async getKustoSchema(e){return function(e,t){const s={name:t,tables:e.tables,functions:ce(e),majorVersion:0,minorVersion:0};return{clusterType:"Engine",cluster:{connectionString:t,databases:[s]},database:s}}(await this.getMetadata(e),e)}applyTemplateVariables(e,t){const s=e.azureLogAnalytics,i=Object(W.getTemplateSrv)(),r=i.replace(s.resource,t);let a=i.replace(s.workspace,t);a||r||!this.defaultOrFirstWorkspace||(a=this.defaultOrFirstWorkspace);const n=i.replace(e.subscription||this.defaultSubscriptionId,t),o=i.replace(s.query,t,this.interpolateVariable);return{refId:e.refId,format:e.format,queryType:P.b.LogAnalytics,subscriptionId:n,azureLogAnalytics:{resultFormat:s.resultFormat,query:o,resource:r,workspace:a}}}query(e){return super.query(e).pipe(Object(H.b)(e=>Object(K.a)(this.processResponse(e))))}async processResponse(e){if(e.data)for(const i of e.data){var t,s;const e=null===(t=i.meta)||void 0===t||null===(s=t.custom)||void 0===s?void 0:s.encodedQuery;if(e&&e.length>0){const e=await this.buildDeepLink(i.meta.custom);if(null!=e&&e.length)for(const t of i.fields)t.config.links=[{url:e,title:"View in Azure Portal",targetBlank:!0}]}}return e}async buildDeepLink(e){const t=encodeURIComponent(e.encodedQuery),s=e.workspace,i=e.subscription,r=await this.getWorkspaceDetails(s);if(!r.workspace||!r.resourceGroup)return"";return"https://portal.azure.com/#blade/Microsoft_OperationsManagementSuite_Workspace/AnalyticsBlade/initiator/AnalyticsShareLinkToQuery/isQueryEditorVisible/true/scope/%7B%22resources%22%3A%5B%7B%22resourceId%22%3A%22%2Fsubscriptions%2F"+i+`%2Fresourcegroups%2F${r.resourceGroup}%2Fproviders%2Fmicrosoft.operationalinsights%2Fworkspaces%2F${r.workspace}`+`%22%7D%5D%7D/query/${t}/isQueryBase64Compressed/true/timespanInIsoFormat/P1D`}async getWorkspaceDetails(e){if(!this.defaultSubscriptionId)return{};const t=(await this.getWorkspaceList(this.defaultSubscriptionId)).data.value.find(t=>t.properties.customerId===e);if(!t)return{};const s=/.*resourcegroups\/(.*)\/providers.*/.exec(t.id);return!s||s.length<2?{}:{workspace:t.name,resourceGroup:s[1]}}metricFindQueryInternal(e){if(e.match(/^workspaces\(\)/i)){if(this.defaultSubscriptionId)return this.getWorkspaces(this.defaultSubscriptionId);throw new Error("No subscription ID. Specify a default subscription ID in the data source config to use workspaces() without a subscription ID")}const t=e.match(/^workspaces\(["']?([^\)]+?)["']?\)/i);return t?this.getWorkspaces((t[1]||"").trim()):this.getDefaultOrFirstWorkspace().then(t=>{if(!t)return[];const s=this.buildQuery(e,null,t),i=this.doQueries(s);return Promise.all(i).then(e=>new ne(e).parseToVariables()).catch(e=>{if(e.error&&e.error.data&&e.error.data.error&&e.error.data.error.innererror&&e.error.data.error.innererror.innererror)throw{message:e.error.data.error.innererror.innererror.message};if(e.error&&e.error.data&&e.error.data.error)throw{message:e.error.data.error.message};throw e})})}buildQuery(e,t,s){const i=new ae(Object(W.getTemplateSrv)().replace(e,{},this.interpolateVariable),t,"TimeGenerated").generate().uriString,r=Object(ue.c)(s)?`${this.baseUrl}/v1/workspaces/${s}/query?${i}`:`${this.baseUrl}/v1/${s}/query?${i}`;return[{datasourceId:this.id,url:r,resultFormat:"table"}]}interpolateVariable(e,t){if("string"==typeof e)return t.multi||t.includeAll?"'"+e+"'":e;if("number"==typeof e)return e;return Object(r.map)(e,t=>"number"==typeof e?e:"'"+t+"'").join(",")}async getDefaultOrFirstSubscription(){var e;if(this.defaultSubscriptionId)return this.defaultSubscriptionId;return null===(e=(await this.getSubscriptions())[0])||void 0===e?void 0:e.value}async getDefaultOrFirstWorkspace(){var e;if(this.defaultOrFirstWorkspace)return this.defaultOrFirstWorkspace;const t=await this.getDefaultOrFirstSubscription();if(!t)return;const s=null===(e=(await this.getWorkspaces(t))[0])||void 0===e?void 0:e.value;return s&&(this.defaultOrFirstWorkspace=s),s}annotationQuery(e){if(!e.annotation.rawQuery)return Promise.reject({message:"Query missing in annotation definition"});const t=this.buildQuery(e.annotation.rawQuery,e,e.annotation.workspace),s=this.doQueries(t);return Promise.all(s).then(t=>new ne(t).transformToAnnotations(e))}doQueries(e){return Object(r.map)(e,e=>this.doRequest(e.url).then(t=>({result:t,query:e})).catch(t=>{throw{error:t,query:e}}))}async doRequest(e,t=!1,s=1){try{if(t&&this.cache.has(e))return this.cache.get(e);const s=await Object(W.getBackendSrv)().datasourceRequest({url:this.url+e,method:"GET"});return t&&this.cache.set(e,s),s}catch(i){if(s>0)return this.doRequest(e,t,s-1);throw i}}async testDatasource(){const e=this.validateDatasource();if(e)return e;let t;try{const e=await this.getDefaultOrFirstWorkspace();if(!e)return{status:"error",message:"Workspace not found."};t=e}catch(e){let t="Azure Log Analytics requires access to Azure Monitor but had the following error: ";return{status:"error",message:this.getErrorMessage(t,e)}}try{const e=Object(ue.c)(t)?`${this.baseUrl}/v1/workspaces/${t}/metadata`:`${this.baseUrl}/v1${t}/metadata`;return await this.doRequest(e).then(e=>200===e.status?{status:"success",message:"Successfully queried the Azure Log Analytics service.",title:"Success"}:{status:"error",message:"Returned http status code "+e.status})}catch(e){let t="Azure Log Analytics: ";return{status:"error",message:this.getErrorMessage(t,e)}}}getErrorMessage(e,t){return e+=t.statusText?t.statusText+": ":"",t.data&&t.data.error&&t.data.error.code?e+=t.data.error.code+". "+t.data.error.message:t.data&&t.data.error?e+=t.data.error:t.data?e+=t.data:e+="Cannot connect to Azure Log Analytics REST API.",e}validateDatasource(){if("clientsecret"===Object(Z.a)(this.instanceSettings)){if(!this.isValidConfigField(this.instanceSettings.jsonData.logAnalyticsTenantId))return{status:"error",message:"The Tenant Id field is required."};if(!this.isValidConfigField(this.instanceSettings.jsonData.logAnalyticsClientId))return{status:"error",message:"The Client Id field is required."}}}isValidConfigField(e){return"string"==typeof e&&e.length>0}}var he=s("HNzq"),pe=s("VNr4"),de=s("F/XL");class me extends re{constructor(e){super(e)}applyTemplateVariables(e,t){const s=e.insightsAnalytics,i=s;return i.rawQueryString&&!s.query&&(s.query=i.rawQueryString),{refId:e.refId,queryType:P.b.InsightsAnalytics,insightsAnalytics:{query:Object(W.getTemplateSrv)().replace(s.query,t),resultFormat:s.resultFormat}}}}var ge,fe,be,ye,ve,xe,we,Me=s("67Y/");class Se extends W.DataSourceWithBackend{filterQuery(e){var t;return!(null===(t=e.azureResourceGraph)||void 0===t||!t.query)}applyTemplateVariables(e,t){const s=e.azureResourceGraph,i=Object(W.getTemplateSrv)().replace(s.query,t,this.interpolateVariable);return{refId:e.refId,format:e.format,queryType:P.b.AzureResourceGraph,subscriptions:e.subscriptions,azureResourceGraph:{resultFormat:"table",query:i}}}interpolateVariable(e,t){if("string"==typeof e)return t.multi||t.includeAll?"'"+e+"'":e;if("number"==typeof e)return e;return a.a.map(e,t=>"number"==typeof e?e:"'"+t+"'").join(",")}}class je extends i.DataSourceApi{constructor(e,t=Object(W.getTemplateSrv)()){super(e),this.azureMonitorDatasource=void 0,this.appInsightsDatasource=void 0,this.azureLogAnalyticsDatasource=void 0,this.insightsAnalyticsDatasource=void 0,this.resourcePickerData=void 0,this.azureResourceGraphDatasource=void 0,this.pseudoDatasource=void 0,this.optionsKey=void 0,this.templateSrv=t,this.azureMonitorDatasource=new se(e),this.appInsightsDatasource=new re(e),this.azureLogAnalyticsDatasource=new le(e),this.insightsAnalyticsDatasource=new me(e),this.azureResourceGraphDatasource=new Se(e),this.resourcePickerData=new he.a(e);const s={};s[P.b.ApplicationInsights]=this.appInsightsDatasource,s[P.b.AzureMonitor]=this.azureMonitorDatasource,s[P.b.InsightsAnalytics]=this.insightsAnalyticsDatasource,s[P.b.LogAnalytics]=this.azureLogAnalyticsDatasource,s[P.b.AzureResourceGraph]=this.azureResourceGraphDatasource,this.pseudoDatasource=s;const i={};i[P.b.ApplicationInsights]="appInsights",i[P.b.AzureMonitor]="azureMonitor",i[P.b.InsightsAnalytics]="insightsAnalytics",i[P.b.LogAnalytics]="azureLogAnalytics",i[P.b.AzureResourceGraph]="azureResourceGraph",this.optionsKey=i}query(e){const t=new Map;for(const s of e.targets){Oe(s);const i=s[this.optionsKey[s.queryType]];if(s.hide||!i)continue;if(!t.has(s.queryType)){const i=Object(r.cloneDeep)(e);i.requestId=`${i.requestId}-${s.refId}`,i.targets=[],t.set(s.queryType,i)}const a=t.get(s.queryType);null==a||a.targets.push(s)}const s=Array.from(t.entries()).map(([e,t])=>this.pseudoDatasource[e].query(t));return 1===s.length?s[0]:s.length>1?Object(pe.a)(s).pipe(Object(Me.a)(e=>{const t=[];for(const s of e)for(const e of s.data)t.push(e);return{state:i.LoadingState.Done,data:t}})):Object(de.a)({state:i.LoadingState.Done,data:[]})}async annotationQuery(e){return this.azureLogAnalyticsDatasource.annotationQuery(e)}async metricFindQuery(e){if(!e)return Promise.resolve([]);const t=this.appInsightsDatasource.metricFindQueryInternal(e);if(t)return t;const s=this.azureMonitorDatasource.metricFindQueryInternal(e);if(s)return s;const i=this.azureLogAnalyticsDatasource.metricFindQueryInternal(e);return i||Promise.resolve([])}async testDatasource(){const e=[];return e.push(this.azureMonitorDatasource.testDatasource()),e.push(this.azureLogAnalyticsDatasource.testDatasource()),this.appInsightsDatasource.isConfigured()&&e.push(this.appInsightsDatasource.testDatasource()),await Promise.all(e).then(e=>{let t="success",s="";for(let i=0;i<e.length;i++)"success"!==e[i].status&&(t=e[i].status),s+=`${i+1}. ${e[i].message} `;return{status:t,message:s,title:Object(r.upperFirst)(t)}})}getResourceGroups(e){return this.azureMonitorDatasource.getResourceGroups(this.replaceTemplateVariable(e))}getMetricDefinitions(e,t){return this.azureMonitorDatasource.getMetricDefinitions(this.replaceTemplateVariable(e),this.replaceTemplateVariable(t))}getResourceNames(e,t,s){return this.azureMonitorDatasource.getResourceNames(this.replaceTemplateVariable(e),this.replaceTemplateVariable(t),this.replaceTemplateVariable(s))}getMetricNames(e,t,s,i,r){return this.azureMonitorDatasource.getMetricNames(this.replaceTemplateVariable(e),this.replaceTemplateVariable(t),this.replaceTemplateVariable(s),this.replaceTemplateVariable(i),this.replaceTemplateVariable(r))}getMetricNamespaces(e,t,s,i){return this.azureMonitorDatasource.getMetricNamespaces(this.replaceTemplateVariable(e),this.replaceTemplateVariable(t),this.replaceTemplateVariable(s),this.replaceTemplateVariable(i))}getMetricMetadata(e,t,s,i,r,a){return this.azureMonitorDatasource.getMetricMetadata(this.replaceTemplateVariable(e),this.replaceTemplateVariable(t),this.replaceTemplateVariable(s),this.replaceTemplateVariable(i),this.replaceTemplateVariable(r),this.replaceTemplateVariable(a))}getAppInsightsMetricNames(){return this.appInsightsDatasource.getMetricNames()}getAppInsightsMetricMetadata(e){return this.appInsightsDatasource.getMetricMetadata(e)}getAppInsightsColumns(e){return this.appInsightsDatasource.logAnalyticsColumns[e]}getAzureLogAnalyticsWorkspaces(e){return this.azureLogAnalyticsDatasource.getWorkspaces(e)}getSubscriptions(){return this.azureMonitorDatasource.getSubscriptions()}interpolateVariablesInQueries(e,t){return e.map(e=>this.pseudoDatasource[e.queryType].applyTemplateVariables(e,t))}replaceTemplateVariable(e){return this.templateSrv.replace(e)}getVariables(){return this.templateSrv.getVariables().map(e=>"$"+e.name)}}function Oe(e){e.queryType===P.b.ApplicationInsights&&e.appInsights.rawQuery&&(e.queryType=P.b.InsightsAnalytics,e.insightsAnalytics=e.appInsights,delete e.appInsights),e.queryType||(e.queryType=P.b.AzureMonitor),e.queryType===P.b.AzureMonitor&&Ae(e.azureMonitor)}class Ie extends n.QueryCtrl{constructor(e,t,s){super(e,t),this.defaultDropdownValue="select",this.dummyDiminsionString="+",this.queryQueryTypeOptions=[{id:P.b.AzureMonitor,label:"Metrics"},{id:P.b.LogAnalytics,label:"Logs"},{id:P.b.ApplicationInsights,label:"Application Insights"},{id:P.b.InsightsAnalytics,label:"Insights Analytics"},{id:P.b.AzureResourceGraph,label:"Azure Resource Graph"}],this.reactQueryEditors=[P.b.AzureMonitor,P.b.LogAnalytics,P.b.ApplicationInsights,P.b.InsightsAnalytics,P.b.AzureResourceGraph],this.defaults={queryType:"Azure Monitor",azureMonitor:{resourceGroup:void 0,metricDefinition:void 0,resourceName:void 0,metricNamespace:void 0,metricName:void 0,dimensionFilter:"*",timeGrain:"auto",top:"10",aggOptions:[],timeGrains:[]},azureLogAnalytics:{query:["//change this example to create your own time series query","<table name>                                                              //the table to query (e.g. Usage, Heartbeat, Perf)","| where $__timeFilter(TimeGenerated)                                      //this is a macro used to show the full chart’s time range, choose the datetime column here","| summarize count() by <group by column>, bin(TimeGenerated, $__interval) //change “group by column” to a column in your table, such as “Computer”. The $__interval macro is used to auto-select the time grain. Can also use 1h, 5m etc.","| order by TimeGenerated asc"].join("\n"),resultFormat:"time_series",workspace:this.datasource&&this.datasource.azureLogAnalyticsDatasource?this.datasource.azureLogAnalyticsDatasource.defaultOrFirstWorkspace:""},azureResourceGraph:{resultFormat:"table"},appInsights:{metricName:this.defaultDropdownValue,timeGrain:"auto"},insightsAnalytics:{query:"",resultFormat:"time_series"}},this.resultFormats=void 0,this.workspaces=[],this.showHelp=!1,this.showLastQuery=!1,this.lastQuery="",this.lastQueryError=void 0,this.subscriptions=void 0,this.replace=e=>this.templateSrv.replace(e,this.panelCtrl.panel.scopedVars),this.getWorkspaces=()=>this.datasource.azureLogAnalyticsDatasource.getWorkspaces(this.target.subscription).then(e=>(this.workspaces=e,e.length>0&&!this.target.azureLogAnalytics.workspace&&(this.datasource.azureLogAnalyticsDatasource.defaultOrFirstWorkspace&&(this.target.azureLogAnalytics.workspace=this.datasource.azureLogAnalyticsDatasource.defaultOrFirstWorkspace),this.target.azureLogAnalytics.workspace||(this.target.azureLogAnalytics.workspace=e[0].value)),this.workspaces)).catch(this.handleQueryCtrlError.bind(this)),this.getAzureLogAnalyticsSchema=()=>this.getWorkspaces().then(()=>this.datasource.azureLogAnalyticsDatasource.getSchema(this.target.azureLogAnalytics.workspace)).catch(this.handleQueryCtrlError.bind(this)),this.onLogAnalyticsQueryChange=e=>{this.target.azureLogAnalytics.query=e},this.onLogAnalyticsQueryExecute=()=>{this.panelCtrl.refresh()},this.onInsightsAnalyticsQueryChange=e=>{this.target.insightsAnalytics.query=e},this.onQueryExecute=()=>this.refresh(),this.getAppInsightsQuerySchema=()=>this.datasource.appInsightsDatasource.getQuerySchema().catch(this.handleQueryCtrlError.bind(this)),this.removeGroupBy=e=>{const{appInsights:t}=this.target;t.dimension.splice(e,1),this.refresh()},this.handleNewQuery=e=>{Object.assign(this.target,e),this.refresh()},this.templateSrv=s,Object(r.defaultsDeep)(this.target,this.defaults),this.migrateTimeGrains(),this.migrateToFromTimes(),this.migrateToDefaultNamespace(),this.migrateApplicationInsightsKeys(),this.migrateApplicationInsightsDimensions(),Ae(this.target.azureMonitor),this.panelCtrl.events.on(i.PanelEvents.dataReceived,this.onDataReceived.bind(this),e),this.panelCtrl.events.on(i.PanelEvents.dataError,this.onDataError.bind(this),e),this.resultFormats=[{text:"Time series",value:"time_series"},{text:"Table",value:"table"}],this.getSubscriptions(),"Azure Log Analytics"===this.target.queryType&&this.getWorkspaces()}onDataReceived(e){this.lastQueryError=void 0,this.lastQuery="";const t=Object(r.find)(e,{refId:this.target.refId});t&&t.meta&&(this.lastQuery=t.meta.query)}onDataError(e){this.handleQueryCtrlError(e)}handleQueryCtrlError(e){e.query&&e.query.refId&&e.query.refId!==this.target.refId||(e.error&&e.error.data&&e.error.data.error&&e.error.data.error.innererror?e.error.data.error.innererror.innererror?this.lastQueryError=e.error.data.error.innererror.innererror.message:this.lastQueryError=e.error.data.error.innererror.message:e.error&&e.error.data&&e.error.data.error?this.lastQueryError=e.error.data.error.message:e.error&&e.error.data?this.lastQueryError=e.error.data.message:e.data&&e.data.error?this.lastQueryError=e.data.error.message:e.data&&e.data.message?this.lastQueryError=e.data.message:this.lastQueryError=e)}migrateTimeGrains(){this.target.azureMonitor.timeGrainUnit&&("auto"!==this.target.azureMonitor.timeGrain&&(this.target.azureMonitor.timeGrain=o.a.createISO8601Duration(this.target.azureMonitor.timeGrain,this.target.azureMonitor.timeGrainUnit)),delete this.target.azureMonitor.timeGrainUnit),this.target.appInsights.timeGrainUnit&&"auto"!==this.target.appInsights.timeGrain&&(this.target.appInsights.timeGrainCount?this.target.appInsights.timeGrain=o.a.createISO8601Duration(this.target.appInsights.timeGrainCount,this.target.appInsights.timeGrainUnit):(this.target.appInsights.timeGrainCount=this.target.appInsights.timeGrain,this.target.appInsights.timeGrain=o.a.createISO8601Duration(this.target.appInsights.timeGrain,this.target.appInsights.timeGrainUnit)));const e=this.target.azureMonitor.timeGrains;e&&e.length>0&&(!this.target.azureMonitor.allowedTimeGrainsMs||0===this.target.azureMonitor.allowedTimeGrainsMs.length)&&(this.target.azureMonitor.allowedTimeGrainsMs=Object(V.a)(e)),this.target.appInsights.timeGrains&&this.target.appInsights.timeGrains.length>0&&(!this.target.appInsights.allowedTimeGrainsMs||0===this.target.appInsights.allowedTimeGrainsMs.length)&&(this.target.appInsights.allowedTimeGrainsMs=Object(V.a)(this.target.appInsights.timeGrains))}migrateToFromTimes(){this.target.azureLogAnalytics.query=this.target.azureLogAnalytics.query.replace(/\$__from\s/gi,"$__timeFrom() "),this.target.azureLogAnalytics.query=this.target.azureLogAnalytics.query.replace(/\$__to\s/gi,"$__timeTo() ")}async migrateToDefaultNamespace(){this.target.azureMonitor.metricNamespace&&this.target.azureMonitor.metricNamespace!==this.defaultDropdownValue&&this.target.azureMonitor.metricDefinition||(this.target.azureMonitor.metricNamespace=this.target.azureMonitor.metricDefinition)}migrateApplicationInsightsKeys(){const e=this.target.appInsights,t={xaxis:"timeColumn",yaxis:"valueColumn",spliton:"segmentColumn",groupBy:"dimension",groupByOptions:"dimensions",filter:"dimensionFilter"};for(const s in t)e[s]&&(e[t[s]]=e[s],delete e[s])}migrateApplicationInsightsDimensions(){const{appInsights:e}=this.target;e.dimension||(e.dimension=[]),Object(r.isString)(e.dimension)&&(e.dimension=[e.dimension])}onQueryTypeChange(){if("Azure Log Analytics"===this.target.queryType)return this.getWorkspaces()}getSubscriptions(){if(this.datasource.azureMonitorDatasource.isConfigured()&&this.datasource instanceof je)return this.datasource.azureMonitorDatasource.getSubscriptions().then(e=>{const t=e.map(e=>({text:`${e.text} - ${e.value}`,value:e.value}));return this.subscriptions=t,this.target.subscription||"Azure Monitor"!==this.target.queryType?this.target.subscription||"Azure Log Analytics"!==this.target.queryType||(this.target.subscription=this.datasource.azureLogAnalyticsDatasource.subscriptionId):this.target.subscription=this.datasource.azureMonitorDatasource.subscriptionId,!this.target.subscription&&this.subscriptions.length>0&&(this.target.subscription=this.subscriptions[0].value),this.target.subscriptions||(this.target.subscriptions=e.map(e=>e.value)),this.subscriptions})}onSubscriptionChange(){if("Azure Log Analytics"===this.target.queryType)return this.getWorkspaces()}generateAutoUnits(e,t){return"auto"===e?o.a.findClosestTimeGrain("1m",Object(r.map)(t,e=>o.a.createKbnUnitFromISO8601Duration(e.value))||["1m","5m","15m","30m","1h","6h","12h","1d"]):""}getAzureMonitorAutoInterval(){return this.generateAutoUnits(this.target.azureMonitor.timeGrain,this.target.azureMonitor.timeGrains)}getApplicationInsightAutoInterval(){return this.generateAutoUnits(this.target.appInsights.timeGrain,this.target.appInsights.timeGrains)}azureMonitorAddDimensionFilter(){this.target.azureMonitor.dimensionFilters.push({dimension:"",operator:"eq",filter:""})}azureMonitorRemoveDimensionFilter(e){this.target.azureMonitor.dimensionFilters.splice(e,1),this.refresh()}get templateVariables(){return this.templateSrv.getVariables().map(e=>"$"+e.name)}getAppInsightsMetricNames(){if(this.datasource.appInsightsDatasource.isConfigured())return this.datasource.getAppInsightsMetricNames().catch(this.handleQueryCtrlError.bind(this))}getAppInsightsColumns(){return this.datasource.getAppInsightsColumns(this.target.refId)}onAppInsightsColumnChange(){return this.refresh()}onAppInsightsMetricNameChange(){if(this.target.appInsights.metricName&&this.target.appInsights.metricName!==this.defaultDropdownValue)return this.datasource.getAppInsightsMetricMetadata(this.replace(this.target.appInsights.metricName)).then(e=>(this.target.appInsights.aggOptions=e.supportedAggTypes,this.target.appInsights.dimensions=e.supportedGroupBy,this.target.appInsights.aggregation=e.primaryAggType,this.refresh())).catch(this.handleQueryCtrlError.bind(this))}getAppInsightsGroupBySegments(e){const{appInsights:t}=this.target;return this.dummyDiminsionString&&this.dummyDiminsionString.length&&"+"!==this.dummyDiminsionString&&(t.dimension||(t.dimension=[]),t.dimension.push(this.dummyDiminsionString),this.dummyDiminsionString="+",this.refresh()),Object(r.map)(t.dimensions,e=>({text:e,value:e}))}resetAppInsightsGroupBy(){this.target.appInsights.dimension="none",this.refresh()}updateTimeGrainType(){"specific"===this.target.appInsights.timeGrainType?(this.target.appInsights.timeGrainCount="1",this.target.appInsights.timeGrainUnit="minute",this.target.appInsights.timeGrain=o.a.createISO8601Duration(this.target.appInsights.timeGrainCount,this.target.appInsights.timeGrainUnit)):(this.target.appInsights.timeGrainCount="",this.target.appInsights.timeGrainUnit="")}updateAppInsightsTimeGrain(){this.target.appInsights.timeGrainUnit&&this.target.appInsights.timeGrainCount&&(this.target.appInsights.timeGrain=o.a.createISO8601Duration(this.target.appInsights.timeGrainCount,this.target.appInsights.timeGrainUnit)),this.refresh()}}function Ae(e){e.dimensionFilters||(e.dimensionFilters=[]);const t=e.dimension;t&&"None"!==t&&(e.dimensionFilters.push({dimension:t,operator:"eq",filter:e.dimensionFilter}),delete e.dimension,delete e.dimensionFilter)}function Ce(){return(Ce=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var i in s)Object.prototype.hasOwnProperty.call(s,i)&&(e[i]=s[i])}return e}).apply(this,arguments)}Ie.$inject=["$scope","$injector","templateSrv"],Ie.templateUrl="partials/query.editor.html";const{Select:ke,Input:Te}=g.LegacyForms,Ne=[{value:"msi",label:"Managed Identity"},{value:"clientsecret",label:"App Registration"}],De=e=>{const{credentials:t,azureCloudOptions:s,onCredentialsChange:i,getSubscriptions:r}=e,a=Object(Z.f)(t),[n,o]=Object(u.useState)([]),[c,l]=Object(u.useReducer)(e=>e+1,0);Object(u.useEffect)(()=>{if(!r||!a)return void h([]);let e=!1;return r().then(t=>{e||h(t,c)}),()=>{e=!0}},[c]);const h=(e,s=!1)=>{if(o(e),r)if(s&&!t.defaultSubscriptionId&&e.length>0)p(e[0]);else if(t.defaultSubscriptionId){e.find(e=>e.value===t.defaultSubscriptionId)||p(void 0)}},p=e=>{if(i){const s=Ce({},t,{defaultSubscriptionId:null==e?void 0:e.value});i(s)}};return Object(d.jsxs)("div",{className:"gf-form-group",children:[e.managedIdentityEnabled&&Object(d.jsx)("div",{className:"gf-form-inline",children:Object(d.jsxs)("div",{className:"gf-form",children:[ge||(ge=Object(d.jsx)(g.InlineFormLabel,{className:"width-12",tooltip:"Choose the type of authentication to Azure services",children:"Authentication"})),Object(d.jsx)(ke,{className:"width-15",value:Ne.find(e=>e.value===t.authType),options:Ne,onChange:e=>{if(i){o([]);const s=Ce({},t,{authType:e.value||"msi",defaultSubscriptionId:void 0});i(s)}}})]})}),"clientsecret"===t.authType&&Object(d.jsxs)(d.Fragment,{children:[s&&Object(d.jsx)("div",{className:"gf-form-inline",children:Object(d.jsxs)("div",{className:"gf-form",children:[fe||(fe=Object(d.jsx)(g.InlineFormLabel,{className:"width-12",tooltip:"Choose an Azure Cloud",children:"Azure Cloud"})),Object(d.jsx)(ke,{className:"width-15",value:s.find(e=>e.value===t.azureCloud),options:s,onChange:e=>{if(i&&"clientsecret"===t.authType){o([]);const s=Ce({},t,{azureCloud:e.value,defaultSubscriptionId:void 0});i(s)}}})]})}),Object(d.jsx)("div",{className:"gf-form-inline",children:Object(d.jsxs)("div",{className:"gf-form",children:[be||(be=Object(d.jsx)(g.InlineFormLabel,{className:"width-12",children:"Directory (tenant) ID"})),Object(d.jsx)("div",{className:"width-15",children:Object(d.jsx)(Te,{className:"width-30",placeholder:"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",value:t.tenantId||"",onChange:e=>{if(i&&"clientsecret"===t.authType){o([]);const s=Ce({},t,{tenantId:e.target.value,defaultSubscriptionId:void 0});i(s)}}})})]})}),Object(d.jsx)("div",{className:"gf-form-inline",children:Object(d.jsxs)("div",{className:"gf-form",children:[ye||(ye=Object(d.jsx)(g.InlineFormLabel,{className:"width-12",children:"Application (client) ID"})),Object(d.jsx)("div",{className:"width-15",children:Object(d.jsx)(Te,{className:"width-30",placeholder:"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",value:t.clientId||"",onChange:e=>{if(i&&"clientsecret"===t.authType){o([]);const s=Ce({},t,{clientId:e.target.value,defaultSubscriptionId:void 0});i(s)}}})})]})}),"symbol"==typeof t.clientSecret?Object(d.jsxs)("div",{className:"gf-form-inline",children:[ve||(ve=Object(d.jsxs)("div",{className:"gf-form",children:[Object(d.jsx)(g.InlineFormLabel,{className:"width-12",children:"Client Secret"}),Object(d.jsx)(Te,{className:"width-25",placeholder:"configured",disabled:!0})]})),Object(d.jsx)("div",{className:"gf-form",children:Object(d.jsx)("div",{className:"max-width-30 gf-form-inline",children:Object(d.jsx)(g.Button,{variant:"secondary",type:"button",onClick:()=>{if(i&&"clientsecret"===t.authType){o([]);const e=Ce({},t,{clientSecret:"",defaultSubscriptionId:void 0});i(e)}},children:"reset"})})})]}):Object(d.jsx)("div",{className:"gf-form-inline",children:Object(d.jsxs)("div",{className:"gf-form",children:[xe||(xe=Object(d.jsx)(g.InlineFormLabel,{className:"width-12",children:"Client Secret"})),Object(d.jsx)("div",{className:"width-15",children:Object(d.jsx)(Te,{className:"width-30",placeholder:"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",value:t.clientSecret||"",onChange:e=>{if(i&&"clientsecret"===t.authType){o([]);const s=Ce({},t,{clientSecret:e.target.value,defaultSubscriptionId:void 0});i(s)}}})})]})})]}),r&&Object(d.jsxs)(d.Fragment,{children:[Object(d.jsx)("div",{className:"gf-form-inline",children:Object(d.jsxs)("div",{className:"gf-form",children:[we||(we=Object(d.jsx)(g.InlineFormLabel,{className:"width-12",children:"Default Subscription"})),Object(d.jsx)("div",{className:"width-25",children:Object(d.jsx)(ke,{value:t.defaultSubscriptionId?n.find(e=>e.value===t.defaultSubscriptionId):void 0,options:n,onChange:p})})]})}),Object(d.jsx)("div",{className:"gf-form-inline",children:Object(d.jsx)("div",{className:"gf-form",children:Object(d.jsx)("div",{className:"max-width-30 gf-form-inline",children:Object(d.jsx)(g.Button,{variant:"secondary",size:"sm",type:"button",onClick:l,disabled:!a,children:"Load Subscriptions"})})})})]})]})};var Re;const ze=[{value:"azuremonitor",label:"Azure"},{value:"govazuremonitor",label:"Azure US Government"},{value:"germanyazuremonitor",label:"Azure Germany"},{value:"chinaazuremonitor",label:"Azure China"}],qe=e=>{const{updateOptions:t,getSubscriptions:s}=e,i=Object(u.useMemo)(()=>Object(Z.c)(e.options),[e.options]);return Object(d.jsxs)(d.Fragment,{children:[Re||(Re=Object(d.jsx)("h3",{className:"page-heading",children:"Authentication"})),Object(d.jsx)(De,{managedIdentityEnabled:W.config.azure.managedIdentityEnabled,credentials:i,azureCloudOptions:ze,onCredentialsChange:e=>{t(t=>Object(Z.h)(t,e))},getSubscriptions:s})]})};var _e,Ge,Fe,Ee;function $e(){return($e=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var i in s)Object.prototype.hasOwnProperty.call(s,i)&&(e[i]=s[i])}return e}).apply(this,arguments)}const{Select:Xe,Switch:Le}=g.LegacyForms,Pe=e=>{const{updateOptions:t,getSubscriptions:s,getWorkspaces:i}=e,r=Object(u.useMemo)(()=>Object(Z.c)(e.options),[e.options]),a=Object(u.useMemo)(()=>Object(Z.d)(e.options),[e.options]),n=a?a.defaultSubscriptionId:r.defaultSubscriptionId,[o,c]=Object(u.useState)(!!a),l=o&&"clientsecret"===r.authType,h=n&&(a?Object(Z.f)(a):Object(Z.f)(r)),p=e.options.jsonData.logAnalyticsDefaultWorkspace,[m,f]=Object(u.useState)([]),[b,y]=Object(u.useReducer)(e=>e+1,0);Object(u.useEffect)(()=>{if(!h||!n)return void v([]);let e=!1;return i(n).then(t=>{e||v(t)}),()=>{e=!0}},[b,n]);const v=e=>{if(f(e),!p&&e.length>0)t(t=>$e({},t,{jsonData:$e({},t.jsonData,{logAnalyticsDefaultWorkspace:e[0].value})}));else if(p){e.find(e=>e.value===p)||t(e=>$e({},e,{jsonData:$e({},e.jsonData,{logAnalyticsDefaultWorkspace:void 0})}))}},[x,w]=Object(u.useState)(!1),M=$e({},!a&&{tooltip:"Workspaces are pulled from default subscription selected above."}),S=l&&x&&"clientsecret"===r.authType&&!r.clientSecret;return Object(d.jsxs)(d.Fragment,{children:[_e||(_e=Object(d.jsx)("h3",{className:"page-heading",children:"Azure Monitor Logs"})),l&&Object(d.jsxs)(d.Fragment,{children:[Object(d.jsx)(Le,$e({label:"Same details as Azure Monitor API",checked:!a,onChange:e=>{const s=e.currentTarget.checked;t(e=>Object(Z.j)(e,s)),w(!0)}},M)),S&&(Ge||(Ge=Object(d.jsx)("div",{className:"grafana-info-box m-t-2",children:Object(d.jsx)("div",{className:"alert-body",children:Object(d.jsx)("p",{children:"Re-enter your Azure Monitor Client Secret to use this setting."})})}))),a&&Object(d.jsxs)(d.Fragment,{children:[Fe||(Fe=Object(d.jsxs)(g.Alert,{severity:"info",title:"Deprecated",children:["Using different credentials for Azure Monitor Logs is deprecated and will be removed in a future version.",Object(d.jsx)("br",{}),"Create a different Data Source if you need to use different credentials."]})),Object(d.jsx)(De,{managedIdentityEnabled:!1,credentials:a,onCredentialsChange:e=>{t(t=>Object(Z.i)(t,e))},getSubscriptions:s})]})]}),Object(d.jsxs)("div",{className:"gf-form-group",children:[Object(d.jsx)("div",{className:"gf-form-inline",children:Object(d.jsxs)("div",{className:"gf-form",children:[Ee||(Ee=Object(d.jsx)(g.InlineFormLabel,{className:"width-12",tooltip:"Choose the default/preferred Workspace for Azure Log Analytics queries.",children:"Default Workspace"})),Object(d.jsx)("div",{className:"width-25",children:Object(d.jsx)(Xe,{value:m.find(e=>e.value===p),options:m,onChange:e=>{t(t=>$e({},t,{jsonData:$e({},t.jsonData,{logAnalyticsDefaultWorkspace:e.value||""})}))}})})]})}),Object(d.jsx)("div",{className:"gf-form-inline",children:Object(d.jsx)("div",{className:"gf-form",children:Object(d.jsx)("div",{className:"max-width-30 gf-form-inline",children:Object(d.jsx)(g.Button,{variant:"secondary",size:"sm",type:"button",onClick:y,disabled:!h,children:"Load Workspaces"})})})})]})]})};var Ve,Qe,Ue,Be,We;const{Input:Ke}=g.LegacyForms;class He extends u.PureComponent{constructor(...e){super(...e),this.onAppInsightsResetApiKey=()=>{this.props.onResetOptionKey("appInsightsApiKey")}}render(){const{options:e,onUpdateJsonDataOption:t,onUpdateSecureJsonDataOption:s}=this.props;return Object(d.jsxs)(d.Fragment,{children:[Ve||(Ve=Object(d.jsx)("h3",{className:"page-heading",children:"Azure Application Insights"})),Object(d.jsxs)("div",{className:"gf-form-group",children:[e.secureJsonFields.appInsightsApiKey?Object(d.jsxs)("div",{className:"gf-form-inline",children:[Qe||(Qe=Object(d.jsxs)("div",{className:"gf-form",children:[Object(d.jsx)(g.InlineFormLabel,{className:"width-12",children:"API Key"}),Object(d.jsx)(Ke,{className:"width-25",placeholder:"configured",disabled:!0})]})),Object(d.jsx)("div",{className:"gf-form",children:Object(d.jsx)("div",{className:"max-width-30 gf-form-inline",children:Object(d.jsx)(g.Button,{variant:"secondary",type:"button",onClick:this.onAppInsightsResetApiKey,children:"reset"})})})]}):Object(d.jsx)("div",{className:"gf-form-inline",children:Object(d.jsxs)("div",{className:"gf-form",children:[Ue||(Ue=Object(d.jsx)(g.InlineFormLabel,{className:"width-12",children:"API Key"})),Object(d.jsx)("div",{className:"width-15",children:Object(d.jsx)(Ke,{className:"width-30",placeholder:"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",value:e.secureJsonData.appInsightsApiKey||"",onChange:s("appInsightsApiKey")})})]})}),Object(d.jsx)("div",{className:"gf-form-inline",children:Object(d.jsxs)("div",{className:"gf-form",children:[Be||(Be=Object(d.jsx)(g.InlineFormLabel,{className:"width-12",children:"Application ID"})),Object(d.jsx)("div",{className:"width-15",children:Object(d.jsx)(Ke,{className:"width-30",value:e.jsonData.appInsightsAppId||"",onChange:t("appInsightsAppId")})})]})})]}),We||(We=Object(d.jsx)(g.Alert,{severity:"info",title:"Application Insights credentials are deprecated",children:"Configure using Azure AD App Registration above and update existing queries to use Metrics or Logs."}))]})}}class Je extends u.PureComponent{constructor(e){super(e),this.templateSrv=Object(W.getTemplateSrv)(),this.updateOptions=e=>{const t=e(this.props.options);this.props.onOptionsChange(t),this.setState({unsaved:!0})},this.saveOptions=async()=>{this.state.unsaved&&(await Object(W.getBackendSrv)().put("/api/datasources/"+this.props.options.id,this.props.options).then(e=>{Object(i.updateDatasourcePluginOption)(this.props,"version",e.datasource.version)}),this.setState({unsaved:!1}))},this.getSubscriptions=async()=>{await this.saveOptions();const e=Object(Z.b)(this.props.options),t=`/${Object(Y.d)(e)}/subscriptions?api-version=2019-03-01`,s=await Object(W.getBackendSrv)().datasourceRequest({url:this.props.options.url+t,method:"GET"});return U.parseSubscriptionsForSelect(s)},this.getLogAnalyticsSubscriptions=async()=>{await this.saveOptions();const e=Object(Z.b)(this.props.options),t=`/${Object(Y.c)(e)}/subscriptions?api-version=2019-03-01`,s=await Object(W.getBackendSrv)().datasourceRequest({url:this.props.options.url+t,method:"GET"});return U.parseSubscriptionsForSelect(s)},this.getWorkspaces=async e=>{await this.saveOptions();const t=Object(Z.b)(this.props.options),s=`/${Object(Y.c)(t)}/subscriptions/${e}/providers/Microsoft.OperationalInsights/workspaces?api-version=2017-04-26-preview`,i=await Object(W.getBackendSrv)().datasourceRequest({url:this.props.options.url+s,method:"GET"});return U.parseWorkspacesForSelect(i)},this.onUpdateJsonDataOption=e=>t=>{Object(i.updateDatasourcePluginJsonDataOption)(this.props,e,t.currentTarget.value)},this.onUpdateSecureJsonDataOption=e=>t=>{Object(i.updateDatasourcePluginSecureJsonDataOption)(this.props,e,t.currentTarget.value)},this.resetSecureKey=e=>{Object(i.updateDatasourcePluginResetOption)(this.props,e)},this.state={unsaved:!1,appInsightsInitiallyConfigured:Object(Z.e)(e.options)},this.props.options.id&&Object(i.updateDatasourcePluginOption)(this.props,"url","/api/datasources/proxy/"+this.props.options.id)}render(){const{options:e}=this.props;return Object(d.jsxs)(d.Fragment,{children:[Object(d.jsx)(qe,{options:e,updateOptions:this.updateOptions,getSubscriptions:this.getSubscriptions}),Object(d.jsx)(Pe,{options:e,updateOptions:this.updateOptions,getSubscriptions:this.getLogAnalyticsSubscriptions,getWorkspaces:this.getWorkspaces}),this.state.appInsightsInitiallyConfigured&&Object(d.jsx)(He,{options:e,onUpdateJsonDataOption:this.onUpdateJsonDataOption,onUpdateSecureJsonDataOption:this.onUpdateSecureJsonDataOption,onResetOptionKey:this.resetSecureKey})]})}}class Ze{constructor(e=Object(W.getTemplateSrv)()){this.datasource=void 0,this.annotation=void 0,this.workspaces=void 0,this.subscriptions=void 0,this.defaultQuery='<your table>\n| where $__timeFilter() \n| project TimeGenerated, Text=YourTitleColumn, Tags="tag1,tag2"',this.getAzureLogAnalyticsSchema=()=>this.getWorkspaces().then(()=>this.datasource.azureLogAnalyticsDatasource.getSchema(this.annotation.workspace)).catch(()=>{}),this.onSubscriptionChange=()=>{this.getWorkspaces(!0)},this.onLogAnalyticsQueryChange=e=>{this.annotation.rawQuery=e},this.templateSrv=e,this.annotation.queryType=this.annotation.queryType||"Azure Log Analytics",this.annotation.rawQuery=this.annotation.rawQuery||this.defaultQuery,this.initDropdowns()}async initDropdowns(){await this.getSubscriptions(),await this.getWorkspaces()}async getSubscriptions(){if(this.datasource.azureMonitorDatasource.isConfigured())return this.datasource.azureMonitorDatasource.getSubscriptions().then(e=>{this.subscriptions=e,this.annotation.subscription||"Azure Log Analytics"!==this.annotation.queryType||(this.annotation.subscription=this.datasource.azureLogAnalyticsDatasource.subscriptionId),!this.annotation.subscription&&this.subscriptions.length>0&&(this.annotation.subscription=this.subscriptions[0].value)})}async getWorkspaces(e){return!e&&this.workspaces&&this.workspaces.length>0?this.workspaces:this.datasource.getAzureLogAnalyticsWorkspaces(this.annotation.subscription).then(e=>(this.workspaces=e,e.length>0&&!this.annotation.workspace&&(this.annotation.workspace=e[0].value),this.workspaces)).catch(()=>{})}get templateVariables(){return this.templateSrv.getVariables().map(e=>"$"+e.name)}}Ze.templateUrl="partials/annotations.editor.html",s.d(t,"plugin",(function(){return Ye}));const Ye=new i.DataSourcePlugin(je).setConfigEditor(Je).setQueryCtrl(Ie).setAnnotationQueryCtrl(Ze)}}]);
//# sourceMappingURL=azureMonitorPlugin.17511e2bf08b06f121f8.js.map