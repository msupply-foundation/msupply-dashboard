{"version":3,"file":"1529.e65e3aa10981aa98e7a1.js","mappings":"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","sources":["webpack://grafana/./public/app/plugins/datasource/prometheus/add_label_to_query.ts","webpack://grafana/./public/app/plugins/datasource/prometheus/language_provider.ts","webpack://grafana/./public/app/plugins/datasource/prometheus/language_utils.ts","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/shared/LabelFilterItem.tsx","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/shared/LabelFilters.tsx","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/shared/LokiAndPromQueryModellerBase.ts","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationExplainedBox.tsx","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationInfoButton.tsx","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationName.tsx","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationParamEditor.tsx","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationEditor.tsx","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationList.tsx","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationListExplained.tsx","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/shared/QueryEditorModeToggle.tsx","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/shared/QueryHeaderSwitch.tsx","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/shared/operationUtils.ts","webpack://grafana/./public/app/plugins/datasource/prometheus/querybuilder/shared/types.ts","webpack://grafana/./.yarn/__virtual__/react-use-virtual-00326e70ba/0/cache/react-use-npm-17.3.2-a032cbeb01-7379460f51.zip/node_modules/react-use/esm/usePrevious.js","webpack://grafana/./.yarn/__virtual__/react-use-virtual-00326e70ba/0/cache/react-use-npm-17.3.2-a032cbeb01-7379460f51.zip/node_modules/react-use/esm/useToggle.js","webpack://grafana/./.yarn/cache/lru-cache-npm-6.0.0-b4c8668fe1-f97f499f89.zip/node_modules/lru-cache/index.js","webpack://grafana/./.yarn/cache/yallist-npm-4.0.0-b493d9e907-343617202a.zip/node_modules/yallist/iterator.js","webpack://grafana/./.yarn/cache/yallist-npm-4.0.0-b493d9e907-343617202a.zip/node_modules/yallist/yallist.js"],"sourcesContent":["import { chain, isEqual } from 'lodash';\nimport { OPERATORS, LOGICAL_OPERATORS, PROM_KEYWORDS } from './promql';\n\nconst builtInWords = [...PROM_KEYWORDS, ...OPERATORS, ...LOGICAL_OPERATORS];\n\n// We want to extract all possible metrics and also keywords\nconst metricsAndKeywordsRegexp = /([A-Za-z:][\\w:]*)\\b(?![\\]{=!\",])/g;\n// Safari currently doesn't support negative lookbehind. When it does, we should refactor this.\n// We are creating 2 matching groups. (\\$) is for the Grafana's variables such as ${__rate_s}. We want to ignore\n// ${__rate_s} and not add variable to it.\nconst selectorRegexp = /(\\$)?{([^{]*)}/g;\n\nexport function addLabelToQuery(\n  query: string,\n  key: string,\n  value: string | number,\n  operator?: string,\n  hasNoMetrics?: boolean\n): string {\n  if (!key || !value) {\n    throw new Error('Need label to add to query.');\n  }\n\n  // We need to make sure that we convert the value back to string because it may be a number\n  const transformedValue = value === Infinity ? '+Inf' : value.toString();\n\n  // Add empty selectors to bare metric names\n  let previousWord: string;\n\n  query = query.replace(metricsAndKeywordsRegexp, (match, word, offset) => {\n    const isMetric = isWordMetric(query, word, offset, previousWord, hasNoMetrics);\n    previousWord = word;\n\n    return isMetric ? `${word}{}` : word;\n  });\n\n  // Adding label to existing selectors\n  let match = selectorRegexp.exec(query);\n  const parts = [];\n  let lastIndex = 0;\n  let suffix = '';\n\n  while (match) {\n    const prefix = query.slice(lastIndex, match.index);\n    lastIndex = match.index + match[2].length + 2;\n    suffix = query.slice(match.index + match[0].length);\n    // If we matched 1st group, we know it is Grafana's variable and we don't want to add labels\n    if (match[1]) {\n      parts.push(prefix);\n      parts.push(match[0]);\n    } else {\n      // If we didn't match first group, we are inside selector and we want to add labels\n      const selector = match[2];\n      const selectorWithLabel = addLabelToSelector(selector, key, transformedValue, operator);\n      parts.push(prefix, selectorWithLabel);\n    }\n\n    match = selectorRegexp.exec(query);\n  }\n\n  parts.push(suffix);\n  return parts.join('');\n}\n\nconst labelRegexp = /(\\w+)\\s*(=|!=|=~|!~)\\s*(\"[^\"]*\")/g;\n\nexport function addLabelToSelector(selector: string, labelKey: string, labelValue: string, labelOperator?: string) {\n  const parsedLabels = [];\n\n  // Split selector into labels\n  if (selector) {\n    let match = labelRegexp.exec(selector);\n    while (match) {\n      parsedLabels.push({ key: match[1], operator: match[2], value: match[3] });\n      match = labelRegexp.exec(selector);\n    }\n  }\n\n  // Add new label\n  const operatorForLabelKey = labelOperator || '=';\n  parsedLabels.push({ key: labelKey, operator: operatorForLabelKey, value: `\"${labelValue}\"` });\n\n  // Sort labels by key and put them together\n  const formatted = chain(parsedLabels)\n    .uniqWith(isEqual)\n    .compact()\n    .sortBy('key')\n    .map(({ key, operator, value }) => `${key}${operator}${value}`)\n    .value()\n    .join(',');\n\n  return `{${formatted}}`;\n}\n\nfunction isPositionInsideChars(text: string, position: number, openChar: string, closeChar: string) {\n  const nextSelectorStart = text.slice(position).indexOf(openChar);\n  const nextSelectorEnd = text.slice(position).indexOf(closeChar);\n  return nextSelectorEnd > -1 && (nextSelectorStart === -1 || nextSelectorStart > nextSelectorEnd);\n}\n\nfunction isWordMetric(query: string, word: string, offset: number, previousWord: string, hasNoMetrics?: boolean) {\n  const insideSelector = isPositionInsideChars(query, offset, '{', '}');\n  // Handle \"sum by (key) (metric)\"\n  const previousWordIsKeyWord = previousWord && OPERATORS.indexOf(previousWord) > -1;\n  // Check for colon as as \"word boundary\" symbol\n  const isColonBounded = word.endsWith(':');\n  // Check for words that start with \" which means that they are not metrics\n  const startsWithQuote = query[offset - 1] === '\"';\n  // Check for template variables\n  const isTemplateVariable = query[offset - 1] === '$';\n  // Check for time units\n  const isTimeUnit = ['s', 'm', 'h', 'd', 'w'].includes(word) && Boolean(Number(query[offset - 1]));\n\n  if (\n    !hasNoMetrics &&\n    !insideSelector &&\n    !isColonBounded &&\n    !previousWordIsKeyWord &&\n    !startsWithQuote &&\n    !isTemplateVariable &&\n    !isTimeUnit &&\n    builtInWords.indexOf(word) === -1\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport default addLabelToQuery;\n","import { once, chain, difference } from 'lodash';\nimport LRU from 'lru-cache';\nimport { Value } from 'slate';\nimport Prism from 'prismjs';\n\nimport {\n  AbstractLabelMatcher,\n  AbstractLabelOperator,\n  AbstractQuery,\n  dateTime,\n  HistoryItem,\n  LanguageProvider,\n} from '@grafana/data';\nimport { CompletionItem, CompletionItemGroup, SearchFunctionType, TypeaheadInput, TypeaheadOutput } from '@grafana/ui';\n\nimport {\n  addLimitInfo,\n  extractLabelMatchers,\n  fixSummariesMetadata,\n  parseSelector,\n  processHistogramMetrics,\n  processLabels,\n  roundSecToMin,\n  toPromLikeQuery,\n} from './language_utils';\nimport PromqlSyntax, { FUNCTIONS, RATE_RANGES } from './promql';\n\nimport { PrometheusDatasource } from './datasource';\nimport { PromMetricsMetadata, PromQuery } from './types';\n\nconst DEFAULT_KEYS = ['job', 'instance'];\nconst EMPTY_SELECTOR = '{}';\nconst HISTORY_ITEM_COUNT = 5;\nconst HISTORY_COUNT_CUTOFF = 1000 * 60 * 60 * 24; // 24h\n// Max number of items (metrics, labels, values) that we display as suggestions. Prevents from running out of memory.\nexport const SUGGESTIONS_LIMIT = 10000;\n\nconst wrapLabel = (label: string): CompletionItem => ({ label });\n\nconst setFunctionKind = (suggestion: CompletionItem): CompletionItem => {\n  suggestion.kind = 'function';\n  return suggestion;\n};\n\nexport function addHistoryMetadata(item: CompletionItem, history: any[]): CompletionItem {\n  const cutoffTs = Date.now() - HISTORY_COUNT_CUTOFF;\n  const historyForItem = history.filter((h) => h.ts > cutoffTs && h.query === item.label);\n  const count = historyForItem.length;\n  const recent = historyForItem[0];\n  let hint = `Queried ${count} times in the last 24h.`;\n\n  if (recent) {\n    const lastQueried = dateTime(recent.ts).fromNow();\n    hint = `${hint} Last queried ${lastQueried}.`;\n  }\n\n  return {\n    ...item,\n    documentation: hint,\n  };\n}\n\nfunction addMetricsMetadata(metric: string, metadata?: PromMetricsMetadata): CompletionItem {\n  const item: CompletionItem = { label: metric };\n  if (metadata && metadata[metric]) {\n    const { type, help } = metadata[metric];\n    item.documentation = `${type.toUpperCase()}: ${help}`;\n  }\n  return item;\n}\n\nconst PREFIX_DELIMITER_REGEX =\n  /(=\"|!=\"|=~\"|!~\"|\\{|\\[|\\(|\\+|-|\\/|\\*|%|\\^|\\band\\b|\\bor\\b|\\bunless\\b|==|>=|!=|<=|>|<|=|~|,)/;\n\ninterface AutocompleteContext {\n  history?: Array<HistoryItem<PromQuery>>;\n}\nexport default class PromQlLanguageProvider extends LanguageProvider {\n  histogramMetrics: string[];\n  timeRange?: { start: number; end: number };\n  metrics: string[];\n  metricsMetadata?: PromMetricsMetadata;\n  declare startTask: Promise<any>;\n  datasource: PrometheusDatasource;\n  labelKeys: string[] = [];\n  declare labelFetchTs: number;\n\n  /**\n   *  Cache for labels of series. This is bit simplistic in the sense that it just counts responses each as a 1 and does\n   *  not account for different size of a response. If that is needed a `length` function can be added in the options.\n   *  10 as a max size is totally arbitrary right now.\n   */\n  private labelsCache = new LRU<string, Record<string, string[]>>(10);\n\n  constructor(datasource: PrometheusDatasource, initialValues?: Partial<PromQlLanguageProvider>) {\n    super();\n\n    this.datasource = datasource;\n    this.histogramMetrics = [];\n    this.timeRange = { start: 0, end: 0 };\n    this.metrics = [];\n\n    Object.assign(this, initialValues);\n  }\n\n  // Strip syntax chars so that typeahead suggestions can work on clean inputs\n  cleanText(s: string) {\n    const parts = s.split(PREFIX_DELIMITER_REGEX);\n    const last = parts.pop()!;\n    return last.trimLeft().replace(/\"$/, '').replace(/^\"/, '');\n  }\n\n  get syntax() {\n    return PromqlSyntax;\n  }\n\n  request = async (url: string, defaultValue: any, params = {}): Promise<any> => {\n    try {\n      const res = await this.datasource.metadataRequest(url, params);\n      return res.data.data;\n    } catch (error) {\n      console.error(error);\n    }\n\n    return defaultValue;\n  };\n\n  start = async (): Promise<any[]> => {\n    if (this.datasource.lookupsDisabled) {\n      return [];\n    }\n\n    // TODO #33976: make those requests parallel\n    await this.fetchLabels();\n    this.metrics = (await this.fetchLabelValues('__name__')) || [];\n    this.metricsMetadata = fixSummariesMetadata(await this.request('/api/v1/metadata', {}));\n    this.histogramMetrics = processHistogramMetrics(this.metrics).sort();\n    return [];\n  };\n\n  getLabelKeys(): string[] {\n    return this.labelKeys;\n  }\n\n  provideCompletionItems = async (\n    { prefix, text, value, labelKey, wrapperClasses }: TypeaheadInput,\n    context: AutocompleteContext = {}\n  ): Promise<TypeaheadOutput> => {\n    const emptyResult: TypeaheadOutput = { suggestions: [] };\n\n    if (!value) {\n      return emptyResult;\n    }\n\n    // Local text properties\n    const empty = value.document.text.length === 0;\n    const selectedLines = value.document.getTextsAtRange(value.selection);\n    const currentLine = selectedLines.size === 1 ? selectedLines.first().getText() : null;\n\n    const nextCharacter = currentLine ? currentLine[value.selection.anchor.offset] : null;\n\n    // Syntax spans have 3 classes by default. More indicate a recognized token\n    const tokenRecognized = wrapperClasses.length > 3;\n    // Non-empty prefix, but not inside known token\n    const prefixUnrecognized = prefix && !tokenRecognized;\n\n    // Prevent suggestions in `function(|suffix)`\n    const noSuffix = !nextCharacter || nextCharacter === ')';\n\n    // Prefix is safe if it does not immediately follow a complete expression and has no text after it\n    const safePrefix = prefix && !text.match(/^[\\]})\\s]+$/) && noSuffix;\n\n    // About to type next operand if preceded by binary operator\n    const operatorsPattern = /[+\\-*/^%]/;\n    const isNextOperand = text.match(operatorsPattern);\n\n    // Determine candidates by CSS context\n    if (wrapperClasses.includes('context-range')) {\n      // Suggestions for metric[|]\n      return this.getRangeCompletionItems();\n    } else if (wrapperClasses.includes('context-labels')) {\n      // Suggestions for metric{|} and metric{foo=|}, as well as metric-independent label queries like {|}\n      return this.getLabelCompletionItems({ prefix, text, value, labelKey, wrapperClasses });\n    } else if (wrapperClasses.includes('context-aggregation')) {\n      // Suggestions for sum(metric) by (|)\n      return this.getAggregationCompletionItems(value);\n    } else if (empty) {\n      // Suggestions for empty query field\n      return this.getEmptyCompletionItems(context);\n    } else if (prefixUnrecognized && noSuffix && !isNextOperand) {\n      // Show term suggestions in a couple of scenarios\n      return this.getBeginningCompletionItems(context);\n    } else if (prefixUnrecognized && safePrefix) {\n      // Show term suggestions in a couple of scenarios\n      return this.getTermCompletionItems();\n    }\n\n    return emptyResult;\n  };\n\n  getBeginningCompletionItems = (context: AutocompleteContext): TypeaheadOutput => {\n    return {\n      suggestions: [...this.getEmptyCompletionItems(context).suggestions, ...this.getTermCompletionItems().suggestions],\n    };\n  };\n\n  getEmptyCompletionItems = (context: AutocompleteContext): TypeaheadOutput => {\n    const { history } = context;\n    const suggestions: CompletionItemGroup[] = [];\n\n    if (history && history.length) {\n      const historyItems = chain(history)\n        .map((h) => h.query.expr)\n        .filter()\n        .uniq()\n        .take(HISTORY_ITEM_COUNT)\n        .map(wrapLabel)\n        .map((item) => addHistoryMetadata(item, history))\n        .value();\n\n      suggestions.push({\n        searchFunctionType: SearchFunctionType.Prefix,\n        skipSort: true,\n        label: 'History',\n        items: historyItems,\n      });\n    }\n\n    return { suggestions };\n  };\n\n  getTermCompletionItems = (): TypeaheadOutput => {\n    const { metrics, metricsMetadata } = this;\n    const suggestions: CompletionItemGroup[] = [];\n\n    suggestions.push({\n      searchFunctionType: SearchFunctionType.Prefix,\n      label: 'Functions',\n      items: FUNCTIONS.map(setFunctionKind),\n    });\n\n    if (metrics && metrics.length) {\n      suggestions.push({\n        label: 'Metrics',\n        items: metrics.map((m) => addMetricsMetadata(m, metricsMetadata)),\n        searchFunctionType: SearchFunctionType.Fuzzy,\n      });\n    }\n\n    return { suggestions };\n  };\n\n  getRangeCompletionItems(): TypeaheadOutput {\n    return {\n      context: 'context-range',\n      suggestions: [\n        {\n          label: 'Range vector',\n          items: [...RATE_RANGES],\n        },\n      ],\n    };\n  }\n\n  getAggregationCompletionItems = async (value: Value): Promise<TypeaheadOutput> => {\n    const suggestions: CompletionItemGroup[] = [];\n\n    // Stitch all query lines together to support multi-line queries\n    let queryOffset;\n    const queryText = value.document.getBlocks().reduce((text, block) => {\n      if (text === undefined) {\n        return '';\n      }\n      if (!block) {\n        return text;\n      }\n\n      const blockText = block?.getText();\n\n      if (value.anchorBlock.key === block.key) {\n        // Newline characters are not accounted for but this is irrelevant\n        // for the purpose of extracting the selector string\n        queryOffset = value.selection.anchor.offset + text.length;\n      }\n\n      return text + blockText;\n    }, '');\n\n    // Try search for selector part on the left-hand side, such as `sum (m) by (l)`\n    const openParensAggregationIndex = queryText.lastIndexOf('(', queryOffset);\n    let openParensSelectorIndex = queryText.lastIndexOf('(', openParensAggregationIndex - 1);\n    let closeParensSelectorIndex = queryText.indexOf(')', openParensSelectorIndex);\n\n    // Try search for selector part of an alternate aggregation clause, such as `sum by (l) (m)`\n    if (openParensSelectorIndex === -1) {\n      const closeParensAggregationIndex = queryText.indexOf(')', queryOffset);\n      closeParensSelectorIndex = queryText.indexOf(')', closeParensAggregationIndex + 1);\n      openParensSelectorIndex = queryText.lastIndexOf('(', closeParensSelectorIndex);\n    }\n\n    const result = {\n      suggestions,\n      context: 'context-aggregation',\n    };\n\n    // Suggestions are useless for alternative aggregation clauses without a selector in context\n    if (openParensSelectorIndex === -1) {\n      return result;\n    }\n\n    // Range vector syntax not accounted for by subsequent parse so discard it if present\n    const selectorString = queryText\n      .slice(openParensSelectorIndex + 1, closeParensSelectorIndex)\n      .replace(/\\[[^\\]]+\\]$/, '');\n\n    const selector = parseSelector(selectorString, selectorString.length - 2).selector;\n\n    const series = await this.getSeries(selector);\n    const labelKeys = Object.keys(series);\n    if (labelKeys.length > 0) {\n      const limitInfo = addLimitInfo(labelKeys);\n      suggestions.push({\n        label: `Labels${limitInfo}`,\n        items: labelKeys.map(wrapLabel),\n        searchFunctionType: SearchFunctionType.Fuzzy,\n      });\n    }\n    return result;\n  };\n\n  getLabelCompletionItems = async ({\n    text,\n    wrapperClasses,\n    labelKey,\n    value,\n  }: TypeaheadInput): Promise<TypeaheadOutput> => {\n    if (!value) {\n      return { suggestions: [] };\n    }\n\n    const suggestions: CompletionItemGroup[] = [];\n    const line = value.anchorBlock.getText();\n    const cursorOffset = value.selection.anchor.offset;\n    const suffix = line.substr(cursorOffset);\n    const prefix = line.substr(0, cursorOffset);\n    const isValueStart = text.match(/^(=|=~|!=|!~)/);\n    const isValueEnd = suffix.match(/^\"?[,}]|$/);\n    // Detect cursor in front of value, e.g., {key=|\"}\n    const isPreValue = prefix.match(/(=|=~|!=|!~)$/) && suffix.match(/^\"/);\n\n    // Don't suggest anything at the beginning or inside a value\n    const isValueEmpty = isValueStart && isValueEnd;\n    const hasValuePrefix = isValueEnd && !isValueStart;\n    if ((!isValueEmpty && !hasValuePrefix) || isPreValue) {\n      return { suggestions };\n    }\n\n    // Get normalized selector\n    let selector;\n    let parsedSelector;\n    try {\n      parsedSelector = parseSelector(line, cursorOffset);\n      selector = parsedSelector.selector;\n    } catch {\n      selector = EMPTY_SELECTOR;\n    }\n\n    const containsMetric = selector.includes('__name__=');\n    const existingKeys = parsedSelector ? parsedSelector.labelKeys : [];\n\n    let series: Record<string, string[]> = {};\n    // Query labels for selector\n    if (selector) {\n      series = await this.getSeries(selector, !containsMetric);\n    }\n\n    if (Object.keys(series).length === 0) {\n      console.warn(`Server did not return any values for selector = ${selector}`);\n      return { suggestions };\n    }\n\n    let context: string | undefined;\n\n    if ((text && isValueStart) || wrapperClasses.includes('attr-value')) {\n      // Label values\n      if (labelKey && series[labelKey]) {\n        context = 'context-label-values';\n        const limitInfo = addLimitInfo(series[labelKey]);\n        suggestions.push({\n          label: `Label values for \"${labelKey}\"${limitInfo}`,\n          items: series[labelKey].map(wrapLabel),\n          searchFunctionType: SearchFunctionType.Fuzzy,\n        });\n      }\n    } else {\n      // Label keys\n      const labelKeys = series ? Object.keys(series) : containsMetric ? null : DEFAULT_KEYS;\n\n      if (labelKeys) {\n        const possibleKeys = difference(labelKeys, existingKeys);\n        if (possibleKeys.length) {\n          context = 'context-labels';\n          const newItems = possibleKeys.map((key) => ({ label: key }));\n          const limitInfo = addLimitInfo(newItems);\n          const newSuggestion: CompletionItemGroup = {\n            label: `Labels${limitInfo}`,\n            items: newItems,\n            searchFunctionType: SearchFunctionType.Fuzzy,\n          };\n          suggestions.push(newSuggestion);\n        }\n      }\n    }\n\n    return { context, suggestions };\n  };\n\n  importFromAbstractQuery(labelBasedQuery: AbstractQuery): PromQuery {\n    return toPromLikeQuery(labelBasedQuery);\n  }\n\n  exportToAbstractQuery(query: PromQuery): AbstractQuery {\n    const promQuery = query.expr;\n    if (!promQuery || promQuery.length === 0) {\n      return { refId: query.refId, labelMatchers: [] };\n    }\n    const tokens = Prism.tokenize(promQuery, PromqlSyntax);\n    const labelMatchers: AbstractLabelMatcher[] = extractLabelMatchers(tokens);\n    const nameLabelValue = getNameLabelValue(promQuery, tokens);\n    if (nameLabelValue && nameLabelValue.length > 0) {\n      labelMatchers.push({\n        name: '__name__',\n        operator: AbstractLabelOperator.Equal,\n        value: nameLabelValue,\n      });\n    }\n\n    return {\n      refId: query.refId,\n      labelMatchers,\n    };\n  }\n\n  async getSeries(selector: string, withName?: boolean): Promise<Record<string, string[]>> {\n    if (this.datasource.lookupsDisabled) {\n      return {};\n    }\n    try {\n      if (selector === EMPTY_SELECTOR) {\n        return await this.fetchDefaultSeries();\n      } else {\n        return await this.fetchSeriesLabels(selector, withName);\n      }\n    } catch (error) {\n      // TODO: better error handling\n      console.error(error);\n      return {};\n    }\n  }\n\n  fetchLabelValues = async (key: string): Promise<string[]> => {\n    const params = this.datasource.getTimeRangeParams();\n    const url = `/api/v1/label/${key}/values`;\n    return await this.request(url, [], params);\n  };\n\n  async getLabelValues(key: string): Promise<string[]> {\n    return await this.fetchLabelValues(key);\n  }\n\n  /**\n   * Fetches all label keys\n   */\n  async fetchLabels(): Promise<string[]> {\n    const url = '/api/v1/labels';\n    const params = this.datasource.getTimeRangeParams();\n    this.labelFetchTs = Date.now().valueOf();\n\n    const res = await this.request(url, [], params);\n    if (Array.isArray(res)) {\n      this.labelKeys = res.slice().sort();\n    }\n\n    return [];\n  }\n\n  /**\n   * Fetch labels for a series. This is cached by it's args but also by the global timeRange currently selected as\n   * they can change over requested time.\n   * @param name\n   * @param withName\n   */\n  fetchSeriesLabels = async (name: string, withName?: boolean): Promise<Record<string, string[]>> => {\n    const range = this.datasource.getTimeRangeParams();\n    const urlParams = {\n      ...range,\n      'match[]': name,\n    };\n    const url = `/api/v1/series`;\n    // Cache key is a bit different here. We add the `withName` param and also round up to a minute the intervals.\n    // The rounding may seem strange but makes relative intervals like now-1h less prone to need separate request every\n    // millisecond while still actually getting all the keys for the correct interval. This still can create problems\n    // when user does not the newest values for a minute if already cached.\n    const cacheParams = new URLSearchParams({\n      'match[]': name,\n      start: roundSecToMin(parseInt(range.start, 10)).toString(),\n      end: roundSecToMin(parseInt(range.end, 10)).toString(),\n      withName: withName ? 'true' : 'false',\n    });\n\n    const cacheKey = `/api/v1/series?${cacheParams.toString()}`;\n    let value = this.labelsCache.get(cacheKey);\n    if (!value) {\n      const data = await this.request(url, [], urlParams);\n      const { values } = processLabels(data, withName);\n      value = values;\n      this.labelsCache.set(cacheKey, value);\n    }\n    return value;\n  };\n\n  /**\n   * Fetch series for a selector. Use this for raw results. Use fetchSeriesLabels() to get labels.\n   * @param match\n   */\n  fetchSeries = async (match: string): Promise<Array<Record<string, string>>> => {\n    const url = '/api/v1/series';\n    const range = this.datasource.getTimeRangeParams();\n    const params = { ...range, 'match[]': match };\n    return await this.request(url, {}, params);\n  };\n\n  /**\n   * Fetch this only one as we assume this won't change over time. This is cached differently from fetchSeriesLabels\n   * because we can cache more aggressively here and also we do not want to invalidate this cache the same way as in\n   * fetchSeriesLabels.\n   */\n  fetchDefaultSeries = once(async () => {\n    const values = await Promise.all(DEFAULT_KEYS.map((key) => this.fetchLabelValues(key)));\n    return DEFAULT_KEYS.reduce((acc, key, i) => ({ ...acc, [key]: values[i] }), {});\n  });\n}\n\nfunction getNameLabelValue(promQuery: string, tokens: any): string {\n  let nameLabelValue = '';\n  for (let prop in tokens) {\n    if (typeof tokens[prop] === 'string') {\n      nameLabelValue = tokens[prop] as string;\n      break;\n    }\n  }\n  return nameLabelValue;\n}\n","import { PromMetricsMetadata, PromMetricsMetadataItem } from './types';\nimport { addLabelToQuery } from './add_label_to_query';\nimport { SUGGESTIONS_LIMIT } from './language_provider';\nimport { DataQuery, AbstractQuery, AbstractLabelOperator, AbstractLabelMatcher } from '@grafana/data';\nimport { Token } from 'prismjs';\nimport { invert } from 'lodash';\n\nexport const processHistogramMetrics = (metrics: string[]) => {\n  const resultSet: Set<string> = new Set();\n  const regexp = new RegExp('_bucket($|:)');\n  for (let index = 0; index < metrics.length; index++) {\n    const metric = metrics[index];\n    const isHistogramValue = regexp.test(metric);\n    if (isHistogramValue) {\n      resultSet.add(metric);\n    }\n  }\n  return [...resultSet];\n};\n\nexport function processLabels(labels: Array<{ [key: string]: string }>, withName = false) {\n  // For processing we are going to use sets as they have significantly better performance than arrays\n  // After we process labels, we will convert sets to arrays and return object with label values in arrays\n  const valueSet: { [key: string]: Set<string> } = {};\n  labels.forEach((label) => {\n    const { __name__, ...rest } = label;\n    if (withName) {\n      valueSet['__name__'] = valueSet['__name__'] || new Set();\n      if (!valueSet['__name__'].has(__name__)) {\n        valueSet['__name__'].add(__name__);\n      }\n    }\n\n    Object.keys(rest).forEach((key) => {\n      if (!valueSet[key]) {\n        valueSet[key] = new Set();\n      }\n      if (!valueSet[key].has(rest[key])) {\n        valueSet[key].add(rest[key]);\n      }\n    });\n  });\n\n  // valueArray that we are going to return in the object\n  const valueArray: { [key: string]: string[] } = {};\n  limitSuggestions(Object.keys(valueSet)).forEach((key) => {\n    valueArray[key] = limitSuggestions(Array.from(valueSet[key]));\n  });\n\n  return { values: valueArray, keys: Object.keys(valueArray) };\n}\n\n// const cleanSelectorRegexp = /\\{(\\w+=\"[^\"\\n]*?\")(,\\w+=\"[^\"\\n]*?\")*\\}/;\nexport const selectorRegexp = /\\{[^}]*?(\\}|$)/;\nexport const labelRegexp = /\\b(\\w+)(!?=~?)(\"[^\"\\n]*?\")/g;\nexport function parseSelector(query: string, cursorOffset = 1): { labelKeys: any[]; selector: string } {\n  if (!query.match(selectorRegexp)) {\n    // Special matcher for metrics\n    if (query.match(/^[A-Za-z:][\\w:]*$/)) {\n      return {\n        selector: `{__name__=\"${query}\"}`,\n        labelKeys: ['__name__'],\n      };\n    }\n    throw new Error('Query must contain a selector: ' + query);\n  }\n\n  // Check if inside a selector\n  const prefix = query.slice(0, cursorOffset);\n  const prefixOpen = prefix.lastIndexOf('{');\n  const prefixClose = prefix.lastIndexOf('}');\n  if (prefixOpen === -1) {\n    throw new Error('Not inside selector, missing open brace: ' + prefix);\n  }\n  if (prefixClose > -1 && prefixClose > prefixOpen) {\n    throw new Error('Not inside selector, previous selector already closed: ' + prefix);\n  }\n  const suffix = query.slice(cursorOffset);\n  const suffixCloseIndex = suffix.indexOf('}');\n  const suffixClose = suffixCloseIndex + cursorOffset;\n  const suffixOpenIndex = suffix.indexOf('{');\n  const suffixOpen = suffixOpenIndex + cursorOffset;\n  if (suffixClose === -1) {\n    throw new Error('Not inside selector, missing closing brace in suffix: ' + suffix);\n  }\n  if (suffixOpenIndex > -1 && suffixOpen < suffixClose) {\n    throw new Error('Not inside selector, next selector opens before this one closed: ' + suffix);\n  }\n\n  // Extract clean labels to form clean selector, incomplete labels are dropped\n  const selector = query.slice(prefixOpen, suffixClose);\n  const labels: { [key: string]: { value: string; operator: string } } = {};\n  selector.replace(labelRegexp, (label, key, operator, value) => {\n    const labelOffset = query.indexOf(label);\n    const valueStart = labelOffset + key.length + operator.length + 1;\n    const valueEnd = labelOffset + key.length + operator.length + value.length - 1;\n    // Skip label if cursor is in value\n    if (cursorOffset < valueStart || cursorOffset > valueEnd) {\n      labels[key] = { value, operator };\n    }\n    return '';\n  });\n\n  // Add metric if there is one before the selector\n  const metricPrefix = query.slice(0, prefixOpen);\n  const metricMatch = metricPrefix.match(/[A-Za-z:][\\w:]*$/);\n  if (metricMatch) {\n    labels['__name__'] = { value: `\"${metricMatch[0]}\"`, operator: '=' };\n  }\n\n  // Build sorted selector\n  const labelKeys = Object.keys(labels).sort();\n  const cleanSelector = labelKeys.map((key) => `${key}${labels[key].operator}${labels[key].value}`).join(',');\n\n  const selectorString = ['{', cleanSelector, '}'].join('');\n\n  return { labelKeys, selector: selectorString };\n}\n\nexport function expandRecordingRules(query: string, mapping: { [name: string]: string }): string {\n  const ruleNames = Object.keys(mapping);\n  const rulesRegex = new RegExp(`(\\\\s|^)(${ruleNames.join('|')})(\\\\s|$|\\\\(|\\\\[|\\\\{)`, 'ig');\n  const expandedQuery = query.replace(rulesRegex, (match, pre, name, post) => `${pre}${mapping[name]}${post}`);\n\n  // Split query into array, so if query uses operators, we can correctly add labels to each individual part.\n  const queryArray = expandedQuery.split(/(\\+|\\-|\\*|\\/|\\%|\\^)/);\n\n  // Regex that matches occurrences of ){ or }{ or ]{ which is a sign of incorrecly added labels.\n  const invalidLabelsRegex = /(\\)\\{|\\}\\{|\\]\\{)/;\n  const correctlyExpandedQueryArray = queryArray.map((query) => {\n    return addLabelsToExpression(query, invalidLabelsRegex);\n  });\n\n  return correctlyExpandedQueryArray.join('');\n}\n\nfunction addLabelsToExpression(expr: string, invalidLabelsRegexp: RegExp) {\n  const match = expr.match(invalidLabelsRegexp);\n  if (!match) {\n    return expr;\n  }\n\n  // Split query into 2 parts - before the invalidLabelsRegex match and after.\n  const indexOfRegexMatch = match.index ?? 0;\n  const exprBeforeRegexMatch = expr.substr(0, indexOfRegexMatch + 1);\n  const exprAfterRegexMatch = expr.substr(indexOfRegexMatch + 1);\n\n  // Create arrayOfLabelObjects with label objects that have key, operator and value.\n  const arrayOfLabelObjects: Array<{ key: string; operator: string; value: string }> = [];\n  exprAfterRegexMatch.replace(labelRegexp, (label, key, operator, value) => {\n    arrayOfLabelObjects.push({ key, operator, value });\n    return '';\n  });\n\n  // Loop trough all of the label objects and add them to query.\n  // As a starting point we have valid query without the labels.\n  let result = exprBeforeRegexMatch;\n  arrayOfLabelObjects.filter(Boolean).forEach((obj) => {\n    // Remove extra set of quotes from obj.value\n    const value = obj.value.substr(1, obj.value.length - 2);\n    result = addLabelToQuery(result, obj.key, value, obj.operator);\n  });\n\n  return result;\n}\n\n/**\n * Adds metadata for synthetic metrics for which the API does not provide metadata.\n * See https://github.com/grafana/grafana/issues/22337 for details.\n *\n * @param metadata HELP and TYPE metadata from /api/v1/metadata\n */\nexport function fixSummariesMetadata(metadata: { [metric: string]: PromMetricsMetadataItem[] }): PromMetricsMetadata {\n  if (!metadata) {\n    return metadata;\n  }\n  const baseMetadata: PromMetricsMetadata = {};\n  const summaryMetadata: PromMetricsMetadata = {};\n  for (const metric in metadata) {\n    // NOTE: based on prometheus-documentation, we can receive\n    // multiple metadata-entries for the given metric, it seems\n    // it happens when the same metric is on multiple targets\n    // and their help-text differs\n    // (https://prometheus.io/docs/prometheus/latest/querying/api/#querying-metric-metadata)\n    // for now we just use the first entry.\n    const item = metadata[metric][0];\n    baseMetadata[metric] = item;\n\n    if (item.type === 'histogram') {\n      summaryMetadata[`${metric}_bucket`] = {\n        type: 'counter',\n        help: `Cumulative counters for the observation buckets (${item.help})`,\n      };\n      summaryMetadata[`${metric}_count`] = {\n        type: 'counter',\n        help: `Count of events that have been observed for the histogram metric (${item.help})`,\n      };\n      summaryMetadata[`${metric}_sum`] = {\n        type: 'counter',\n        help: `Total sum of all observed values for the histogram metric (${item.help})`,\n      };\n    }\n    if (item.type === 'summary') {\n      summaryMetadata[`${metric}_count`] = {\n        type: 'counter',\n        help: `Count of events that have been observed for the base metric (${item.help})`,\n      };\n      summaryMetadata[`${metric}_sum`] = {\n        type: 'counter',\n        help: `Total sum of all observed values for the base metric (${item.help})`,\n      };\n    }\n  }\n  // Synthetic series\n  const syntheticMetadata: PromMetricsMetadata = {};\n  syntheticMetadata['ALERTS'] = {\n    type: 'counter',\n    help: 'Time series showing pending and firing alerts. The sample value is set to 1 as long as the alert is in the indicated active (pending or firing) state.',\n  };\n\n  return { ...baseMetadata, ...summaryMetadata, ...syntheticMetadata };\n}\n\nexport function roundMsToMin(milliseconds: number): number {\n  return roundSecToMin(milliseconds / 1000);\n}\n\nexport function roundSecToMin(seconds: number): number {\n  return Math.floor(seconds / 60);\n}\n\nexport function limitSuggestions(items: string[]) {\n  return items.slice(0, SUGGESTIONS_LIMIT);\n}\n\nexport function addLimitInfo(items: any[] | undefined): string {\n  return items && items.length >= SUGGESTIONS_LIMIT ? `, limited to the first ${SUGGESTIONS_LIMIT} received items` : '';\n}\n\n// NOTE: the following 2 exported functions are very similar to the prometheus*Escape\n// functions in datasource.ts, but they are not exactly the same algorithm, and we found\n// no way to reuse one in the another or vice versa.\n\n// Prometheus regular-expressions use the RE2 syntax (https://github.com/google/re2/wiki/Syntax),\n// so every character that matches something in that list has to be escaped.\n// the list of metacharacters is: *+?()|\\.[]{}^$\n// we make a javascript regular expression that matches those characters:\nconst RE2_METACHARACTERS = /[*+?()|\\\\.\\[\\]{}^$]/g;\nfunction escapePrometheusRegexp(value: string): string {\n  return value.replace(RE2_METACHARACTERS, '\\\\$&');\n}\n\n// based on the openmetrics-documentation, the 3 symbols we have to handle are:\n// - \\n ... the newline character\n// - \\  ... the backslash character\n// - \"  ... the double-quote character\nexport function escapeLabelValueInExactSelector(labelValue: string): string {\n  return labelValue.replace(/\\\\/g, '\\\\\\\\').replace(/\\n/g, '\\\\n').replace(/\"/g, '\\\\\"');\n}\n\nexport function escapeLabelValueInRegexSelector(labelValue: string): string {\n  return escapeLabelValueInExactSelector(escapePrometheusRegexp(labelValue));\n}\n\nconst FromPromLikeMap: Record<string, AbstractLabelOperator> = {\n  '=': AbstractLabelOperator.Equal,\n  '!=': AbstractLabelOperator.NotEqual,\n  '=~': AbstractLabelOperator.EqualRegEx,\n  '!~': AbstractLabelOperator.NotEqualRegEx,\n};\nconst ToPromLikeMap: Record<AbstractLabelOperator, string> = invert(FromPromLikeMap) as Record<\n  AbstractLabelOperator,\n  string\n>;\n\nexport function toPromLikeExpr(labelBasedQuery: AbstractQuery): string {\n  const expr = labelBasedQuery.labelMatchers\n    .map((selector: AbstractLabelMatcher) => {\n      const operator = ToPromLikeMap[selector.operator];\n      if (operator) {\n        return `${selector.name}${operator}\"${selector.value}\"`;\n      } else {\n        return '';\n      }\n    })\n    .filter((e: string) => e !== '')\n    .join(', ');\n\n  return expr ? `{${expr}}` : '';\n}\n\nexport function toPromLikeQuery(labelBasedQuery: AbstractQuery): PromLikeQuery {\n  return {\n    refId: labelBasedQuery.refId,\n    expr: toPromLikeExpr(labelBasedQuery),\n    range: true,\n  };\n}\n\nexport interface PromLikeQuery extends DataQuery {\n  expr: string;\n  range: boolean;\n}\n\nexport function extractLabelMatchers(tokens: Array<string | Token>): AbstractLabelMatcher[] {\n  const labelMatchers: AbstractLabelMatcher[] = [];\n\n  for (let prop in tokens) {\n    if (tokens[prop] instanceof Token) {\n      let token: Token = tokens[prop] as Token;\n      if (token.type === 'context-labels') {\n        let labelKey = '';\n        let labelValue = '';\n        let labelOperator = '';\n        let contentTokens: any[] = token.content as any[];\n        for (let currentToken in contentTokens) {\n          if (typeof contentTokens[currentToken] === 'string') {\n            let currentStr: string;\n            currentStr = contentTokens[currentToken] as string;\n            if (currentStr === '=' || currentStr === '!=' || currentStr === '=~' || currentStr === '!~') {\n              labelOperator = currentStr;\n            }\n          } else if (contentTokens[currentToken] instanceof Token) {\n            switch (contentTokens[currentToken].type) {\n              case 'label-key':\n                labelKey = contentTokens[currentToken].content as string;\n                break;\n              case 'label-value':\n                labelValue = contentTokens[currentToken].content as string;\n                labelValue = labelValue.substring(1, labelValue.length - 1);\n                const labelComparator = FromPromLikeMap[labelOperator];\n                if (labelComparator) {\n                  labelMatchers.push({ name: labelKey, operator: labelComparator, value: labelValue });\n                }\n                break;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return labelMatchers;\n}\n","import React, { useState } from 'react';\nimport { Select } from '@grafana/ui';\nimport { SelectableValue, toOption } from '@grafana/data';\nimport { QueryBuilderLabelFilter } from './types';\nimport { AccessoryButton, InputGroup } from '@grafana/experimental';\n\nexport interface Props {\n  defaultOp: string;\n  item: Partial<QueryBuilderLabelFilter>;\n  onChange: (value: QueryBuilderLabelFilter) => void;\n  onGetLabelNames: (forLabel: Partial<QueryBuilderLabelFilter>) => Promise<string[]>;\n  onGetLabelValues: (forLabel: Partial<QueryBuilderLabelFilter>) => Promise<string[]>;\n  onDelete: () => void;\n}\n\nexport function LabelFilterItem({ item, defaultOp, onChange, onDelete, onGetLabelNames, onGetLabelValues }: Props) {\n  const [state, setState] = useState<{\n    labelNames?: Array<SelectableValue<any>>;\n    labelValues?: Array<SelectableValue<any>>;\n    isLoadingLabelNames?: boolean;\n    isLoadingLabelValues?: boolean;\n  }>({});\n\n  const isMultiSelect = () => {\n    return item.op === operators[0].label;\n  };\n\n  const getValue = (item: any) => {\n    if (item && item.value) {\n      if (item.value.indexOf('|') > 0) {\n        return item.value.split('|').map((x: any) => ({ label: x, value: x }));\n      }\n      return toOption(item.value);\n    }\n    return null;\n  };\n\n  const getOptions = () => {\n    if (!state.labelValues && item && item.value && item.value.indexOf('|') > 0) {\n      return getValue(item);\n    }\n\n    return state.labelValues;\n  };\n\n  return (\n    <div data-testid=\"prometheus-dimensions-filter-item\">\n      <InputGroup>\n        <Select\n          inputId=\"prometheus-dimensions-filter-item-key\"\n          width=\"auto\"\n          value={item.label ? toOption(item.label) : null}\n          allowCustomValue\n          onOpenMenu={async () => {\n            setState({ isLoadingLabelNames: true });\n            const labelNames = (await onGetLabelNames(item)).map((x) => ({ label: x, value: x }));\n            setState({ labelNames, isLoadingLabelNames: undefined });\n          }}\n          isLoading={state.isLoadingLabelNames}\n          options={state.labelNames}\n          onChange={(change) => {\n            if (change.label) {\n              onChange({\n                ...item,\n                op: item.op ?? defaultOp,\n                label: change.label,\n              } as any as QueryBuilderLabelFilter);\n            }\n          }}\n        />\n\n        <Select\n          value={toOption(item.op ?? defaultOp)}\n          options={operators}\n          width=\"auto\"\n          onChange={(change) => {\n            if (change.value != null) {\n              onChange({ ...item, op: change.value } as any as QueryBuilderLabelFilter);\n            }\n          }}\n        />\n\n        <Select\n          inputId=\"prometheus-dimensions-filter-item-value\"\n          width=\"auto\"\n          value={getValue(item)}\n          allowCustomValue\n          onOpenMenu={async () => {\n            setState({ isLoadingLabelValues: true });\n            const labelValues = await onGetLabelValues(item);\n            setState({\n              ...state,\n              labelValues: labelValues.map((value) => ({ label: value, value })),\n              isLoadingLabelValues: undefined,\n            });\n          }}\n          isMulti={isMultiSelect()}\n          isLoading={state.isLoadingLabelValues}\n          options={getOptions()}\n          onChange={(change) => {\n            if (change.value) {\n              onChange({ ...item, value: change.value, op: item.op ?? defaultOp } as any as QueryBuilderLabelFilter);\n            } else {\n              const changes = change\n                .map((change: any) => {\n                  return change.label;\n                })\n                .join('|');\n              onChange({ ...item, value: changes, op: item.op ?? defaultOp } as any as QueryBuilderLabelFilter);\n            }\n          }}\n        />\n        <AccessoryButton aria-label=\"remove\" icon=\"times\" variant=\"secondary\" onClick={onDelete} />\n      </InputGroup>\n    </div>\n  );\n}\n\nconst operators = [\n  { label: '=~', value: '=~' },\n  { label: '=', value: '=' },\n  { label: '!=', value: '!=' },\n];\n","import { EditorField, EditorFieldGroup, EditorList } from '@grafana/experimental';\nimport { isEqual } from 'lodash';\nimport React, { useState } from 'react';\nimport { QueryBuilderLabelFilter } from '../shared/types';\nimport { LabelFilterItem } from './LabelFilterItem';\n\nexport interface Props {\n  labelsFilters: QueryBuilderLabelFilter[];\n  onChange: (labelFilters: QueryBuilderLabelFilter[]) => void;\n  onGetLabelNames: (forLabel: Partial<QueryBuilderLabelFilter>) => Promise<string[]>;\n  onGetLabelValues: (forLabel: Partial<QueryBuilderLabelFilter>) => Promise<string[]>;\n}\n\nexport function LabelFilters({ labelsFilters, onChange, onGetLabelNames, onGetLabelValues }: Props) {\n  const defaultOp = '=';\n  const [items, setItems] = useState<Array<Partial<QueryBuilderLabelFilter>>>(\n    labelsFilters.length === 0 ? [{ op: defaultOp }] : labelsFilters\n  );\n\n  const onLabelsChange = (newItems: Array<Partial<QueryBuilderLabelFilter>>) => {\n    setItems(newItems);\n\n    // Extract full label filters with both label & value\n    const newLabels = newItems.filter((x) => x.label != null && x.value != null);\n    if (!isEqual(newLabels, labelsFilters)) {\n      onChange(newLabels as QueryBuilderLabelFilter[]);\n    }\n  };\n\n  return (\n    <EditorFieldGroup>\n      <EditorField label=\"Labels\">\n        <EditorList\n          items={items}\n          onChange={onLabelsChange}\n          renderItem={(item, onChangeItem, onDelete) => (\n            <LabelFilterItem\n              item={item}\n              defaultOp={defaultOp}\n              onChange={onChangeItem}\n              onDelete={onDelete}\n              onGetLabelNames={onGetLabelNames}\n              onGetLabelValues={onGetLabelValues}\n            />\n          )}\n        />\n      </EditorField>\n    </EditorFieldGroup>\n  );\n}\n","import { Registry } from '@grafana/data';\nimport {\n  QueryBuilderLabelFilter,\n  QueryBuilderOperation,\n  QueryBuilderOperationDef,\n  QueryWithOperations,\n  VisualQueryModeller,\n} from './types';\n\nexport interface VisualQueryBinary<T> {\n  operator: string;\n  vectorMatches?: string;\n  query: T;\n}\n\nexport abstract class LokiAndPromQueryModellerBase<T extends QueryWithOperations> implements VisualQueryModeller {\n  protected operationsRegisty: Registry<QueryBuilderOperationDef>;\n  private categories: string[] = [];\n\n  constructor(getOperations: () => QueryBuilderOperationDef[]) {\n    this.operationsRegisty = new Registry<QueryBuilderOperationDef>(getOperations);\n  }\n\n  protected setOperationCategories(categories: string[]) {\n    this.categories = categories;\n  }\n\n  getOperationsForCategory(category: string) {\n    return this.operationsRegisty.list().filter((op) => op.category === category && !op.hideFromList);\n  }\n\n  getAlternativeOperations(key: string) {\n    return this.operationsRegisty.list().filter((op) => op.alternativesKey === key);\n  }\n\n  getCategories() {\n    return this.categories;\n  }\n\n  getOperationDef(id: string) {\n    return this.operationsRegisty.get(id);\n  }\n\n  renderOperations(queryString: string, operations: QueryBuilderOperation[]) {\n    for (const operation of operations) {\n      const def = this.operationsRegisty.get(operation.id);\n      queryString = def.renderer(operation, def, queryString);\n    }\n\n    return queryString;\n  }\n\n  renderBinaryQueries(queryString: string, binaryQueries?: Array<VisualQueryBinary<T>>) {\n    if (binaryQueries) {\n      for (const binQuery of binaryQueries) {\n        queryString = `${this.renderBinaryQuery(queryString, binQuery)}`;\n      }\n    }\n    return queryString;\n  }\n\n  private renderBinaryQuery(leftOperand: string, binaryQuery: VisualQueryBinary<T>) {\n    let result = leftOperand + ` ${binaryQuery.operator} `;\n    if (binaryQuery.vectorMatches) {\n      result += `${binaryQuery.vectorMatches} `;\n    }\n    return result + `${this.renderQuery(binaryQuery.query)}`;\n  }\n\n  renderLabels(labels: QueryBuilderLabelFilter[]) {\n    if (labels.length === 0) {\n      return '';\n    }\n\n    let expr = '{';\n    for (const filter of labels) {\n      if (expr !== '{') {\n        expr += ', ';\n      }\n\n      expr += `${filter.label}${filter.op}\"${filter.value}\"`;\n    }\n\n    return expr + `}`;\n  }\n\n  abstract renderQuery(query: T): string;\n}\n","import { css } from '@emotion/css';\nimport { GrafanaTheme2, renderMarkdown } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\nimport React from 'react';\n\nexport interface Props {\n  title: string;\n  children?: React.ReactNode;\n  markdown?: string;\n  stepNumber: number;\n}\n\nexport function OperationExplainedBox({ title, stepNumber, markdown, children }: Props) {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.box}>\n      <div className={styles.stepNumber}>{stepNumber}</div>\n      <div className={styles.boxInner}>\n        <div className={styles.header}>\n          <span>{title}</span>\n        </div>\n        <div className={styles.body}>\n          {markdown && <div dangerouslySetInnerHTML={{ __html: renderMarkdown(markdown) }}></div>}\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    box: css({\n      background: theme.colors.background.secondary,\n      padding: theme.spacing(1),\n      borderRadius: theme.shape.borderRadius(),\n      position: 'relative',\n      marginBottom: theme.spacing(0.5),\n    }),\n    boxInner: css({\n      marginLeft: theme.spacing(4),\n    }),\n    stepNumber: css({\n      fontWeight: theme.typography.fontWeightMedium,\n      background: theme.colors.secondary.main,\n      width: '20px',\n      height: '20px',\n      borderRadius: '50%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'absolute',\n      top: '10px',\n      left: '11px',\n      fontSize: theme.typography.bodySmall.fontSize,\n    }),\n    header: css({\n      paddingBottom: theme.spacing(0.5),\n      display: 'flex',\n      alignItems: 'center',\n      fontFamily: theme.typography.fontFamilyMonospace,\n    }),\n    body: css({\n      color: theme.colors.text.secondary,\n      'p:last-child': {\n        margin: 0,\n      },\n      a: {\n        color: theme.colors.text.link,\n        textDecoration: 'underline',\n      },\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport { GrafanaTheme2, renderMarkdown } from '@grafana/data';\nimport { FlexItem } from '@grafana/experimental';\nimport { Button, Portal, useStyles2 } from '@grafana/ui';\nimport React, { useState } from 'react';\nimport { usePopper } from 'react-popper';\nimport { useToggle } from 'react-use';\nimport { QueryBuilderOperation, QueryBuilderOperationDef } from './types';\n\nexport interface Props {\n  operation: QueryBuilderOperation;\n  def: QueryBuilderOperationDef;\n}\n\nexport const OperationInfoButton = React.memo<Props>(({ def, operation }) => {\n  const styles = useStyles2(getStyles);\n  const [popperTrigger, setPopperTrigger] = useState<HTMLButtonElement | null>(null);\n  const [popover, setPopover] = useState<HTMLDivElement | null>(null);\n  const [isOpen, toggleIsOpen] = useToggle(false);\n\n  const popper = usePopper(popperTrigger, popover, {\n    placement: 'top',\n    modifiers: [\n      { name: 'arrow', enabled: true },\n      {\n        name: 'preventOverflow',\n        enabled: true,\n        options: {\n          rootBoundary: 'viewport',\n        },\n      },\n    ],\n  });\n\n  return (\n    <>\n      <Button\n        ref={setPopperTrigger}\n        icon=\"info-circle\"\n        size=\"sm\"\n        variant=\"secondary\"\n        fill=\"text\"\n        onClick={toggleIsOpen}\n      />\n      {isOpen && (\n        <Portal>\n          <div ref={setPopover} style={popper.styles.popper} {...popper.attributes.popper} className={styles.docBox}>\n            <div className={styles.docBoxHeader}>\n              <span>{def.renderer(operation, def, '<expr>')}</span>\n              <FlexItem grow={1} />\n              <Button icon=\"times\" onClick={toggleIsOpen} fill=\"text\" variant=\"secondary\" title=\"Remove operation\" />\n            </div>\n            <div\n              className={styles.docBoxBody}\n              dangerouslySetInnerHTML={{ __html: getOperationDocs(def, operation) }}\n            ></div>\n          </div>\n        </Portal>\n      )}\n    </>\n  );\n});\n\nOperationInfoButton.displayName = 'OperationDocs';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    docBox: css({\n      overflow: 'hidden',\n      background: theme.colors.background.canvas,\n      border: `1px solid ${theme.colors.border.strong}`,\n      boxShadow: theme.shadows.z2,\n      maxWidth: '600px',\n      padding: theme.spacing(1),\n      borderRadius: theme.shape.borderRadius(),\n      zIndex: theme.zIndex.tooltip,\n    }),\n    docBoxHeader: css({\n      fontSize: theme.typography.h5.fontSize,\n      fontFamily: theme.typography.fontFamilyMonospace,\n      paddingBottom: theme.spacing(1),\n      display: 'flex',\n      alignItems: 'center',\n    }),\n    docBoxBody: css({\n      // The markdown paragraph has a marginBottom this removes it\n      marginBottom: theme.spacing(-1),\n      color: theme.colors.text.secondary,\n    }),\n    signature: css({\n      fontSize: theme.typography.bodySmall.fontSize,\n      fontFamily: theme.typography.fontFamilyMonospace,\n    }),\n    dropdown: css({\n      opacity: 0,\n      color: theme.colors.text.secondary,\n    }),\n  };\n};\nfunction getOperationDocs(def: QueryBuilderOperationDef, op: QueryBuilderOperation): string {\n  return renderMarkdown(def.explainHandler ? def.explainHandler(op, def) : def.documentation ?? 'no docs');\n}\n","import { css } from '@emotion/css';\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { Icon, Select, useStyles2 } from '@grafana/ui';\nimport React, { useState } from 'react';\nimport { VisualQueryModeller, QueryBuilderOperation, QueryBuilderOperationDef } from './types';\n\nexport interface Props {\n  operation: QueryBuilderOperation;\n  def: QueryBuilderOperationDef;\n  index: number;\n  queryModeller: VisualQueryModeller;\n  onChange: (index: number, update: QueryBuilderOperation) => void;\n}\n\ninterface State {\n  isOpen?: boolean;\n  alternatives?: Array<SelectableValue<QueryBuilderOperationDef>>;\n}\n\nexport const OperationName = React.memo<Props>(({ operation, def, index, onChange, queryModeller }) => {\n  const styles = useStyles2(getStyles);\n  const [state, setState] = useState<State>({});\n\n  const onToggleSwitcher = () => {\n    if (state.isOpen) {\n      setState({ ...state, isOpen: false });\n    } else {\n      const alternatives = queryModeller\n        .getAlternativeOperations(def.alternativesKey!)\n        .map((alt) => ({ label: alt.name, value: alt }));\n      setState({ isOpen: true, alternatives });\n    }\n  };\n\n  const nameElement = <span>{def.name ?? def.id}</span>;\n\n  if (!def.alternativesKey) {\n    return nameElement;\n  }\n\n  return (\n    <>\n      {!state.isOpen && (\n        <button\n          className={styles.wrapper}\n          onClick={onToggleSwitcher}\n          title={'Click to replace with alternative function'}\n        >\n          {nameElement}\n          <Icon className={`${styles.dropdown} operation-header-show-on-hover`} name=\"arrow-down\" size=\"sm\" />\n        </button>\n      )}\n      {state.isOpen && (\n        <Select\n          autoFocus\n          openMenuOnFocus\n          placeholder=\"Replace with\"\n          options={state.alternatives}\n          isOpen={true}\n          onCloseMenu={onToggleSwitcher}\n          onChange={(value) => {\n            if (value.value) {\n              onChange(index, {\n                ...operation,\n                id: value.value.id,\n              });\n            }\n          }}\n        />\n      )}\n    </>\n  );\n});\n\nOperationName.displayName = 'OperationName';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css({\n      display: 'inline-block',\n      background: 'transparent',\n      padding: 0,\n      border: 'none',\n      boxShadow: 'none',\n      cursor: 'pointer',\n    }),\n    dropdown: css({\n      opacity: 0,\n      color: theme.colors.text.secondary,\n    }),\n  };\n};\n","import { toOption } from '@grafana/data';\nimport { Input, Select } from '@grafana/ui';\nimport React, { ComponentType } from 'react';\nimport { QueryBuilderOperationParamDef, QueryBuilderOperationParamEditorProps } from '../shared/types';\n\nexport function getOperationParamEditor(\n  paramDef: QueryBuilderOperationParamDef\n): ComponentType<QueryBuilderOperationParamEditorProps> {\n  if (paramDef.editor) {\n    return paramDef.editor;\n  }\n\n  if (paramDef.options) {\n    return SelectInputParamEditor;\n  }\n\n  return SimpleInputParamEditor;\n}\n\nfunction SimpleInputParamEditor(props: QueryBuilderOperationParamEditorProps) {\n  return (\n    <Input\n      defaultValue={props.value ?? ''}\n      onKeyDown={(evt) => {\n        if (evt.key === 'Enter') {\n          if (evt.currentTarget.value !== props.value) {\n            props.onChange(props.index, evt.currentTarget.value);\n          }\n          props.onRunQuery();\n        }\n      }}\n      onBlur={(evt) => {\n        props.onChange(props.index, evt.currentTarget.value);\n      }}\n    />\n  );\n}\n\nfunction SelectInputParamEditor({ paramDef, value, index, onChange }: QueryBuilderOperationParamEditorProps) {\n  const selectOptions = paramDef.options!.map((option) => ({\n    label: option as string,\n    value: option as string,\n  }));\n\n  return (\n    <Select\n      menuShouldPortal\n      value={toOption(value as string)}\n      options={selectOptions}\n      onChange={(value) => onChange(index, value.value!)}\n    />\n  );\n}\n","import { css } from '@emotion/css';\nimport { DataSourceApi, GrafanaTheme2 } from '@grafana/data';\nimport { FlexItem, Stack } from '@grafana/experimental';\nimport { Button, useStyles2 } from '@grafana/ui';\nimport React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport {\n  VisualQueryModeller,\n  QueryBuilderOperation,\n  QueryBuilderOperationParamValue,\n  QueryBuilderOperationDef,\n  QueryBuilderOperationParamDef,\n} from '../shared/types';\nimport { OperationInfoButton } from './OperationInfoButton';\nimport { OperationName } from './OperationName';\nimport { getOperationParamEditor } from './OperationParamEditor';\n\nexport interface Props {\n  operation: QueryBuilderOperation;\n  index: number;\n  query: any;\n  datasource: DataSourceApi;\n  queryModeller: VisualQueryModeller;\n  onChange: (index: number, update: QueryBuilderOperation) => void;\n  onRemove: (index: number) => void;\n  onRunQuery: () => void;\n}\n\nexport function OperationEditor({\n  operation,\n  index,\n  onRemove,\n  onChange,\n  onRunQuery,\n  queryModeller,\n  query,\n  datasource,\n}: Props) {\n  const styles = useStyles2(getStyles);\n  const def = queryModeller.getOperationDef(operation.id);\n\n  const onParamValueChanged = (paramIdx: number, value: QueryBuilderOperationParamValue) => {\n    const update: QueryBuilderOperation = { ...operation, params: [...operation.params] };\n    update.params[paramIdx] = value;\n    callParamChangedThenOnChange(def, update, index, paramIdx, onChange);\n  };\n\n  const onAddRestParam = () => {\n    const update: QueryBuilderOperation = { ...operation, params: [...operation.params, ''] };\n    callParamChangedThenOnChange(def, update, index, operation.params.length, onChange);\n  };\n\n  const onRemoveRestParam = (paramIdx: number) => {\n    const update: QueryBuilderOperation = {\n      ...operation,\n      params: [...operation.params.slice(0, paramIdx), ...operation.params.slice(paramIdx + 1)],\n    };\n    callParamChangedThenOnChange(def, update, index, paramIdx, onChange);\n  };\n\n  const operationElements: React.ReactNode[] = [];\n\n  for (let paramIndex = 0; paramIndex < operation.params.length; paramIndex++) {\n    const paramDef = def.params[Math.min(def.params.length - 1, paramIndex)];\n    const Editor = getOperationParamEditor(paramDef);\n\n    operationElements.push(\n      <div className={styles.paramRow} key={`${paramIndex}-1`}>\n        <div className={styles.paramName}>{paramDef.name}</div>\n        <div className={styles.paramValue}>\n          <Stack gap={0.5} direction=\"row\" alignItems=\"center\" wrap={false}>\n            <Editor\n              index={paramIndex}\n              paramDef={paramDef}\n              value={operation.params[paramIndex]}\n              operation={operation}\n              onChange={onParamValueChanged}\n              onRunQuery={onRunQuery}\n              query={query}\n              datasource={datasource}\n            />\n            {paramDef.restParam && (operation.params.length > def.params.length || paramDef.optional) && (\n              <Button\n                size=\"sm\"\n                fill=\"text\"\n                icon=\"times\"\n                variant=\"secondary\"\n                title={`Remove ${paramDef.name}`}\n                onClick={() => onRemoveRestParam(paramIndex)}\n              />\n            )}\n          </Stack>\n        </div>\n      </div>\n    );\n  }\n\n  // Handle adding button for rest params\n  let restParam: React.ReactNode | undefined;\n  if (def.params.length > 0) {\n    const lastParamDef = def.params[def.params.length - 1];\n    if (lastParamDef.restParam) {\n      restParam = renderAddRestParamButton(lastParamDef, onAddRestParam, operation.params.length, styles);\n    }\n  }\n\n  return (\n    <Draggable draggableId={`operation-${index}`} index={index}>\n      {(provided) => (\n        <div\n          className={styles.card}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          data-testid={`operation-wrapper-for-${operation.id}`}\n        >\n          <div className={styles.header} {...provided.dragHandleProps}>\n            <OperationName\n              operation={operation}\n              def={def}\n              index={index}\n              onChange={onChange}\n              queryModeller={queryModeller}\n            />\n            <FlexItem grow={1} />\n            <div className={`${styles.operationHeaderButtons} operation-header-show-on-hover`}>\n              <OperationInfoButton def={def} operation={operation} />\n              <Button\n                icon=\"times\"\n                size=\"sm\"\n                onClick={() => onRemove(index)}\n                fill=\"text\"\n                variant=\"secondary\"\n                title=\"Remove operation\"\n              />\n            </div>\n          </div>\n          <div className={styles.body}>{operationElements}</div>\n          {restParam}\n          {index < query.operations.length - 1 && (\n            <div className={styles.arrow}>\n              <div className={styles.arrowLine} />\n              <div className={styles.arrowArrow} />\n            </div>\n          )}\n        </div>\n      )}\n    </Draggable>\n  );\n}\n\nfunction renderAddRestParamButton(\n  paramDef: QueryBuilderOperationParamDef,\n  onAddRestParam: () => void,\n  paramIndex: number,\n  styles: OperationEditorStyles\n) {\n  return (\n    <div className={styles.restParam} key={`${paramIndex}-2`}>\n      <Button size=\"sm\" icon=\"plus\" title={`Add ${paramDef.name}`} variant=\"secondary\" onClick={onAddRestParam}>\n        {paramDef.name}\n      </Button>\n    </div>\n  );\n}\n\nfunction callParamChangedThenOnChange(\n  def: QueryBuilderOperationDef,\n  operation: QueryBuilderOperation,\n  operationIndex: number,\n  paramIndex: number,\n  onChange: (index: number, update: QueryBuilderOperation) => void\n) {\n  if (def.paramChangedHandler) {\n    onChange(operationIndex, def.paramChangedHandler(paramIndex, operation, def));\n  } else {\n    onChange(operationIndex, operation);\n  }\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    card: css({\n      background: theme.colors.background.primary,\n      border: `1px solid ${theme.colors.border.medium}`,\n      display: 'flex',\n      flexDirection: 'column',\n      cursor: 'grab',\n      borderRadius: theme.shape.borderRadius(1),\n      marginBottom: theme.spacing(1),\n      position: 'relative',\n    }),\n    header: css({\n      borderBottom: `1px solid ${theme.colors.border.medium}`,\n      padding: theme.spacing(0.5, 0.5, 0.5, 1),\n      gap: theme.spacing(1),\n      display: 'flex',\n      alignItems: 'center',\n      '&:hover .operation-header-show-on-hover': css({\n        opacity: 1,\n      }),\n    }),\n    infoIcon: css({\n      color: theme.colors.text.secondary,\n    }),\n    body: css({\n      margin: theme.spacing(1, 1, 0.5, 1),\n      display: 'table',\n    }),\n    paramRow: css({\n      display: 'table-row',\n      verticalAlign: 'middle',\n    }),\n    paramName: css({\n      display: 'table-cell',\n      padding: theme.spacing(0, 1, 0, 0),\n      fontSize: theme.typography.bodySmall.fontSize,\n      fontWeight: theme.typography.fontWeightMedium,\n      verticalAlign: 'middle',\n      height: '32px',\n    }),\n    operationHeaderButtons: css({\n      opacity: 0,\n      transition: theme.transitions.create(['opacity'], {\n        duration: theme.transitions.duration.short,\n      }),\n    }),\n    paramValue: css({\n      display: 'table-cell',\n      paddingBottom: theme.spacing(0.5),\n      verticalAlign: 'middle',\n    }),\n    restParam: css({\n      padding: theme.spacing(0, 1, 1, 1),\n    }),\n    arrow: css({\n      position: 'absolute',\n      top: '0',\n      right: '-18px',\n      display: 'flex',\n    }),\n    arrowLine: css({\n      height: '2px',\n      width: '8px',\n      backgroundColor: theme.colors.border.strong,\n      position: 'relative',\n      top: '14px',\n    }),\n    arrowArrow: css({\n      width: 0,\n      height: 0,\n      borderTop: `5px solid transparent`,\n      borderBottom: `5px solid transparent`,\n      borderLeft: `7px solid ${theme.colors.border.strong}`,\n      position: 'relative',\n      top: '10px',\n    }),\n  };\n};\n\ntype OperationEditorStyles = ReturnType<typeof getStyles>;\n","import { css } from '@emotion/css';\nimport { DataSourceApi, GrafanaTheme2 } from '@grafana/data';\nimport { Stack } from '@grafana/experimental';\nimport { ButtonCascader, CascaderOption, useStyles2 } from '@grafana/ui';\nimport React from 'react';\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd';\nimport { QueryBuilderOperation, QueryWithOperations, VisualQueryModeller } from '../shared/types';\nimport { OperationEditor } from './OperationEditor';\n\nexport interface Props<T extends QueryWithOperations> {\n  query: T;\n  datasource: DataSourceApi;\n  onChange: (query: T) => void;\n  onRunQuery: () => void;\n  queryModeller: VisualQueryModeller;\n  explainMode?: boolean;\n}\n\nexport function OperationList<T extends QueryWithOperations>({\n  query,\n  datasource,\n  queryModeller,\n  onChange,\n  onRunQuery,\n}: Props<T>) {\n  const styles = useStyles2(getStyles);\n  const { operations } = query;\n\n  const onOperationChange = (index: number, update: QueryBuilderOperation) => {\n    const updatedList = [...operations];\n    updatedList.splice(index, 1, update);\n    onChange({ ...query, operations: updatedList });\n  };\n\n  const onRemove = (index: number) => {\n    const updatedList = [...operations.slice(0, index), ...operations.slice(index + 1)];\n    onChange({ ...query, operations: updatedList });\n  };\n\n  const addOptions: CascaderOption[] = queryModeller.getCategories().map((category) => {\n    return {\n      value: category,\n      label: category,\n      children: queryModeller.getOperationsForCategory(category).map((operation) => ({\n        value: operation.id,\n        label: operation.name,\n        isLeaf: true,\n      })),\n    };\n  });\n\n  const onAddOperation = (value: string[]) => {\n    const operationDef = queryModeller.getOperationDef(value[1]);\n    onChange(operationDef.addOperationHandler(operationDef, query, queryModeller));\n  };\n\n  const onDragEnd = (result: DropResult) => {\n    if (!result.destination) {\n      return;\n    }\n\n    const updatedList = [...operations];\n    const element = updatedList[result.source.index];\n    updatedList.splice(result.source.index, 1);\n    updatedList.splice(result.destination.index, 0, element);\n    onChange({ ...query, operations: updatedList });\n  };\n\n  return (\n    <Stack gap={1} direction=\"column\">\n      <Stack gap={1}>\n        {operations.length > 0 && (\n          <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId=\"sortable-field-mappings\" direction=\"horizontal\">\n              {(provided) => (\n                <div className={styles.operationList} ref={provided.innerRef} {...provided.droppableProps}>\n                  {operations.map((op, index) => (\n                    <OperationEditor\n                      key={index}\n                      queryModeller={queryModeller}\n                      index={index}\n                      operation={op}\n                      query={query}\n                      datasource={datasource}\n                      onChange={onOperationChange}\n                      onRemove={onRemove}\n                      onRunQuery={onRunQuery}\n                    />\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        )}\n        <div className={styles.addButton}>\n          <ButtonCascader\n            key=\"cascader\"\n            icon=\"plus\"\n            options={addOptions}\n            onChange={onAddOperation}\n            variant=\"secondary\"\n            hideDownIcon={true}\n            buttonProps={{ 'aria-label': 'Add operation', title: 'Add operation' }}\n          />\n        </div>\n      </Stack>\n    </Stack>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    heading: css({\n      fontSize: 12,\n      fontWeight: theme.typography.fontWeightMedium,\n      marginBottom: 0,\n    }),\n    operationList: css({\n      display: 'flex',\n      flexWrap: 'wrap',\n      gap: theme.spacing(2),\n    }),\n    addButton: css({\n      paddingBottom: theme.spacing(1),\n    }),\n  };\n};\n","import React from 'react';\nimport { OperationExplainedBox } from './OperationExplainedBox';\nimport { QueryWithOperations, VisualQueryModeller } from './types';\n\nexport interface Props<T extends QueryWithOperations> {\n  query: T;\n  queryModeller: VisualQueryModeller;\n  explainMode?: boolean;\n  stepNumber: number;\n}\n\nexport function OperationListExplained<T extends QueryWithOperations>({ query, queryModeller, stepNumber }: Props<T>) {\n  return (\n    <>\n      {query.operations.map((op, index) => {\n        const def = queryModeller.getOperationDef(op.id);\n        const title = def.renderer(op, def, '<expr>');\n        const body = def.explainHandler ? def.explainHandler(op, def) : def.documentation ?? 'no docs';\n\n        return <OperationExplainedBox stepNumber={index + stepNumber} key={index} title={title} markdown={body} />;\n      })}\n    </>\n  );\n}\n","import { RadioButtonGroup } from '@grafana/ui';\nimport React from 'react';\nimport { QueryEditorMode } from './types';\n\nexport interface Props {\n  mode: QueryEditorMode;\n  onChange: (mode: QueryEditorMode) => void;\n}\n\nconst editorModes = [\n  { label: 'Explain', value: QueryEditorMode.Explain },\n  { label: 'Builder', value: QueryEditorMode.Builder },\n  { label: 'Code', value: QueryEditorMode.Code },\n];\n\nexport function QueryEditorModeToggle({ mode, onChange }: Props) {\n  return <RadioButtonGroup options={editorModes} size=\"sm\" value={mode} onChange={onChange} />;\n}\n","import { css } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Stack } from '@grafana/experimental';\nimport { Switch, useStyles2 } from '@grafana/ui';\nimport { uniqueId } from 'lodash';\nimport React, { HTMLProps, useRef } from 'react';\n\nexport interface Props extends Omit<HTMLProps<HTMLInputElement>, 'value' | 'ref'> {\n  value?: boolean;\n  label: string;\n}\n\nexport function QueryHeaderSwitch({ label, ...inputProps }: Props) {\n  const switchIdRef = useRef(uniqueId(`switch-${label}`));\n  const styles = useStyles2(getStyles);\n\n  return (\n    <Stack gap={1}>\n      <label htmlFor={switchIdRef.current} className={styles.switchLabel}>\n        {label}\n      </label>\n      <Switch {...inputProps} id={switchIdRef.current} />\n    </Stack>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    switchLabel: css({\n      color: theme.colors.text.secondary,\n      cursor: 'pointer',\n      fontSize: theme.typography.bodySmall.fontSize,\n      '&:hover': {\n        color: theme.colors.text.primary,\n      },\n    }),\n  };\n};\n","import { capitalize } from 'lodash';\nimport { QueryBuilderOperation, QueryBuilderOperationDef, QueryWithOperations } from './types';\n\nexport function functionRendererLeft(model: QueryBuilderOperation, def: QueryBuilderOperationDef, innerExpr: string) {\n  const params = renderParams(model, def, innerExpr);\n  const str = model.id + '(';\n\n  if (innerExpr) {\n    params.push(innerExpr);\n  }\n\n  return str + params.join(', ') + ')';\n}\n\nexport function functionRendererRight(model: QueryBuilderOperation, def: QueryBuilderOperationDef, innerExpr: string) {\n  const params = renderParams(model, def, innerExpr);\n  const str = model.id + '(';\n\n  if (innerExpr) {\n    params.unshift(innerExpr);\n  }\n\n  return str + params.join(', ') + ')';\n}\n\nfunction renderParams(model: QueryBuilderOperation, def: QueryBuilderOperationDef, innerExpr: string) {\n  return (model.params ?? []).map((value, index) => {\n    const paramDef = def.params[index];\n    if (paramDef.type === 'string') {\n      return '\"' + value + '\"';\n    }\n\n    return value;\n  });\n}\n\nexport function defaultAddOperationHandler<T extends QueryWithOperations>(def: QueryBuilderOperationDef, query: T) {\n  const newOperation: QueryBuilderOperation = {\n    id: def.id,\n    params: def.defaultParams,\n  };\n\n  return {\n    ...query,\n    operations: [...query.operations, newOperation],\n  };\n}\n\nexport function getPromAndLokiOperationDisplayName(funcName: string) {\n  return capitalize(funcName.replace(/_/g, ' '));\n}\n","/**\n * Shared types that can be reused by Loki and other data sources\n */\n\nimport { DataSourceApi, RegistryItem, SelectableValue } from '@grafana/data';\nimport { ComponentType } from 'react';\n\nexport interface QueryBuilderLabelFilter {\n  label: string;\n  op: string;\n  value: string;\n}\n\nexport interface QueryBuilderOperation {\n  id: string;\n  params: QueryBuilderOperationParamValue[];\n}\n\nexport interface QueryWithOperations {\n  operations: QueryBuilderOperation[];\n}\n\nexport interface QueryBuilderOperationDef<T = any> extends RegistryItem {\n  documentation?: string;\n  params: QueryBuilderOperationParamDef[];\n  defaultParams: QueryBuilderOperationParamValue[];\n  category: string;\n  hideFromList?: boolean;\n  alternativesKey?: string;\n  renderer: QueryBuilderOperationRenderer;\n  addOperationHandler: QueryBuilderAddOperationHandler<T>;\n  paramChangedHandler?: QueryBuilderOnParamChangedHandler;\n  explainHandler?: (op: QueryBuilderOperation, def: QueryBuilderOperationDef<T>) => string;\n}\n\nexport type QueryBuilderAddOperationHandler<T> = (\n  def: QueryBuilderOperationDef,\n  query: T,\n  modeller: VisualQueryModeller\n) => T;\n\nexport type QueryBuilderOnParamChangedHandler = (\n  index: number,\n  operation: QueryBuilderOperation,\n  operationDef: QueryBuilderOperationDef\n) => QueryBuilderOperation;\n\nexport type QueryBuilderOperationRenderer = (\n  model: QueryBuilderOperation,\n  def: QueryBuilderOperationDef,\n  innerExpr: string\n) => string;\n\nexport type QueryBuilderOperationParamValue = string | number;\n\nexport interface QueryBuilderOperationParamDef {\n  name: string;\n  type: string;\n  options?: string[] | number[] | Array<SelectableValue<string>>;\n  restParam?: boolean;\n  optional?: boolean;\n  editor?: ComponentType<QueryBuilderOperationParamEditorProps>;\n}\n\nexport interface QueryBuilderOperationEditorProps {\n  operation: QueryBuilderOperation;\n  index: number;\n  query: any;\n  datasource: DataSourceApi;\n  queryModeller: VisualQueryModeller;\n  onChange: (index: number, update: QueryBuilderOperation) => void;\n  onRemove: (index: number) => void;\n}\n\nexport interface QueryBuilderOperationParamEditorProps {\n  value?: QueryBuilderOperationParamValue;\n  paramDef: QueryBuilderOperationParamDef;\n  index: number;\n  operation: QueryBuilderOperation;\n  query: any;\n  datasource: DataSourceApi;\n  onChange: (index: number, value: QueryBuilderOperationParamValue) => void;\n  onRunQuery: () => void;\n}\n\nexport enum QueryEditorMode {\n  Builder,\n  Code,\n  Explain,\n}\n\nexport interface VisualQueryModeller {\n  getOperationsForCategory(category: string): QueryBuilderOperationDef[];\n  getAlternativeOperations(key: string): QueryBuilderOperationDef[];\n  getCategories(): string[];\n  getOperationDef(id: string): QueryBuilderOperationDef;\n}\n","import { useEffect, useRef } from 'react';\nexport default function usePrevious(state) {\n    var ref = useRef();\n    useEffect(function () {\n        ref.current = state;\n    });\n    return ref.current;\n}\n","import { useReducer } from 'react';\nvar toggleReducer = function (state, nextValue) {\n    return typeof nextValue === 'boolean' ? nextValue : !state;\n};\nvar useToggle = function (initialValue) {\n    return useReducer(toggleReducer, initialValue);\n};\nexport default useToggle;\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n"],"names":["builtInWords","PROM_KEYWORDS","OPERATORS","LOGICAL_OPERATORS","metricsAndKeywordsRegexp","selectorRegexp","addLabelToQuery","query","key","value","operator","hasNoMetrics","Error","transformedValue","Infinity","toString","previousWord","replace","match","word","offset","isMetric","insideSelector","text","position","openChar","closeChar","nextSelectorStart","slice","indexOf","nextSelectorEnd","isPositionInsideChars","previousWordIsKeyWord","isColonBounded","endsWith","startsWithQuote","isTemplateVariable","isTimeUnit","includes","Boolean","Number","isWordMetric","exec","parts","lastIndex","suffix","prefix","index","length","push","selectorWithLabel","addLabelToSelector","join","labelRegexp","selector","labelKey","labelValue","labelOperator","parsedLabels","operatorForLabelKey","chain","uniqWith","isEqual","compact","sortBy","map","DEFAULT_KEYS","SUGGESTIONS_LIMIT","wrapLabel","label","setFunctionKind","suggestion","kind","PREFIX_DELIMITER_REGEX","PromQlLanguageProvider","LanguageProvider","constructor","datasource","initialValues","super","LRU","async","url","defaultValue","params","metadataRequest","data","error","console","this","lookupsDisabled","fetchLabels","metrics","fetchLabelValues","metricsMetadata","fixSummariesMetadata","request","histogramMetrics","processHistogramMetrics","sort","wrapperClasses","context","emptyResult","suggestions","empty","document","selectedLines","getTextsAtRange","selection","currentLine","size","first","getText","nextCharacter","anchor","tokenRecognized","prefixUnrecognized","noSuffix","safePrefix","operatorsPattern","isNextOperand","getRangeCompletionItems","getLabelCompletionItems","getAggregationCompletionItems","getEmptyCompletionItems","getBeginningCompletionItems","getTermCompletionItems","history","historyItems","h","expr","filter","uniq","take","item","cutoffTs","Date","now","historyForItem","ts","count","recent","hint","dateTime","fromNow","documentation","addHistoryMetadata","searchFunctionType","SearchFunctionType","skipSort","items","FUNCTIONS","m","metric","metadata","type","help","toUpperCase","addMetricsMetadata","queryOffset","queryText","getBlocks","reduce","block","undefined","blockText","anchorBlock","openParensAggregationIndex","lastIndexOf","openParensSelectorIndex","closeParensSelectorIndex","closeParensAggregationIndex","result","selectorString","parseSelector","series","getSeries","labelKeys","Object","keys","limitInfo","addLimitInfo","line","cursorOffset","substr","isValueStart","isValueEnd","isPreValue","parsedSelector","containsMetric","existingKeys","warn","possibleKeys","difference","newItems","newSuggestion","getTimeRangeParams","name","withName","range","urlParams","cacheKey","URLSearchParams","start","roundSecToMin","parseInt","end","labelsCache","get","values","processLabels","set","once","Promise","all","acc","i","timeRange","assign","cleanText","s","split","pop","trimLeft","syntax","PromqlSyntax","getLabelKeys","RATE_RANGES","importFromAbstractQuery","labelBasedQuery","toPromLikeQuery","exportToAbstractQuery","promQuery","refId","labelMatchers","tokens","Prism","extractLabelMatchers","nameLabelValue","prop","getNameLabelValue","AbstractLabelOperator","fetchDefaultSeries","fetchSeriesLabels","labelFetchTs","valueOf","res","Array","isArray","resultSet","Set","regexp","RegExp","test","add","labels","valueSet","forEach","__name__","rest","has","valueArray","limitSuggestions","from","prefixOpen","prefixClose","suffixCloseIndex","suffixClose","suffixOpenIndex","suffixOpen","labelOffset","valueStart","valueEnd","metricPrefix","metricMatch","cleanSelector","expandRecordingRules","mapping","ruleNames","rulesRegex","queryArray","pre","post","invalidLabelsRegex","correctlyExpandedQueryArray","invalidLabelsRegexp","indexOfRegexMatch","exprBeforeRegexMatch","exprAfterRegexMatch","arrayOfLabelObjects","obj","addLabelsToExpression","baseMetadata","summaryMetadata","syntheticMetadata","roundMsToMin","milliseconds","seconds","Math","floor","RE2_METACHARACTERS","escapeLabelValueInExactSelector","escapeLabelValueInRegexSelector","FromPromLikeMap","ToPromLikeMap","invert","toPromLikeExpr","e","Token","token","contentTokens","content","currentToken","currentStr","substring","labelComparator","LabelFilterItem","defaultOp","onChange","onDelete","onGetLabelNames","onGetLabelValues","state","setState","useState","getValue","x","toOption","InputGroup","Select","inputId","width","allowCustomValue","onOpenMenu","isLoadingLabelNames","labelNames","isLoading","options","change","op","operators","isLoadingLabelValues","labelValues","isMulti","changes","AccessoryButton","icon","variant","onClick","LabelFilters","labelsFilters","setItems","EditorFieldGroup","EditorField","EditorList","newLabels","renderItem","onChangeItem","LokiAndPromQueryModellerBase","getOperations","operationsRegisty","Registry","setOperationCategories","categories","getOperationsForCategory","category","list","hideFromList","getAlternativeOperations","alternativesKey","getCategories","getOperationDef","id","renderOperations","queryString","operations","operation","def","renderer","renderBinaryQueries","binaryQueries","binQuery","renderBinaryQuery","leftOperand","binaryQuery","vectorMatches","renderQuery","renderLabels","OperationExplainedBox","title","stepNumber","markdown","children","styles","useStyles2","getStyles","className","box","boxInner","header","body","dangerouslySetInnerHTML","__html","renderMarkdown","theme","css","background","colors","secondary","padding","spacing","borderRadius","shape","marginBottom","marginLeft","fontWeight","typography","fontWeightMedium","main","height","display","alignItems","justifyContent","top","left","fontSize","bodySmall","paddingBottom","fontFamily","fontFamilyMonospace","color","margin","a","link","textDecoration","OperationInfoButton","React","popperTrigger","setPopperTrigger","popover","setPopover","isOpen","toggleIsOpen","useToggle","popper","usePopper","placement","modifiers","enabled","rootBoundary","Button","ref","fill","Portal","style","attributes","docBox","docBoxHeader","FlexItem","grow","docBoxBody","getOperationDocs","displayName","overflow","canvas","border","strong","boxShadow","shadows","z2","maxWidth","zIndex","tooltip","h5","signature","dropdown","opacity","explainHandler","OperationName","queryModeller","onToggleSwitcher","alternatives","alt","nameElement","wrapper","Icon","autoFocus","openMenuOnFocus","placeholder","onCloseMenu","cursor","getOperationParamEditor","paramDef","editor","SelectInputParamEditor","SimpleInputParamEditor","props","Input","onKeyDown","evt","currentTarget","onRunQuery","onBlur","selectOptions","option","menuShouldPortal","OperationEditor","onRemove","onParamValueChanged","paramIdx","update","callParamChangedThenOnChange","onAddRestParam","onRemoveRestParam","operationElements","paramIndex","min","Editor","paramRow","paramName","paramValue","Stack","gap","direction","wrap","restParam","optional","lastParamDef","renderAddRestParamButton","draggableId","provided","card","innerRef","draggableProps","dragHandleProps","operationHeaderButtons","arrow","arrowLine","arrowArrow","operationIndex","paramChangedHandler","primary","medium","flexDirection","borderBottom","infoIcon","verticalAlign","transition","transitions","create","duration","short","right","backgroundColor","borderTop","borderLeft","OperationList","onOperationChange","updatedList","splice","addOptions","isLeaf","onDragEnd","destination","element","source","droppableId","operationList","droppableProps","addButton","ButtonCascader","operationDef","addOperationHandler","hideDownIcon","buttonProps","heading","flexWrap","OperationListExplained","editorModes","QueryEditorMode","QueryEditorModeToggle","mode","RadioButtonGroup","QueryHeaderSwitch","inputProps","switchIdRef","useRef","uniqueId","htmlFor","current","switchLabel","Switch","functionRendererLeft","model","innerExpr","renderParams","str","functionRendererRight","unshift","defaultAddOperationHandler","newOperation","defaultParams","getPromAndLokiOperationDisplayName","funcName","capitalize","usePrevious","useEffect","toggleReducer","nextValue","initialValue","useReducer","Yallist","MAX","Symbol","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","self","doUse","node","hit","isStale","del","unshiftNode","maxAge","diff","trim","walker","tail","prev","delete","removeNode","Entry","forEachStep","fn","thisp","call","module","exports","max","TypeError","lc","stale","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lengthCalculator","lC","itemCount","rforEach","head","next","toArray","k","Map","dump","v","dumpLru","len","peek","load","arr","l","expiresAt","prune","prototype","iterator","arguments","insert","inserted","Node","pushNode","shift","forEachReverse","n","getReverse","mapReverse","initial","reduceReverse","toArrayReverse","to","ret","sliceReverse","deleteCount","nodes","reverse","p","er"],"sourceRoot":""}