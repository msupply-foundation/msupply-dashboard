{"version":3,"file":"explore.0e7ce18a6cf0f8775a65.js","mappings":"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","sources":["webpack://grafana/./public/app/features/dashboard/dashgrid/SeriesVisibilityConfigFactory.ts","webpack://grafana/./node_modules/react-use/esm/useInterval.js","webpack://grafana/./public/app/features/explore/Time.tsx","webpack://grafana/./public/app/features/explore/ElapsedTime.tsx","webpack://grafana/./public/app/features/explore/LiveLogs.tsx","webpack://grafana/./public/app/features/explore/MetaInfoText.tsx","webpack://grafana/./public/app/features/explore/LogsMetaRow.tsx","webpack://grafana/./public/app/features/explore/LogsNavigationPages.tsx","webpack://grafana/./public/app/features/explore/LogsNavigation.tsx","webpack://grafana/./public/app/features/explore/ExploreGraph.tsx","webpack://grafana/./public/app/features/explore/Logs.tsx","webpack://grafana/./public/app/features/explore/utils/LogsCrossFadeTransition.tsx","webpack://grafana/./public/app/features/explore/useLiveTailControls.ts","webpack://grafana/./public/app/features/explore/LogsContainer.tsx","webpack://grafana/./public/app/features/explore/state/selectors.ts","webpack://grafana/./public/app/features/explore/QueryRows.tsx","webpack://grafana/./public/app/features/explore/TableContainer.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistorySettings.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryCard.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryQueriesTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryStarredTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistory.tsx","webpack://grafana/./public/app/features/explore/ExploreDrawer.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryContainer.tsx","webpack://grafana/./public/app/features/explore/ExploreQueryInspector.tsx","webpack://grafana/./public/app/features/explore/TimeSyncButton.tsx","webpack://grafana/./public/app/features/explore/ExploreTimeControls.tsx","webpack://grafana/./public/app/features/explore/LiveTailButton.tsx","webpack://grafana/./public/app/features/explore/RunButton.tsx","webpack://grafana/./public/app/features/explore/ReturnToDashboardButton.tsx","webpack://grafana/./public/app/features/explore/ExploreToolbar.tsx","webpack://grafana/./public/app/features/explore/NoDataSourceCallToAction.tsx","webpack://grafana/./public/app/features/explore/SecondaryActions.tsx","webpack://grafana/./public/app/features/explore/NodeGraphContainer.tsx","webpack://grafana/./public/app/core/components/Animations/FadeIn.tsx","webpack://grafana/./public/app/features/explore/ErrorContainer.tsx","webpack://grafana/./public/app/features/explore/ResponseErrorContainer.tsx","webpack://grafana/./public/app/features/explore/TraceView/createSpanLink.tsx","webpack://grafana/./public/app/features/explore/TraceView/uiElements.tsx","webpack://grafana/./public/app/features/explore/TraceView/useChildrenState.ts","webpack://grafana/./public/app/features/explore/TraceView/useDetailState.ts","webpack://grafana/./public/app/features/explore/TraceView/TraceView.tsx","webpack://grafana/./public/app/features/explore/TraceView/useHoverIndentGuide.ts","webpack://grafana/./public/app/features/explore/TraceView/useViewRange.ts","webpack://grafana/./public/app/features/explore/TraceView/useSearch.ts","webpack://grafana/./public/app/features/explore/TraceView/TraceViewContainer.tsx","webpack://grafana/./public/app/features/explore/Explore.tsx","webpack://grafana/./public/app/features/explore/ExplorePaneContainer.tsx","webpack://grafana/./public/app/features/explore/Wrapper.tsx","webpack://grafana/./node_modules/fast-memoize/src/index.js","webpack://grafana/./node_modules/re-resizable/lib/index.js","webpack://grafana/./node_modules/re-resizable/lib/resizer.js","webpack://grafana/./node_modules/react-use/esm/usePrevious.js"],"sourcesContent":["import {\n  ByNamesMatcherMode,\n  DataFrame,\n  DynamicConfigValue,\n  FieldConfigSource,\n  FieldMatcherID,\n  FieldType,\n  getFieldDisplayName,\n  isSystemOverrideWithRef,\n  SystemConfigOverrideRule,\n} from '@grafana/data';\nimport { SeriesVisibilityChangeMode } from '@grafana/ui';\n\nconst displayOverrideRef = 'hideSeriesFrom';\nconst isHideSeriesOverride = isSystemOverrideWithRef(displayOverrideRef);\n\nexport function seriesVisibilityConfigFactory(\n  label: string,\n  mode: SeriesVisibilityChangeMode,\n  fieldConfig: FieldConfigSource,\n  data: DataFrame[]\n) {\n  const { overrides } = fieldConfig;\n\n  const displayName = label;\n  const currentIndex = overrides.findIndex(isHideSeriesOverride);\n\n  if (currentIndex < 0) {\n    if (mode === SeriesVisibilityChangeMode.ToggleSelection) {\n      const override = createOverride([displayName]);\n\n      return {\n        ...fieldConfig,\n        overrides: [...fieldConfig.overrides, override],\n      };\n    }\n\n    const displayNames = getDisplayNames(data, displayName);\n    const override = createOverride(displayNames);\n\n    return {\n      ...fieldConfig,\n      overrides: [...fieldConfig.overrides, override],\n    };\n  }\n\n  const overridesCopy = Array.from(overrides);\n  const [current] = overridesCopy.splice(currentIndex, 1) as SystemConfigOverrideRule[];\n\n  if (mode === SeriesVisibilityChangeMode.ToggleSelection) {\n    const existing = getExistingDisplayNames(current);\n\n    if (existing[0] === displayName && existing.length === 1) {\n      return {\n        ...fieldConfig,\n        overrides: overridesCopy,\n      };\n    }\n\n    const override = createOverride([displayName]);\n\n    return {\n      ...fieldConfig,\n      overrides: [...overridesCopy, override],\n    };\n  }\n\n  const override = createExtendedOverride(current, displayName);\n\n  if (allFieldsAreExcluded(override, data)) {\n    return {\n      ...fieldConfig,\n      overrides: overridesCopy,\n    };\n  }\n\n  return {\n    ...fieldConfig,\n    overrides: [...overridesCopy, override],\n  };\n}\n\nfunction createOverride(\n  names: string[],\n  mode = ByNamesMatcherMode.exclude,\n  property?: DynamicConfigValue\n): SystemConfigOverrideRule {\n  property = property ?? {\n    id: 'custom.hideFrom',\n    value: {\n      viz: true,\n      legend: false,\n      tooltip: false,\n    },\n  };\n\n  return {\n    __systemRef: displayOverrideRef,\n    matcher: {\n      id: FieldMatcherID.byNames,\n      options: {\n        mode: mode,\n        names: names,\n        prefix: mode === ByNamesMatcherMode.exclude ? 'All except:' : undefined,\n        readOnly: true,\n      },\n    },\n    properties: [\n      {\n        ...property,\n        value: {\n          viz: true,\n          legend: false,\n          tooltip: false,\n        },\n      },\n    ],\n  };\n}\n\nconst createExtendedOverride = (\n  current: SystemConfigOverrideRule,\n  displayName: string,\n  mode = ByNamesMatcherMode.exclude\n): SystemConfigOverrideRule => {\n  const property = current.properties.find((p) => p.id === 'custom.hideFrom');\n  const existing = getExistingDisplayNames(current);\n  const index = existing.findIndex((name) => name === displayName);\n\n  if (index < 0) {\n    existing.push(displayName);\n  } else {\n    existing.splice(index, 1);\n  }\n\n  return createOverride(existing, mode, property);\n};\n\nconst getExistingDisplayNames = (rule: SystemConfigOverrideRule): string[] => {\n  const names = rule.matcher.options?.names;\n  if (!Array.isArray(names)) {\n    return [];\n  }\n  return names;\n};\n\nconst allFieldsAreExcluded = (override: SystemConfigOverrideRule, data: DataFrame[]): boolean => {\n  return getExistingDisplayNames(override).length === getDisplayNames(data).length;\n};\n\nconst getDisplayNames = (data: DataFrame[], excludeName?: string): string[] => {\n  const unique = new Set<string>();\n\n  for (const frame of data) {\n    for (const field of frame.fields) {\n      if (field.type !== FieldType.number) {\n        continue;\n      }\n\n      const name = getFieldDisplayName(field, frame, data);\n\n      if (name === excludeName) {\n        continue;\n      }\n\n      unique.add(name);\n    }\n  }\n\n  return Array.from(unique);\n};\n","import { useEffect, useRef } from 'react';\nvar useInterval = function (callback, delay) {\n    var savedCallback = useRef(function () { });\n    useEffect(function () {\n        savedCallback.current = callback;\n    });\n    useEffect(function () {\n        if (delay !== null) {\n            var interval_1 = setInterval(function () { return savedCallback.current(); }, delay || 0);\n            return function () { return clearInterval(interval_1); };\n        }\n        return undefined;\n    }, [delay]);\n};\nexport default useInterval;\n","import React, { FC } from 'react';\nimport { toDuration } from '@grafana/data';\n\nexport interface TimeProps {\n  timeInMs: number;\n  className?: string;\n  humanize?: boolean;\n}\n\nexport const Time: FC<TimeProps> = ({ timeInMs, className, humanize }) => {\n  return <span className={`elapsed-time ${className}`}>{formatTime(timeInMs, humanize)}</span>;\n};\n\nconst formatTime = (timeInMs: number, humanize = false): string => {\n  const inSeconds = timeInMs / 1000;\n\n  if (!humanize) {\n    return `${inSeconds.toFixed(1)}s`;\n  }\n\n  const duration = toDuration(inSeconds, 'seconds');\n  const hours = duration.hours();\n  const minutes = duration.minutes();\n  const seconds = duration.seconds();\n\n  if (hours) {\n    return `${hours}h ${minutes}m ${seconds}s`;\n  }\n\n  if (minutes) {\n    return `${minutes}m ${seconds}s`;\n  }\n\n  return `${seconds}s`;\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport { useInterval } from 'react-use';\nimport { Time, TimeProps } from './Time';\n\nconst INTERVAL = 150;\n\nexport interface ElapsedTimeProps extends Omit<TimeProps, 'timeInMs'> {\n  // Use this to reset the timer. Any value is allowed just need to be !== from the previous.\n  // Keep in mind things like [] !== [] or {} !== {}.\n  resetKey?: any;\n}\n\nexport const ElapsedTime: FC<ElapsedTimeProps> = ({ resetKey, humanize, className }) => {\n  const [elapsed, setElapsed] = useState(0); // the current value of elapsed\n\n  // hook that will schedule a interval and then update the elapsed value on every tick.\n  useInterval(() => setElapsed(elapsed + INTERVAL), INTERVAL);\n  // this effect will only be run when resetKey changes. This will reset the elapsed to 0.\n  useEffect(() => setElapsed(0), [resetKey]);\n\n  return <Time timeInMs={elapsed} className={className} humanize={humanize} />;\n};\n","import React, { PureComponent } from 'react';\nimport { css, cx } from '@emotion/css';\nimport tinycolor from 'tinycolor2';\n\nimport { LogMessageAnsi, getLogRowStyles, Icon, Button, Themeable2, withTheme2 } from '@grafana/ui';\nimport { LogRowModel, TimeZone, dateTimeFormat, GrafanaTheme2 } from '@grafana/data';\n\nimport { ElapsedTime } from './ElapsedTime';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  logsRowsLive: css`\n    label: logs-rows-live;\n    font-family: ${theme.typography.fontFamilyMonospace};\n    font-size: ${theme.typography.bodySmall.fontSize};\n    display: flex;\n    flex-flow: column nowrap;\n    height: 60vh;\n    overflow-y: scroll;\n    :first-child {\n      margin-top: auto !important;\n    }\n  `,\n  logsRowFade: css`\n    label: logs-row-fresh;\n    color: ${theme.colors.text};\n    background-color: ${tinycolor(theme.colors.info.transparent).setAlpha(0.25).toString()};\n    animation: fade 1s ease-out 1s 1 normal forwards;\n    @keyframes fade {\n      from {\n        background-color: ${tinycolor(theme.colors.info.transparent).setAlpha(0.25).toString()};\n      }\n      to {\n        background-color: transparent;\n      }\n    }\n  `,\n  logsRowsIndicator: css`\n    font-size: ${theme.typography.h6.fontSize};\n    padding-top: ${theme.spacing(1)};\n    display: flex;\n    align-items: center;\n  `,\n  button: css`\n    margin-right: ${theme.spacing(1)};\n  `,\n  fullWidth: css`\n    width: 100%;\n  `,\n});\n\nexport interface Props extends Themeable2 {\n  logRows?: LogRowModel[];\n  timeZone: TimeZone;\n  stopLive: () => void;\n  onPause: () => void;\n  onResume: () => void;\n  isPaused: boolean;\n}\n\ninterface State {\n  logRowsToRender?: LogRowModel[];\n}\n\nclass LiveLogs extends PureComponent<Props, State> {\n  private liveEndDiv: HTMLDivElement | null = null;\n  private scrollContainerRef = React.createRef<HTMLTableSectionElement>();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logRowsToRender: props.logRows,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: Props, state: State) {\n    if (!nextProps.isPaused) {\n      return {\n        // We update what we show only if not paused. We keep any background subscriptions running and keep updating\n        // our state, but we do not show the updates, this allows us start again showing correct result after resuming\n        // without creating a gap in the log results.\n        logRowsToRender: nextProps.logRows,\n      };\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Handle pausing when user scrolls up so that we stop resetting his position to the bottom when new row arrives.\n   * We do not need to throttle it here much, adding new rows should be throttled/buffered itself in the query epics\n   * and after you pause we remove the handler and add it after you manually resume, so this should not be fired often.\n   */\n  onScroll = (event: React.SyntheticEvent) => {\n    const { isPaused, onPause } = this.props;\n    const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;\n    const distanceFromBottom = scrollHeight - (scrollTop + clientHeight);\n    if (distanceFromBottom >= 5 && !isPaused) {\n      onPause();\n    }\n  };\n\n  rowsToRender = () => {\n    const { isPaused } = this.props;\n    let { logRowsToRender: rowsToRender = [] } = this.state;\n    if (!isPaused) {\n      // A perf optimisation here. Show just 100 rows when streaming and full length when the streaming is paused.\n      rowsToRender = rowsToRender.slice(-100);\n    }\n    return rowsToRender;\n  };\n\n  render() {\n    const { theme, timeZone, onPause, onResume, isPaused } = this.props;\n    const styles = getStyles(theme);\n    const { logsRow, logsRowLocalTime, logsRowMessage } = getLogRowStyles(theme);\n\n    return (\n      <div>\n        <table className={styles.fullWidth}>\n          <tbody\n            onScroll={isPaused ? undefined : this.onScroll}\n            className={cx(['logs-rows', styles.logsRowsLive])}\n            ref={this.scrollContainerRef}\n          >\n            {this.rowsToRender().map((row: LogRowModel) => {\n              return (\n                <tr className={cx(logsRow, styles.logsRowFade)} key={row.uid}>\n                  <td className={cx(logsRowLocalTime)}>{dateTimeFormat(row.timeEpochMs, { timeZone })}</td>\n                  <td className={cx(logsRowMessage)}>{row.hasAnsi ? <LogMessageAnsi value={row.raw} /> : row.entry}</td>\n                </tr>\n              );\n            })}\n            <tr\n              ref={(element) => {\n                this.liveEndDiv = element;\n                // This is triggered on every update so on every new row. It keeps the view scrolled at the bottom by\n                // default.\n                if (this.liveEndDiv && !isPaused) {\n                  this.scrollContainerRef.current?.scrollTo(0, this.scrollContainerRef.current.scrollHeight);\n                }\n              }}\n            />\n          </tbody>\n        </table>\n        <div className={styles.logsRowsIndicator}>\n          <Button variant=\"secondary\" onClick={isPaused ? onResume : onPause} className={styles.button}>\n            <Icon name={isPaused ? 'play' : 'pause'} />\n            &nbsp;\n            {isPaused ? 'Resume' : 'Pause'}\n          </Button>\n          <Button variant=\"secondary\" onClick={this.props.stopLive} className={styles.button}>\n            <Icon name=\"square-shape\" size=\"lg\" type=\"mono\" />\n            &nbsp; Exit live mode\n          </Button>\n          {isPaused || (\n            <span>\n              Last line received: <ElapsedTime resetKey={this.props.logRows} humanize={true} /> ago\n            </span>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const LiveLogsWithTheme = withTheme2(LiveLogs);\n","import React, { memo } from 'react';\nimport { css } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  metaContainer: css`\n    flex: 1;\n    color: ${theme.colors.text.secondary};\n    margin-bottom: ${theme.spacing(2)};\n    min-width: 30%;\n    display: flex;\n    flex-wrap: wrap;\n  `,\n  metaItem: css`\n    margin-right: ${theme.spacing(2)};\n    margin-top: ${theme.spacing(0.5)};\n    display: flex;\n    align-items: baseline;\n\n    .logs-meta-item__error {\n      color: ${theme.colors.error.text};\n    }\n  `,\n  metaLabel: css`\n    margin-right: calc(${theme.spacing(2)} / 2);\n    font-size: ${theme.typography.bodySmall.fontSize};\n    font-weight: ${theme.typography.fontWeightMedium};\n  `,\n  metaValue: css`\n    font-family: ${theme.typography.fontFamilyMonospace};\n    font-size: ${theme.typography.bodySmall.fontSize};\n  `,\n});\n\nexport interface MetaItemProps {\n  label?: string;\n  value: string | JSX.Element;\n}\n\nexport const MetaInfoItem = memo(function MetaInfoItem(props: MetaItemProps) {\n  const style = useStyles2(getStyles);\n  const { label, value } = props;\n\n  return (\n    <div className={style.metaItem}>\n      {label && <span className={style.metaLabel}>{label}:</span>}\n      <span className={style.metaValue}>{value}</span>\n    </div>\n  );\n});\n\nexport interface MetaInfoTextProps {\n  metaItems: MetaItemProps[];\n}\n\nexport const MetaInfoText = memo(function MetaInfoText(props: MetaInfoTextProps) {\n  const style = useStyles2(getStyles);\n  const { metaItems } = props;\n\n  return (\n    <div className={style.metaContainer}>\n      {metaItems.map((item, index) => (\n        <MetaInfoItem key={`${index}-${item.label}`} label={item.label} value={item.value} />\n      ))}\n    </div>\n  );\n});\n\nexport default MetaInfoText;\n","import React from 'react';\nimport { LogsDedupStrategy, LogsMetaItem, LogsMetaKind, LogRowModel } from '@grafana/data';\nimport { Button, Tooltip, Icon, LogLabels } from '@grafana/ui';\nimport { MAX_CHARACTERS } from '@grafana/ui/src/components/Logs/LogRowMessage';\nimport { MetaInfoText, MetaItemProps } from './MetaInfoText';\n\nexport type Props = {\n  meta: LogsMetaItem[];\n  dedupStrategy: LogsDedupStrategy;\n  dedupCount: number;\n  showDetectedFields: string[];\n  hasUnescapedContent: boolean;\n  forceEscape: boolean;\n  logRows: LogRowModel[];\n  onEscapeNewlines: () => void;\n  clearDetectedFields: () => void;\n};\n\nexport const LogsMetaRow: React.FC<Props> = React.memo(\n  ({\n    meta,\n    dedupStrategy,\n    dedupCount,\n    showDetectedFields,\n    clearDetectedFields,\n    hasUnescapedContent,\n    forceEscape,\n    onEscapeNewlines,\n    logRows,\n  }) => {\n    const logsMetaItem: Array<LogsMetaItem | MetaItemProps> = [...meta];\n\n    // Add deduplication info\n    if (dedupStrategy !== LogsDedupStrategy.none) {\n      logsMetaItem.push({\n        label: 'Dedup count',\n        value: dedupCount,\n        kind: LogsMetaKind.Number,\n      });\n    }\n    // Add info about limit for highlighting\n    if (logRows.some((r) => r.entry.length > MAX_CHARACTERS)) {\n      logsMetaItem.push({\n        label: 'Info',\n        value: 'Logs with more than 100,000 characters could not be parsed and highlighted',\n        kind: LogsMetaKind.String,\n      });\n    }\n\n    // Add detected fields info\n    if (showDetectedFields?.length > 0) {\n      logsMetaItem.push(\n        {\n          label: 'Showing only detected fields',\n          value: renderMetaItem(showDetectedFields, LogsMetaKind.LabelsMap),\n        },\n        {\n          label: '',\n          value: (\n            <Button variant=\"secondary\" size=\"sm\" onClick={clearDetectedFields}>\n              Show all detected fields\n            </Button>\n          ),\n        }\n      );\n    }\n\n    // Add unescaped content info\n    if (hasUnescapedContent) {\n      logsMetaItem.push({\n        label: 'Your logs might have incorrectly escaped content',\n        value: (\n          <Tooltip\n            content=\"We suggest to try to fix the escaping of your log lines first. This is an experimental feature, your logs might not be correctly escaped.\"\n            placement=\"right\"\n          >\n            <Button variant=\"secondary\" size=\"sm\" onClick={onEscapeNewlines}>\n              <span>{forceEscape ? 'Remove escaping' : 'Escape newlines'}&nbsp;</span>\n              <Icon name=\"exclamation-triangle\" className=\"muted\" size=\"sm\" />\n            </Button>\n          </Tooltip>\n        ),\n      });\n    }\n\n    return (\n      <>\n        {logsMetaItem && (\n          <MetaInfoText\n            metaItems={logsMetaItem.map((item) => {\n              return {\n                label: item.label,\n                value: 'kind' in item ? renderMetaItem(item.value, item.kind) : item.value,\n              };\n            })}\n          />\n        )}\n      </>\n    );\n  }\n);\n\nLogsMetaRow.displayName = 'LogsMetaRow';\n\nfunction renderMetaItem(value: any, kind: LogsMetaKind) {\n  if (kind === LogsMetaKind.LabelsMap) {\n    return (\n      <span className=\"logs-meta-item__labels\">\n        <LogLabels labels={value} />\n      </span>\n    );\n  } else if (kind === LogsMetaKind.Error) {\n    return <span className=\"logs-meta-item__error\">{value}</span>;\n  }\n  return value;\n}\n","import React from 'react';\nimport { css, cx } from 'emotion';\nimport { dateTimeFormat, systemDateFormats, TimeZone, AbsoluteTimeRange, GrafanaTheme2 } from '@grafana/data';\nimport { CustomScrollbar, Spinner, useTheme2 } from '@grafana/ui';\nimport { LogsPage } from './LogsNavigation';\n\ntype Props = {\n  pages: LogsPage[];\n  currentPageIndex: number;\n  oldestLogsFirst: boolean;\n  timeZone: TimeZone;\n  loading: boolean;\n  changeTime: (range: AbsoluteTimeRange) => void;\n};\n\nexport function LogsNavigationPages({\n  pages,\n  currentPageIndex,\n  oldestLogsFirst,\n  timeZone,\n  loading,\n  changeTime,\n}: Props) {\n  const formatTime = (time: number) => {\n    return `${dateTimeFormat(time, {\n      format: systemDateFormats.interval.second,\n      timeZone: timeZone,\n    })}`;\n  };\n\n  const createPageContent = (page: LogsPage, index: number) => {\n    if (currentPageIndex === index && loading) {\n      return <Spinner />;\n    }\n    const topContent = formatTime(oldestLogsFirst ? page.logsRange.from : page.logsRange.to);\n    const bottomContent = formatTime(oldestLogsFirst ? page.logsRange.to : page.logsRange.from);\n    return `${topContent} — ${bottomContent}`;\n  };\n\n  const theme = useTheme2();\n  const styles = getStyles(theme, loading);\n\n  return (\n    <CustomScrollbar autoHide>\n      <div className={styles.pagesWrapper} data-testid=\"logsNavigationPages\">\n        <div className={styles.pagesContainer}>\n          {pages.map((page: LogsPage, index: number) => (\n            <div\n              data-testid={`page${index + 1}`}\n              className={styles.page}\n              key={page.queryRange.to}\n              onClick={() => !loading && changeTime({ from: page.queryRange.from, to: page.queryRange.to })}\n            >\n              <div className={cx(styles.line, { selectedBg: currentPageIndex === index })} />\n              <div className={cx(styles.time, { selectedText: currentPageIndex === index })}>\n                {createPageContent(page, index)}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </CustomScrollbar>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2, loading: boolean) => {\n  return {\n    pagesWrapper: css`\n      height: 100%;\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      flex-direction: column;\n      overflow-y: scroll;\n      &::after {\n        content: '';\n        display: block;\n        background: repeating-linear-gradient(\n          135deg,\n          ${theme.colors.background.primary},\n          ${theme.colors.background.primary} 5px,\n          ${theme.colors.background.secondary} 5px,\n          ${theme.colors.background.secondary} 15px\n        );\n        width: 3px;\n        height: inherit;\n        margin-bottom: 8px;\n      }\n    `,\n    pagesContainer: css`\n      display: flex;\n      padding: 0;\n      flex-direction: column;\n    `,\n    page: css`\n      display: flex;\n      margin: ${theme.spacing(2)} 0;\n      cursor: ${loading ? 'auto' : 'pointer'};\n      white-space: normal;\n      .selectedBg {\n        background: ${theme.colors.primary.main};\n      }\n      .selectedText {\n        color: ${theme.colors.primary.main};\n      }\n    `,\n    line: css`\n      width: 3px;\n      height: 100%;\n      align-items: center;\n      background: ${theme.colors.text.secondary};\n    `,\n    time: css`\n      width: 60px;\n      min-height: 80px;\n      font-size: ${theme.v1.typography.size.sm};\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      align-items: center;\n    `,\n  };\n};\n","import React, { memo, useState, useEffect, useRef } from 'react';\nimport { isEqual } from 'lodash';\nimport { css } from 'emotion';\nimport { LogsSortOrder, AbsoluteTimeRange, TimeZone, DataQuery, GrafanaTheme2 } from '@grafana/data';\nimport { Button, Icon, Spinner, useTheme2 } from '@grafana/ui';\nimport { LogsNavigationPages } from './LogsNavigationPages';\n\ntype Props = {\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  queries: DataQuery[];\n  loading: boolean;\n  visibleRange: AbsoluteTimeRange;\n  logsSortOrder?: LogsSortOrder | null;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  scrollToTopLogs: () => void;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n};\n\nexport type LogsPage = {\n  logsRange: AbsoluteTimeRange;\n  queryRange: AbsoluteTimeRange;\n};\n\nfunction LogsNavigation({\n  absoluteRange,\n  logsSortOrder,\n  timeZone,\n  loading,\n  onChangeTime,\n  scrollToTopLogs,\n  visibleRange,\n  queries,\n  clearCache,\n  addResultsToCache,\n}: Props) {\n  const [pages, setPages] = useState<LogsPage[]>([]);\n  const [currentPageIndex, setCurrentPageIndex] = useState(0);\n\n  // These refs are to determine, if we want to clear up logs navigation when totally new query is run\n  const expectedQueriesRef = useRef<DataQuery[]>();\n  const expectedRangeRef = useRef<AbsoluteTimeRange>();\n  // This ref is to store range span for future queres based on firstly selected time range\n  // e.g. if last 5 min selected, always run 5 min range\n  const rangeSpanRef = useRef(0);\n\n  const oldestLogsFirst = logsSortOrder === LogsSortOrder.Ascending;\n  const onFirstPage = currentPageIndex === 0;\n  const onLastPage = currentPageIndex === pages.length - 1;\n  const theme = useTheme2();\n  const styles = getStyles(theme, oldestLogsFirst, loading);\n\n  // Main effect to set pages and index\n  useEffect(() => {\n    const newPage = { logsRange: visibleRange, queryRange: absoluteRange };\n    let newPages: LogsPage[] = [];\n    // We want to start new pagination if queries change or if absolute range is different than expected\n    if (!isEqual(expectedRangeRef.current, absoluteRange) || !isEqual(expectedQueriesRef.current, queries)) {\n      clearCache();\n      setPages([newPage]);\n      setCurrentPageIndex(0);\n      expectedQueriesRef.current = queries;\n      rangeSpanRef.current = absoluteRange.to - absoluteRange.from;\n    } else {\n      setPages((pages) => {\n        // Remove duplicates with new query\n        newPages = pages.filter((page) => !isEqual(newPage.queryRange, page.queryRange));\n        // Sort pages based on logsOrder so they visually align with displayed logs\n        newPages = [...newPages, newPage].sort((a, b) => sortPages(a, b, logsSortOrder));\n        // Set new pages\n\n        return newPages;\n      });\n\n      // Set current page index\n      const index = newPages.findIndex((page) => page.queryRange.to === absoluteRange.to);\n      setCurrentPageIndex(index);\n    }\n    addResultsToCache();\n  }, [visibleRange, absoluteRange, logsSortOrder, queries, clearCache, addResultsToCache]);\n\n  useEffect(() => {\n    return () => clearCache();\n    // We can't enforce the eslint rule here because we only want to run when component unmounts.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const changeTime = ({ from, to }: AbsoluteTimeRange) => {\n    expectedRangeRef.current = { from, to };\n    onChangeTime({ from, to });\n  };\n\n  const sortPages = (a: LogsPage, b: LogsPage, logsSortOrder?: LogsSortOrder | null) => {\n    if (logsSortOrder === LogsSortOrder.Ascending) {\n      return a.queryRange.to > b.queryRange.to ? 1 : -1;\n    }\n    return a.queryRange.to > b.queryRange.to ? -1 : 1;\n  };\n\n  const olderLogsButton = (\n    <Button\n      data-testid=\"olderLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        //If we are not on the last page, use next page's range\n        if (!onLastPage) {\n          changeTime({\n            from: pages[currentPageIndex + 1].queryRange.from,\n            to: pages[currentPageIndex + 1].queryRange.to,\n          });\n        } else {\n          //If we are on the last page, create new range\n          changeTime({ from: visibleRange.from - rangeSpanRef.current, to: visibleRange.from });\n        }\n      }}\n      disabled={loading}\n    >\n      <div className={styles.navButtonContent}>\n        {loading ? <Spinner /> : <Icon name={oldestLogsFirst ? 'angle-up' : 'angle-down'} size=\"lg\" />}\n        Older logs\n      </div>\n    </Button>\n  );\n\n  const newerLogsButton = (\n    <Button\n      data-testid=\"newerLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        //If we are not on the first page, use previous page's range\n        if (!onFirstPage) {\n          changeTime({\n            from: pages[currentPageIndex - 1].queryRange.from,\n            to: pages[currentPageIndex - 1].queryRange.to,\n          });\n        }\n        //If we are on the first page, button is disabled and we do nothing\n      }}\n      disabled={loading || onFirstPage}\n    >\n      <div className={styles.navButtonContent}>\n        {loading && <Spinner />}\n        {onFirstPage || loading ? null : <Icon name={oldestLogsFirst ? 'angle-down' : 'angle-up'} size=\"lg\" />}\n        {onFirstPage ? 'Start of range' : 'Newer logs'}\n      </div>\n    </Button>\n  );\n\n  return (\n    <div className={styles.navContainer}>\n      {oldestLogsFirst ? olderLogsButton : newerLogsButton}\n      <LogsNavigationPages\n        pages={pages}\n        currentPageIndex={currentPageIndex}\n        oldestLogsFirst={oldestLogsFirst}\n        timeZone={timeZone}\n        loading={loading}\n        changeTime={changeTime}\n      />\n      {oldestLogsFirst ? newerLogsButton : olderLogsButton}\n      <Button\n        data-testid=\"scrollToTop\"\n        className={styles.scrollToTopButton}\n        variant=\"secondary\"\n        onClick={scrollToTopLogs}\n        title=\"Scroll to top\"\n      >\n        <Icon name=\"arrow-up\" size=\"lg\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default memo(LogsNavigation);\n\nconst getStyles = (theme: GrafanaTheme2, oldestLogsFirst: boolean, loading: boolean) => {\n  return {\n    navContainer: css`\n      max-height: 95vh;\n      display: flex;\n      flex-direction: column;\n      justify-content: ${oldestLogsFirst ? 'flex-start' : 'space-between'};\n      position: sticky;\n      top: ${theme.spacing(2)};\n      right: 0;\n    `,\n    navButton: css`\n      width: 58px;\n      height: 68px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      line-height: 1;\n    `,\n    navButtonContent: css`\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 100%;\n      white-space: normal;\n    `,\n    scrollToTopButton: css`\n      width: 40px;\n      height: 40px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      margin-top: ${theme.spacing(1)};\n    `,\n  };\n};\n","import { css, cx } from '@emotion/css';\nimport {\n  AbsoluteTimeRange,\n  applyFieldOverrides,\n  compareArrayValues,\n  compareDataFrameStructures,\n  createFieldConfigRegistry,\n  DataFrame,\n  dateTime,\n  FieldColorModeId,\n  FieldConfigSource,\n  getFrameDisplayName,\n  GrafanaTheme2,\n  LoadingState,\n  SplitOpen,\n  TimeZone,\n} from '@grafana/data';\nimport { PanelRenderer } from '@grafana/runtime';\nimport { GraphDrawStyle, LegendDisplayMode, TooltipDisplayMode } from '@grafana/schema';\nimport {\n  Icon,\n  PanelContext,\n  PanelContextProvider,\n  SeriesVisibilityChangeMode,\n  useStyles2,\n  useTheme2,\n} from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\nimport { defaultGraphConfig, getGraphFieldConfig } from 'app/plugins/panel/timeseries/config';\nimport { TimeSeriesOptions } from 'app/plugins/panel/timeseries/types';\nimport { identity } from 'lodash';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { usePrevious } from 'react-use';\nimport { seriesVisibilityConfigFactory } from '../dashboard/dashgrid/SeriesVisibilityConfigFactory';\n\nconst MAX_NUMBER_OF_TIME_SERIES = 20;\n\ninterface Props {\n  data: DataFrame[];\n  height: number;\n  width: number;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  loadingState: LoadingState;\n  annotations?: DataFrame[];\n  onHiddenSeriesChanged?: (hiddenSeries: string[]) => void;\n  tooltipDisplayMode?: TooltipDisplayMode;\n  splitOpenFn?: SplitOpen;\n  onChangeTime: (timeRange: AbsoluteTimeRange) => void;\n}\n\nexport function ExploreGraph({\n  data,\n  height,\n  width,\n  timeZone,\n  absoluteRange,\n  onChangeTime,\n  loadingState,\n  annotations,\n  onHiddenSeriesChanged,\n  splitOpenFn,\n  tooltipDisplayMode = TooltipDisplayMode.Single,\n}: Props) {\n  const theme = useTheme2();\n  const [showAllTimeSeries, setShowAllTimeSeries] = useState(false);\n  const [baseStructureRev, setBaseStructureRev] = useState(1);\n\n  const previousData = usePrevious(data);\n  const structureChangesRef = useRef(0);\n\n  if (data && previousData && !compareArrayValues(previousData, data, compareDataFrameStructures)) {\n    structureChangesRef.current++;\n  }\n\n  const structureRev = baseStructureRev + structureChangesRef.current;\n\n  const [fieldConfig, setFieldConfig] = useState<FieldConfigSource>({\n    defaults: {\n      color: {\n        mode: FieldColorModeId.PaletteClassic,\n      },\n      custom: {\n        drawStyle: GraphDrawStyle.Line,\n        fillOpacity: 0,\n        pointSize: 5,\n      },\n    },\n    overrides: [],\n  });\n\n  const style = useStyles2(getStyles);\n  const timeRange = {\n    from: dateTime(absoluteRange.from),\n    to: dateTime(absoluteRange.to),\n    raw: {\n      from: dateTime(absoluteRange.from),\n      to: dateTime(absoluteRange.to),\n    },\n  };\n\n  const dataWithConfig = useMemo(() => {\n    const registry = createFieldConfigRegistry(getGraphFieldConfig(defaultGraphConfig), 'Explore');\n    return applyFieldOverrides({\n      fieldConfig,\n      data,\n      timeZone,\n      replaceVariables: (value) => value, // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n      theme,\n      fieldConfigRegistry: registry,\n    });\n  }, [fieldConfig, data, timeZone, theme]);\n\n  useEffect(() => {\n    if (onHiddenSeriesChanged) {\n      const hiddenFrames: string[] = [];\n      dataWithConfig.forEach((frame) => {\n        const allFieldsHidden = frame.fields.map((field) => field.config?.custom?.hideFrom?.viz).every(identity);\n        if (allFieldsHidden) {\n          hiddenFrames.push(getFrameDisplayName(frame));\n        }\n      });\n      onHiddenSeriesChanged(hiddenFrames);\n    }\n  }, [dataWithConfig, onHiddenSeriesChanged]);\n\n  const seriesToShow = showAllTimeSeries ? dataWithConfig : dataWithConfig.slice(0, MAX_NUMBER_OF_TIME_SERIES);\n\n  const panelContext: PanelContext = {\n    eventBus: appEvents,\n    onSplitOpen: splitOpenFn,\n    onToggleSeriesVisibility(label: string, mode: SeriesVisibilityChangeMode) {\n      setBaseStructureRev((r) => r + 1);\n      setFieldConfig(seriesVisibilityConfigFactory(label, mode, fieldConfig, data));\n    },\n  };\n\n  return (\n    <PanelContextProvider value={panelContext}>\n      {dataWithConfig.length > MAX_NUMBER_OF_TIME_SERIES && !showAllTimeSeries && (\n        <div className={cx([style.timeSeriesDisclaimer])}>\n          <Icon className={style.disclaimerIcon} name=\"exclamation-triangle\" />\n          {`Showing only ${MAX_NUMBER_OF_TIME_SERIES} time series. `}\n          <span\n            className={cx([style.showAllTimeSeries])}\n            onClick={() => {\n              structureChangesRef.current++;\n              setShowAllTimeSeries(true);\n            }}\n          >{`Show all ${dataWithConfig.length}`}</span>\n        </div>\n      )}\n      <PanelRenderer\n        data={{ series: seriesToShow, timeRange, structureRev, state: loadingState, annotations }}\n        pluginId=\"timeseries\"\n        title=\"\"\n        width={width}\n        height={height}\n        onChangeTimeRange={onChangeTime}\n        options={\n          {\n            tooltip: { mode: tooltipDisplayMode },\n            legend: { displayMode: LegendDisplayMode.List, placement: 'bottom', calcs: [] },\n          } as TimeSeriesOptions\n        }\n      />\n    </PanelContextProvider>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  timeSeriesDisclaimer: css`\n    label: time-series-disclaimer;\n    width: 300px;\n    margin: ${theme.spacing(1)} auto;\n    padding: 10px 0;\n    border-radius: ${theme.spacing(2)};\n    text-align: center;\n    background-color: ${theme.colors.background.primary};\n  `,\n  disclaimerIcon: css`\n    label: disclaimer-icon;\n    color: ${theme.colors.warning.main};\n    margin-right: ${theme.spacing(0.5)};\n  `,\n  showAllTimeSeries: css`\n    label: show-all-time-series;\n    cursor: pointer;\n    color: ${theme.colors.text.link};\n  `,\n});\n","import React, { PureComponent, createRef } from 'react';\nimport { css } from '@emotion/css';\nimport { capitalize } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport { TooltipDisplayMode } from '@grafana/schema';\nimport {\n  rangeUtil,\n  RawTimeRange,\n  LogLevel,\n  TimeZone,\n  AbsoluteTimeRange,\n  LogsDedupStrategy,\n  LogRowModel,\n  LogsDedupDescription,\n  LogsMetaItem,\n  LogsSortOrder,\n  LinkModel,\n  Field,\n  DataQuery,\n  DataFrame,\n  GrafanaTheme2,\n  LoadingState,\n} from '@grafana/data';\nimport {\n  RadioButtonGroup,\n  LogRows,\n  Button,\n  InlineField,\n  InlineFieldRow,\n  InlineSwitch,\n  withTheme2,\n  Themeable2,\n} from '@grafana/ui';\nimport store from 'app/core/store';\nimport { dedupLogRows, filterLogLevels } from 'app/core/logs_model';\nimport { LogsMetaRow } from './LogsMetaRow';\nimport LogsNavigation from './LogsNavigation';\nimport { RowContextOptions } from '@grafana/ui/src/components/Logs/LogRowContextProvider';\nimport { ExploreGraph } from './ExploreGraph';\n\nconst SETTINGS_KEYS = {\n  showLabels: 'grafana.explore.logs.showLabels',\n  showTime: 'grafana.explore.logs.showTime',\n  wrapLogMessage: 'grafana.explore.logs.wrapLogMessage',\n  prettifyLogMessage: 'grafana.explore.logs.prettifyLogMessage',\n};\n\ninterface Props extends Themeable2 {\n  width: number;\n  logRows: LogRowModel[];\n  logsMeta?: LogsMetaItem[];\n  logsSeries?: DataFrame[];\n  logsQueries?: DataQuery[];\n  visibleRange?: AbsoluteTimeRange;\n  theme: GrafanaTheme2;\n  loading: boolean;\n  loadingState: LoadingState;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  scanning?: boolean;\n  scanRange?: RawTimeRange;\n  showContextToggle?: (row?: LogRowModel) => boolean;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  onStartScanning?: () => void;\n  onStopScanning?: () => void;\n  getRowContext?: (row: LogRowModel, options?: RowContextOptions) => Promise<any>;\n  getFieldLinks: (field: Field, rowIndex: number) => Array<LinkModel<Field>>;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n}\n\ninterface State {\n  showLabels: boolean;\n  showTime: boolean;\n  wrapLogMessage: boolean;\n  prettifyLogMessage: boolean;\n  dedupStrategy: LogsDedupStrategy;\n  hiddenLogLevels: LogLevel[];\n  logsSortOrder: LogsSortOrder | null;\n  isFlipping: boolean;\n  showDetectedFields: string[];\n  forceEscape: boolean;\n}\n\nexport class UnthemedLogs extends PureComponent<Props, State> {\n  flipOrderTimer?: number;\n  cancelFlippingTimer?: number;\n  topLogsRef = createRef<HTMLDivElement>();\n\n  state: State = {\n    showLabels: store.getBool(SETTINGS_KEYS.showLabels, false),\n    showTime: store.getBool(SETTINGS_KEYS.showTime, true),\n    wrapLogMessage: store.getBool(SETTINGS_KEYS.wrapLogMessage, true),\n    prettifyLogMessage: store.getBool(SETTINGS_KEYS.prettifyLogMessage, false),\n    dedupStrategy: LogsDedupStrategy.none,\n    hiddenLogLevels: [],\n    logsSortOrder: null,\n    isFlipping: false,\n    showDetectedFields: [],\n    forceEscape: false,\n  };\n\n  componentWillUnmount() {\n    if (this.flipOrderTimer) {\n      window.clearTimeout(this.flipOrderTimer);\n    }\n\n    if (this.cancelFlippingTimer) {\n      window.clearTimeout(this.cancelFlippingTimer);\n    }\n  }\n\n  onChangeLogsSortOrder = () => {\n    this.setState({ isFlipping: true });\n    // we are using setTimeout here to make sure that disabled button is rendered before the rendering of reordered logs\n    this.flipOrderTimer = window.setTimeout(() => {\n      this.setState((prevState) => {\n        if (prevState.logsSortOrder === null || prevState.logsSortOrder === LogsSortOrder.Descending) {\n          return { logsSortOrder: LogsSortOrder.Ascending };\n        }\n        return { logsSortOrder: LogsSortOrder.Descending };\n      });\n    }, 0);\n    this.cancelFlippingTimer = window.setTimeout(() => this.setState({ isFlipping: false }), 1000);\n  };\n\n  onEscapeNewlines = () => {\n    this.setState((prevState) => ({\n      forceEscape: !prevState.forceEscape,\n    }));\n  };\n\n  onChangeDedup = (dedupStrategy: LogsDedupStrategy) => {\n    this.setState({ dedupStrategy });\n  };\n\n  onChangeLabels = (event?: React.SyntheticEvent) => {\n    const target = event && (event.target as HTMLInputElement);\n    if (target) {\n      const showLabels = target.checked;\n      this.setState({\n        showLabels,\n      });\n      store.set(SETTINGS_KEYS.showLabels, showLabels);\n    }\n  };\n\n  onChangeTime = (event?: React.SyntheticEvent) => {\n    const target = event && (event.target as HTMLInputElement);\n    if (target) {\n      const showTime = target.checked;\n      this.setState({\n        showTime,\n      });\n      store.set(SETTINGS_KEYS.showTime, showTime);\n    }\n  };\n\n  onChangewrapLogMessage = (event?: React.SyntheticEvent) => {\n    const target = event && (event.target as HTMLInputElement);\n    if (target) {\n      const wrapLogMessage = target.checked;\n      this.setState({\n        wrapLogMessage,\n      });\n      store.set(SETTINGS_KEYS.wrapLogMessage, wrapLogMessage);\n    }\n  };\n\n  onChangePrettifyLogMessage = (event?: React.SyntheticEvent) => {\n    const target = event && (event.target as HTMLInputElement);\n    if (target) {\n      const prettifyLogMessage = target.checked;\n      this.setState({\n        prettifyLogMessage,\n      });\n      store.set(SETTINGS_KEYS.prettifyLogMessage, prettifyLogMessage);\n    }\n  };\n\n  onToggleLogLevel = (hiddenRawLevels: string[]) => {\n    const hiddenLogLevels = hiddenRawLevels.map((level) => LogLevel[level as LogLevel]);\n    this.setState({ hiddenLogLevels });\n  };\n\n  onClickScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStartScanning) {\n      this.props.onStartScanning();\n    }\n  };\n\n  onClickStopScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStopScanning) {\n      this.props.onStopScanning();\n    }\n  };\n\n  showDetectedField = (key: string) => {\n    const index = this.state.showDetectedFields.indexOf(key);\n\n    if (index === -1) {\n      this.setState((state) => {\n        return {\n          showDetectedFields: state.showDetectedFields.concat(key),\n        };\n      });\n    }\n  };\n\n  hideDetectedField = (key: string) => {\n    const index = this.state.showDetectedFields.indexOf(key);\n    if (index > -1) {\n      this.setState((state) => {\n        return {\n          showDetectedFields: state.showDetectedFields.filter((k) => key !== k),\n        };\n      });\n    }\n  };\n\n  clearDetectedFields = () => {\n    this.setState((state) => {\n      return {\n        showDetectedFields: [],\n      };\n    });\n  };\n\n  checkUnescapedContent = memoizeOne((logRows: LogRowModel[]) => {\n    return !!logRows.some((r) => r.hasUnescapedContent);\n  });\n\n  dedupRows = memoizeOne((logRows: LogRowModel[], dedupStrategy: LogsDedupStrategy) => {\n    const dedupedRows = dedupLogRows(logRows, dedupStrategy);\n    const dedupCount = dedupedRows.reduce((sum, row) => (row.duplicates ? sum + row.duplicates : sum), 0);\n    return { dedupedRows, dedupCount };\n  });\n\n  filterRows = memoizeOne((logRows: LogRowModel[], hiddenLogLevels: LogLevel[]) => {\n    return filterLogLevels(logRows, new Set(hiddenLogLevels));\n  });\n\n  scrollToTopLogs = () => this.topLogsRef.current?.scrollIntoView();\n\n  render() {\n    const {\n      width,\n      logRows,\n      logsMeta,\n      logsSeries,\n      visibleRange,\n      loading = false,\n      loadingState,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      timeZone,\n      scanning,\n      scanRange,\n      showContextToggle,\n      absoluteRange,\n      onChangeTime,\n      getFieldLinks,\n      theme,\n      logsQueries,\n      clearCache,\n      addResultsToCache,\n    } = this.props;\n\n    const {\n      showLabels,\n      showTime,\n      wrapLogMessage,\n      prettifyLogMessage,\n      dedupStrategy,\n      hiddenLogLevels,\n      logsSortOrder,\n      isFlipping,\n      showDetectedFields,\n      forceEscape,\n    } = this.state;\n\n    const styles = getStyles(theme, wrapLogMessage);\n    const hasData = logRows && logRows.length > 0;\n    const hasUnescapedContent = this.checkUnescapedContent(logRows);\n\n    const filteredLogs = this.filterRows(logRows, hiddenLogLevels);\n    const { dedupedRows, dedupCount } = this.dedupRows(filteredLogs, dedupStrategy);\n\n    const scanText = scanRange ? `Scanning ${rangeUtil.describeTimeRange(scanRange)}` : 'Scanning...';\n\n    return (\n      <>\n        <div className={styles.infoText}>\n          This datasource does not support full-range histograms. The graph is based on the logs seen in the response.\n        </div>\n        {logsSeries && logsSeries.length ? (\n          <ExploreGraph\n            data={logsSeries}\n            height={150}\n            width={width}\n            tooltipDisplayMode={TooltipDisplayMode.Multi}\n            absoluteRange={visibleRange || absoluteRange}\n            timeZone={timeZone}\n            loadingState={loadingState}\n            onChangeTime={onChangeTime}\n            onHiddenSeriesChanged={this.onToggleLogLevel}\n          />\n        ) : undefined}\n        <div className={styles.logOptions} ref={this.topLogsRef}>\n          <InlineFieldRow>\n            <InlineField label=\"Time\" transparent>\n              <InlineSwitch value={showTime} onChange={this.onChangeTime} transparent />\n            </InlineField>\n            <InlineField label=\"Unique labels\" transparent>\n              <InlineSwitch value={showLabels} onChange={this.onChangeLabels} transparent />\n            </InlineField>\n            <InlineField label=\"Wrap lines\" transparent>\n              <InlineSwitch value={wrapLogMessage} onChange={this.onChangewrapLogMessage} transparent />\n            </InlineField>\n            <InlineField label=\"Prettify JSON\" transparent>\n              <InlineSwitch value={prettifyLogMessage} onChange={this.onChangePrettifyLogMessage} transparent />\n            </InlineField>\n            <InlineField label=\"Dedup\" transparent>\n              <RadioButtonGroup\n                options={Object.values(LogsDedupStrategy).map((dedupType) => ({\n                  label: capitalize(dedupType),\n                  value: dedupType,\n                  description: LogsDedupDescription[dedupType],\n                }))}\n                value={dedupStrategy}\n                onChange={this.onChangeDedup}\n                className={styles.radioButtons}\n              />\n            </InlineField>\n          </InlineFieldRow>\n          <Button\n            variant=\"secondary\"\n            disabled={isFlipping}\n            title={logsSortOrder === LogsSortOrder.Ascending ? 'Change to newest first' : 'Change to oldest first'}\n            aria-label=\"Flip results order\"\n            className={styles.flipButton}\n            onClick={this.onChangeLogsSortOrder}\n          >\n            {isFlipping ? 'Flipping...' : 'Flip results order'}\n          </Button>\n        </div>\n        <LogsMetaRow\n          logRows={logRows}\n          meta={logsMeta || []}\n          dedupStrategy={dedupStrategy}\n          dedupCount={dedupCount}\n          hasUnescapedContent={hasUnescapedContent}\n          forceEscape={forceEscape}\n          showDetectedFields={showDetectedFields}\n          onEscapeNewlines={this.onEscapeNewlines}\n          clearDetectedFields={this.clearDetectedFields}\n        />\n        <div className={styles.logsSection}>\n          <div className={styles.logRows}>\n            <LogRows\n              logRows={logRows}\n              deduplicatedRows={dedupedRows}\n              dedupStrategy={dedupStrategy}\n              getRowContext={this.props.getRowContext}\n              onClickFilterLabel={onClickFilterLabel}\n              onClickFilterOutLabel={onClickFilterOutLabel}\n              showContextToggle={showContextToggle}\n              showLabels={showLabels}\n              showTime={showTime}\n              enableLogDetails={true}\n              forceEscape={forceEscape}\n              wrapLogMessage={wrapLogMessage}\n              prettifyLogMessage={prettifyLogMessage}\n              timeZone={timeZone}\n              getFieldLinks={getFieldLinks}\n              logsSortOrder={logsSortOrder}\n              showDetectedFields={showDetectedFields}\n              onClickShowDetectedField={this.showDetectedField}\n              onClickHideDetectedField={this.hideDetectedField}\n            />\n          </div>\n          <LogsNavigation\n            logsSortOrder={logsSortOrder}\n            visibleRange={visibleRange ?? absoluteRange}\n            absoluteRange={absoluteRange}\n            timeZone={timeZone}\n            onChangeTime={onChangeTime}\n            loading={loading}\n            queries={logsQueries ?? []}\n            scrollToTopLogs={this.scrollToTopLogs}\n            addResultsToCache={addResultsToCache}\n            clearCache={clearCache}\n          />\n        </div>\n        {!loading && !hasData && !scanning && (\n          <div className={styles.noData}>\n            No logs found.\n            <Button size=\"xs\" fill=\"text\" onClick={this.onClickScan}>\n              Scan for older logs\n            </Button>\n          </div>\n        )}\n\n        {scanning && (\n          <div className={styles.noData}>\n            <span>{scanText}</span>\n            <Button size=\"xs\" fill=\"text\" onClick={this.onClickStopScan}>\n              Stop scan\n            </Button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const Logs = withTheme2(UnthemedLogs);\n\nconst getStyles = (theme: GrafanaTheme2, wrapLogMessage: boolean) => {\n  return {\n    noData: css`\n      > * {\n        margin-left: 0.5em;\n      }\n    `,\n    logOptions: css`\n      display: flex;\n      justify-content: space-between;\n      align-items: baseline;\n      flex-wrap: wrap;\n      background-color: ${theme.colors.background.primary};\n      padding: ${theme.spacing(1, 2)};\n      border-radius: ${theme.shape.borderRadius()};\n      margin: ${theme.spacing(2, 0, 1)};\n      border: 1px solid ${theme.colors.border.medium};\n    `,\n    flipButton: css`\n      margin: ${theme.spacing(0.5, 0, 0, 1)};\n    `,\n    radioButtons: css`\n      margin: 0 ${theme.spacing(1)};\n    `,\n    logsSection: css`\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n    `,\n    logRows: css`\n      overflow-x: ${wrapLogMessage ? 'unset' : 'scroll'};\n      overflow-y: visible;\n      width: 100%;\n    `,\n    infoText: css`\n      font-size: ${theme.typography.size.sm};\n      color: ${theme.colors.text.secondary};\n    `,\n  };\n};\n","import React from 'react';\nimport memoizeOne from 'memoize-one';\nimport { css } from '@emotion/css';\nimport { CSSTransition } from 'react-transition-group';\n\nconst transitionDuration = 500;\n// We add a bit of delay to the transition as another perf optimisation. As at the start we need to render\n// quite a bit of new rows, if we start transition at the same time there can be frame rate drop. This gives time\n// for react to first render them and then do the animation.\nconst transitionDelay = 100;\n\nconst getStyles = memoizeOne(() => {\n  return {\n    logsEnter: css`\n      label: logsEnter;\n      position: absolute;\n      opacity: 0;\n      height: auto;\n      width: 100%;\n    `,\n    logsEnterActive: css`\n      label: logsEnterActive;\n      opacity: 1;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n    logsExit: css`\n      label: logsExit;\n      position: absolute;\n      opacity: 1;\n      height: auto;\n      width: 100%;\n    `,\n    logsExitActive: css`\n      label: logsExitActive;\n      opacity: 0;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n  };\n});\n\ntype Props = {\n  children: React.ReactNode;\n  visible: boolean;\n};\n\n/**\n * Cross fade transition component that is tied a bit too much to the logs containers so not very useful elsewhere\n * right now.\n */\nexport function LogsCrossFadeTransition(props: Props) {\n  const { visible, children } = props;\n  const styles = getStyles();\n  return (\n    <CSSTransition\n      in={visible}\n      mountOnEnter={true}\n      unmountOnExit={true}\n      timeout={transitionDuration + transitionDelay}\n      classNames={{\n        enter: styles.logsEnter,\n        enterActive: styles.logsEnterActive,\n        exit: styles.logsExit,\n        exitActive: styles.logsExitActive,\n      }}\n    >\n      {children}\n    </CSSTransition>\n  );\n}\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RefreshPicker } from '@grafana/ui';\n\nimport { changeRefreshInterval } from './state/time';\nimport { setPausedStateAction, runQueries } from './state/query';\nimport { ExploreId } from '../../types';\n\n/**\n * Hook that gives you all the functions needed to control the live tailing.\n */\nexport function useLiveTailControls(exploreId: ExploreId) {\n  const dispatch = useDispatch();\n\n  const pause = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: true }));\n  }, [exploreId, dispatch]);\n\n  const resume = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: false }));\n  }, [exploreId, dispatch]);\n\n  const stop = useCallback(() => {\n    // We need to pause here first because there is transition where we are not live but live logs are still shown\n    // to cross fade with the normal view. This will prevent reordering of the logs in the live view during the\n    // transition.\n    pause();\n\n    // TODO referencing this from perspective of refresh picker when there is designated button for it now is not\n    //  great. Needs a bit of refactoring.\n    dispatch(changeRefreshInterval(exploreId, RefreshPicker.offOption.value));\n    dispatch(runQueries(exploreId));\n  }, [exploreId, dispatch, pause]);\n\n  const start = useCallback(() => {\n    dispatch(changeRefreshInterval(exploreId, RefreshPicker.liveOption.value));\n  }, [exploreId, dispatch]);\n\n  return {\n    pause,\n    resume,\n    stop,\n    start,\n  };\n}\n\ntype Props = {\n  exploreId: ExploreId;\n  children: (controls: ReturnType<typeof useLiveTailControls>) => React.ReactElement;\n};\n\n/**\n * If you can't use the hook you can use this as a render prop pattern.\n */\nexport function LiveTailControls(props: Props) {\n  const controls = useLiveTailControls(props.exploreId);\n  return props.children(controls);\n}\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { css } from 'emotion';\nimport { Collapse } from '@grafana/ui';\nimport { AbsoluteTimeRange, Field, LoadingState, LogRowModel, RawTimeRange } from '@grafana/data';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport { splitOpen } from './state/main';\nimport { addResultsToCache, clearCache } from './state/query';\nimport { updateTimeRange } from './state/time';\nimport { getTimeZone } from '../profile/state/selectors';\nimport { LiveLogsWithTheme } from './LiveLogs';\nimport { Logs } from './Logs';\nimport { LogsCrossFadeTransition } from './utils/LogsCrossFadeTransition';\nimport { LiveTailControls } from './useLiveTailControls';\nimport { getFieldLinksForExplore } from './utils/links';\n\ninterface LogsContainerProps extends PropsFromRedux {\n  width: number;\n  exploreId: ExploreId;\n  scanRange?: RawTimeRange;\n  syncedTimes: boolean;\n  loadingState: LoadingState;\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  onStartScanning: () => void;\n  onStopScanning: () => void;\n}\n\nexport class LogsContainer extends PureComponent<LogsContainerProps> {\n  onChangeTime = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  getLogRowContext = async (row: LogRowModel, options?: any): Promise<any> => {\n    const { datasourceInstance } = this.props;\n\n    if (datasourceInstance?.getLogRowContext) {\n      return datasourceInstance.getLogRowContext(row, options);\n    }\n\n    return [];\n  };\n\n  showContextToggle = (row?: LogRowModel): boolean => {\n    const { datasourceInstance } = this.props;\n\n    if (datasourceInstance?.showContextToggle) {\n      return datasourceInstance.showContextToggle(row);\n    }\n\n    return false;\n  };\n\n  getFieldLinks = (field: Field, rowIndex: number) => {\n    const { splitOpen: splitOpenFn, range } = this.props;\n    return getFieldLinksForExplore({ field, rowIndex, splitOpenFn, range });\n  };\n\n  render() {\n    const {\n      loading,\n      loadingState,\n      logRows,\n      logsMeta,\n      logsSeries,\n      logsQueries,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      onStartScanning,\n      onStopScanning,\n      absoluteRange,\n      timeZone,\n      visibleRange,\n      scanning,\n      range,\n      width,\n      isLive,\n      exploreId,\n      addResultsToCache,\n      clearCache,\n    } = this.props;\n\n    if (!logRows) {\n      return null;\n    }\n\n    // We need to override css overflow of divs in Collapse element to enable sticky Logs navigation\n    const styleOverridesForStickyNavigation = css`\n      & > div {\n        overflow: visible;\n        & > div {\n          overflow: visible;\n        }\n      }\n    `;\n\n    return (\n      <>\n        <LogsCrossFadeTransition visible={isLive}>\n          <Collapse label=\"Logs\" loading={false} isOpen>\n            <LiveTailControls exploreId={exploreId}>\n              {(controls) => (\n                <LiveLogsWithTheme\n                  logRows={logRows}\n                  timeZone={timeZone}\n                  stopLive={controls.stop}\n                  isPaused={this.props.isPaused}\n                  onPause={controls.pause}\n                  onResume={controls.resume}\n                />\n              )}\n            </LiveTailControls>\n          </Collapse>\n        </LogsCrossFadeTransition>\n        <LogsCrossFadeTransition visible={!isLive}>\n          <Collapse label=\"Logs\" loading={loading} isOpen className={styleOverridesForStickyNavigation}>\n            <Logs\n              logRows={logRows}\n              logsMeta={logsMeta}\n              logsSeries={logsSeries}\n              logsQueries={logsQueries}\n              width={width}\n              loading={loading}\n              loadingState={loadingState}\n              onChangeTime={this.onChangeTime}\n              onClickFilterLabel={onClickFilterLabel}\n              onClickFilterOutLabel={onClickFilterOutLabel}\n              onStartScanning={onStartScanning}\n              onStopScanning={onStopScanning}\n              absoluteRange={absoluteRange}\n              visibleRange={visibleRange}\n              timeZone={timeZone}\n              scanning={scanning}\n              scanRange={range.raw}\n              showContextToggle={this.showContextToggle}\n              getRowContext={this.getLogRowContext}\n              getFieldLinks={this.getFieldLinks}\n              addResultsToCache={() => addResultsToCache(exploreId)}\n              clearCache={() => clearCache(exploreId)}\n            />\n          </Collapse>\n        </LogsCrossFadeTransition>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const { logsResult, loading, scanning, datasourceInstance, isLive, isPaused, range, absoluteRange } = item;\n  const timeZone = getTimeZone(state.user);\n\n  return {\n    loading,\n    logRows: logsResult?.rows,\n    logsMeta: logsResult?.meta,\n    logsSeries: logsResult?.series,\n    logsQueries: logsResult?.queries,\n    visibleRange: logsResult?.visibleRange,\n    scanning,\n    timeZone,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    range,\n    absoluteRange,\n  };\n}\n\nconst mapDispatchToProps = {\n  updateTimeRange,\n  splitOpen,\n  addResultsToCache,\n  clearCache,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(LogsContainer);\n","import { ExploreId, StoreState } from 'app/types';\n\nexport const isSplit = (state: StoreState) => Boolean(state.explore[ExploreId.left] && state.explore[ExploreId.right]);\n\nexport const getExploreItemSelector = (exploreId: ExploreId) => (state: StoreState) => state.explore[exploreId];\n","import React, { useCallback, useMemo } from 'react';\nimport { ExploreId } from 'app/types/explore';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDatasourceSrv } from '../plugins/datasource_srv';\nimport { runQueries, changeQueriesAction } from './state/query';\nimport { CoreApp, DataQuery } from '@grafana/data';\nimport { getNextRefIdChar } from 'app/core/utils/query';\nimport { QueryEditorRows } from '../query/components/QueryEditorRows';\nimport { createSelector } from '@reduxjs/toolkit';\nimport { getExploreItemSelector } from './state/selectors';\n\ninterface Props {\n  exploreId: ExploreId;\n}\n\nconst makeSelectors = (exploreId: ExploreId) => {\n  const exploreItemSelector = getExploreItemSelector(exploreId);\n  return {\n    getQueries: createSelector(exploreItemSelector, (s) => s!.queries),\n    getQueryResponse: createSelector(exploreItemSelector, (s) => s!.queryResponse),\n    getHistory: createSelector(exploreItemSelector, (s) => s!.history),\n    getEventBridge: createSelector(exploreItemSelector, (s) => s!.eventBridge),\n    getDatasourceInstanceSettings: createSelector(\n      exploreItemSelector,\n      (s) => getDatasourceSrv().getInstanceSettings(s!.datasourceInstance?.name)!\n    ),\n  };\n};\n\nexport const QueryRows = ({ exploreId }: Props) => {\n  const dispatch = useDispatch();\n  const { getQueries, getDatasourceInstanceSettings, getQueryResponse, getHistory, getEventBridge } = useMemo(\n    () => makeSelectors(exploreId),\n    [exploreId]\n  );\n\n  const queries = useSelector(getQueries);\n  const dsSettings = useSelector(getDatasourceInstanceSettings);\n  const queryResponse = useSelector(getQueryResponse);\n  const history = useSelector(getHistory);\n  const eventBridge = useSelector(getEventBridge);\n\n  const onRunQueries = useCallback(() => {\n    dispatch(runQueries(exploreId));\n  }, [dispatch, exploreId]);\n\n  const onChange = useCallback(\n    (newQueries: DataQuery[]) => {\n      dispatch(changeQueriesAction({ queries: newQueries, exploreId }));\n\n      // if we are removing a query we want to run the remaining ones\n      if (newQueries.length < queries.length) {\n        onRunQueries();\n      }\n    },\n    [dispatch, exploreId, onRunQueries, queries]\n  );\n\n  const onAddQuery = useCallback(\n    (query: DataQuery) => {\n      onChange([...queries, { ...query, refId: getNextRefIdChar(queries) }]);\n    },\n    [onChange, queries]\n  );\n\n  return (\n    <QueryEditorRows\n      dsSettings={dsSettings}\n      queries={queries}\n      onQueriesChange={onChange}\n      onAddQuery={onAddQuery}\n      onRunQueries={onRunQueries}\n      data={queryResponse}\n      app={CoreApp.Explore}\n      history={history}\n      eventBus={eventBridge}\n    />\n  );\n};\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { ValueLinkConfig } from '@grafana/data';\nimport { Collapse, Table } from '@grafana/ui';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport { splitOpen } from './state/main';\nimport { config } from 'app/core/config';\nimport { PANEL_BORDER } from 'app/core/constants';\nimport { MetaInfoText } from './MetaInfoText';\nimport { FilterItem } from '@grafana/ui/src/components/Table/types';\nimport { getFieldLinksForExplore } from './utils/links';\n\ninterface TableContainerProps {\n  ariaLabel?: string;\n  exploreId: ExploreId;\n  width: number;\n  onCellFilterAdded?: (filter: FilterItem) => void;\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: TableContainerProps) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const { loading: loadingInState, tableResult, range } = item;\n  const loading = tableResult && tableResult.length > 0 ? false : loadingInState;\n  return { loading, tableResult, range };\n}\n\nconst mapDispatchToProps = {\n  splitOpen,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = TableContainerProps & ConnectedProps<typeof connector>;\n\nexport class TableContainer extends PureComponent<Props> {\n  getTableHeight() {\n    const { tableResult } = this.props;\n\n    if (!tableResult || tableResult.length === 0) {\n      return 200;\n    }\n\n    // tries to estimate table height\n    return Math.max(Math.min(600, tableResult.length * 35) + 35);\n  }\n\n  render() {\n    const { loading, onCellFilterAdded, tableResult, width, splitOpen, range, ariaLabel } = this.props;\n\n    const height = this.getTableHeight();\n    const tableWidth = width - config.theme.panelPadding * 2 - PANEL_BORDER;\n    const hasTableResult = tableResult?.length;\n\n    if (tableResult && tableResult.length) {\n      // Bit of code smell here. We need to add links here to the frame modifying the frame on every render.\n      // Should work fine in essence but still not the ideal way to pass props. In logs container we do this\n      // differently and sidestep this getLinks API on a dataframe\n      for (const field of tableResult.fields) {\n        field.getLinks = (config: ValueLinkConfig) => {\n          return getFieldLinksForExplore({ field, rowIndex: config.valueRowIndex!, splitOpenFn: splitOpen, range });\n        };\n      }\n    }\n\n    return (\n      <Collapse label=\"Table\" loading={loading} isOpen>\n        {hasTableResult ? (\n          <Table\n            ariaLabel={ariaLabel}\n            data={tableResult!}\n            width={tableWidth}\n            height={height}\n            onCellFilterAdded={onCellFilterAdded}\n          />\n        ) : (\n          <MetaInfoText metaItems={[{ value: '0 series returned' }]} />\n        )}\n      </Collapse>\n    );\n  }\n}\n\nexport default connector(TableContainer);\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { stylesFactory, useTheme, Select, Button, Switch, Field } from '@grafana/ui';\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\nimport appEvents from 'app/core/app_events';\nimport { ShowConfirmModalEvent } from '../../../types/events';\nimport { dispatch } from 'app/store/store';\nimport { notifyApp } from 'app/core/actions';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\n\nexport interface RichHistorySettingsProps {\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  onChangeRetentionPeriod: (option: SelectableValue<number>) => void;\n  toggleStarredTabAsFirstTab: () => void;\n  toggleactiveDatasourceOnly: () => void;\n  deleteRichHistory: () => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    container: css`\n      padding-left: ${theme.spacing.sm};\n      font-size: ${theme.typography.size.sm};\n      .space-between {\n        margin-bottom: ${theme.spacing.lg};\n      }\n    `,\n    input: css`\n      max-width: 200px;\n    `,\n    switch: css`\n      display: flex;\n      align-items: center;\n    `,\n    label: css`\n      margin-left: ${theme.spacing.md};\n    `,\n  };\n});\n\nconst retentionPeriodOptions = [\n  { value: 2, label: '2 days' },\n  { value: 5, label: '5 days' },\n  { value: 7, label: '1 week' },\n  { value: 14, label: '2 weeks' },\n];\n\nexport function RichHistorySettings(props: RichHistorySettingsProps) {\n  const {\n    retentionPeriod,\n    starredTabAsFirstTab,\n    activeDatasourceOnly,\n    onChangeRetentionPeriod,\n    toggleStarredTabAsFirstTab,\n    toggleactiveDatasourceOnly,\n    deleteRichHistory,\n  } = props;\n  const theme = useTheme();\n  const styles = getStyles(theme);\n  const selectedOption = retentionPeriodOptions.find((v) => v.value === retentionPeriod);\n\n  const onDelete = () => {\n    appEvents.publish(\n      new ShowConfirmModalEvent({\n        title: 'Delete',\n        text: 'Are you sure you want to permanently delete your query history?',\n        yesText: 'Delete',\n        icon: 'trash-alt',\n        onConfirm: () => {\n          deleteRichHistory();\n          dispatch(notifyApp(createSuccessNotification('Query history deleted')));\n        },\n      })\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      <Field\n        label=\"History time span\"\n        description=\"Select the period of time for which Grafana will save your query history\"\n        className=\"space-between\"\n      >\n        <div className={styles.input}>\n          <Select\n            menuShouldPortal\n            value={selectedOption}\n            options={retentionPeriodOptions}\n            onChange={onChangeRetentionPeriod}\n          ></Select>\n        </div>\n      </Field>\n      <Field label=\"Default active tab\" description=\" \" className=\"space-between\">\n        <div className={styles.switch}>\n          <Switch value={starredTabAsFirstTab} onChange={toggleStarredTabAsFirstTab}></Switch>\n          <div className={styles.label}>Change the default active tab from “Query history” to “Starred”</div>\n        </div>\n      </Field>\n      <Field label=\"Data source behaviour\" description=\" \" className=\"space-between\">\n        <div className={styles.switch}>\n          <Switch value={activeDatasourceOnly} onChange={toggleactiveDatasourceOnly}></Switch>\n          <div className={styles.label}>Only show queries for data source currently active in Explore</div>\n        </div>\n      </Field>\n      <div\n        className={css`\n          font-weight: ${theme.typography.weight.bold};\n        `}\n      >\n        Clear query history\n      </div>\n      <div\n        className={css`\n          margin-bottom: ${theme.spacing.sm};\n        `}\n      >\n        Delete all of your query history, permanently.\n      </div>\n      <Button variant=\"destructive\" onClick={onDelete}>\n        Clear query history\n      </Button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { css, cx } from '@emotion/css';\nimport { stylesFactory, useTheme, TextArea, Button, IconButton } from '@grafana/ui';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { GrafanaTheme, DataSourceApi } from '@grafana/data';\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\nimport { createUrlFromRichHistory, createQueryText } from 'app/core/utils/richHistory';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { copyStringToClipboard } from 'app/core/utils/explore';\nimport appEvents from 'app/core/app_events';\nimport { dispatch } from 'app/store/store';\nimport { notifyApp } from 'app/core/actions';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { StoreState } from 'app/types';\n\nimport { updateRichHistory } from '../state/history';\nimport { changeDatasource } from '../state/datasource';\nimport { setQueries } from '../state/query';\nimport { ShowConfirmModalEvent } from '../../../types/events';\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const { datasourceInstance } = explore[exploreId]!;\n  return {\n    exploreId,\n    datasourceInstance,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  updateRichHistory,\n  setQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps {\n  query: RichHistoryQuery;\n  dsImg: string;\n  isRemoved: boolean;\n}\n\nexport type Props = ConnectedProps<typeof connector> & OwnProps;\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, isRemoved: boolean) => {\n  /* Hard-coded value so all buttons and icons on right side of card are aligned */\n  const rigtColumnWidth = '240px';\n  const rigtColumnContentWidth = '170px';\n\n  /* If datasource was removed, card will have inactive color */\n  const cardColor = theme.colors.bg2;\n\n  return {\n    queryCard: css`\n      display: flex;\n      flex-direction: column;\n      border: 1px solid ${theme.colors.border1};\n      margin: ${theme.spacing.sm} 0;\n      background-color: ${cardColor};\n      border-radius: ${theme.border.radius.sm};\n      .starred {\n        color: ${theme.palette.orange};\n      }\n    `,\n    cardRow: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${theme.spacing.sm};\n      border-bottom: none;\n      :first-of-type {\n        border-bottom: 1px solid ${theme.colors.border1};\n        padding: ${theme.spacing.xs} ${theme.spacing.sm};\n      }\n      img {\n        height: ${theme.typography.size.base};\n        max-width: ${theme.typography.size.base};\n        margin-right: ${theme.spacing.sm};\n      }\n    `,\n    datasourceContainer: css`\n      display: flex;\n      align-items: center;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.semibold};\n    `,\n    queryActionButtons: css`\n      max-width: ${rigtColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      font-size: ${theme.typography.size.base};\n      button {\n        margin-left: ${theme.spacing.sm};\n      }\n    `,\n    queryContainer: css`\n      font-weight: ${theme.typography.weight.semibold};\n      width: calc(100% - ${rigtColumnWidth});\n    `,\n    queryRow: css`\n      border-top: 1px solid ${theme.colors.border1};\n      word-break: break-all;\n      padding: 4px 2px;\n      :first-child {\n        border-top: none;\n        padding: 0 0 4px 0;\n      }\n    `,\n    updateCommentContainer: css`\n      width: calc(100% + ${rigtColumnWidth});\n      margin-top: ${theme.spacing.sm};\n    `,\n    comment: css`\n      overflow-wrap: break-word;\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.regular};\n      margin-top: ${theme.spacing.xs};\n    `,\n    commentButtonRow: css`\n      > * {\n        margin-right: ${theme.spacing.sm};\n      }\n    `,\n    textArea: css`\n      width: 100%;\n    `,\n    runButton: css`\n      max-width: ${rigtColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      button {\n        height: auto;\n        padding: ${theme.spacing.xs} ${theme.spacing.md};\n        line-height: 1.4;\n        span {\n          white-space: normal !important;\n        }\n      }\n    `,\n  };\n});\n\nexport function RichHistoryCard(props: Props) {\n  const {\n    query,\n    dsImg,\n    isRemoved,\n    updateRichHistory,\n    changeDatasource,\n    exploreId,\n    datasourceInstance,\n    setQueries,\n  } = props;\n  const [activeUpdateComment, setActiveUpdateComment] = useState(false);\n  const [comment, setComment] = useState<string | undefined>(query.comment);\n  const [queryDsInstance, setQueryDsInstance] = useState<DataSourceApi | undefined>(undefined);\n\n  useEffect(() => {\n    const getQueryDsInstance = async () => {\n      const ds = await getDataSourceSrv().get(query.datasourceName);\n      setQueryDsInstance(ds);\n    };\n\n    getQueryDsInstance();\n  }, [query.datasourceName]);\n\n  const theme = useTheme();\n  const styles = getStyles(theme, isRemoved);\n\n  const onRunQuery = async () => {\n    const queriesToRun = query.queries;\n    if (query.datasourceName !== datasourceInstance?.name) {\n      await changeDatasource(exploreId, query.datasourceName, { importQueries: true });\n      setQueries(exploreId, queriesToRun);\n    } else {\n      setQueries(exploreId, queriesToRun);\n    }\n  };\n\n  const onCopyQuery = () => {\n    const queriesToCopy = query.queries.map((q) => createQueryText(q, queryDsInstance)).join('\\n');\n    copyStringToClipboard(queriesToCopy);\n    dispatch(notifyApp(createSuccessNotification('Query copied to clipboard')));\n  };\n\n  const onCreateShortLink = async () => {\n    const link = createUrlFromRichHistory(query);\n    await createAndCopyShortLink(link);\n  };\n\n  const onDeleteQuery = () => {\n    // For starred queries, we want confirmation. For non-starred, we don't.\n    if (query.starred) {\n      appEvents.publish(\n        new ShowConfirmModalEvent({\n          title: 'Delete',\n          text: 'Are you sure you want to permanently delete your starred query?',\n          yesText: 'Delete',\n          icon: 'trash-alt',\n          onConfirm: () => {\n            updateRichHistory(query.ts, 'delete');\n            dispatch(notifyApp(createSuccessNotification('Query deleted')));\n          },\n        })\n      );\n    } else {\n      updateRichHistory(query.ts, 'delete');\n      dispatch(notifyApp(createSuccessNotification('Query deleted')));\n    }\n  };\n\n  const onStarrQuery = () => {\n    updateRichHistory(query.ts, 'starred');\n  };\n\n  const toggleActiveUpdateComment = () => setActiveUpdateComment(!activeUpdateComment);\n\n  const onUpdateComment = () => {\n    updateRichHistory(query.ts, 'comment', comment);\n    setActiveUpdateComment(false);\n  };\n\n  const onCancelUpdateComment = () => {\n    setActiveUpdateComment(false);\n    setComment(query.comment);\n  };\n\n  const onKeyDown = (keyEvent: React.KeyboardEvent) => {\n    if (keyEvent.key === 'Enter' && (keyEvent.shiftKey || keyEvent.ctrlKey)) {\n      onUpdateComment();\n    }\n\n    if (keyEvent.key === 'Escape') {\n      onCancelUpdateComment();\n    }\n  };\n\n  const updateComment = (\n    <div className={styles.updateCommentContainer} aria-label={comment ? 'Update comment form' : 'Add comment form'}>\n      <TextArea\n        value={comment}\n        placeholder={comment ? undefined : 'An optional description of what the query does.'}\n        onChange={(e) => setComment(e.currentTarget.value)}\n        className={styles.textArea}\n      />\n      <div className={styles.commentButtonRow}>\n        <Button onClick={onUpdateComment} aria-label=\"Submit button\">\n          Save comment\n        </Button>\n        <Button variant=\"secondary\" onClick={onCancelUpdateComment}>\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n\n  const queryActionButtons = (\n    <div className={styles.queryActionButtons}>\n      <IconButton\n        name=\"comment-alt\"\n        onClick={toggleActiveUpdateComment}\n        title={query.comment?.length > 0 ? 'Edit comment' : 'Add comment'}\n      />\n      <IconButton name=\"copy\" onClick={onCopyQuery} title=\"Copy query to clipboard\" />\n      {!isRemoved && (\n        <IconButton name=\"share-alt\" onClick={onCreateShortLink} title=\"Copy shortened link to clipboard\" />\n      )}\n      <IconButton name=\"trash-alt\" title={'Delete query'} onClick={onDeleteQuery} />\n      <IconButton\n        name={query.starred ? 'favorite' : 'star'}\n        iconType={query.starred ? 'mono' : 'default'}\n        onClick={onStarrQuery}\n        title={query.starred ? 'Unstar query' : 'Star query'}\n      />\n    </div>\n  );\n\n  return (\n    <div className={styles.queryCard} onKeyDown={onKeyDown}>\n      <div className={styles.cardRow}>\n        <div className={styles.datasourceContainer}>\n          <img src={dsImg} aria-label=\"Data source icon\" />\n          <div aria-label=\"Data source name\">\n            {isRemoved ? 'Data source does not exist anymore' : query.datasourceName}\n          </div>\n        </div>\n        {queryActionButtons}\n      </div>\n      <div className={cx(styles.cardRow)}>\n        <div className={styles.queryContainer}>\n          {query.queries.map((q, i) => {\n            const queryText = createQueryText(q, queryDsInstance);\n            return (\n              <div aria-label=\"Query text\" key={`${q}-${i}`} className={styles.queryRow}>\n                {queryText}\n              </div>\n            );\n          })}\n          {!activeUpdateComment && query.comment && (\n            <div aria-label=\"Query comment\" className={styles.comment}>\n              {query.comment}\n            </div>\n          )}\n          {activeUpdateComment && updateComment}\n        </div>\n        {!activeUpdateComment && (\n          <div className={styles.runButton}>\n            <Button variant=\"secondary\" onClick={onRunQuery} disabled={isRemoved}>\n              {datasourceInstance?.name === query.datasourceName ? 'Run query' : 'Switch data source and run query'}\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default connector(RichHistoryCard);\n","import React, { useState, useEffect } from 'react';\nimport { css } from '@emotion/css';\nimport { uniqBy } from 'lodash';\n\n// Types\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\n// Utils\nimport { stylesFactory, useTheme, RangeSlider, MultiSelect, Select, FilterInput } from '@grafana/ui';\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\n\nimport {\n  SortOrder,\n  mapNumbertoTimeInSlider,\n  mapQueriesToHeadings,\n  createDatasourcesList,\n  filterAndSortQueries,\n} from 'app/core/utils/richHistory';\n\n// Components\nimport RichHistoryCard from './RichHistoryCard';\nimport { sortOrderOptions } from './RichHistory';\nimport { useDebounce } from 'react-use';\n\nexport interface Props {\n  queries: RichHistoryQuery[];\n  sortOrder: SortOrder;\n  activeDatasourceOnly: boolean;\n  datasourceFilters: SelectableValue[];\n  retentionPeriod: number;\n  exploreId: ExploreId;\n  height: number;\n  onChangeSortOrder: (sortOrder: SortOrder) => void;\n  onSelectDatasourceFilters: (value: SelectableValue[]) => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme, height: number) => {\n  const bgColor = theme.isLight ? theme.palette.gray5 : theme.palette.dark4;\n\n  /* 134px is based on the width of the Query history tabs bar, so the content is aligned to right side of the tab */\n  const cardWidth = '100% - 134px';\n  const sliderHeight = `${height - 180}px`;\n  return {\n    container: css`\n      display: flex;\n      .label-slider {\n        font-size: ${theme.typography.size.sm};\n        &:last-of-type {\n          margin-top: ${theme.spacing.lg};\n        }\n        &:first-of-type {\n          font-weight: ${theme.typography.weight.semibold};\n          margin-bottom: ${theme.spacing.md};\n        }\n      }\n    `,\n    containerContent: css`\n      width: calc(${cardWidth});\n    `,\n    containerSlider: css`\n      width: 129px;\n      margin-right: ${theme.spacing.sm};\n      .slider {\n        bottom: 10px;\n        height: ${sliderHeight};\n        width: 129px;\n        padding: ${theme.spacing.sm} 0;\n      }\n    `,\n    slider: css`\n      position: fixed;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing.sm};\n      .gf-form-select-box__multi-value {\n        background-color: ${bgColor};\n        padding: ${theme.spacing.xxs} ${theme.spacing.xs} ${theme.spacing.xxs} ${theme.spacing.sm};\n        border-radius: ${theme.border.radius.sm};\n      }\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    sessionName: css`\n      display: flex;\n      align-items: flex-start;\n      justify-content: flex-start;\n      margin-top: ${theme.spacing.lg};\n      h4 {\n        margin: 0 10px 0 0;\n      }\n    `,\n    heading: css`\n      font-size: ${theme.typography.heading.h4};\n      margin: ${theme.spacing.md} ${theme.spacing.xxs} ${theme.spacing.sm} ${theme.spacing.xxs};\n    `,\n    footer: css`\n      height: 60px;\n      margin-top: ${theme.spacing.lg};\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.weight.light};\n      font-size: ${theme.typography.size.sm};\n      a {\n        font-weight: ${theme.typography.weight.semibold};\n        margin-left: ${theme.spacing.xxs};\n      }\n    `,\n    queries: css`\n      font-size: ${theme.typography.size.sm};\n      font-weight: ${theme.typography.weight.regular};\n      margin-left: ${theme.spacing.xs};\n    `,\n  };\n});\n\nexport function RichHistoryQueriesTab(props: Props) {\n  const {\n    datasourceFilters,\n    onSelectDatasourceFilters,\n    queries,\n    onChangeSortOrder,\n    sortOrder,\n    activeDatasourceOnly,\n    retentionPeriod,\n    exploreId,\n    height,\n  } = props;\n\n  const [timeFilter, setTimeFilter] = useState<[number, number]>([0, retentionPeriod]);\n  const [filteredQueries, setFilteredQueries] = useState<RichHistoryQuery[]>([]);\n  const [searchInput, setSearchInput] = useState('');\n  const [debouncedSearchInput, setDebouncedSearchInput] = useState('');\n\n  const theme = useTheme();\n  const styles = getStyles(theme, height);\n\n  const datasourcesRetrievedFromQueryHistory = uniqBy(queries, 'datasourceName').map((d) => d.datasourceName);\n  const listOfDatasources = createDatasourcesList(datasourcesRetrievedFromQueryHistory);\n\n  useDebounce(\n    () => {\n      setDebouncedSearchInput(searchInput);\n    },\n    300,\n    [searchInput]\n  );\n\n  useEffect(() => {\n    setFilteredQueries(\n      filterAndSortQueries(\n        queries,\n        sortOrder,\n        datasourceFilters.map((d) => d.value),\n        debouncedSearchInput,\n        timeFilter\n      )\n    );\n  }, [timeFilter, queries, sortOrder, datasourceFilters, debouncedSearchInput]);\n\n  /* mappedQueriesToHeadings is an object where query headings (stringified dates/data sources)\n   * are keys and arrays with queries that belong to that headings are values.\n   */\n  const mappedQueriesToHeadings = mapQueriesToHeadings(filteredQueries, sortOrder);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerSlider}>\n        <div className={styles.slider}>\n          <div className=\"label-slider\">Filter history</div>\n          <div className=\"label-slider\">{mapNumbertoTimeInSlider(timeFilter[0])}</div>\n          <div className=\"slider\">\n            <RangeSlider\n              tooltipAlwaysVisible={false}\n              min={0}\n              max={retentionPeriod}\n              value={timeFilter}\n              orientation=\"vertical\"\n              formatTooltipResult={mapNumbertoTimeInSlider}\n              reverse={true}\n              onAfterChange={setTimeFilter as () => number[]}\n            />\n          </div>\n          <div className=\"label-slider\">{mapNumbertoTimeInSlider(timeFilter[1])}</div>\n        </div>\n      </div>\n\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!activeDatasourceOnly && (\n            <div aria-label=\"Filter datasources\" className={styles.multiselect}>\n              <MultiSelect\n                menuShouldPortal\n                options={listOfDatasources}\n                value={datasourceFilters}\n                placeholder=\"Filter queries for data sources(s)\"\n                onChange={onSelectDatasourceFilters}\n              />\n            </div>\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              placeholder=\"Search queries\"\n              value={searchInput}\n              onChange={(value: string) => {\n                setSearchInput(value);\n              }}\n            />\n          </div>\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              menuShouldPortal\n              value={sortOrderOptions.filter((order) => order.value === sortOrder)}\n              options={sortOrderOptions}\n              placeholder=\"Sort queries by\"\n              onChange={(e) => onChangeSortOrder(e.value as SortOrder)}\n            />\n          </div>\n        </div>\n        {Object.keys(mappedQueriesToHeadings).map((heading) => {\n          return (\n            <div key={heading}>\n              <div className={styles.heading}>\n                {heading} <span className={styles.queries}>{mappedQueriesToHeadings[heading].length} queries</span>\n              </div>\n              {mappedQueriesToHeadings[heading].map((q: RichHistoryQuery) => {\n                const idx = listOfDatasources.findIndex((d) => d.label === q.datasourceName);\n                return (\n                  <RichHistoryCard\n                    query={q}\n                    key={q.ts}\n                    exploreId={exploreId}\n                    dsImg={listOfDatasources[idx].imgUrl}\n                    isRemoved={listOfDatasources[idx].isRemoved}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n        <div className={styles.footer}>The history is local to your browser and is not shared with others.</div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { css } from '@emotion/css';\nimport { uniqBy } from 'lodash';\n\n// Types\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\n// Utils\nimport { stylesFactory, useTheme, Select, MultiSelect, FilterInput } from '@grafana/ui';\nimport { GrafanaTheme, SelectableValue } from '@grafana/data';\nimport { filterAndSortQueries, createDatasourcesList, SortOrder } from 'app/core/utils/richHistory';\n\n// Components\nimport RichHistoryCard from './RichHistoryCard';\nimport { sortOrderOptions } from './RichHistory';\nimport { useDebounce } from 'react-use';\n\nexport interface Props {\n  queries: RichHistoryQuery[];\n  sortOrder: SortOrder;\n  activeDatasourceOnly: boolean;\n  datasourceFilters: SelectableValue[];\n  exploreId: ExploreId;\n  onChangeSortOrder: (sortOrder: SortOrder) => void;\n  onSelectDatasourceFilters: (value: SelectableValue[]) => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  const bgColor = theme.isLight ? theme.palette.gray5 : theme.palette.dark4;\n  return {\n    container: css`\n      display: flex;\n    `,\n    containerContent: css`\n      width: 100%;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing.sm};\n      .gf-form-select-box__multi-value {\n        background-color: ${bgColor};\n        padding: ${theme.spacing.xxs} ${theme.spacing.xs} ${theme.spacing.xxs} ${theme.spacing.sm};\n        border-radius: ${theme.border.radius.sm};\n      }\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    footer: css`\n      height: 60px;\n      margin-top: ${theme.spacing.lg};\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.weight.light};\n      font-size: ${theme.typography.size.sm};\n      a {\n        font-weight: ${theme.typography.weight.semibold};\n        margin-left: ${theme.spacing.xxs};\n      }\n    `,\n  };\n});\n\nexport function RichHistoryStarredTab(props: Props) {\n  const {\n    datasourceFilters,\n    onSelectDatasourceFilters,\n    queries,\n    onChangeSortOrder,\n    sortOrder,\n    activeDatasourceOnly,\n    exploreId,\n  } = props;\n\n  const [filteredQueries, setFilteredQueries] = useState<RichHistoryQuery[]>([]);\n  const [searchInput, setSearchInput] = useState('');\n  const [debouncedSearchInput, setDebouncedSearchInput] = useState('');\n\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  const datasourcesRetrievedFromQueryHistory = uniqBy(queries, 'datasourceName').map((d) => d.datasourceName);\n  const listOfDatasources = createDatasourcesList(datasourcesRetrievedFromQueryHistory);\n\n  useDebounce(\n    () => {\n      setDebouncedSearchInput(searchInput);\n    },\n    300,\n    [searchInput]\n  );\n\n  useEffect(() => {\n    const starredQueries = queries.filter((q) => q.starred === true);\n    setFilteredQueries(\n      filterAndSortQueries(\n        starredQueries,\n        sortOrder,\n        datasourceFilters.map((d) => d.value),\n        debouncedSearchInput\n      )\n    );\n  }, [queries, sortOrder, datasourceFilters, debouncedSearchInput]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!activeDatasourceOnly && (\n            <div aria-label=\"Filter datasources\" className={styles.multiselect}>\n              <MultiSelect\n                menuShouldPortal\n                options={listOfDatasources}\n                value={datasourceFilters}\n                placeholder=\"Filter queries for specific data sources(s)\"\n                onChange={onSelectDatasourceFilters}\n              />\n            </div>\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              placeholder=\"Search queries\"\n              value={searchInput}\n              onChange={(value: string) => {\n                setSearchInput(value);\n              }}\n            />\n          </div>\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              menuShouldPortal\n              options={sortOrderOptions}\n              value={sortOrderOptions.filter((order) => order.value === sortOrder)}\n              placeholder=\"Sort queries by\"\n              onChange={(e) => onChangeSortOrder(e.value as SortOrder)}\n            />\n          </div>\n        </div>\n        {filteredQueries.map((q) => {\n          const idx = listOfDatasources.findIndex((d) => d.label === q.datasourceName);\n          return (\n            <RichHistoryCard\n              query={q}\n              key={q.ts}\n              exploreId={exploreId}\n              dsImg={listOfDatasources[idx].imgUrl}\n              isRemoved={listOfDatasources[idx].isRemoved}\n            />\n          );\n        })}\n        <div className={styles.footer}>The history is local to your browser and is not shared with others.</div>\n      </div>\n    </div>\n  );\n}\n","import React, { PureComponent } from 'react';\n\n//Services & Utils\nimport { RICH_HISTORY_SETTING_KEYS, SortOrder } from 'app/core/utils/richHistory';\nimport store from 'app/core/store';\nimport { Themeable, withTheme, TabbedContainer, TabConfig } from '@grafana/ui';\n\n//Types\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\nimport { SelectableValue } from '@grafana/data';\n\n//Components\nimport { RichHistorySettings } from './RichHistorySettings';\nimport { RichHistoryQueriesTab } from './RichHistoryQueriesTab';\nimport { RichHistoryStarredTab } from './RichHistoryStarredTab';\n\nexport enum Tabs {\n  RichHistory = 'Query history',\n  Starred = 'Starred',\n  Settings = 'Settings',\n}\n\nexport const sortOrderOptions = [\n  { label: 'Newest first', value: SortOrder.Descending },\n  { label: 'Oldest first', value: SortOrder.Ascending },\n  { label: 'Data source A-Z', value: SortOrder.DatasourceAZ },\n  { label: 'Data source Z-A', value: SortOrder.DatasourceZA },\n];\n\nexport interface RichHistoryProps extends Themeable {\n  richHistory: RichHistoryQuery[];\n  activeDatasourceInstance?: string;\n  firstTab: Tabs;\n  exploreId: ExploreId;\n  height: number;\n  deleteRichHistory: () => void;\n  onClose: () => void;\n}\n\ninterface RichHistoryState {\n  sortOrder: SortOrder;\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  datasourceFilters: SelectableValue[];\n}\n\nclass UnThemedRichHistory extends PureComponent<RichHistoryProps, RichHistoryState> {\n  constructor(props: RichHistoryProps) {\n    super(props);\n    this.state = {\n      sortOrder: SortOrder.Descending,\n      datasourceFilters: store.getObject(RICH_HISTORY_SETTING_KEYS.datasourceFilters, []),\n      retentionPeriod: store.getObject(RICH_HISTORY_SETTING_KEYS.retentionPeriod, 7),\n      starredTabAsFirstTab: store.getBool(RICH_HISTORY_SETTING_KEYS.starredTabAsFirstTab, false),\n      activeDatasourceOnly: store.getBool(RICH_HISTORY_SETTING_KEYS.activeDatasourceOnly, true),\n    };\n  }\n\n  onChangeRetentionPeriod = (retentionPeriod: SelectableValue<number>) => {\n    if (retentionPeriod.value !== undefined) {\n      this.setState({\n        retentionPeriod: retentionPeriod.value,\n      });\n      store.set(RICH_HISTORY_SETTING_KEYS.retentionPeriod, retentionPeriod.value);\n    }\n  };\n\n  toggleStarredTabAsFirstTab = () => {\n    const starredTabAsFirstTab = !this.state.starredTabAsFirstTab;\n    this.setState({\n      starredTabAsFirstTab,\n    });\n    store.set(RICH_HISTORY_SETTING_KEYS.starredTabAsFirstTab, starredTabAsFirstTab);\n  };\n\n  toggleActiveDatasourceOnly = () => {\n    const activeDatasourceOnly = !this.state.activeDatasourceOnly;\n    this.setState({\n      activeDatasourceOnly,\n    });\n    store.set(RICH_HISTORY_SETTING_KEYS.activeDatasourceOnly, activeDatasourceOnly);\n  };\n\n  onSelectDatasourceFilters = (value: SelectableValue[]) => {\n    try {\n      store.setObject(RICH_HISTORY_SETTING_KEYS.datasourceFilters, value);\n    } catch (error) {\n      console.error(error);\n    }\n    /* Set data source filters to state even though they were not successfully saved in\n     * localStorage to allow interaction and filtering.\n     **/\n    this.setState({ datasourceFilters: value });\n  };\n\n  onChangeSortOrder = (sortOrder: SortOrder) => this.setState({ sortOrder });\n\n  /* If user selects activeDatasourceOnly === true, set datasource filter to currently active datasource.\n   * Filtering based on datasource won't be available. Otherwise set to null, as filtering will be\n   * available for user.\n   */\n  updateFilters() {\n    this.state.activeDatasourceOnly && this.props.activeDatasourceInstance\n      ? this.onSelectDatasourceFilters([\n          { label: this.props.activeDatasourceInstance, value: this.props.activeDatasourceInstance },\n        ])\n      : this.onSelectDatasourceFilters(this.state.datasourceFilters);\n  }\n\n  componentDidMount() {\n    this.updateFilters();\n  }\n\n  componentDidUpdate(prevProps: RichHistoryProps, prevState: RichHistoryState) {\n    if (\n      this.props.activeDatasourceInstance !== prevProps.activeDatasourceInstance ||\n      this.state.activeDatasourceOnly !== prevState.activeDatasourceOnly\n    ) {\n      this.updateFilters();\n    }\n  }\n\n  render() {\n    const { datasourceFilters, sortOrder, activeDatasourceOnly, retentionPeriod } = this.state;\n    const { richHistory, height, exploreId, deleteRichHistory, onClose, firstTab } = this.props;\n\n    const QueriesTab: TabConfig = {\n      label: 'Query history',\n      value: Tabs.RichHistory,\n      content: (\n        <RichHistoryQueriesTab\n          queries={richHistory}\n          sortOrder={sortOrder}\n          datasourceFilters={datasourceFilters}\n          activeDatasourceOnly={activeDatasourceOnly}\n          retentionPeriod={retentionPeriod}\n          onChangeSortOrder={this.onChangeSortOrder}\n          onSelectDatasourceFilters={this.onSelectDatasourceFilters}\n          exploreId={exploreId}\n          height={height}\n        />\n      ),\n      icon: 'history',\n    };\n\n    const StarredTab: TabConfig = {\n      label: 'Starred',\n      value: Tabs.Starred,\n      content: (\n        <RichHistoryStarredTab\n          queries={richHistory}\n          sortOrder={sortOrder}\n          datasourceFilters={datasourceFilters}\n          activeDatasourceOnly={activeDatasourceOnly}\n          onChangeSortOrder={this.onChangeSortOrder}\n          onSelectDatasourceFilters={this.onSelectDatasourceFilters}\n          exploreId={exploreId}\n        />\n      ),\n      icon: 'star',\n    };\n\n    const SettingsTab: TabConfig = {\n      label: 'Settings',\n      value: Tabs.Settings,\n      content: (\n        <RichHistorySettings\n          retentionPeriod={this.state.retentionPeriod}\n          starredTabAsFirstTab={this.state.starredTabAsFirstTab}\n          activeDatasourceOnly={this.state.activeDatasourceOnly}\n          onChangeRetentionPeriod={this.onChangeRetentionPeriod}\n          toggleStarredTabAsFirstTab={this.toggleStarredTabAsFirstTab}\n          toggleactiveDatasourceOnly={this.toggleActiveDatasourceOnly}\n          deleteRichHistory={deleteRichHistory}\n        />\n      ),\n      icon: 'sliders-v-alt',\n    };\n\n    let tabs = [QueriesTab, StarredTab, SettingsTab];\n    return (\n      <TabbedContainer tabs={tabs} onClose={onClose} defaultTab={firstTab} closeIconTooltip=\"Close query history\" />\n    );\n  }\n}\n\nexport const RichHistory = withTheme(UnThemedRichHistory);\n","// Libraries\nimport React from 'react';\nimport { Resizable, ResizeCallback } from 're-resizable';\nimport { css, cx, keyframes } from '@emotion/css';\n\n// Services & Utils\nimport { stylesFactory, useTheme2 } from '@grafana/ui';\n\n// Types\nimport { GrafanaTheme2 } from '@grafana/data';\n\nconst drawerSlide = keyframes`\n  0% {\n    transform: translateY(400px);\n  }\n\n  100% {\n    transform: translateY(0px);\n  }\n`;\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      position: fixed !important;\n      bottom: 0;\n      background: ${theme.colors.background.primary};\n      border-top: 1px solid ${theme.colors.border.weak};\n      margin: ${theme.spacing(0, -2, 0, -2)};\n      box-shadow: ${theme.shadows.z3};\n      z-index: ${theme.zIndex.sidemenu};\n    `,\n    drawerActive: css`\n      opacity: 1;\n      animation: 0.5s ease-out ${drawerSlide};\n    `,\n    rzHandle: css`\n      background: ${theme.colors.secondary.main};\n      transition: 0.3s background ease-in-out;\n      position: relative;\n      width: 200px !important;\n      height: 7px !important;\n      left: calc(50% - 100px) !important;\n      top: -4px !important;\n      cursor: grab;\n      border-radius: 4px;\n      &:hover {\n        background: ${theme.colors.secondary.shade};\n      }\n    `,\n  };\n});\n\nexport interface Props {\n  width: number;\n  children: React.ReactNode;\n  onResize?: ResizeCallback;\n}\n\nexport function ExploreDrawer(props: Props) {\n  const { width, children, onResize } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const drawerWidth = `${width + 31.5}px`;\n\n  return (\n    <Resizable\n      className={cx(styles.container, styles.drawerActive)}\n      defaultSize={{ width: drawerWidth, height: '400px' }}\n      handleClasses={{ top: styles.rzHandle }}\n      enable={{\n        top: true,\n        right: false,\n        bottom: false,\n        left: false,\n        topRight: false,\n        bottomRight: false,\n        bottomLeft: false,\n        topLeft: false,\n      }}\n      maxHeight=\"100vh\"\n      maxWidth={drawerWidth}\n      minWidth={drawerWidth}\n      onResize={onResize}\n    >\n      {children}\n    </Resizable>\n  );\n}\n","// Libraries\nimport React, { useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\n// Services & Utils\nimport store from 'app/core/store';\nimport { RICH_HISTORY_SETTING_KEYS } from 'app/core/utils/richHistory';\n\n// Types\nimport { ExploreItemState, StoreState } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\n\n// Components, enums\nimport { RichHistory, Tabs } from './RichHistory';\n\n//Actions\nimport { deleteRichHistory } from '../state/history';\nimport { ExploreDrawer } from '../ExploreDrawer';\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const { datasourceInstance } = item;\n  const firstTab = store.getBool(RICH_HISTORY_SETTING_KEYS.starredTabAsFirstTab, false)\n    ? Tabs.Starred\n    : Tabs.RichHistory;\n  const { richHistory } = explore;\n  return {\n    richHistory,\n    firstTab,\n    activeDatasourceInstance: datasourceInstance?.name,\n  };\n}\n\nconst mapDispatchToProps = {\n  deleteRichHistory,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps {\n  width: number;\n  exploreId: ExploreId;\n  onClose: () => void;\n}\nexport type Props = ConnectedProps<typeof connector> & OwnProps;\n\nexport function RichHistoryContainer(props: Props) {\n  const [height, setHeight] = useState(400);\n\n  const { richHistory, width, firstTab, activeDatasourceInstance, exploreId, deleteRichHistory, onClose } = props;\n\n  return (\n    <ExploreDrawer\n      width={width}\n      onResize={(_e, _dir, ref) => {\n        setHeight(Number(ref.style.height.slice(0, -2)));\n      }}\n    >\n      <RichHistory\n        richHistory={richHistory}\n        firstTab={firstTab}\n        activeDatasourceInstance={activeDatasourceInstance}\n        exploreId={exploreId}\n        deleteRichHistory={deleteRichHistory}\n        onClose={onClose}\n        height={height}\n      />\n    </ExploreDrawer>\n  );\n}\n\nexport default connector(RichHistoryContainer);\n","import React from 'react';\nimport { TabbedContainer, TabConfig } from '@grafana/ui';\nimport { TimeZone } from '@grafana/data';\nimport { runQueries } from './state/query';\nimport { StoreState, ExploreItemState, ExploreId } from 'app/types';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { ExploreDrawer } from 'app/features/explore/ExploreDrawer';\nimport { InspectJSONTab } from 'app/features/inspector/InspectJSONTab';\nimport { QueryInspector } from 'app/features/inspector/QueryInspector';\nimport { InspectStatsTab } from 'app/features/inspector/InspectStatsTab';\nimport { InspectDataTab } from 'app/features/inspector/InspectDataTab';\nimport { InspectErrorTab } from 'app/features/inspector/InspectErrorTab';\n\ninterface DispatchProps {\n  width: number;\n  exploreId: ExploreId;\n  onClose: () => void;\n}\n\ntype Props = DispatchProps & ConnectedProps<typeof connector>;\n\nexport function ExploreQueryInspector(props: Props) {\n  const { loading, width, onClose, queryResponse } = props;\n  const dataFrames = queryResponse?.series || [];\n  const error = queryResponse?.error;\n\n  const statsTab: TabConfig = {\n    label: 'Stats',\n    value: 'stats',\n    icon: 'chart-line',\n    content: <InspectStatsTab data={queryResponse!} timeZone={queryResponse?.request?.timezone as TimeZone} />,\n  };\n\n  const jsonTab: TabConfig = {\n    label: 'JSON',\n    value: 'json',\n    icon: 'brackets-curly',\n    content: <InspectJSONTab data={queryResponse} onClose={onClose} />,\n  };\n\n  const dataTab: TabConfig = {\n    label: 'Data',\n    value: 'data',\n    icon: 'database',\n    content: (\n      <InspectDataTab\n        data={dataFrames}\n        isLoading={loading}\n        options={{ withTransforms: false, withFieldConfig: false }}\n      />\n    ),\n  };\n\n  const queryTab: TabConfig = {\n    label: 'Query',\n    value: 'query',\n    icon: 'info-circle',\n    content: <QueryInspector data={dataFrames} onRefreshQuery={() => props.runQueries(props.exploreId)} />,\n  };\n\n  const tabs = [statsTab, queryTab, jsonTab, dataTab];\n  if (error) {\n    const errorTab: TabConfig = {\n      label: 'Error',\n      value: 'error',\n      icon: 'exclamation-triangle',\n      content: <InspectErrorTab error={error} />,\n    };\n    tabs.push(errorTab);\n  }\n  return (\n    <ExploreDrawer width={width} onResize={() => {}}>\n      <TabbedContainer tabs={tabs} onClose={onClose} closeIconTooltip=\"Close query inspector\" />\n    </ExploreDrawer>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const { loading, queryResponse } = item;\n\n  return {\n    loading,\n    queryResponse,\n  };\n}\n\nconst mapDispatchToProps = {\n  runQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default connector(ExploreQueryInspector);\n","import React from 'react';\nimport { Tooltip, ToolbarButton } from '@grafana/ui';\n\ninterface TimeSyncButtonProps {\n  isSynced: boolean;\n  onClick: () => void;\n}\n\nexport function TimeSyncButton(props: TimeSyncButtonProps) {\n  const { onClick, isSynced } = props;\n\n  const syncTimesTooltip = () => {\n    const { isSynced } = props;\n    const tooltip = isSynced ? 'Unsync all views' : 'Sync all views to this time range';\n    return <>{tooltip}</>;\n  };\n\n  return (\n    <Tooltip content={syncTimesTooltip} placement=\"bottom\">\n      <ToolbarButton\n        icon=\"link\"\n        variant={isSynced ? 'active' : 'default'}\n        aria-label={isSynced ? 'Synced times' : 'Unsynced times'}\n        onClick={onClick}\n      />\n    </Tooltip>\n  );\n}\n","// Libaries\nimport React, { Component } from 'react';\n\n// Types\nimport { ExploreId } from 'app/types';\nimport { TimeRange, TimeZone, RawTimeRange, dateTimeForTimeZone, dateMath } from '@grafana/data';\n\n// State\n\n// Components\nimport { TimeSyncButton } from './TimeSyncButton';\nimport { TimePickerWithHistory } from 'app/core/components/TimePicker/TimePickerWithHistory';\n\n// Utils & Services\nimport { getShiftedTimeRange, getZoomedTimeRange } from 'app/core/utils/timePicker';\n\nexport interface Props {\n  exploreId: ExploreId;\n  hideText?: boolean;\n  range: TimeRange;\n  timeZone: TimeZone;\n  fiscalYearStartMonth: number;\n  splitted: boolean;\n  syncedTimes: boolean;\n  onChangeTimeSync: () => void;\n  onChangeTime: (range: RawTimeRange) => void;\n  onChangeTimeZone: (timeZone: TimeZone) => void;\n  onChangeFiscalYearStartMonth: (fiscalYearStartMonth: number) => void;\n}\n\nexport class ExploreTimeControls extends Component<Props> {\n  onMoveTimePicker = (direction: number) => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getShiftedTimeRange(direction, range);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  onMoveForward = () => this.onMoveTimePicker(1);\n  onMoveBack = () => this.onMoveTimePicker(-1);\n\n  onChangeTimePicker = (timeRange: TimeRange) => {\n    const adjustedFrom = dateMath.isMathString(timeRange.raw.from) ? timeRange.raw.from : timeRange.from;\n    const adjustedTo = dateMath.isMathString(timeRange.raw.to) ? timeRange.raw.to : timeRange.to;\n\n    this.props.onChangeTime({\n      from: adjustedFrom,\n      to: adjustedTo,\n    });\n  };\n\n  onZoom = () => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getZoomedTimeRange(range, 2);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  render() {\n    const {\n      range,\n      timeZone,\n      fiscalYearStartMonth,\n      splitted,\n      syncedTimes,\n      onChangeTimeSync,\n      hideText,\n      onChangeTimeZone,\n      onChangeFiscalYearStartMonth,\n    } = this.props;\n    const timeSyncButton = splitted ? <TimeSyncButton onClick={onChangeTimeSync} isSynced={syncedTimes} /> : undefined;\n    const timePickerCommonProps = {\n      value: range,\n      timeZone,\n      fiscalYearStartMonth,\n      onMoveBackward: this.onMoveBack,\n      onMoveForward: this.onMoveForward,\n      onZoom: this.onZoom,\n      hideText,\n    };\n\n    return (\n      <TimePickerWithHistory\n        {...timePickerCommonProps}\n        timeSyncButton={timeSyncButton}\n        isSynced={syncedTimes}\n        onChange={this.onChangeTimePicker}\n        onChangeTimeZone={onChangeTimeZone}\n        onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { CSSTransition } from 'react-transition-group';\nimport { Tooltip, ButtonGroup, ToolbarButton } from '@grafana/ui';\n\ntype LiveTailButtonProps = {\n  splitted: boolean;\n  start: () => void;\n  stop: () => void;\n  pause: () => void;\n  resume: () => void;\n  isLive: boolean;\n  isPaused: boolean;\n};\n\nexport function LiveTailButton(props: LiveTailButtonProps) {\n  const { start, pause, resume, isLive, isPaused, stop, splitted } = props;\n  const buttonVariant = isLive && !isPaused ? 'active' : 'default';\n  const onClickMain = isLive ? (isPaused ? resume : pause) : start;\n\n  return (\n    <ButtonGroup>\n      <Tooltip\n        content={isLive && !isPaused ? <>Pause the live stream</> : <>Start live stream your logs</>}\n        placement=\"bottom\"\n      >\n        <ToolbarButton\n          iconOnly={splitted}\n          variant={buttonVariant}\n          icon={!isLive || isPaused ? 'play' : 'pause'}\n          onClick={onClickMain}\n        >\n          {isLive && isPaused ? 'Paused' : 'Live'}\n        </ToolbarButton>\n      </Tooltip>\n\n      <CSSTransition\n        mountOnEnter={true}\n        unmountOnExit={true}\n        timeout={100}\n        in={isLive}\n        classNames={{\n          enter: styles.stopButtonEnter,\n          enterActive: styles.stopButtonEnterActive,\n          exit: styles.stopButtonExit,\n          exitActive: styles.stopButtonExitActive,\n        }}\n      >\n        <Tooltip content={<>Stop and exit the live stream</>} placement=\"bottom\">\n          <ToolbarButton variant={buttonVariant} onClick={stop} icon=\"square-shape\" />\n        </Tooltip>\n      </CSSTransition>\n    </ButtonGroup>\n  );\n}\n\nconst styles = {\n  stopButtonEnter: css`\n    label: stopButtonEnter;\n    width: 0;\n    opacity: 0;\n    overflow: hidden;\n  `,\n  stopButtonEnterActive: css`\n    label: stopButtonEnterActive;\n    opacity: 1;\n    width: 32px;\n  `,\n  stopButtonExit: css`\n    label: stopButtonExit;\n    width: 32px;\n    opacity: 1;\n    overflow: hidden;\n  `,\n  stopButtonExitActive: css`\n    label: stopButtonExitActive;\n    opacity: 0;\n    width: 0;\n  `,\n};\n","import React from 'react';\nimport { RefreshPicker, defaultIntervals } from '@grafana/ui';\nimport { getTimeSrv } from 'app/features/dashboard/services/TimeSrv';\n\nexport type Props = {\n  isSmall?: boolean;\n  loading: boolean;\n  isLive: boolean;\n  onRun: (loading: boolean) => void;\n  refreshInterval?: string;\n  onChangeRefreshInterval: (interval: string) => void;\n  showDropdown: boolean;\n};\n\nexport function RunButton(props: Props) {\n  const { isSmall, loading, onRun, onChangeRefreshInterval, refreshInterval, showDropdown, isLive } = props;\n  const intervals = getTimeSrv().getValidIntervals(defaultIntervals);\n  let text: string | undefined;\n\n  if (isLive) {\n    return null;\n  }\n\n  if (!isSmall) {\n    text = loading ? 'Cancel' : 'Run query';\n  }\n\n  return (\n    <RefreshPicker\n      onIntervalChanged={onChangeRefreshInterval}\n      value={refreshInterval}\n      isLoading={loading}\n      text={text}\n      intervals={intervals}\n      isLive={isLive}\n      onRefresh={() => onRun(loading)}\n      noIntervalPicker={!showDropdown}\n      primary={true}\n    />\n  );\n}\n","import React, { FC } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { ButtonGroup, ButtonSelect, Icon, ToolbarButton, Tooltip } from '@grafana/ui';\nimport { DataQuery, urlUtil } from '@grafana/data';\n\nimport kbn from '../../core/utils/kbn';\nimport config from 'app/core/config';\nimport { getDashboardSrv } from '../dashboard/services/DashboardSrv';\nimport { StoreState } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\nimport { setDashboardQueriesToUpdateOnLoad } from '../dashboard/state/reducers';\nimport { isSplit } from './state/selectors';\nimport { locationService } from '@grafana/runtime';\nimport { contextSrv } from 'app/core/services/context_srv';\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const splitted = isSplit(state);\n  const { datasourceInstance, queries, originPanelId } = explore[exploreId]!;\n\n  const roles = ['Editor', 'Admin'];\n  if (config.viewersCanEdit) {\n    roles.push('Viewer');\n  }\n\n  return {\n    exploreId,\n    datasourceInstance,\n    queries,\n    originPanelId,\n    splitted,\n    canEdit: roles.some((r) => contextSrv.hasRole(r)),\n  };\n}\n\nconst mapDispatchToProps = {\n  setDashboardQueriesToUpdateOnLoad,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype Props = ConnectedProps<typeof connector>;\n\nexport const UnconnectedReturnToDashboardButton: FC<Props> = ({\n  originPanelId,\n  setDashboardQueriesToUpdateOnLoad,\n  queries,\n  splitted,\n  canEdit,\n}) => {\n  const withOriginId = originPanelId && Number.isInteger(originPanelId);\n\n  // If in split mode, or no origin id, escape early and return null\n  if (splitted || !withOriginId) {\n    return null;\n  }\n\n  const cleanQueries = (queries: DataQuery[]) => {\n    return queries.map((query: DataQuery & { context?: string }) => {\n      delete query.context;\n      delete query.key;\n      return query;\n    });\n  };\n\n  const returnToPanel = async ({ withChanges = false } = {}) => {\n    const dashboardSrv = getDashboardSrv();\n    const dash = dashboardSrv.getCurrent();\n    if (!dash) {\n      return;\n    }\n\n    const titleSlug = kbn.slugifyForUrl(dash.title);\n\n    if (withChanges) {\n      setDashboardQueriesToUpdateOnLoad({\n        panelId: originPanelId!,\n        queries: cleanQueries(queries),\n      });\n    }\n\n    const query: any = {};\n\n    if (withChanges || dash.panelInEdit) {\n      query.editPanel = originPanelId;\n    } else if (dash.panelInView) {\n      query.viewPanel = originPanelId;\n    }\n\n    locationService.push(urlUtil.renderUrl(`/d/${dash.uid}/:${titleSlug}`, query));\n  };\n\n  return (\n    <ButtonGroup>\n      <Tooltip content={'Return to panel'} placement=\"bottom\">\n        <ToolbarButton data-testid=\"returnButton\" title={'Return to panel'} onClick={() => returnToPanel()}>\n          <Icon name=\"arrow-left\" />\n        </ToolbarButton>\n      </Tooltip>\n      {canEdit && (\n        <ButtonSelect\n          data-testid=\"returnButtonWithChanges\"\n          options={[{ label: 'Return to panel with changes', value: '' }]}\n          onChange={() => returnToPanel({ withChanges: true })}\n        />\n      )}\n    </ButtonGroup>\n  );\n};\n\nexport default connector(UnconnectedReturnToDashboardButton);\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport classNames from 'classnames';\nimport { css } from '@emotion/css';\n\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { Icon, IconButton, SetInterval, ToolbarButton, ToolbarButtonRow, Tooltip } from '@grafana/ui';\nimport { DataSourceInstanceSettings, RawTimeRange } from '@grafana/data';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport { StoreState } from 'app/types/store';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { changeDatasource } from './state/datasource';\nimport { splitClose, splitOpen } from './state/main';\nimport { syncTimes, changeRefreshInterval } from './state/time';\nimport { getFiscalYearStartMonth, getTimeZone } from '../profile/state/selectors';\nimport { updateFiscalYearStartMonthForSession, updateTimeZoneForSession } from '../profile/state/reducers';\nimport { ExploreTimeControls } from './ExploreTimeControls';\nimport { LiveTailButton } from './LiveTailButton';\nimport { RunButton } from './RunButton';\nimport { LiveTailControls } from './useLiveTailControls';\nimport { cancelQueries, clearQueries, runQueries } from './state/query';\nimport ReturnToDashboardButton from './ReturnToDashboardButton';\nimport { isSplit } from './state/selectors';\n\ninterface OwnProps {\n  exploreId: ExploreId;\n  onChangeTime: (range: RawTimeRange, changedByScanner?: boolean) => void;\n}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport class UnConnectedExploreToolbar extends PureComponent<Props> {\n  onChangeDatasource = async (dsSettings: DataSourceInstanceSettings) => {\n    this.props.changeDatasource(this.props.exploreId, dsSettings.uid, { importQueries: true });\n  };\n\n  onClearAll = () => {\n    this.props.clearAll(this.props.exploreId);\n  };\n\n  onRunQuery = (loading = false) => {\n    const { runQueries, cancelQueries, exploreId } = this.props;\n    if (loading) {\n      return cancelQueries(exploreId);\n    } else {\n      return runQueries(exploreId);\n    }\n  };\n\n  onChangeRefreshInterval = (item: string) => {\n    const { changeRefreshInterval, exploreId } = this.props;\n    changeRefreshInterval(exploreId, item);\n  };\n\n  onChangeTimeSync = () => {\n    const { syncTimes, exploreId } = this.props;\n    syncTimes(exploreId);\n  };\n\n  render() {\n    const {\n      datasourceMissing,\n      closeSplit,\n      exploreId,\n      loading,\n      range,\n      timeZone,\n      fiscalYearStartMonth,\n      splitted,\n      syncedTimes,\n      refreshInterval,\n      onChangeTime,\n      split,\n      hasLiveOption,\n      isLive,\n      isPaused,\n      containerWidth,\n      onChangeTimeZone,\n      onChangeFiscalYearStartMonth,\n    } = this.props;\n\n    const showSmallDataSourcePicker = (splitted ? containerWidth < 700 : containerWidth < 800) || false;\n    const showSmallTimePicker = splitted || containerWidth < 1210;\n\n    return (\n      <div className={splitted ? 'explore-toolbar splitted' : 'explore-toolbar'}>\n        <div className=\"explore-toolbar-item\">\n          <div className=\"explore-toolbar-header\">\n            <div className=\"explore-toolbar-header-title\">\n              {exploreId === 'left' && (\n                <span className=\"navbar-page-btn\">\n                  <Icon\n                    name=\"compass\"\n                    size=\"lg\"\n                    className={css`\n                      margin-right: 6px;\n                      margin-bottom: 3px;\n                    `}\n                  />\n                  Explore\n                </span>\n              )}\n            </div>\n            {splitted && (\n              <IconButton\n                title=\"Close split pane\"\n                className=\"explore-toolbar-header-close\"\n                onClick={() => closeSplit(exploreId)}\n                name=\"times\"\n              />\n            )}\n          </div>\n        </div>\n        <div className=\"explore-toolbar-item\">\n          <div className=\"explore-toolbar-content\">\n            {!datasourceMissing ? (\n              <div className=\"explore-toolbar-content-item\">\n                <div\n                  className={classNames(\n                    'explore-ds-picker',\n                    showSmallDataSourcePicker ? 'explore-ds-picker--small' : ''\n                  )}\n                >\n                  <DataSourcePicker\n                    onChange={this.onChangeDatasource}\n                    current={this.props.datasourceName}\n                    hideTextValue={showSmallDataSourcePicker}\n                  />\n                </div>\n              </div>\n            ) : null}\n            <ToolbarButtonRow>\n              <ReturnToDashboardButton exploreId={exploreId} />\n\n              {exploreId === 'left' && !splitted ? (\n                <ToolbarButton\n                  iconOnly={splitted}\n                  title=\"Split\"\n                  /* This way ToolbarButton doesn't add event as a parameter when invoking split function\n                   * which breaks splitting functionality\n                   */\n                  onClick={() => split()}\n                  icon=\"columns\"\n                  disabled={isLive}\n                >\n                  Split\n                </ToolbarButton>\n              ) : null}\n\n              <Tooltip content={'Copy shortened link to the executed query'} placement=\"bottom\">\n                <ToolbarButton\n                  icon=\"share-alt\"\n                  onClick={() => createAndCopyShortLink(window.location.href)}\n                  aria-label=\"Copy shortened link to the executed query\"\n                />\n              </Tooltip>\n\n              {!isLive && (\n                <ExploreTimeControls\n                  exploreId={exploreId}\n                  range={range}\n                  timeZone={timeZone}\n                  fiscalYearStartMonth={fiscalYearStartMonth}\n                  onChangeTime={onChangeTime}\n                  splitted={splitted}\n                  syncedTimes={syncedTimes}\n                  onChangeTimeSync={this.onChangeTimeSync}\n                  hideText={showSmallTimePicker}\n                  onChangeTimeZone={onChangeTimeZone}\n                  onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n                />\n              )}\n\n              {!isLive && (\n                <ToolbarButton title=\"Clear all\" onClick={this.onClearAll} icon=\"trash-alt\" iconOnly={splitted}>\n                  Clear all\n                </ToolbarButton>\n              )}\n\n              <RunButton\n                refreshInterval={refreshInterval}\n                onChangeRefreshInterval={this.onChangeRefreshInterval}\n                isSmall={splitted || showSmallTimePicker}\n                isLive={isLive}\n                loading={loading || (isLive && !isPaused)}\n                onRun={this.onRunQuery}\n                showDropdown={!isLive}\n              />\n\n              {refreshInterval && <SetInterval func={this.onRunQuery} interval={refreshInterval} loading={loading} />}\n\n              {hasLiveOption && (\n                <LiveTailControls exploreId={exploreId}>\n                  {(controls) => (\n                    <LiveTailButton\n                      splitted={splitted}\n                      isLive={isLive}\n                      isPaused={isPaused}\n                      start={controls.start}\n                      pause={controls.pause}\n                      resume={controls.resume}\n                      stop={controls.stop}\n                    />\n                  )}\n                </LiveTailControls>\n              )}\n            </ToolbarButtonRow>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState, { exploreId }: OwnProps) => {\n  const syncedTimes = state.explore.syncedTimes;\n  const exploreItem: ExploreItemState = state.explore[exploreId]!;\n  const {\n    datasourceInstance,\n    datasourceMissing,\n    range,\n    refreshInterval,\n    loading,\n    isLive,\n    isPaused,\n    containerWidth,\n  } = exploreItem;\n\n  const hasLiveOption = !!datasourceInstance?.meta?.streaming;\n\n  return {\n    datasourceMissing,\n    datasourceName: datasourceInstance?.name,\n    loading,\n    range,\n    timeZone: getTimeZone(state.user),\n    fiscalYearStartMonth: getFiscalYearStartMonth(state.user),\n    splitted: isSplit(state),\n    refreshInterval,\n    hasLiveOption,\n    isLive,\n    isPaused,\n    syncedTimes,\n    containerWidth,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  changeRefreshInterval,\n  clearAll: clearQueries,\n  cancelQueries,\n  runQueries,\n  closeSplit: splitClose,\n  split: splitOpen,\n  syncTimes,\n  onChangeTimeZone: updateTimeZoneForSession,\n  onChangeFiscalYearStartMonth: updateFiscalYearStartMonthForSession,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport const ExploreToolbar = connector(UnConnectedExploreToolbar);\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { LinkButton, CallToActionCard, Icon, useTheme2 } from '@grafana/ui';\n\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\n\nexport const NoDataSourceCallToAction = () => {\n  const theme = useTheme2();\n\n  const canCreateDataSource =\n    contextSrv.hasPermission(AccessControlAction.DataSourcesCreate) &&\n    contextSrv.hasPermission(AccessControlAction.DataSourcesWrite);\n\n  const message =\n    'Explore requires at least one data source. Once you have added a data source, you can query it here.';\n  const footer = (\n    <>\n      <Icon name=\"rocket\" />\n      <> ProTip: You can also define data sources through configuration files. </>\n      <a\n        href=\"http://docs.grafana.org/administration/provisioning/#datasources?utm_source=explore\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"text-link\"\n      >\n        Learn more\n      </a>\n    </>\n  );\n\n  const ctaElement = (\n    <LinkButton size=\"lg\" href=\"datasources/new\" icon=\"database\" disabled={!canCreateDataSource}>\n      Add data source\n    </LinkButton>\n  );\n\n  const cardClassName = css`\n    max-width: ${theme.breakpoints.values.lg}px;\n    margin-top: ${theme.spacing(2)};\n    align-self: center;\n  `;\n\n  return (\n    <CallToActionCard callToActionElement={ctaElement} className={cardClassName} footer={footer} message={message} />\n  );\n};\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, HorizontalGroup, useTheme2 } from '@grafana/ui';\n\ntype Props = {\n  addQueryRowButtonDisabled?: boolean;\n  addQueryRowButtonHidden?: boolean;\n  richHistoryButtonActive?: boolean;\n  queryInspectorButtonActive?: boolean;\n\n  onClickAddQueryRowButton: () => void;\n  onClickRichHistoryButton: () => void;\n  onClickQueryInspectorButton: () => void;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    containerMargin: css`\n      margin-top: ${theme.spacing(2)};\n    `,\n  };\n};\nexport function SecondaryActions(props: Props) {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  return (\n    <div className={styles.containerMargin}>\n      <HorizontalGroup>\n        {!props.addQueryRowButtonHidden && (\n          <Button\n            variant=\"secondary\"\n            aria-label=\"Add row button\"\n            onClick={props.onClickAddQueryRowButton}\n            disabled={props.addQueryRowButtonDisabled}\n            icon=\"plus\"\n          >\n            Add query\n          </Button>\n        )}\n        <Button\n          variant=\"secondary\"\n          aria-label=\"Rich history button\"\n          className={cx({ ['explore-active-button']: props.richHistoryButtonActive })}\n          onClick={props.onClickRichHistoryButton}\n          icon=\"history\"\n        >\n          Query history\n        </Button>\n        <Button\n          variant=\"secondary\"\n          aria-label=\"Query inspector button\"\n          className={cx({ ['explore-active-button']: props.queryInspectorButtonActive })}\n          onClick={props.onClickQueryInspectorButton}\n          icon=\"info-circle\"\n        >\n          Inspector\n        </Button>\n      </HorizontalGroup>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useToggle } from 'react-use';\nimport { Badge, Collapse, useStyles2, useTheme2 } from '@grafana/ui';\nimport { applyFieldOverrides, DataFrame, GrafanaTheme2 } from '@grafana/data';\nimport { css } from '@emotion/css';\nimport { ExploreId, StoreState } from '../../types';\nimport { splitOpen } from './state/main';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useLinks } from './utils/links';\nimport { NodeGraph } from '../../plugins/panel/nodeGraph';\nimport { useCategorizeFrames } from '../../plugins/panel/nodeGraph/useCategorizeFrames';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  warningText: css`\n    label: warningText;\n    font-size: ${theme.typography.bodySmall.fontSize};\n    color: ${theme.colors.text.secondary};\n  `,\n});\n\ninterface OwnProps {\n  // Edges and Nodes are separate frames\n  dataFrames: DataFrame[];\n  exploreId: ExploreId;\n  // When showing the node graph together with trace view we do some changes so it works better.\n  withTraceView?: boolean;\n}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport function UnconnectedNodeGraphContainer(props: Props) {\n  const { dataFrames, range, splitOpen, withTraceView } = props;\n  const getLinks = useLinks(range, splitOpen);\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  // This is implicit dependency that is needed for links to work. At some point when replacing variables in the link\n  // it requires field to have a display property which is added by the overrides even though we don't add any field\n  // overrides in explore.\n  const frames = applyFieldOverrides({\n    fieldConfig: {\n      defaults: {},\n      overrides: [],\n    },\n    data: dataFrames,\n    // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n    replaceVariables: (value) => value,\n    theme,\n  });\n\n  const { nodes } = useCategorizeFrames(frames);\n  const [open, toggleOpen] = useToggle(false);\n\n  const countWarning =\n    withTraceView && nodes[0]?.length > 1000 ? (\n      <span className={styles.warningText}> ({nodes[0].length} nodes, can be slow to load)</span>\n    ) : null;\n\n  return (\n    <Collapse\n      label={\n        <span>\n          Node graph{countWarning}{' '}\n          <Badge text={'Beta'} color={'blue'} icon={'rocket'} tooltip={'This visualization is in beta'} />\n        </span>\n      }\n      collapsible={withTraceView}\n      // We allow collapsing this only when it is shown together with trace view.\n      isOpen={withTraceView ? open : true}\n      onToggle={withTraceView ? () => toggleOpen() : undefined}\n    >\n      <div style={{ height: withTraceView ? 500 : 600 }}>\n        <NodeGraph dataFrames={frames} getLinks={getLinks} />\n      </div>\n    </Collapse>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: OwnProps) {\n  return {\n    range: state.explore[exploreId]!.range,\n  };\n}\n\nconst mapDispatchToProps = {\n  splitOpen,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport const NodeGraphContainer = connector(UnconnectedNodeGraphContainer);\n","import React, { FC, CSSProperties } from 'react';\nimport Transition, { ExitHandler } from 'react-transition-group/Transition';\n\ninterface Props {\n  duration: number;\n  children: JSX.Element;\n  in: boolean;\n  unmountOnExit?: boolean;\n  onExited?: ExitHandler<HTMLDivElement>;\n}\n\nexport const FadeIn: FC<Props> = (props) => {\n  const defaultStyle: CSSProperties = {\n    transition: `opacity ${props.duration}ms linear`,\n    opacity: 0,\n  };\n\n  const transitionStyles: { [str: string]: CSSProperties } = {\n    exited: { opacity: 0, display: 'none' },\n    entering: { opacity: 0 },\n    entered: { opacity: 1 },\n    exiting: { opacity: 0 },\n  };\n\n  return (\n    <Transition\n      in={props.in}\n      timeout={props.duration}\n      unmountOnExit={props.unmountOnExit || false}\n      onExited={props.onExited}\n    >\n      {(state) => (\n        <div\n          style={{\n            ...defaultStyle,\n            ...transitionStyles[state],\n          }}\n        >\n          {props.children}\n        </div>\n      )}\n    </Transition>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport { DataQueryError } from '@grafana/data';\nimport { Alert, useTheme2 } from '@grafana/ui';\nimport { FadeIn } from 'app/core/components/Animations/FadeIn';\nimport { css } from '@emotion/css';\n\nexport interface ErrorContainerProps {\n  queryError?: DataQueryError;\n}\n\nexport const ErrorContainer: FunctionComponent<ErrorContainerProps> = (props) => {\n  const { queryError } = props;\n  const theme = useTheme2();\n  const showError = queryError ? true : false;\n  const duration = showError ? 100 : 10;\n  const title = queryError ? 'Query error' : 'Unknown error';\n  const message = queryError?.message || queryError?.data?.message || null;\n  const alertWithTopMargin = css`\n    margin-top: ${theme.spacing(2)};\n  `;\n\n  return (\n    <FadeIn in={showError} duration={duration}>\n      <Alert severity=\"error\" title={title} className={alertWithTopMargin}>\n        {message}\n      </Alert>\n    </FadeIn>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ExploreId, StoreState } from '../../types';\nimport { LoadingState } from '@grafana/data';\nimport { ErrorContainer } from './ErrorContainer';\n\ninterface Props {\n  exploreId: ExploreId;\n}\nexport function ResponseErrorContainer(props: Props) {\n  const queryResponse = useSelector((state: StoreState) => state.explore[props.exploreId]?.queryResponse);\n\n  const queryError = queryResponse?.state === LoadingState.Error ? queryResponse?.error : undefined;\n\n  return <ErrorContainer queryError={queryError} />;\n}\n","import { DataLink, dateTime, Field, mapInternalLinkToExplore, rangeUtil, SplitOpen, TimeRange } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { Icon } from '@grafana/ui';\nimport { TraceSpan } from '@jaegertracing/jaeger-ui-components';\nimport { TraceToLogsOptions } from 'app/core/components/TraceToLogsSettings';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport React from 'react';\nimport { LokiQuery } from '../../../plugins/datasource/loki/types';\n\n/**\n * This is a factory for the link creator. It returns the function mainly so it can return undefined in which case\n * the trace view won't create any links and to capture the datasource and split function making it easier to memoize\n * with useMemo.\n */\nexport function createSpanLinkFactory(splitOpenFn: SplitOpen, traceToLogsOptions?: TraceToLogsOptions) {\n  // We should return if dataSourceUid is undefined otherwise getInstanceSettings would return testDataSource.\n  if (!traceToLogsOptions?.datasourceUid) {\n    return undefined;\n  }\n\n  const dataSourceSettings = getDatasourceSrv().getInstanceSettings(traceToLogsOptions.datasourceUid);\n\n  if (!dataSourceSettings) {\n    return undefined;\n  }\n\n  return function (span: TraceSpan): { href: string; onClick?: (event: any) => void; content: React.ReactNode } {\n    // This is reusing existing code from derived fields which may not be ideal match so some data is a bit faked at\n    // the moment. Issue is that the trace itself isn't clearly mapped to dataFrame (right now it's just a json blob\n    // inside a single field) so the dataLinks as config of that dataFrame abstraction breaks down a bit and we do\n    // it manually here instead of leaving it for the data source to supply the config.\n\n    const dataLink: DataLink<LokiQuery> = {\n      title: dataSourceSettings.name,\n      url: '',\n      internal: {\n        datasourceUid: dataSourceSettings.uid,\n        datasourceName: dataSourceSettings.name,\n        query: {\n          expr: getLokiQueryFromSpan(span, traceToLogsOptions),\n          refId: '',\n        },\n      },\n    };\n\n    const link = mapInternalLinkToExplore({\n      link: dataLink,\n      internalLink: dataLink.internal!,\n      scopedVars: {},\n      range: getTimeRangeFromSpan(span, traceToLogsOptions),\n      field: {} as Field,\n      onClickFn: splitOpenFn,\n      replaceVariables: getTemplateSrv().replace.bind(getTemplateSrv()),\n    });\n\n    return {\n      href: link.href,\n      onClick: link.onClick,\n      content: <Icon name=\"gf-logs\" title=\"Explore the logs for this in split view\" />,\n    };\n  };\n}\n\n/**\n * Default keys to use when there are no configured tags.\n */\nconst defaultKeys = ['cluster', 'hostname', 'namespace', 'pod'];\n\nfunction getLokiQueryFromSpan(span: TraceSpan, options: TraceToLogsOptions): string {\n  const { tags: keys, filterByTraceID, filterBySpanID } = options;\n  const keysToCheck = keys?.length ? keys : defaultKeys;\n  const tags = [...span.process.tags, ...span.tags].reduce((acc, tag) => {\n    if (keysToCheck.includes(tag.key)) {\n      acc.push(`${tag.key}=\"${tag.value}\"`);\n    }\n    return acc;\n  }, [] as string[]);\n\n  let query = `{${tags.join(', ')}}`;\n\n  if (filterByTraceID && span.traceID) {\n    query += ` |=\"${span.traceID}\"`;\n  }\n  if (filterBySpanID && span.spanID) {\n    query += ` |=\"${span.spanID}\"`;\n  }\n\n  return query;\n}\n\n/**\n * Gets a time range from the span.\n */\nfunction getTimeRangeFromSpan(span: TraceSpan, traceToLogsOptions?: TraceToLogsOptions): TimeRange {\n  const adjustedStartTime = traceToLogsOptions?.spanStartTimeShift\n    ? Math.floor(span.startTime / 1000 + rangeUtil.intervalToMs(traceToLogsOptions.spanStartTimeShift))\n    : Math.floor(span.startTime / 1000);\n  const from = dateTime(adjustedStartTime);\n  const spanEndMs = (span.startTime + span.duration) / 1000;\n  let adjustedEndTime = traceToLogsOptions?.spanEndTimeShift\n    ? Math.floor(spanEndMs + rangeUtil.intervalToMs(traceToLogsOptions.spanEndTimeShift))\n    : Math.floor(spanEndMs);\n\n  // Because we can only pass milliseconds in the url we need to check if they equal.\n  // We need end time to be later than start time\n  if (adjustedStartTime === adjustedEndTime) {\n    adjustedEndTime++;\n  }\n  const to = dateTime(adjustedEndTime);\n\n  // Beware that public/app/features/explore/state/main.ts SplitOpen fn uses the range from here. No matter what is in the url.\n  return {\n    from,\n    to,\n    raw: {\n      from,\n      to,\n    },\n  };\n}\n","import { GrafanaTheme } from '@grafana/data';\nimport {\n  Button,\n  Input,\n  Popover,\n  PopoverController,\n  stylesFactory,\n  Tooltip as GrafanaTooltip,\n  useTheme,\n} from '@grafana/ui';\nimport { ButtonProps, Elements, PopoverProps, TooltipProps } from '@jaegertracing/jaeger-ui-components';\nimport cx from 'classnames';\nimport { css } from '@emotion/css';\nimport React, { useRef } from 'react';\n\n/**\n * Right now Jaeger components need some UI elements to be injected. This is to get rid of AntD UI library that was\n * used by default.\n */\n\n// This needs to be static to prevent remounting on every render.\nexport const UIElements: Elements = {\n  Popover({ children, content, overlayClassName }: PopoverProps) {\n    const popoverRef = useRef<HTMLElement>(null);\n\n    return (\n      <PopoverController content={content} hideAfter={300}>\n        {(showPopper, hidePopper, popperProps) => {\n          return (\n            <>\n              {popoverRef.current && (\n                <Popover\n                  {...popperProps}\n                  referenceElement={popoverRef.current}\n                  wrapperClassName={overlayClassName}\n                  onMouseLeave={hidePopper}\n                  onMouseEnter={showPopper}\n                />\n              )}\n\n              {React.cloneElement(children, {\n                ref: popoverRef,\n                onMouseEnter: showPopper,\n                onMouseLeave: hidePopper,\n              })}\n            </>\n          );\n        }}\n      </PopoverController>\n    );\n  },\n  Tooltip({ children, title }: TooltipProps) {\n    return <GrafanaTooltip content={title}>{children}</GrafanaTooltip>;\n  },\n  Icon: (() => null as any) as any,\n  Dropdown: (() => null as any) as any,\n  Menu: (() => null as any) as any,\n  MenuItem: (() => null as any) as any,\n  Button({ onClick, children, className }: ButtonProps) {\n    return (\n      <Button variant=\"secondary\" onClick={onClick} className={className}>\n        {children}\n      </Button>\n    );\n  },\n  Divider,\n  Input(props) {\n    return <Input {...props} />;\n  },\n  InputGroup({ children, className, style }) {\n    return (\n      <span className={className} style={style}>\n        {children}\n      </span>\n    );\n  },\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    Divider: css`\n      display: inline-block;\n      background: ${theme.isDark ? '#242424' : '#e8e8e8'};\n      width: 1px;\n      height: 0.9em;\n      margin: 0 8px;\n      vertical-align: middle;\n    `,\n  };\n});\n\nfunction Divider({ className }: { className?: string }) {\n  const styles = getStyles(useTheme());\n  return <div style={{}} className={cx(styles.Divider, className)} />;\n}\n","import { useCallback, useState } from 'react';\nimport { TraceSpan } from '@jaegertracing/jaeger-ui-components';\n\n/**\n * Children state means whether spans are collapsed or not. Also provides some functions to manipulate that state.\n */\nexport function useChildrenState() {\n  const [childrenHiddenIDs, setChildrenHiddenIDs] = useState(new Set<string>());\n\n  const expandOne = useCallback(\n    function expandOne(spans: TraceSpan[]) {\n      if (childrenHiddenIDs.size === 0) {\n        return;\n      }\n      let prevExpandedDepth = -1;\n      let expandNextHiddenSpan = true;\n      const newChildrenHiddenIDs = spans.reduce((res, s) => {\n        if (s.depth <= prevExpandedDepth) {\n          expandNextHiddenSpan = true;\n        }\n        if (expandNextHiddenSpan && res.has(s.spanID)) {\n          res.delete(s.spanID);\n          expandNextHiddenSpan = false;\n          prevExpandedDepth = s.depth;\n        }\n        return res;\n      }, new Set(childrenHiddenIDs));\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  const collapseOne = useCallback(\n    function collapseOne(spans: TraceSpan[]) {\n      if (shouldDisableCollapse(spans, childrenHiddenIDs)) {\n        return;\n      }\n      let nearestCollapsedAncestor: TraceSpan | undefined;\n      const newChildrenHiddenIDs = spans.reduce((res, curSpan) => {\n        if (nearestCollapsedAncestor && curSpan.depth <= nearestCollapsedAncestor.depth) {\n          res.add(nearestCollapsedAncestor.spanID);\n          if (curSpan.hasChildren) {\n            nearestCollapsedAncestor = curSpan;\n          }\n        } else if (curSpan.hasChildren && !res.has(curSpan.spanID)) {\n          nearestCollapsedAncestor = curSpan;\n        }\n        return res;\n      }, new Set(childrenHiddenIDs));\n      // The last one\n      if (nearestCollapsedAncestor) {\n        newChildrenHiddenIDs.add(nearestCollapsedAncestor.spanID);\n      }\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  const expandAll = useCallback(function expandAll() {\n    setChildrenHiddenIDs(new Set<string>());\n  }, []);\n\n  const collapseAll = useCallback(\n    function collapseAll(spans: TraceSpan[]) {\n      if (shouldDisableCollapse(spans, childrenHiddenIDs)) {\n        return;\n      }\n      const newChildrenHiddenIDs = spans.reduce((res, s) => {\n        if (s.hasChildren) {\n          res.add(s.spanID);\n        }\n        return res;\n      }, new Set<string>());\n\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  const childrenToggle = useCallback(\n    function childrenToggle(spanID: string) {\n      const newChildrenHiddenIDs = new Set(childrenHiddenIDs);\n      if (childrenHiddenIDs.has(spanID)) {\n        newChildrenHiddenIDs.delete(spanID);\n      } else {\n        newChildrenHiddenIDs.add(spanID);\n      }\n      setChildrenHiddenIDs(newChildrenHiddenIDs);\n    },\n    [childrenHiddenIDs]\n  );\n\n  return {\n    childrenHiddenIDs,\n    expandOne,\n    collapseOne,\n    expandAll,\n    collapseAll,\n    childrenToggle,\n  };\n}\n\nfunction shouldDisableCollapse(allSpans: TraceSpan[], hiddenSpansIds: Set<string>) {\n  const allParentSpans = allSpans.filter((s) => s.hasChildren);\n  return allParentSpans.length === hiddenSpansIds.size;\n}\n","import { useCallback, useState } from 'react';\nimport { DetailState } from '@jaegertracing/jaeger-ui-components';\nimport { TraceLog } from '@jaegertracing/jaeger-ui-components/src/types/trace';\n\n/**\n * Keeps state of the span detail. This means whether span details are open but also state of each detail subitem\n * like logs or tags.\n */\nexport function useDetailState() {\n  const [detailStates, setDetailStates] = useState(new Map<string, DetailState>());\n\n  const toggleDetail = useCallback(\n    function toggleDetail(spanID: string) {\n      const newDetailStates = new Map(detailStates);\n      if (newDetailStates.has(spanID)) {\n        newDetailStates.delete(spanID);\n      } else {\n        newDetailStates.set(spanID, new DetailState());\n      }\n      setDetailStates(newDetailStates);\n    },\n    [detailStates]\n  );\n\n  const detailLogItemToggle = useCallback(\n    function detailLogItemToggle(spanID: string, log: TraceLog) {\n      const old = detailStates.get(spanID);\n      if (!old) {\n        return;\n      }\n      const detailState = old.toggleLogItem(log);\n      const newDetailStates = new Map(detailStates);\n      newDetailStates.set(spanID, detailState);\n      return setDetailStates(newDetailStates);\n    },\n    [detailStates]\n  );\n\n  return {\n    detailStates,\n    toggleDetail,\n    detailLogItemToggle,\n    detailLogsToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('logs', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailWarningsToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('warnings', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailStackTracesToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('stackTraces', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailReferencesToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('references', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailProcessToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('process', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n    detailTagsToggle: useCallback(\n      (spanID: string) => makeDetailSubsectionToggle('tags', detailStates, setDetailStates)(spanID),\n      [detailStates]\n    ),\n  };\n}\n\nfunction makeDetailSubsectionToggle(\n  subSection: 'tags' | 'process' | 'logs' | 'warnings' | 'references' | 'stackTraces',\n  detailStates: Map<string, DetailState>,\n  setDetailStates: (detailStates: Map<string, DetailState>) => void\n) {\n  return (spanID: string) => {\n    const old = detailStates.get(spanID);\n    if (!old) {\n      return;\n    }\n    let detailState;\n    if (subSection === 'tags') {\n      detailState = old.toggleTags();\n    } else if (subSection === 'process') {\n      detailState = old.toggleProcess();\n    } else if (subSection === 'warnings') {\n      detailState = old.toggleWarnings();\n    } else if (subSection === 'references') {\n      detailState = old.toggleReferences();\n    } else if (subSection === 'stackTraces') {\n      detailState = old.toggleStackTraces();\n    } else {\n      detailState = old.toggleLogs();\n    }\n    const newDetailStates = new Map(detailStates);\n    newDetailStates.set(spanID, detailState);\n    setDetailStates(newDetailStates);\n  };\n}\n","import { DataFrame, DataFrameView, SplitOpen, TraceSpanRow } from '@grafana/data';\nimport { colors, useTheme } from '@grafana/ui';\nimport {\n  ThemeOptions,\n  ThemeProvider,\n  ThemeType,\n  Trace,\n  TracePageHeader,\n  TraceProcess,\n  TraceResponse,\n  TraceTimelineViewer,\n  transformTraceData,\n  TTraceTimeline,\n  UIElementsContext,\n} from '@jaegertracing/jaeger-ui-components';\nimport { TraceToLogsData } from 'app/core/components/TraceToLogsSettings';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { getTimeZone } from 'app/features/profile/state/selectors';\nimport { StoreState } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { createSpanLinkFactory } from './createSpanLink';\nimport { UIElements } from './uiElements';\nimport { useChildrenState } from './useChildrenState';\nimport { useDetailState } from './useDetailState';\nimport { useHoverIndentGuide } from './useHoverIndentGuide';\nimport { useSearch } from './useSearch';\nimport { useViewRange } from './useViewRange';\n\nfunction noop(): {} {\n  return {};\n}\n\ntype Props = {\n  dataFrames: DataFrame[];\n  splitOpenFn: SplitOpen;\n  exploreId: ExploreId;\n};\n\nexport function TraceView(props: Props) {\n  const { expandOne, collapseOne, childrenToggle, collapseAll, childrenHiddenIDs, expandAll } = useChildrenState();\n  const {\n    detailStates,\n    toggleDetail,\n    detailLogItemToggle,\n    detailLogsToggle,\n    detailProcessToggle,\n    detailReferencesToggle,\n    detailTagsToggle,\n    detailWarningsToggle,\n    detailStackTracesToggle,\n  } = useDetailState();\n  const { removeHoverIndentGuideId, addHoverIndentGuideId, hoverIndentGuideIds } = useHoverIndentGuide();\n  const { viewRange, updateViewRangeTime, updateNextViewRangeTime } = useViewRange();\n\n  /**\n   * Keeps state of resizable name column width\n   */\n  const [spanNameColumnWidth, setSpanNameColumnWidth] = useState(0.25);\n  /**\n   * State of the top minimap, slim means it is collapsed.\n   */\n  const [slim, setSlim] = useState(false);\n\n  const traceProp = useMemo(() => transformDataFrames(props.dataFrames), [props.dataFrames]);\n  const { search, setSearch, spanFindMatches } = useSearch(traceProp?.spans);\n  const dataSourceName = useSelector((state: StoreState) => state.explore[props.exploreId]?.datasourceInstance?.name);\n  const traceToLogsOptions = (getDatasourceSrv().getInstanceSettings(dataSourceName)?.jsonData as TraceToLogsData)\n    ?.tracesToLogs;\n  const timeZone = useSelector((state: StoreState) => getTimeZone(state.user));\n\n  const theme = useTheme();\n  const traceTheme = useMemo(\n    () =>\n      ({\n        type: theme.isDark ? ThemeType.Dark : ThemeType.Light,\n        servicesColorPalette: colors,\n        components: {\n          TraceName: {\n            fontSize: theme.typography.size.lg,\n          },\n        },\n      } as ThemeOptions),\n    [theme]\n  );\n\n  const traceTimeline: TTraceTimeline = useMemo(\n    () => ({\n      childrenHiddenIDs,\n      detailStates,\n      hoverIndentGuideIds,\n      shouldScrollToFirstUiFindMatch: false,\n      spanNameColumnWidth,\n      traceID: traceProp?.traceID,\n    }),\n    [childrenHiddenIDs, detailStates, hoverIndentGuideIds, spanNameColumnWidth, traceProp?.traceID]\n  );\n\n  const createSpanLink = useMemo(() => createSpanLinkFactory(props.splitOpenFn, traceToLogsOptions), [\n    props.splitOpenFn,\n    traceToLogsOptions,\n  ]);\n  const scrollElement = document.getElementsByClassName('scrollbar-view')[0];\n  const onSlimViewClicked = useCallback(() => setSlim(!slim), [slim]);\n\n  if (!props.dataFrames?.length || !traceProp) {\n    return null;\n  }\n\n  return (\n    <ThemeProvider value={traceTheme}>\n      <UIElementsContext.Provider value={UIElements}>\n        <TracePageHeader\n          canCollapse={false}\n          clearSearch={noop}\n          focusUiFindMatches={noop}\n          hideMap={false}\n          hideSummary={false}\n          nextResult={noop}\n          onSlimViewClicked={onSlimViewClicked}\n          onTraceGraphViewClicked={noop}\n          prevResult={noop}\n          resultCount={0}\n          slimView={slim}\n          textFilter={null}\n          trace={traceProp}\n          traceGraphView={false}\n          updateNextViewRangeTime={updateNextViewRangeTime}\n          updateViewRangeTime={updateViewRangeTime}\n          viewRange={viewRange}\n          searchValue={search}\n          onSearchValueChange={setSearch}\n          hideSearchButtons={true}\n          timeZone={timeZone}\n        />\n        <TraceTimelineViewer\n          registerAccessors={noop}\n          scrollToFirstVisibleSpan={noop}\n          findMatchesIDs={spanFindMatches}\n          trace={traceProp}\n          traceTimeline={traceTimeline}\n          updateNextViewRangeTime={updateNextViewRangeTime}\n          updateViewRangeTime={updateViewRangeTime}\n          viewRange={viewRange}\n          focusSpan={noop}\n          createLinkToExternalSpan={noop as any}\n          setSpanNameColumnWidth={setSpanNameColumnWidth}\n          collapseAll={collapseAll}\n          collapseOne={collapseOne}\n          expandAll={expandAll}\n          expandOne={expandOne}\n          childrenToggle={childrenToggle}\n          clearShouldScrollToFirstUiFindMatch={noop}\n          detailLogItemToggle={detailLogItemToggle}\n          detailLogsToggle={detailLogsToggle}\n          detailWarningsToggle={detailWarningsToggle}\n          detailStackTracesToggle={detailStackTracesToggle}\n          detailReferencesToggle={detailReferencesToggle}\n          detailProcessToggle={detailProcessToggle}\n          detailTagsToggle={detailTagsToggle}\n          detailToggle={toggleDetail}\n          setTrace={noop}\n          addHoverIndentGuideId={addHoverIndentGuideId}\n          removeHoverIndentGuideId={removeHoverIndentGuideId}\n          linksGetter={noop as any}\n          uiFind={search}\n          createSpanLink={createSpanLink}\n          scrollElement={scrollElement}\n        />\n      </UIElementsContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nfunction transformDataFrames(frames: DataFrame[]): Trace | null {\n  // At this point we only show single trace.\n  const frame = frames[0];\n  if (!frame) {\n    return null;\n  }\n  let data: TraceResponse =\n    frame.fields.length === 1\n      ? // For backward compatibility when we sent whole json response in a single field/value\n        frame.fields[0].values.get(0)\n      : transformTraceDataFrame(frame);\n  return transformTraceData(data);\n}\n\nfunction transformTraceDataFrame(frame: DataFrame): TraceResponse {\n  const view = new DataFrameView<TraceSpanRow>(frame);\n  const processes: Record<string, TraceProcess> = {};\n  for (let i = 0; i < view.length; i++) {\n    const span = view.get(i);\n    if (!processes[span.serviceName]) {\n      processes[span.serviceName] = {\n        serviceName: span.serviceName,\n        tags: span.serviceTags,\n      };\n    }\n  }\n\n  return {\n    traceID: view.get(0).traceID,\n    processes,\n    spans: view.toArray().map((s) => {\n      return {\n        ...s,\n        duration: s.duration * 1000,\n        startTime: s.startTime * 1000,\n        processID: s.serviceName,\n        flags: 0,\n        references: s.parentSpanID ? [{ refType: 'CHILD_OF', spanID: s.parentSpanID, traceID: s.traceID }] : undefined,\n        logs: s.logs?.map((l) => ({ ...l, timestamp: l.timestamp * 1000 })) || [],\n      };\n    }),\n  };\n}\n","import { useCallback, useState } from 'react';\n\n/**\n * This is used internally to handle hover state of indent guide. As indent guides are separate\n * components per each row/span and you need to highlight all in multiple rows to make the effect of single line\n * they need this kind of common imperative state changes.\n *\n * Ideally would be changed to trace view internal state.\n */\nexport function useHoverIndentGuide() {\n  const [hoverIndentGuideIds, setHoverIndentGuideIds] = useState(new Set<string>());\n\n  const addHoverIndentGuideId = useCallback(function addHoverIndentGuideId(spanID: string) {\n    setHoverIndentGuideIds((prevState) => {\n      const newHoverIndentGuideIds = new Set(prevState);\n      newHoverIndentGuideIds.add(spanID);\n      return newHoverIndentGuideIds;\n    });\n  }, []);\n\n  const removeHoverIndentGuideId = useCallback(function removeHoverIndentGuideId(spanID: string) {\n    setHoverIndentGuideIds((prevState) => {\n      const newHoverIndentGuideIds = new Set(prevState);\n      newHoverIndentGuideIds.delete(spanID);\n      return newHoverIndentGuideIds;\n    });\n  }, []);\n\n  return { hoverIndentGuideIds, addHoverIndentGuideId, removeHoverIndentGuideId };\n}\n","import { useCallback, useState } from 'react';\nimport { ViewRangeTimeUpdate, ViewRange } from '@jaegertracing/jaeger-ui-components';\n\n/**\n * Controls state of the zoom function that can be used through minimap in header or on the timeline. ViewRange contains\n * state not only for current range that is showing but range that is currently being selected by the user.\n */\nexport function useViewRange() {\n  const [viewRange, setViewRange] = useState<ViewRange>({\n    time: {\n      current: [0, 1],\n    },\n  });\n\n  const updateNextViewRangeTime = useCallback(function updateNextViewRangeTime(update: ViewRangeTimeUpdate) {\n    setViewRange(\n      (prevRange): ViewRange => {\n        const time = { ...prevRange.time, ...update };\n        return { ...prevRange, time };\n      }\n    );\n  }, []);\n\n  const updateViewRangeTime = useCallback(function updateViewRangeTime(start: number, end: number) {\n    const current: [number, number] = [start, end];\n    const time = { current };\n    setViewRange(\n      (prevRange): ViewRange => {\n        return { ...prevRange, time };\n      }\n    );\n  }, []);\n\n  return { viewRange, updateViewRangeTime, updateNextViewRangeTime };\n}\n","import { useMemo, useState } from 'react';\nimport { filterSpans, TraceSpan } from '@jaegertracing/jaeger-ui-components';\n\n/**\n * Controls the state of search input that highlights spans if they match the search string.\n * @param spans\n */\nexport function useSearch(spans?: TraceSpan[]) {\n  const [search, setSearch] = useState('');\n  const spanFindMatches: Set<string> | undefined | null = useMemo(() => {\n    return search && spans ? filterSpans(search, spans) : undefined;\n  }, [search, spans]);\n\n  return { search, setSearch, spanFindMatches };\n}\n","import React from 'react';\nimport { Collapse } from '@grafana/ui';\nimport { DataFrame, SplitOpen } from '@grafana/data';\nimport { TraceView } from './TraceView';\nimport { ExploreId } from 'app/types/explore';\n\ninterface Props {\n  dataFrames: DataFrame[];\n  splitOpenFn: SplitOpen;\n  exploreId: ExploreId;\n}\nexport function TraceViewContainer(props: Props) {\n  const { dataFrames, splitOpenFn, exploreId } = props;\n\n  return (\n    <Collapse label=\"Trace View\" isOpen>\n      <TraceView exploreId={exploreId} dataFrames={dataFrames} splitOpenFn={splitOpenFn} />\n    </Collapse>\n  );\n}\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { compose } from 'redux';\nimport { connect, ConnectedProps } from 'react-redux';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport memoizeOne from 'memoize-one';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { ErrorBoundaryAlert, CustomScrollbar, Collapse, withTheme2, Themeable2 } from '@grafana/ui';\nimport { AbsoluteTimeRange, DataQuery, LoadingState, RawTimeRange, DataFrame, GrafanaTheme2 } from '@grafana/data';\n\nimport LogsContainer from './LogsContainer';\nimport { QueryRows } from './QueryRows';\nimport TableContainer from './TableContainer';\nimport RichHistoryContainer from './RichHistory/RichHistoryContainer';\nimport ExploreQueryInspector from './ExploreQueryInspector';\nimport { splitOpen } from './state/main';\nimport { changeSize } from './state/explorePane';\nimport { updateTimeRange } from './state/time';\nimport { scanStopAction, addQueryRow, modifyQueries, setQueries, scanStart } from './state/query';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport { ExploreToolbar } from './ExploreToolbar';\nimport { NoDataSourceCallToAction } from './NoDataSourceCallToAction';\nimport { getTimeZone } from '../profile/state/selectors';\nimport { SecondaryActions } from './SecondaryActions';\nimport { FILTER_FOR_OPERATOR, FILTER_OUT_OPERATOR, FilterItem } from '@grafana/ui/src/components/Table/types';\nimport { NodeGraphContainer } from './NodeGraphContainer';\nimport { ResponseErrorContainer } from './ResponseErrorContainer';\nimport { TraceViewContainer } from './TraceView/TraceViewContainer';\nimport { ExploreGraph } from './ExploreGraph';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    exploreMain: css`\n      label: exploreMain;\n      // Is needed for some transition animations to work.\n      position: relative;\n      margin-top: 21px;\n    `,\n    button: css`\n      label: button;\n      margin: 1em 4px 0 0;\n    `,\n    queryContainer: css`\n      label: queryContainer;\n      // Need to override normal css class and don't want to count on ordering of the classes in html.\n      height: auto !important;\n      flex: unset !important;\n      display: unset !important;\n      padding: ${theme.spacing(1)};\n    `,\n  };\n};\n\nexport interface ExploreProps extends Themeable2 {\n  exploreId: ExploreId;\n  theme: GrafanaTheme2;\n}\n\nenum ExploreDrawer {\n  RichHistory,\n  QueryInspector,\n}\n\ninterface ExploreState {\n  openDrawer?: ExploreDrawer;\n}\n\nexport type Props = ExploreProps & ConnectedProps<typeof connector>;\n\n/**\n * Explore provides an area for quick query iteration for a given datasource.\n * Once a datasource is selected it populates the query section at the top.\n * When queries are run, their results are being displayed in the main section.\n * The datasource determines what kind of query editor it brings, and what kind\n * of results viewers it supports. The state is managed entirely in Redux.\n *\n * SPLIT VIEW\n *\n * Explore can have two Explore areas side-by-side. This is handled in `Wrapper.tsx`.\n * Since there can be multiple Explores (e.g., left and right) each action needs\n * the `exploreId` as first parameter so that the reducer knows which Explore state\n * is affected.\n *\n * DATASOURCE REQUESTS\n *\n * A click on Run Query creates transactions for all DataQueries for all expanded\n * result viewers. New runs are discarding previous runs. Upon completion a transaction\n * saves the result. The result viewers construct their data from the currently existing\n * transactions.\n *\n * The result viewers determine some of the query options sent to the datasource, e.g.,\n * `format`, to indicate eventual transformations by the datasources' result transformers.\n */\nexport class Explore extends React.PureComponent<Props, ExploreState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      openDrawer: undefined,\n    };\n  }\n\n  onChangeTime = (rawRange: RawTimeRange) => {\n    const { updateTimeRange, exploreId } = this.props;\n    updateTimeRange({ exploreId, rawRange });\n  };\n\n  // Use this in help pages to set page to a single query\n  onClickExample = (query: DataQuery) => {\n    this.props.setQueries(this.props.exploreId, [query]);\n  };\n\n  onCellFilterAdded = (filter: FilterItem) => {\n    const { value, key, operator } = filter;\n    if (operator === FILTER_FOR_OPERATOR) {\n      this.onClickFilterLabel(key, value);\n    }\n\n    if (operator === FILTER_OUT_OPERATOR) {\n      this.onClickFilterOutLabel(key, value);\n    }\n  };\n\n  onClickFilterLabel = (key: string, value: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER', key, value });\n  };\n\n  onClickFilterOutLabel = (key: string, value: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER_OUT', key, value });\n  };\n\n  onClickAddQueryRowButton = () => {\n    const { exploreId, queryKeys } = this.props;\n    this.props.addQueryRow(exploreId, queryKeys.length);\n  };\n\n  onModifyQueries = (action: any, index?: number) => {\n    const { datasourceInstance } = this.props;\n    if (datasourceInstance?.modifyQuery) {\n      const modifier = (queries: DataQuery, modification: any) =>\n        datasourceInstance.modifyQuery!(queries, modification);\n      this.props.modifyQueries(this.props.exploreId, action, modifier, index);\n    }\n  };\n\n  onResize = (size: { height: number; width: number }) => {\n    this.props.changeSize(this.props.exploreId, size);\n  };\n\n  onStartScanning = () => {\n    // Scanner will trigger a query\n    this.props.scanStart(this.props.exploreId);\n  };\n\n  onStopScanning = () => {\n    this.props.scanStopAction({ exploreId: this.props.exploreId });\n  };\n\n  onUpdateTimeRange = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  toggleShowRichHistory = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.RichHistory ? undefined : ExploreDrawer.RichHistory,\n      };\n    });\n  };\n\n  toggleShowQueryInspector = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.QueryInspector ? undefined : ExploreDrawer.QueryInspector,\n      };\n    });\n  };\n\n  renderEmptyState() {\n    return (\n      <div className=\"explore-container\">\n        <NoDataSourceCallToAction />\n      </div>\n    );\n  }\n\n  renderGraphPanel(width: number) {\n    const { graphResult, absoluteRange, timeZone, splitOpen, queryResponse, loading, theme } = this.props;\n    const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n    return (\n      <Collapse label=\"Graph\" loading={loading} isOpen>\n        <ExploreGraph\n          data={graphResult!}\n          height={400}\n          width={width - spacing}\n          absoluteRange={absoluteRange}\n          onChangeTime={this.onUpdateTimeRange}\n          timeZone={timeZone}\n          annotations={queryResponse.annotations}\n          splitOpenFn={splitOpen}\n          loadingState={queryResponse.state}\n        />\n      </Collapse>\n    );\n  }\n\n  renderTablePanel(width: number) {\n    const { exploreId, datasourceInstance } = this.props;\n    return (\n      <TableContainer\n        ariaLabel={selectors.pages.Explore.General.table}\n        width={width}\n        exploreId={exploreId}\n        onCellFilterAdded={datasourceInstance?.modifyQuery ? this.onCellFilterAdded : undefined}\n      />\n    );\n  }\n\n  renderLogsPanel(width: number) {\n    const { exploreId, syncedTimes, theme, queryResponse } = this.props;\n    const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n    return (\n      <LogsContainer\n        exploreId={exploreId}\n        loadingState={queryResponse.state}\n        syncedTimes={syncedTimes}\n        width={width - spacing}\n        onClickFilterLabel={this.onClickFilterLabel}\n        onClickFilterOutLabel={this.onClickFilterOutLabel}\n        onStartScanning={this.onStartScanning}\n        onStopScanning={this.onStopScanning}\n      />\n    );\n  }\n\n  renderNodeGraphPanel() {\n    const { exploreId, showTrace, queryResponse } = this.props;\n    return (\n      <NodeGraphContainer\n        dataFrames={this.getNodeGraphDataFrames(queryResponse.series)}\n        exploreId={exploreId}\n        withTraceView={showTrace}\n      />\n    );\n  }\n\n  getNodeGraphDataFrames = memoizeOne((frames: DataFrame[]) => {\n    // TODO: this not in sync with how other types of responses are handled. Other types have a query response\n    //  processing pipeline which ends up populating redux state with proper data. As we move towards more dataFrame\n    //  oriented API it seems like a better direction to move such processing into to visualisations and do minimal\n    //  and lazy processing here. Needs bigger refactor so keeping nodeGraph and Traces as they are for now.\n    return frames.filter((frame) => frame.meta?.preferredVisualisationType === 'nodeGraph');\n  });\n\n  renderTraceViewPanel() {\n    const { queryResponse, splitOpen, exploreId } = this.props;\n    const dataFrames = queryResponse.series.filter((series) => series.meta?.preferredVisualisationType === 'trace');\n\n    return (\n      // If there is no data (like 404) we show a separate error so no need to show anything here\n      dataFrames.length && <TraceViewContainer exploreId={exploreId} dataFrames={dataFrames} splitOpenFn={splitOpen} />\n    );\n  }\n\n  render() {\n    const {\n      datasourceInstance,\n      datasourceMissing,\n      exploreId,\n      graphResult,\n      queryResponse,\n      isLive,\n      theme,\n      showMetrics,\n      showTable,\n      showLogs,\n      showTrace,\n      showNodeGraph,\n    } = this.props;\n    const { openDrawer } = this.state;\n    const styles = getStyles(theme);\n    const showPanels = queryResponse && queryResponse.state !== LoadingState.NotStarted;\n    const showRichHistory = openDrawer === ExploreDrawer.RichHistory;\n    const showQueryInspector = openDrawer === ExploreDrawer.QueryInspector;\n\n    return (\n      <CustomScrollbar autoHeightMin={'100%'}>\n        <ExploreToolbar exploreId={exploreId} onChangeTime={this.onChangeTime} />\n        {datasourceMissing ? this.renderEmptyState() : null}\n        {datasourceInstance && (\n          <div className=\"explore-container\">\n            <div className={cx('panel-container', styles.queryContainer)}>\n              <QueryRows exploreId={exploreId} />\n              <SecondaryActions\n                addQueryRowButtonDisabled={isLive}\n                // We cannot show multiple traces at the same time right now so we do not show add query button.\n                //TODO:unification\n                addQueryRowButtonHidden={false}\n                richHistoryButtonActive={showRichHistory}\n                queryInspectorButtonActive={showQueryInspector}\n                onClickAddQueryRowButton={this.onClickAddQueryRowButton}\n                onClickRichHistoryButton={this.toggleShowRichHistory}\n                onClickQueryInspectorButton={this.toggleShowQueryInspector}\n              />\n              <ResponseErrorContainer exploreId={exploreId} />\n            </div>\n            <AutoSizer onResize={this.onResize} disableHeight>\n              {({ width }) => {\n                if (width === 0) {\n                  return null;\n                }\n\n                return (\n                  <main className={cx(styles.exploreMain)} style={{ width }}>\n                    <ErrorBoundaryAlert>\n                      {showPanels && (\n                        <>\n                          {showMetrics && graphResult && (\n                            <ErrorBoundaryAlert>{this.renderGraphPanel(width)}</ErrorBoundaryAlert>\n                          )}\n                          {showTable && <ErrorBoundaryAlert>{this.renderTablePanel(width)}</ErrorBoundaryAlert>}\n                          {showLogs && <ErrorBoundaryAlert>{this.renderLogsPanel(width)}</ErrorBoundaryAlert>}\n                          {showNodeGraph && <ErrorBoundaryAlert>{this.renderNodeGraphPanel()}</ErrorBoundaryAlert>}\n                          {showTrace && <ErrorBoundaryAlert>{this.renderTraceViewPanel()}</ErrorBoundaryAlert>}\n                        </>\n                      )}\n                      {showRichHistory && (\n                        <RichHistoryContainer\n                          width={width}\n                          exploreId={exploreId}\n                          onClose={this.toggleShowRichHistory}\n                        />\n                      )}\n                      {showQueryInspector && (\n                        <ExploreQueryInspector\n                          exploreId={exploreId}\n                          width={width}\n                          onClose={this.toggleShowQueryInspector}\n                        />\n                      )}\n                    </ErrorBoundaryAlert>\n                  </main>\n                );\n              }}\n            </AutoSizer>\n          </div>\n        )}\n      </CustomScrollbar>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: ExploreProps) {\n  const explore = state.explore;\n  const { syncedTimes } = explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const timeZone = getTimeZone(state.user);\n  const {\n    datasourceInstance,\n    datasourceMissing,\n    queryKeys,\n    isLive,\n    graphResult,\n    logsResult,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    absoluteRange,\n    queryResponse,\n    showNodeGraph,\n    loading,\n  } = item;\n\n  return {\n    datasourceInstance,\n    datasourceMissing,\n    queryKeys,\n    isLive,\n    graphResult,\n    logsResult: logsResult ?? undefined,\n    absoluteRange,\n    queryResponse,\n    syncedTimes,\n    timeZone,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    showNodeGraph,\n    loading,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeSize,\n  modifyQueries,\n  scanStart,\n  scanStopAction,\n  setQueries,\n  updateTimeRange,\n  addQueryRow,\n  splitOpen,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(connector, withTheme2)(Explore) as React.ComponentType<{ exploreId: ExploreId }>;\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport memoizeOne from 'memoize-one';\nimport { DataQuery, ExploreUrlState, EventBusExtended, EventBusSrv } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport store from 'app/core/store';\nimport { lastSavedUrl, cleanupPaneAction } from './state/main';\nimport { initializeExplore, refreshExplore } from './state/explorePane';\nimport { ExploreId } from 'app/types/explore';\nimport { StoreState } from 'app/types';\nimport {\n  DEFAULT_RANGE,\n  ensureQueries,\n  getTimeRange,\n  getTimeRangeFromUrl,\n  lastUsedDatasourceKeyForOrgId,\n  parseUrlState,\n} from 'app/core/utils/explore';\nimport { getFiscalYearStartMonth, getTimeZone } from '../profile/state/selectors';\nimport Explore from './Explore';\n\ninterface OwnProps {\n  exploreId: ExploreId;\n  urlQuery: string;\n  split: boolean;\n}\n\ninterface Props extends OwnProps, ConnectedProps<typeof connector> {}\n\n/**\n * This component is responsible for handling initialization of an Explore pane and triggering synchronization\n * of state based on URL changes and preventing any infinite loops.\n */\nexport class ExplorePaneContainerUnconnected extends React.PureComponent<Props> {\n  el: any;\n  exploreEvents: EventBusExtended;\n\n  constructor(props: Props) {\n    super(props);\n    this.exploreEvents = new EventBusSrv();\n    this.state = {\n      openDrawer: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const { initialized, exploreId, initialDatasource, initialQueries, initialRange, originPanelId } = this.props;\n    const width = this.el?.offsetWidth ?? 0;\n\n    // initialize the whole explore first time we mount and if browser history contains a change in datasource\n    if (!initialized) {\n      this.props.initializeExplore(\n        exploreId,\n        initialDatasource,\n        initialQueries,\n        initialRange,\n        width,\n        this.exploreEvents,\n        originPanelId\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.exploreEvents.removeAllListeners();\n    this.props.cleanupPaneAction({ exploreId: this.props.exploreId });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.refreshExplore(prevProps.urlQuery);\n  }\n\n  refreshExplore = (prevUrlQuery: string) => {\n    const { exploreId, urlQuery } = this.props;\n\n    // Update state from url only if it changed and only if the change wasn't initialised by redux to prevent any loops\n    if (urlQuery !== prevUrlQuery && urlQuery !== lastSavedUrl[exploreId]) {\n      this.props.refreshExplore(exploreId, urlQuery);\n    }\n  };\n\n  getRef = (el: any) => {\n    this.el = el;\n  };\n\n  render() {\n    const exploreClass = this.props.split ? 'explore explore-split' : 'explore';\n    return (\n      <div className={exploreClass} ref={this.getRef} data-testid={selectors.pages.Explore.General.container}>\n        {this.props.initialized && <Explore exploreId={this.props.exploreId} />}\n      </div>\n    );\n  }\n}\n\nconst ensureQueriesMemoized = memoizeOne(ensureQueries);\nconst getTimeRangeFromUrlMemoized = memoizeOne(getTimeRangeFromUrl);\n\nfunction mapStateToProps(state: StoreState, props: OwnProps) {\n  const urlState = parseUrlState(props.urlQuery);\n  const timeZone = getTimeZone(state.user);\n  const fiscalYearStartMonth = getFiscalYearStartMonth(state.user);\n\n  const { datasource, queries, range: urlRange, originPanelId } = (urlState || {}) as ExploreUrlState;\n  const initialDatasource = datasource || store.get(lastUsedDatasourceKeyForOrgId(state.user.orgId));\n  const initialQueries: DataQuery[] = ensureQueriesMemoized(queries);\n  const initialRange = urlRange\n    ? getTimeRangeFromUrlMemoized(urlRange, timeZone, fiscalYearStartMonth)\n    : getTimeRange(timeZone, DEFAULT_RANGE, fiscalYearStartMonth);\n\n  return {\n    initialized: state.explore[props.exploreId]?.initialized,\n    initialDatasource,\n    initialQueries,\n    initialRange,\n    originPanelId,\n  };\n}\n\nconst mapDispatchToProps = {\n  initializeExplore,\n  refreshExplore,\n  cleanupPaneAction,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport const ExplorePaneContainer = connector(ExplorePaneContainerUnconnected);\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { ExploreId, ExploreQueryParams } from 'app/types/explore';\nimport { ErrorBoundaryAlert } from '@grafana/ui';\nimport { lastSavedUrl, resetExploreAction, richHistoryUpdatedAction } from './state/main';\nimport { getRichHistory } from '../../core/utils/richHistory';\nimport { ExplorePaneContainer } from './ExplorePaneContainer';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { Branding } from '../../core/components/Branding/Branding';\n\nimport { getNavModel } from '../../core/selectors/navModel';\nimport { StoreState } from 'app/types';\n\ninterface RouteProps extends GrafanaRouteComponentProps<{}, ExploreQueryParams> {}\ninterface OwnProps {}\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    navModel: getNavModel(state.navIndex, 'explore'),\n    exploreState: state.explore,\n  };\n};\n\nconst mapDispatchToProps = {\n  resetExploreAction,\n  richHistoryUpdatedAction,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = OwnProps & RouteProps & ConnectedProps<typeof connector>;\nclass WrapperUnconnected extends PureComponent<Props> {\n  componentWillUnmount() {\n    this.props.resetExploreAction({});\n  }\n\n  componentDidMount() {\n    lastSavedUrl.left = undefined;\n    lastSavedUrl.right = undefined;\n\n    const richHistory = getRichHistory();\n    this.props.richHistoryUpdatedAction({ richHistory });\n  }\n\n  componentDidUpdate() {\n    const { left, right } = this.props.queryParams;\n    const hasSplit = Boolean(left) && Boolean(right);\n    const datasourceTitle = hasSplit\n      ? `${this.props.exploreState.left.datasourceInstance?.name} | ${this.props.exploreState.right?.datasourceInstance?.name}`\n      : `${this.props.exploreState.left.datasourceInstance?.name}`;\n    const documentTitle = `${this.props.navModel.main.text} - ${datasourceTitle} - ${Branding.AppTitle}`;\n    document.title = documentTitle;\n  }\n\n  render() {\n    const { left, right } = this.props.queryParams;\n    const hasSplit = Boolean(left) && Boolean(right);\n\n    return (\n      <div className=\"page-scrollbar-wrapper\">\n        <div className=\"explore-wrapper\">\n          <ErrorBoundaryAlert style=\"page\">\n            <ExplorePaneContainer split={hasSplit} exploreId={ExploreId.left} urlQuery={left} />\n          </ErrorBoundaryAlert>\n          {hasSplit && (\n            <ErrorBoundaryAlert style=\"page\">\n              <ExplorePaneContainer split={hasSplit} exploreId={ExploreId.right} urlQuery={right} />\n            </ErrorBoundaryAlert>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Wrapper = connector(WrapperUnconnected);\n\nexport default Wrapper;\n","//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar resizer_1 = require(\"./resizer\");\nvar fast_memoize_1 = __importDefault(require(\"fast-memoize\"));\nvar DEFAULT_SIZE = {\n    width: 'auto',\n    height: 'auto',\n};\nvar clamp = fast_memoize_1.default(function (n, min, max) { return Math.max(Math.min(n, max), min); });\nvar snap = fast_memoize_1.default(function (n, size) { return Math.round(n / size) * size; });\nvar hasDirection = fast_memoize_1.default(function (dir, target) {\n    return new RegExp(dir, 'i').test(target);\n});\nvar findClosestSnap = fast_memoize_1.default(function (n, snapArray, snapGap) {\n    if (snapGap === void 0) { snapGap = 0; }\n    var closestGapIndex = snapArray.reduce(function (prev, curr, index) { return (Math.abs(curr - n) < Math.abs(snapArray[prev] - n) ? index : prev); }, 0);\n    var gap = Math.abs(snapArray[closestGapIndex] - n);\n    return snapGap === 0 || gap < snapGap ? snapArray[closestGapIndex] : n;\n});\nvar endsWith = fast_memoize_1.default(function (str, searchStr) {\n    return str.substr(str.length - searchStr.length, searchStr.length) === searchStr;\n});\nvar getStringSize = fast_memoize_1.default(function (n) {\n    n = n.toString();\n    if (n === 'auto') {\n        return n;\n    }\n    if (endsWith(n, 'px')) {\n        return n;\n    }\n    if (endsWith(n, '%')) {\n        return n;\n    }\n    if (endsWith(n, 'vh')) {\n        return n;\n    }\n    if (endsWith(n, 'vw')) {\n        return n;\n    }\n    if (endsWith(n, 'vmax')) {\n        return n;\n    }\n    if (endsWith(n, 'vmin')) {\n        return n;\n    }\n    return n + \"px\";\n});\nvar getPixelSize = function (size, parentSize) {\n    if (size && typeof size === 'string') {\n        if (endsWith(size, '%')) {\n            var ratio = Number(size.replace('%', '')) / 100;\n            return parentSize * ratio;\n        }\n        else if (endsWith(size, 'vw')) {\n            var ratio = Number(size.replace('vw', '')) / 100;\n            return window.innerWidth * ratio;\n        }\n        else if (endsWith(size, 'vh')) {\n            var ratio = Number(size.replace('vh', '')) / 100;\n            return window.innerHeight * ratio;\n        }\n    }\n    return size;\n};\nvar calculateNewMax = fast_memoize_1.default(function (parentSize, maxWidth, maxHeight, minWidth, minHeight) {\n    maxWidth = getPixelSize(maxWidth, parentSize.width);\n    maxHeight = getPixelSize(maxHeight, parentSize.height);\n    minWidth = getPixelSize(minWidth, parentSize.width);\n    minHeight = getPixelSize(minHeight, parentSize.height);\n    return {\n        maxWidth: typeof maxWidth === 'undefined' ? undefined : Number(maxWidth),\n        maxHeight: typeof maxHeight === 'undefined' ? undefined : Number(maxHeight),\n        minWidth: typeof minWidth === 'undefined' ? undefined : Number(minWidth),\n        minHeight: typeof minHeight === 'undefined' ? undefined : Number(minHeight),\n    };\n});\nvar definedProps = [\n    'style',\n    'className',\n    'grid',\n    'snap',\n    'bounds',\n    'size',\n    'defaultSize',\n    'minWidth',\n    'minHeight',\n    'maxWidth',\n    'maxHeight',\n    'lockAspectRatio',\n    'lockAspectRatioExtraWidth',\n    'lockAspectRatioExtraHeight',\n    'enable',\n    'handleStyles',\n    'handleClasses',\n    'handleWrapperStyle',\n    'handleWrapperClass',\n    'children',\n    'onResizeStart',\n    'onResize',\n    'onResizeStop',\n    'handleComponent',\n    'scale',\n    'resizeRatio',\n    'snapGap',\n];\n// HACK: This class is used to calculate % size.\nvar baseClassName = '__resizable_base__';\nvar Resizable = /** @class */ (function (_super) {\n    __extends(Resizable, _super);\n    function Resizable(props) {\n        var _this = _super.call(this, props) || this;\n        _this.ratio = 1;\n        _this.resizable = null;\n        // For parent boundary\n        _this.parentLeft = 0;\n        _this.parentTop = 0;\n        // For boundary\n        _this.resizableLeft = 0;\n        _this.resizableTop = 0;\n        // For target boundary\n        _this.targetLeft = 0;\n        _this.targetTop = 0;\n        _this.ref = function (c) {\n            if (c) {\n                _this.resizable = c;\n            }\n        };\n        _this.state = {\n            isResizing: false,\n            width: typeof (_this.propsSize && _this.propsSize.width) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.width,\n            height: typeof (_this.propsSize && _this.propsSize.height) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.height,\n            direction: 'right',\n            original: {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            },\n            backgroundStyle: {\n                height: '100%',\n                width: '100%',\n                backgroundColor: 'rgba(0,0,0,0)',\n                cursor: 'auto',\n                opacity: 0,\n                position: 'fixed',\n                zIndex: 9999,\n                top: '0',\n                left: '0',\n                bottom: '0',\n                right: '0',\n            },\n        };\n        _this.onResizeStart = _this.onResizeStart.bind(_this);\n        _this.onMouseMove = _this.onMouseMove.bind(_this);\n        _this.onMouseUp = _this.onMouseUp.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(Resizable.prototype, \"parentNode\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            return this.resizable.parentNode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"propsSize\", {\n        get: function () {\n            return this.props.size || this.props.defaultSize || DEFAULT_SIZE;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"base\", {\n        get: function () {\n            var parent = this.parentNode;\n            if (!parent) {\n                return undefined;\n            }\n            var children = [].slice.call(parent.children);\n            for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                var n = children_1[_i];\n                if (n instanceof HTMLElement) {\n                    if (n.classList.contains(baseClassName)) {\n                        return n;\n                    }\n                }\n            }\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"size\", {\n        get: function () {\n            var width = 0;\n            var height = 0;\n            if (typeof window !== 'undefined' && this.resizable) {\n                var orgWidth = this.resizable.offsetWidth;\n                var orgHeight = this.resizable.offsetHeight;\n                // HACK: Set position `relative` to get parent size.\n                //       This is because when re-resizable set `absolute`, I can not get base width correctly.\n                var orgPosition = this.resizable.style.position;\n                if (orgPosition !== 'relative') {\n                    this.resizable.style.position = 'relative';\n                }\n                // INFO: Use original width or height if set auto.\n                width = this.resizable.style.width !== 'auto' ? this.resizable.offsetWidth : orgWidth;\n                height = this.resizable.style.height !== 'auto' ? this.resizable.offsetHeight : orgHeight;\n                // Restore original position\n                this.resizable.style.position = orgPosition;\n            }\n            return { width: width, height: height };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"sizeStyle\", {\n        get: function () {\n            var _this = this;\n            var size = this.props.size;\n            var getSize = function (key) {\n                if (typeof _this.state[key] === 'undefined' || _this.state[key] === 'auto') {\n                    return 'auto';\n                }\n                if (_this.propsSize && _this.propsSize[key] && endsWith(_this.propsSize[key].toString(), '%')) {\n                    if (endsWith(_this.state[key].toString(), '%')) {\n                        return _this.state[key].toString();\n                    }\n                    var parentSize = _this.getParentSize();\n                    var value = Number(_this.state[key].toString().replace('px', ''));\n                    var percent = (value / parentSize[key]) * 100;\n                    return percent + \"%\";\n                }\n                return getStringSize(_this.state[key]);\n            };\n            var width = size && typeof size.width !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.width)\n                : getSize('width');\n            var height = size && typeof size.height !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.height)\n                : getSize('height');\n            return { width: width, height: height };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Resizable.prototype.getParentSize = function () {\n        if (!this.base || !this.parentNode) {\n            return { width: window.innerWidth, height: window.innerHeight };\n        }\n        // INFO: To calculate parent width with flex layout\n        var wrapChanged = false;\n        var wrap = this.parentNode.style.flexWrap;\n        var minWidth = this.base.style.minWidth;\n        if (wrap !== 'wrap') {\n            wrapChanged = true;\n            this.parentNode.style.flexWrap = 'wrap';\n            // HACK: Use relative to get parent padding size\n        }\n        this.base.style.position = 'relative';\n        this.base.style.minWidth = '100%';\n        var size = {\n            width: this.base.offsetWidth,\n            height: this.base.offsetHeight,\n        };\n        this.base.style.position = 'absolute';\n        if (wrapChanged) {\n            this.parentNode.style.flexWrap = wrap;\n        }\n        this.base.style.minWidth = minWidth;\n        return size;\n    };\n    Resizable.prototype.bindEvents = function () {\n        if (typeof window !== 'undefined') {\n            window.addEventListener('mouseup', this.onMouseUp);\n            window.addEventListener('mousemove', this.onMouseMove);\n            window.addEventListener('mouseleave', this.onMouseUp);\n            window.addEventListener('touchmove', this.onMouseMove);\n            window.addEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.unbindEvents = function () {\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('mouseup', this.onMouseUp);\n            window.removeEventListener('mousemove', this.onMouseMove);\n            window.removeEventListener('mouseleave', this.onMouseUp);\n            window.removeEventListener('touchmove', this.onMouseMove);\n            window.removeEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.componentDidMount = function () {\n        if (!this.resizable) {\n            return;\n        }\n        var computedStyle = window.getComputedStyle(this.resizable);\n        this.setState({\n            width: this.state.width || this.size.width,\n            height: this.state.height || this.size.height,\n            flexBasis: computedStyle.flexBasis !== 'auto' ? computedStyle.flexBasis : undefined,\n        });\n        var parent = this.parentNode;\n        if (!(parent instanceof HTMLElement)) {\n            return;\n        }\n        if (this.base) {\n            return;\n        }\n        var element = document.createElement('div');\n        element.style.width = '100%';\n        element.style.height = '100%';\n        element.style.position = 'absolute';\n        element.style.transform = 'scale(0, 0)';\n        element.style.left = '0';\n        element.style.flex = '0';\n        if (element.classList) {\n            element.classList.add(baseClassName);\n        }\n        else {\n            element.className += baseClassName;\n        }\n        parent.appendChild(element);\n    };\n    Resizable.prototype.componentWillUnmount = function () {\n        if (typeof window !== 'undefined') {\n            this.unbindEvents();\n            var parent_1 = this.parentNode;\n            if (!this.base || !parent_1) {\n                return;\n            }\n            if (!(parent_1 instanceof HTMLElement) || !(this.base instanceof Node)) {\n                return;\n            }\n            parent_1.removeChild(this.base);\n        }\n    };\n    Resizable.prototype.createSizeForCssProperty = function (newSize, kind) {\n        var propsSize = this.propsSize && this.propsSize[kind];\n        return this.state[kind] === 'auto' &&\n            this.state.original[kind] === newSize &&\n            (typeof propsSize === 'undefined' || propsSize === 'auto')\n            ? 'auto'\n            : newSize;\n    };\n    Resizable.prototype.calculateNewMaxFromBoundary = function (maxWidth, maxHeight) {\n        if (this.props.bounds === 'parent') {\n            var parent_2 = this.parentNode;\n            if (parent_2 instanceof HTMLElement) {\n                var boundWidth = parent_2.offsetWidth + (this.parentLeft - this.resizableLeft);\n                var boundHeight = parent_2.offsetHeight + (this.parentTop - this.resizableTop);\n                maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n                maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n            }\n        }\n        else if (this.props.bounds === 'window') {\n            if (typeof window !== 'undefined') {\n                var boundWidth = window.innerWidth - this.resizableLeft;\n                var boundHeight = window.innerHeight - this.resizableTop;\n                maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n                maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n            }\n        }\n        else if (this.props.bounds instanceof HTMLElement) {\n            var boundWidth = this.props.bounds.offsetWidth + (this.targetLeft - this.resizableLeft);\n            var boundHeight = this.props.bounds.offsetHeight + (this.targetTop - this.resizableTop);\n            maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n            maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n        }\n        return { maxWidth: maxWidth, maxHeight: maxHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromDirection = function (clientX, clientY) {\n        var scale = this.props.scale || 1;\n        var resizeRatio = this.props.resizeRatio || 1;\n        var _a = this.state, direction = _a.direction, original = _a.original;\n        var _b = this.props, lockAspectRatio = _b.lockAspectRatio, lockAspectRatioExtraHeight = _b.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _b.lockAspectRatioExtraWidth;\n        var newWidth = original.width;\n        var newHeight = original.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (hasDirection('right', direction)) {\n            newWidth = original.width + ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('left', direction)) {\n            newWidth = original.width - ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('bottom', direction)) {\n            newHeight = original.height + ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        if (hasDirection('top', direction)) {\n            newHeight = original.height - ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromAspectRatio = function (newWidth, newHeight, max, min) {\n        var _a = this.props, lockAspectRatio = _a.lockAspectRatio, lockAspectRatioExtraHeight = _a.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _a.lockAspectRatioExtraWidth;\n        var computedMinWidth = typeof min.width === 'undefined' ? 10 : min.width;\n        var computedMaxWidth = typeof max.width === 'undefined' || max.width < 0 ? newWidth : max.width;\n        var computedMinHeight = typeof min.height === 'undefined' ? 10 : min.height;\n        var computedMaxHeight = typeof max.height === 'undefined' || max.height < 0 ? newHeight : max.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (lockAspectRatio) {\n            var extraMinWidth = (computedMinHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMaxWidth = (computedMaxHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMinHeight = (computedMinWidth - extraWidth) / this.ratio + extraHeight;\n            var extraMaxHeight = (computedMaxWidth - extraWidth) / this.ratio + extraHeight;\n            var lockedMinWidth = Math.max(computedMinWidth, extraMinWidth);\n            var lockedMaxWidth = Math.min(computedMaxWidth, extraMaxWidth);\n            var lockedMinHeight = Math.max(computedMinHeight, extraMinHeight);\n            var lockedMaxHeight = Math.min(computedMaxHeight, extraMaxHeight);\n            newWidth = clamp(newWidth, lockedMinWidth, lockedMaxWidth);\n            newHeight = clamp(newHeight, lockedMinHeight, lockedMaxHeight);\n        }\n        else {\n            newWidth = clamp(newWidth, computedMinWidth, computedMaxWidth);\n            newHeight = clamp(newHeight, computedMinHeight, computedMaxHeight);\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.setBoundingClientRect = function () {\n        // For parent boundary\n        if (this.props.bounds === 'parent') {\n            var parent_3 = this.parentNode;\n            if (parent_3 instanceof HTMLElement) {\n                var parentRect = parent_3.getBoundingClientRect();\n                this.parentLeft = parentRect.left;\n                this.parentTop = parentRect.top;\n            }\n        }\n        // For target(html element) boundary\n        if (this.props.bounds instanceof HTMLElement) {\n            var targetRect = this.props.bounds.getBoundingClientRect();\n            this.targetLeft = targetRect.left;\n            this.targetTop = targetRect.top;\n        }\n        // For boundary\n        if (this.resizable) {\n            var _a = this.resizable.getBoundingClientRect(), left = _a.left, top_1 = _a.top;\n            this.resizableLeft = left;\n            this.resizableTop = top_1;\n        }\n    };\n    Resizable.prototype.onResizeStart = function (event, direction) {\n        if (!this.resizable) {\n            return;\n        }\n        var clientX = 0;\n        var clientY = 0;\n        if (event.nativeEvent instanceof MouseEvent) {\n            clientX = event.nativeEvent.clientX;\n            clientY = event.nativeEvent.clientY;\n            // When user click with right button the resize is stuck in resizing mode\n            // until users clicks again, dont continue if right click is used.\n            // HACK: MouseEvent does not have `which` from flow-bin v0.68.\n            if (event.nativeEvent.which === 3) {\n                return;\n            }\n        }\n        else if (event.nativeEvent instanceof TouchEvent) {\n            clientX = event.nativeEvent.touches[0].clientX;\n            clientY = event.nativeEvent.touches[0].clientY;\n        }\n        if (this.props.onResizeStart) {\n            if (this.resizable) {\n                var startResize = this.props.onResizeStart(event, direction, this.resizable);\n                if (startResize === false) {\n                    return;\n                }\n            }\n        }\n        // Fix #168\n        if (this.props.size) {\n            if (typeof this.props.size.height !== 'undefined' && this.props.size.height !== this.state.height) {\n                this.setState({ height: this.props.size.height });\n            }\n            if (typeof this.props.size.width !== 'undefined' && this.props.size.width !== this.state.width) {\n                this.setState({ width: this.props.size.width });\n            }\n        }\n        // For lockAspectRatio case\n        this.ratio =\n            typeof this.props.lockAspectRatio === 'number' ? this.props.lockAspectRatio : this.size.width / this.size.height;\n        var flexBasis;\n        var computedStyle = window.getComputedStyle(this.resizable);\n        if (computedStyle.flexBasis !== 'auto') {\n            var parent_4 = this.parentNode;\n            if (parent_4) {\n                var dir = window.getComputedStyle(parent_4).flexDirection;\n                this.flexDir = dir.startsWith('row') ? 'row' : 'column';\n                flexBasis = computedStyle.flexBasis;\n            }\n        }\n        // For boundary\n        this.setBoundingClientRect();\n        this.bindEvents();\n        var state = {\n            original: {\n                x: clientX,\n                y: clientY,\n                width: this.size.width,\n                height: this.size.height,\n            },\n            isResizing: true,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: window.getComputedStyle(event.target).cursor || 'auto' }),\n            direction: direction,\n            flexBasis: flexBasis,\n        };\n        this.setState(state);\n    };\n    Resizable.prototype.onMouseMove = function (event) {\n        if (!this.state.isResizing || !this.resizable) {\n            return;\n        }\n        var _a = this.props, maxWidth = _a.maxWidth, maxHeight = _a.maxHeight, minWidth = _a.minWidth, minHeight = _a.minHeight;\n        var clientX = event instanceof MouseEvent ? event.clientX : event.touches[0].clientX;\n        var clientY = event instanceof MouseEvent ? event.clientY : event.touches[0].clientY;\n        var _b = this.state, direction = _b.direction, original = _b.original, width = _b.width, height = _b.height;\n        var parentSize = this.getParentSize();\n        var max = calculateNewMax(parentSize, maxWidth, maxHeight, minWidth, minHeight);\n        maxWidth = max.maxWidth;\n        maxHeight = max.maxHeight;\n        minWidth = max.minWidth;\n        minHeight = max.minHeight;\n        // Calculate new size\n        var _c = this.calculateNewSizeFromDirection(clientX, clientY), newHeight = _c.newHeight, newWidth = _c.newWidth;\n        // Calculate max size from boundary settings\n        var boundaryMax = this.calculateNewMaxFromBoundary(maxWidth, maxHeight);\n        // Calculate new size from aspect ratio\n        var newSize = this.calculateNewSizeFromAspectRatio(newWidth, newHeight, { width: boundaryMax.maxWidth, height: boundaryMax.maxHeight }, { width: minWidth, height: minHeight });\n        newWidth = newSize.newWidth;\n        newHeight = newSize.newHeight;\n        if (this.props.grid) {\n            var newGridWidth = snap(newWidth, this.props.grid[0]);\n            var newGridHeight = snap(newHeight, this.props.grid[1]);\n            var gap = this.props.snapGap || 0;\n            newWidth = gap === 0 || Math.abs(newGridWidth - newWidth) <= gap ? newGridWidth : newWidth;\n            newHeight = gap === 0 || Math.abs(newGridHeight - newHeight) <= gap ? newGridHeight : newHeight;\n        }\n        if (this.props.snap && this.props.snap.x) {\n            newWidth = findClosestSnap(newWidth, this.props.snap.x, this.props.snapGap);\n        }\n        if (this.props.snap && this.props.snap.y) {\n            newHeight = findClosestSnap(newHeight, this.props.snap.y, this.props.snapGap);\n        }\n        var delta = {\n            width: newWidth - original.width,\n            height: newHeight - original.height,\n        };\n        if (width && typeof width === 'string') {\n            if (endsWith(width, '%')) {\n                var percent = (newWidth / parentSize.width) * 100;\n                newWidth = percent + \"%\";\n            }\n            else if (endsWith(width, 'vw')) {\n                var vw = (newWidth / window.innerWidth) * 100;\n                newWidth = vw + \"vw\";\n            }\n            else if (endsWith(width, 'vh')) {\n                var vh = (newWidth / window.innerHeight) * 100;\n                newWidth = vh + \"vh\";\n            }\n        }\n        if (height && typeof height === 'string') {\n            if (endsWith(height, '%')) {\n                var percent = (newHeight / parentSize.height) * 100;\n                newHeight = percent + \"%\";\n            }\n            else if (endsWith(height, 'vw')) {\n                var vw = (newHeight / window.innerWidth) * 100;\n                newHeight = vw + \"vw\";\n            }\n            else if (endsWith(height, 'vh')) {\n                var vh = (newHeight / window.innerHeight) * 100;\n                newHeight = vh + \"vh\";\n            }\n        }\n        var newState = {\n            width: this.createSizeForCssProperty(newWidth, 'width'),\n            height: this.createSizeForCssProperty(newHeight, 'height'),\n        };\n        if (this.flexDir === 'row') {\n            newState.flexBasis = newState.width;\n        }\n        else if (this.flexDir === 'column') {\n            newState.flexBasis = newState.height;\n        }\n        this.setState(newState);\n        if (this.props.onResize) {\n            this.props.onResize(event, direction, this.resizable, delta);\n        }\n    };\n    Resizable.prototype.onMouseUp = function (event) {\n        var _a = this.state, isResizing = _a.isResizing, direction = _a.direction, original = _a.original;\n        if (!isResizing || !this.resizable) {\n            return;\n        }\n        var delta = {\n            width: this.size.width - original.width,\n            height: this.size.height - original.height,\n        };\n        if (this.props.onResizeStop) {\n            this.props.onResizeStop(event, direction, this.resizable, delta);\n        }\n        if (this.props.size) {\n            this.setState(this.props.size);\n        }\n        this.unbindEvents();\n        this.setState({\n            isResizing: false,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: 'auto' }),\n        });\n    };\n    Resizable.prototype.updateSize = function (size) {\n        this.setState({ width: size.width, height: size.height });\n    };\n    Resizable.prototype.renderResizer = function () {\n        var _this = this;\n        var _a = this.props, enable = _a.enable, handleStyles = _a.handleStyles, handleClasses = _a.handleClasses, handleWrapperStyle = _a.handleWrapperStyle, handleWrapperClass = _a.handleWrapperClass, handleComponent = _a.handleComponent;\n        if (!enable) {\n            return null;\n        }\n        var resizers = Object.keys(enable).map(function (dir) {\n            if (enable[dir] !== false) {\n                return (React.createElement(resizer_1.Resizer, { key: dir, direction: dir, onResizeStart: _this.onResizeStart, replaceStyles: handleStyles && handleStyles[dir], className: handleClasses && handleClasses[dir] }, handleComponent && handleComponent[dir] ? handleComponent[dir] : null));\n            }\n            return null;\n        });\n        // #93 Wrap the resize box in span (will not break 100% width/height)\n        return (React.createElement(\"span\", { className: handleWrapperClass, style: handleWrapperStyle }, resizers));\n    };\n    Resizable.prototype.render = function () {\n        var _this = this;\n        var extendsProps = Object.keys(this.props).reduce(function (acc, key) {\n            if (definedProps.indexOf(key) !== -1) {\n                return acc;\n            }\n            acc[key] = _this.props[key];\n            return acc;\n        }, {});\n        var style = __assign(__assign(__assign({ position: 'relative', userSelect: this.state.isResizing ? 'none' : 'auto' }, this.props.style), this.sizeStyle), { maxWidth: this.props.maxWidth, maxHeight: this.props.maxHeight, minWidth: this.props.minWidth, minHeight: this.props.minHeight, boxSizing: 'border-box', flexShrink: 0 });\n        if (this.state.flexBasis) {\n            style.flexBasis = this.state.flexBasis;\n        }\n        return (React.createElement(\"div\", __assign({ ref: this.ref, style: style, className: this.props.className }, extendsProps),\n            this.state.isResizing && React.createElement(\"div\", { style: this.state.backgroundStyle }),\n            this.props.children,\n            this.renderResizer()));\n    };\n    Resizable.defaultProps = {\n        onResizeStart: function () { },\n        onResize: function () { },\n        onResizeStop: function () { },\n        enable: {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true,\n            topRight: true,\n            bottomRight: true,\n            bottomLeft: true,\n            topLeft: true,\n        },\n        style: {},\n        grid: [1, 1],\n        lockAspectRatio: false,\n        lockAspectRatioExtraWidth: 0,\n        lockAspectRatioExtraHeight: 0,\n        scale: 1,\n        resizeRatio: 1,\n        snapGap: 0,\n    };\n    return Resizable;\n}(React.PureComponent));\nexports.Resizable = Resizable;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar styles = {\n    top: {\n        width: '100%',\n        height: '10px',\n        top: '-5px',\n        left: '0px',\n        cursor: 'row-resize',\n    },\n    right: {\n        width: '10px',\n        height: '100%',\n        top: '0px',\n        right: '-5px',\n        cursor: 'col-resize',\n    },\n    bottom: {\n        width: '100%',\n        height: '10px',\n        bottom: '-5px',\n        left: '0px',\n        cursor: 'row-resize',\n    },\n    left: {\n        width: '10px',\n        height: '100%',\n        top: '0px',\n        left: '-5px',\n        cursor: 'col-resize',\n    },\n    topRight: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        right: '-10px',\n        top: '-10px',\n        cursor: 'ne-resize',\n    },\n    bottomRight: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        right: '-10px',\n        bottom: '-10px',\n        cursor: 'se-resize',\n    },\n    bottomLeft: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        left: '-10px',\n        bottom: '-10px',\n        cursor: 'sw-resize',\n    },\n    topLeft: {\n        width: '20px',\n        height: '20px',\n        position: 'absolute',\n        left: '-10px',\n        top: '-10px',\n        cursor: 'nw-resize',\n    },\n};\nvar Resizer = /** @class */ (function (_super) {\n    __extends(Resizer, _super);\n    function Resizer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.onMouseDown = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        _this.onTouchStart = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        return _this;\n    }\n    Resizer.prototype.render = function () {\n        return (React.createElement(\"div\", { className: this.props.className || '', style: __assign(__assign({ position: 'absolute', userSelect: 'none' }, styles[this.props.direction]), (this.props.replaceStyles || {})), onMouseDown: this.onMouseDown, onTouchStart: this.onTouchStart }, this.props.children));\n    };\n    return Resizer;\n}(React.PureComponent));\nexports.Resizer = Resizer;\n","import { useEffect, useRef } from 'react';\nexport default function usePrevious(state) {\n    var ref = useRef();\n    useEffect(function () {\n        ref.current = state;\n    });\n    return ref.current;\n}\n"],"names":["displayOverrideRef","isHideSeriesOverride","isSystemOverrideWithRef","seriesVisibilityConfigFactory","label","mode","fieldConfig","data","overrides","displayName","currentIndex","findIndex","SeriesVisibilityChangeMode","override","createOverride","getDisplayNames","overridesCopy","Array","from","current","splice","existing","getExistingDisplayNames","length","createExtendedOverride","allFieldsAreExcluded","names","ByNamesMatcherMode","property","id","value","viz","legend","tooltip","__systemRef","matcher","FieldMatcherID","options","prefix","undefined","readOnly","properties","find","p","index","name","push","rule","isArray","excludeName","unique","Set","frame","field","fields","type","FieldType","getFieldDisplayName","add","callback","delay","savedCallback","useRef","useEffect","interval_1","setInterval","clearInterval","Time","timeInMs","className","humanize","formatTime","inSeconds","toFixed","duration","toDuration","hours","minutes","seconds","ElapsedTime","resetKey","elapsed","setElapsed","useState","useInterval","LiveLogs","PureComponent","constructor","props","super","React","event","isPaused","onPause","this","scrollTop","clientHeight","scrollHeight","currentTarget","logRowsToRender","rowsToRender","state","slice","logRows","nextProps","render","theme","timeZone","onResume","styles","logsRowsLive","css","typography","fontFamilyMonospace","bodySmall","fontSize","logsRowFade","colors","text","tinycolor","info","transparent","setAlpha","toString","logsRowsIndicator","h6","spacing","button","fullWidth","getStyles","logsRow","logsRowLocalTime","logsRowMessage","getLogRowStyles","onScroll","cx","ref","scrollContainerRef","map","row","dateTimeFormat","timeEpochMs","hasAnsi","LogMessageAnsi","raw","entry","uid","element","liveEndDiv","scrollTo","Button","variant","onClick","Icon","stopLive","size","LiveLogsWithTheme","withTheme2","metaContainer","secondary","metaItem","error","metaLabel","fontWeightMedium","metaValue","MetaInfoItem","memo","style","useStyles2","MetaInfoText","metaItems","item","LogsMetaRow","meta","dedupStrategy","dedupCount","showDetectedFields","clearDetectedFields","hasUnescapedContent","forceEscape","onEscapeNewlines","logsMetaItem","LogsDedupStrategy","kind","LogsMetaKind","some","r","MAX_CHARACTERS","renderMetaItem","Tooltip","content","placement","LogLabels","labels","LogsNavigationPages","pages","currentPageIndex","oldestLogsFirst","loading","changeTime","time","format","systemDateFormats","createPageContent","page","Spinner","logsRange","to","useTheme2","CustomScrollbar","autoHide","pagesWrapper","pagesContainer","queryRange","line","selectedBg","selectedText","background","primary","main","v1","sm","LogsNavigation","absoluteRange","logsSortOrder","onChangeTime","scrollToTopLogs","visibleRange","queries","clearCache","addResultsToCache","setPages","setCurrentPageIndex","expectedQueriesRef","expectedRangeRef","rangeSpanRef","LogsSortOrder","onFirstPage","onLastPage","newPage","newPages","isEqual","filter","sort","a","b","sortPages","olderLogsButton","navButton","disabled","navButtonContent","newerLogsButton","navContainer","scrollToTopButton","title","ExploreGraph","height","width","loadingState","annotations","onHiddenSeriesChanged","splitOpenFn","tooltipDisplayMode","TooltipDisplayMode","showAllTimeSeries","setShowAllTimeSeries","baseStructureRev","setBaseStructureRev","previousData","usePrevious","structureChangesRef","compareArrayValues","compareDataFrameStructures","structureRev","setFieldConfig","defaults","color","FieldColorModeId","custom","drawStyle","GraphDrawStyle","fillOpacity","pointSize","timeRange","dateTime","dataWithConfig","useMemo","registry","createFieldConfigRegistry","getGraphFieldConfig","defaultGraphConfig","applyFieldOverrides","replaceVariables","fieldConfigRegistry","hiddenFrames","forEach","config","hideFrom","every","identity","getFrameDisplayName","seriesToShow","panelContext","eventBus","appEvents","onSplitOpen","onToggleSeriesVisibility","PanelContextProvider","timeSeriesDisclaimer","disclaimerIcon","PanelRenderer","series","pluginId","onChangeTimeRange","displayMode","LegendDisplayMode","calcs","warning","link","SETTINGS_KEYS","UnthemedLogs","createRef","showLabels","store","showTime","wrapLogMessage","prettifyLogMessage","hiddenLogLevels","isFlipping","setState","flipOrderTimer","window","setTimeout","prevState","cancelFlippingTimer","target","checked","hiddenRawLevels","level","LogLevel","preventDefault","onStartScanning","onStopScanning","key","indexOf","concat","k","memoizeOne","dedupedRows","dedupLogRows","reduce","sum","duplicates","filterLogLevels","topLogsRef","scrollIntoView","componentWillUnmount","clearTimeout","logsMeta","logsSeries","onClickFilterLabel","onClickFilterOutLabel","scanning","scanRange","showContextToggle","getFieldLinks","logsQueries","hasData","checkUnescapedContent","filteredLogs","filterRows","dedupRows","scanText","rangeUtil","infoText","onToggleLogLevel","logOptions","InlineFieldRow","InlineField","InlineSwitch","onChange","onChangeLabels","onChangewrapLogMessage","onChangePrettifyLogMessage","RadioButtonGroup","Object","values","dedupType","capitalize","description","LogsDedupDescription","onChangeDedup","radioButtons","flipButton","onChangeLogsSortOrder","logsSection","LogRows","deduplicatedRows","getRowContext","enableLogDetails","onClickShowDetectedField","showDetectedField","onClickHideDetectedField","hideDetectedField","noData","fill","onClickScan","onClickStopScan","Logs","shape","borderRadius","border","medium","logsEnter","logsEnterActive","logsExit","logsExitActive","LogsCrossFadeTransition","visible","children","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","transitionDuration","classNames","enter","enterActive","exit","exitActive","LiveTailControls","controls","exploreId","dispatch","useDispatch","pause","useCallback","setPausedStateAction","resume","stop","changeRefreshInterval","RefreshPicker","runQueries","start","useLiveTailControls","LogsContainer","updateTimeRange","async","datasourceInstance","getLogRowContext","rowIndex","splitOpen","range","getFieldLinksForExplore","isLive","styleOverridesForStickyNavigation","Collapse","isOpen","mapDispatchToProps","connect","explore","logsResult","getTimeZone","user","rows","isSplit","Boolean","ExploreId","QueryRows","getQueries","getDatasourceInstanceSettings","getQueryResponse","getHistory","getEventBridge","exploreItemSelector","getExploreItemSelector","createSelector","s","queryResponse","history","eventBridge","getDatasourceSrv","getInstanceSettings","makeSelectors","useSelector","dsSettings","onRunQueries","newQueries","changeQueriesAction","onAddQuery","query","refId","getNextRefIdChar","QueryEditorRows","onQueriesChange","app","CoreApp","connector","loadingInState","tableResult","TableContainer","getTableHeight","Math","max","min","onCellFilterAdded","ariaLabel","tableWidth","PANEL_BORDER","hasTableResult","getLinks","valueRowIndex","Table","stylesFactory","container","lg","input","switch","md","retentionPeriodOptions","RichHistorySettings","retentionPeriod","starredTabAsFirstTab","activeDatasourceOnly","onChangeRetentionPeriod","toggleStarredTabAsFirstTab","toggleactiveDatasourceOnly","deleteRichHistory","useTheme","selectedOption","v","Field","Select","menuShouldPortal","Switch","weight","bold","ShowConfirmModalEvent","yesText","icon","onConfirm","notifyApp","createSuccessNotification","changeDatasource","updateRichHistory","setQueries","isRemoved","rigtColumnWidth","rigtColumnContentWidth","cardColor","bg2","queryCard","border1","radius","palette","orange","cardRow","xs","base","datasourceContainer","semibold","queryActionButtons","queryContainer","queryRow","updateCommentContainer","comment","regular","commentButtonRow","textArea","runButton","dsImg","activeUpdateComment","setActiveUpdateComment","setComment","queryDsInstance","setQueryDsInstance","ds","getDataSourceSrv","get","datasourceName","getQueryDsInstance","onUpdateComment","ts","onCancelUpdateComment","updateComment","TextArea","placeholder","e","IconButton","queriesToCopy","q","createQueryText","join","copyStringToClipboard","createUrlFromRichHistory","createAndCopyShortLink","starred","iconType","onKeyDown","keyEvent","shiftKey","ctrlKey","src","i","queryText","queriesToRun","importQueries","bgColor","isLight","gray5","dark4","sliderHeight","containerContent","containerSlider","slider","selectors","filterInput","multiselect","xxs","sessionName","heading","h4","footer","light","RichHistoryQueriesTab","datasourceFilters","onSelectDatasourceFilters","onChangeSortOrder","sortOrder","timeFilter","setTimeFilter","filteredQueries","setFilteredQueries","searchInput","setSearchInput","debouncedSearchInput","setDebouncedSearchInput","datasourcesRetrievedFromQueryHistory","uniqBy","d","listOfDatasources","createDatasourcesList","useDebounce","filterAndSortQueries","mappedQueriesToHeadings","mapQueriesToHeadings","mapNumbertoTimeInSlider","RangeSlider","tooltipAlwaysVisible","orientation","formatTooltipResult","reverse","onAfterChange","MultiSelect","FilterInput","sortOrderOptions","order","keys","idx","imgUrl","RichHistoryStarredTab","starredQueries","Tabs","SortOrder","UnThemedRichHistory","RICH_HISTORY_SETTING_KEYS","console","updateFilters","activeDatasourceInstance","componentDidMount","componentDidUpdate","prevProps","richHistory","onClose","firstTab","tabs","RichHistory","Starred","Settings","toggleActiveDatasourceOnly","TabbedContainer","defaultTab","closeIconTooltip","withTheme","drawerSlide","keyframes","weak","shadows","z3","zIndex","sidemenu","drawerActive","rzHandle","shade","ExploreDrawer","onResize","drawerWidth","Resizable","defaultSize","handleClasses","top","enable","right","bottom","left","topRight","bottomRight","bottomLeft","topLeft","maxHeight","maxWidth","minWidth","setHeight","_e","_dir","Number","dataFrames","statsTab","InspectStatsTab","request","timezone","jsonTab","InspectJSONTab","dataTab","InspectDataTab","isLoading","withTransforms","withFieldConfig","QueryInspector","onRefreshQuery","errorTab","InspectErrorTab","TimeSyncButton","isSynced","ToolbarButton","ExploreTimeControls","Component","direction","getShiftedTimeRange","dateTimeForTimeZone","onMoveTimePicker","adjustedFrom","dateMath","adjustedTo","getZoomedTimeRange","fiscalYearStartMonth","splitted","syncedTimes","onChangeTimeSync","hideText","onChangeTimeZone","onChangeFiscalYearStartMonth","timeSyncButton","timePickerCommonProps","onMoveBackward","onMoveBack","onMoveForward","onZoom","TimePickerWithHistory","onChangeTimePicker","LiveTailButton","buttonVariant","onClickMain","ButtonGroup","iconOnly","stopButtonEnter","stopButtonEnterActive","stopButtonExit","stopButtonExitActive","RunButton","isSmall","onRun","onChangeRefreshInterval","refreshInterval","showDropdown","intervals","getTimeSrv","getValidIntervals","defaultIntervals","onIntervalChanged","onRefresh","noIntervalPicker","setDashboardQueriesToUpdateOnLoad","originPanelId","roles","canEdit","contextSrv","withOriginId","isInteger","cleanQueries","context","returnToPanel","withChanges","dash","getDashboardSrv","getCurrent","titleSlug","kbn","panelId","panelInEdit","editPanel","panelInView","viewPanel","locationService","urlUtil","ButtonSelect","UnConnectedExploreToolbar","clearAll","cancelQueries","syncTimes","datasourceMissing","closeSplit","split","hasLiveOption","containerWidth","showSmallDataSourcePicker","showSmallTimePicker","DataSourcePicker","onChangeDatasource","hideTextValue","ToolbarButtonRow","ReturnToDashboardButton","location","href","onClearAll","onRunQuery","SetInterval","func","interval","clearQueries","splitClose","updateTimeZoneForSession","updateFiscalYearStartMonthForSession","ExploreToolbar","exploreItem","streaming","getFiscalYearStartMonth","NoDataSourceCallToAction","canCreateDataSource","AccessControlAction","rel","ctaElement","LinkButton","cardClassName","breakpoints","CallToActionCard","callToActionElement","message","SecondaryActions","containerMargin","HorizontalGroup","addQueryRowButtonHidden","onClickAddQueryRowButton","addQueryRowButtonDisabled","richHistoryButtonActive","onClickRichHistoryButton","queryInspectorButtonActive","onClickQueryInspectorButton","warningText","NodeGraphContainer","withTraceView","useLinks","frames","nodes","useCategorizeFrames","open","toggleOpen","useToggle","countWarning","Badge","collapsible","onToggle","NodeGraph","FadeIn","defaultStyle","transition","opacity","transitionStyles","exited","display","entering","entered","exiting","Transition","onExited","ErrorContainer","queryError","showError","alertWithTopMargin","Alert","severity","ResponseErrorContainer","LoadingState","defaultKeys","getLokiQueryFromSpan","span","tags","filterByTraceID","filterBySpanID","keysToCheck","process","acc","tag","includes","traceID","spanID","getTimeRangeFromSpan","traceToLogsOptions","adjustedStartTime","spanStartTimeShift","floor","startTime","spanEndMs","adjustedEndTime","spanEndTimeShift","UIElements","Popover","overlayClassName","popoverRef","PopoverController","hideAfter","showPopper","hidePopper","popperProps","referenceElement","wrapperClassName","onMouseLeave","onMouseEnter","Dropdown","Menu","MenuItem","Divider","Input","InputGroup","isDark","shouldDisableCollapse","allSpans","hiddenSpansIds","hasChildren","makeDetailSubsectionToggle","subSection","detailStates","setDetailStates","old","detailState","toggleTags","toggleProcess","toggleWarnings","toggleReferences","toggleStackTraces","toggleLogs","newDetailStates","Map","set","noop","TraceView","expandOne","collapseOne","childrenToggle","collapseAll","childrenHiddenIDs","expandAll","setChildrenHiddenIDs","spans","prevExpandedDepth","expandNextHiddenSpan","newChildrenHiddenIDs","res","depth","has","delete","nearestCollapsedAncestor","curSpan","useChildrenState","toggleDetail","detailLogItemToggle","detailLogsToggle","detailProcessToggle","detailReferencesToggle","detailTagsToggle","detailWarningsToggle","detailStackTracesToggle","DetailState","log","toggleLogItem","useDetailState","removeHoverIndentGuideId","addHoverIndentGuideId","hoverIndentGuideIds","setHoverIndentGuideIds","newHoverIndentGuideIds","useHoverIndentGuide","viewRange","updateViewRangeTime","updateNextViewRangeTime","setViewRange","update","prevRange","end","useViewRange","spanNameColumnWidth","setSpanNameColumnWidth","slim","setSlim","traceProp","view","DataFrameView","processes","serviceName","serviceTags","toArray","processID","flags","references","parentSpanID","refType","logs","l","timestamp","transformTraceDataFrame","transformTraceData","transformDataFrames","search","setSearch","spanFindMatches","filterSpans","useSearch","dataSourceName","jsonData","tracesToLogs","traceTheme","ThemeType","servicesColorPalette","components","TraceName","traceTimeline","shouldScrollToFirstUiFindMatch","createSpanLink","datasourceUid","dataSourceSettings","dataLink","url","internal","expr","mapInternalLinkToExplore","internalLink","scopedVars","onClickFn","getTemplateSrv","replace","bind","createSpanLinkFactory","scrollElement","document","getElementsByClassName","onSlimViewClicked","canCollapse","clearSearch","focusUiFindMatches","hideMap","hideSummary","nextResult","onTraceGraphViewClicked","prevResult","resultCount","slimView","textFilter","trace","traceGraphView","searchValue","onSearchValueChange","hideSearchButtons","registerAccessors","scrollToFirstVisibleSpan","findMatchesIDs","focusSpan","createLinkToExternalSpan","clearShouldScrollToFirstUiFindMatch","detailToggle","setTrace","linksGetter","uiFind","TraceViewContainer","Explore","rawRange","operator","FILTER_FOR_OPERATOR","FILTER_OUT_OPERATOR","onModifyQueries","queryKeys","addQueryRow","action","modifyQuery","modifier","modification","modifyQueries","changeSize","scanStart","scanStopAction","openDrawer","preferredVisualisationType","renderEmptyState","renderGraphPanel","graphResult","parseInt","onUpdateTimeRange","renderTablePanel","renderLogsPanel","renderNodeGraphPanel","showTrace","getNodeGraphDataFrames","renderTraceViewPanel","showMetrics","showTable","showLogs","showNodeGraph","exploreMain","showPanels","showRichHistory","showQueryInspector","autoHeightMin","toggleShowRichHistory","toggleShowQueryInspector","disableHeight","ErrorBoundaryAlert","compose","ExplorePaneContainerUnconnected","prevUrlQuery","urlQuery","lastSavedUrl","refreshExplore","el","exploreEvents","EventBusSrv","initialized","initialDatasource","initialQueries","initialRange","offsetWidth","initializeExplore","removeAllListeners","cleanupPaneAction","exploreClass","getRef","ensureQueriesMemoized","ensureQueries","getTimeRangeFromUrlMemoized","getTimeRangeFromUrl","ExplorePaneContainer","urlState","parseUrlState","datasource","urlRange","lastUsedDatasourceKeyForOrgId","orgId","getTimeRange","DEFAULT_RANGE","resetExploreAction","richHistoryUpdatedAction","navModel","getNavModel","navIndex","exploreState","WrapperUnconnected","getRichHistory","queryParams","datasourceTitle","documentTitle","Branding","hasSplit","monadic","fn","cache","serializer","arg","cacheKey","computedValue","call","variadic","args","prototype","arguments","apply","assemble","strategy","serialize","strategyDefault","create","serializerDefault","JSON","stringify","ObjectWithoutPrototypeCache","cacheDefault","module","exports","strategies","extendStatics","__extends","setPrototypeOf","__proto__","hasOwnProperty","__","__assign","assign","t","n","__importStar","mod","__esModule","result","__importDefault","defineProperty","resizer_1","fast_memoize_1","DEFAULT_SIZE","clamp","default","snap","round","hasDirection","dir","RegExp","test","findClosestSnap","snapArray","snapGap","closestGapIndex","prev","curr","abs","gap","endsWith","str","searchStr","substr","getStringSize","getPixelSize","parentSize","ratio","innerWidth","innerHeight","calculateNewMax","minHeight","definedProps","baseClassName","_super","_this","resizable","parentLeft","parentTop","resizableLeft","resizableTop","targetLeft","targetTop","c","isResizing","propsSize","original","x","y","backgroundStyle","backgroundColor","cursor","position","onResizeStart","onMouseMove","onMouseUp","parentNode","enumerable","configurable","parent","_i","children_1","HTMLElement","classList","contains","orgWidth","orgHeight","offsetHeight","orgPosition","getSize","getParentSize","wrapChanged","wrap","flexWrap","bindEvents","addEventListener","unbindEvents","removeEventListener","computedStyle","getComputedStyle","flexBasis","createElement","transform","flex","appendChild","parent_1","Node","removeChild","createSizeForCssProperty","newSize","calculateNewMaxFromBoundary","bounds","parent_2","boundWidth","boundHeight","calculateNewSizeFromDirection","clientX","clientY","scale","resizeRatio","_a","_b","lockAspectRatio","lockAspectRatioExtraHeight","lockAspectRatioExtraWidth","newWidth","newHeight","extraHeight","extraWidth","calculateNewSizeFromAspectRatio","computedMinWidth","computedMaxWidth","computedMinHeight","computedMaxHeight","extraMinWidth","extraMaxWidth","extraMinHeight","extraMaxHeight","lockedMinWidth","lockedMaxWidth","lockedMinHeight","lockedMaxHeight","setBoundingClientRect","parent_3","parentRect","getBoundingClientRect","targetRect","top_1","nativeEvent","MouseEvent","which","TouchEvent","touches","parent_4","flexDirection","flexDir","startsWith","_c","boundaryMax","grid","newGridWidth","newGridHeight","delta","newState","onResizeStop","updateSize","renderResizer","handleStyles","handleWrapperStyle","handleWrapperClass","handleComponent","resizers","Resizer","replaceStyles","extendsProps","userSelect","sizeStyle","boxSizing","flexShrink","defaultProps","onMouseDown","onTouchStart"],"sourceRoot":""}