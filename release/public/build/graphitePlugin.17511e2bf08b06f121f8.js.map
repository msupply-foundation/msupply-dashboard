{"version":3,"sources":["webpack:///./public/app/core/utils/version.ts","webpack:///./public/app/plugins/datasource/graphite/gfunc.ts","webpack:///./public/app/plugins/datasource/graphite/types.ts","webpack:///./public/app/plugins/datasource/graphite/meta.ts","webpack:///./public/app/plugins/datasource/graphite/versions.ts","webpack:///./public/app/plugins/datasource/graphite/datasource.ts","webpack:///./public/app/plugins/datasource/graphite/utils.ts","webpack:///./public/app/plugins/datasource/graphite/add_graphite_func.ts","webpack:///./public/app/plugins/datasource/graphite/func_editor.ts","webpack:///./public/app/plugins/datasource/graphite/query_ctrl.ts","webpack:///./public/app/plugins/datasource/graphite/configuration/MappingsHelp.tsx","webpack:///./public/app/plugins/datasource/graphite/configuration/MappingsConfiguration.tsx","webpack:///./public/app/plugins/datasource/graphite/configuration/parseLokiLabelMappings.ts","webpack:///./public/app/plugins/datasource/graphite/configuration/ConfigEditor.tsx","webpack:///./public/app/plugins/datasource/graphite/MetricTankMetaInspector.tsx","webpack:///./public/app/plugins/datasource/graphite/module.ts"],"names":["versionPattern","SemVersion","constructor","version","major","minor","patch","meta","this","match","exec","Number","isGtOrEq","compared","i","comparable","length","isValid","isNumber","isVersionGtOrEq","a","b","index","addFuncDef","funcDef","params","defaultParams","name","shortName","optionalSeriesRefArgs","type","optional","multiple","isVersionRelatedFunction","obj","graphiteVersion","category","options","fake","FuncInstance","def","text","added","withDefaultParams","slice","updateText","render","metricExp","replaceVariables","str","parameters","map","value","paramType","get","last","includes","valueInterpolated","isString","isFinite","toString","pop","unshift","join","_hasMultipleParamsInString","strValue","indexOf","updateParam","each","split","partVal","idx","trim","splice","getFuncDef","unknown","createFuncInstance","getFuncDefs","funcs","forEach","assign","filter","param","parseFuncDefs","rawDefs","funcDefs","funcName","group","description","replace","func","test","required","shift","rawParam","undefined","default","Infinity","push","suggestions","GraphiteType","toInteger","val","parseInt","toBooleanOrTimestamp","getRollupNotice","metaList","archiveIndex","parseSchemaRetentions","interval","severity","inspect","getRuntimeConsolidationNotice","runtimeNr","spec","vals","retention","chunkspan","numchunks","ready","GRAPHITE_VERSIONS","DEFAULT_GRAPHITE_VERSION","GraphiteDatasource","DataSourceApi","instanceSettings","templateSrv","getTemplateSrv","super","basicAuth","url","supportsTags","isMetricTank","rollupIndicatorEnabled","cacheTimeout","withCredentials","funcDefsPromise","_seriesRefLetters","metricMappings","convertResponseToDataFrames","result","data","series","isArray","message","s","title","target","y","datapoints","frame","toDataFrame","custom","requestMetaList","seriesMetaList","rollupNotice","runtimeNotice","notices","stats","getRequestStats","jsonData","importConfiguration","loki","mappings","graphiteType","Metrictank","getQueryOptionsInfo","maxDataPoints","links","getImportQueryConfiguration","query","graphOptions","from","translateTime","range","raw","timezone","until","to","targets","format","buildGraphiteParams","scopedVars","of","httpOptions","method","headers","addTracingHeaders","panelId","requestId","doGraphiteRequest","pipe","dashboardId","key","unit","endsWith","displayName","parseTags","tagString","tags","interpolateVariablesInQueries","queries","expandedQueries","datasource","annotationQuery","annotation","graphiteQuery","list","time","fields","values","toPromise","events","then","results","console","error","e","when","what","err","Promise","reject","targetContainsTemplate","variableExists","date","roundUp","substring","dateMath","parse","add","subtract","unix","metricFindQuery","optionalOptions","interpolatedQuery","getSearchFilterScopedVar","wildcardChar","allParams","expressions","p","limit","getTagValuesAutoComplete","getTagsAutoComplete","useExpand","requestMetricExpand","requestMetricFind","_map","metric","expandable","getTags","tag","id","getTagValues","tagPrefix","expr","expression","mapToTags","valuePrefix","getVersion","catchError","gfunc","waitForFuncDefsLoaded","resolve","status","fixedData","JSON","testDatasource","rangeRaw","Authorization","getBackendSrv","fetch","throwError","startsWith","newMessage","reduceError","graphiteOptions","cleanOptions","targetValue","regex","intervalFormatFixRegex","hasTargets","fixIntervalFormat","refId","nestedSeriesRegexReplacer","g1","hide","encodeURIComponent","graphiteAddFunc","$compile","link","$scope","elem","ctrl","$input","$","$button","drop","appendTo","allFunctions","sort","functionMenu","categories","click","sortBy","submenu","createFunctionDropDownMenu","attr","typeahead","source","minLength","items","updater","toLowerCase","find","$apply","addFunction","trigger","show","focus","keyup","toggleClass","blur","setTimeout","removeClass","contents","cleanUpDrop","destroy","on","async","shortDesc","contentElement","document","createElement","rst2html","innerHTML","Drop","content","classes","openOn","tetherOptions","attachment","targetAttachment","$on","graphiteFuncEditor","restrict","$funcLink","scheduledRelink","paramCountAtLink","cancelBlur","clickFuncParam","paramIndex","$link","$comma","prev","next","select","lookup","paramDef","switchToLink","inputElem","clearTimeout","newValue","html","highlightVariablesAsHtml","relink","targetChanged","hasClass","addClass","inputBlur","inputKeyPress","which","inputKeyDown","style","width","addElementsAndCompile","defParams","clone","lastParam","paramValue","hasValue","linkClass","$paramLink","partial","keypress","$element","process","addTypeahead","children","remove","first","handleRemoveFunction","removeFunction","handleMoveLeft","moveFunction","handleMoveRight","coreModule","directive","GRAPHITE_TAG_OPERATORS","GraphiteQueryCtrl","QueryCtrl","$injector","uiSegmentSrv","$timeout","queryModel","segments","addTagSegments","removeTagValue","paused","_tagsAutoCompleteErrorShown","_metricAutoCompleteErrorShown","GraphiteQuery","buildSegments","parseTarget","toggleEditorMode","textEditor","modifyLastSegment","segment","newSegment","checkOtherSegmentsIndex","promiseToDigest","checkOtherSegments","seriesByTagUsed","fixTagSegments","addSelectMetricSegment","newSelectMetric","fromIndex","path","getSegmentPathUpTo","catch","handleMetricsAutoCompleteError","setSegmentFocus","segmentIndex","getAltSegments","prefix","panelCtrl","altSegments","eachRight","panel","getVariables","variable","removeTaggedEntry","addAltTagSegments","getTagsAsSegments","tagSegments","concat","segmentValueChanged","updateSegmentValue","functions","pause","addSeriesByTagFunc","spliceSegments","emptySegments","targetTextChanged","updateModelTarget","refresh","oldTarget","newFunc","smartlyHandleNewAliasByNode","offset","tagParam","getAllTags","altTags","mapToDropdownOptions","tagExpressions","renderTagExpressions","handleTagsAutoCompleteError","getTagOperators","getAllTagValues","tagKey","altValues","tagChanged","tagIndex","updateTag","addNewTag","newTag","operator","addTag","removeTag","newPlusButton","showDelimiter","unpause","getCollapsedText","dispatch","notifyApp","createErrorNotification","templateUrl","MappingsHelp","props","onRemove","onDismiss","MappingsConfiguration","setMappings","useState","className","showHelp","variant","onClick","onRestoreHelp","mapping","label","onChange","changeEvent","newMappings","onBlur","placeholder","aria-label","size","_","icon","fromString","matchers","metricNode","labelName","matcher","Select","Switch","LegacyForms","SHOW_MAPPINGS_HELP_KEY","graphiteVersions","graphiteTypes","Object","entries","ConfigEditor","PureComponent","renderTypeHelp","href","rel","state","showMappingsHelp","store","getObject","componentDidMount","updateDatasourcePluginJsonDataOption","currentGraphiteVersion","onOptionsChange","currentVersion","item","defaultUrl","dataSourceConfig","tooltip","onUpdateDatasourceJsonDataOptionSelect","labelClass","checked","onUpdateDatasourceJsonDataOptionChecked","setState","setObject","MetricTankMetaInspector","renderMeta","styles","getStyles","buckets","normFunc","totalSeconds","reduce","acc","bucket","rangeUtil","intervalToSeconds","metaItem","metaItemHeader","count","metaItemBody","step","stepHeading","stepDescription","lengthPercent","isActive","bucketInterval","cx","bucketRetention","bucketRetentionActive","flexGrow","seriesMetas","stringify","keys","stylesFactory","theme","config","borderColor","isDark","palette","gray25","gray85","background","dark1","white","headerBg","gray15","css","spacing","md","xs","typography","sm","colors","textWeak","lg","border","radius","blue85","blue95","greenBase","greenShade","AnnotationsQueryCtrl","plugin","DataSourcePlugin","setQueryCtrl","setConfigEditor","setMetadataInspector","setAnnotationQueryCtrl"],"mappings":"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","file":"graphitePlugin.17511e2bf08b06f121f8.js","sourcesContent":["import { isNumber } from 'lodash';\n\nconst versionPattern = /^(\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))?(?:-([0-9A-Za-z\\.]+))?/;\n\nexport class SemVersion {\n  major: number;\n  minor: number;\n  patch: number;\n  meta: string;\n\n  constructor(version: string) {\n    this.major = 0;\n    this.minor = 0;\n    this.patch = 0;\n    this.meta = '';\n    const match = versionPattern.exec(version);\n    if (match) {\n      this.major = Number(match[1]);\n      this.minor = Number(match[2] || 0);\n      this.patch = Number(match[3] || 0);\n      this.meta = match[4];\n    }\n  }\n\n  isGtOrEq(version: string): boolean {\n    const compared = new SemVersion(version);\n\n    for (let i = 0; i < this.comparable.length; ++i) {\n      if (this.comparable[i] > compared.comparable[i]) {\n        return true;\n      }\n      if (this.comparable[i] < compared.comparable[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  isValid(): boolean {\n    return isNumber(this.major);\n  }\n\n  get comparable() {\n    return [this.major, this.minor, this.patch];\n  }\n}\n\nexport function isVersionGtOrEq(a: string, b: string): boolean {\n  const aSemver = new SemVersion(a);\n  return aSemver.isGtOrEq(b);\n}\n","import { assign, each, filter, forEach, get, includes, isString, last, map, toString, isFinite } from 'lodash';\nimport { isVersionGtOrEq } from 'app/core/utils/version';\nimport { InterpolateFunction } from '@grafana/data';\n\nconst index: any = {};\n\nexport interface FuncDef {\n  name: any;\n  category?: string;\n  params?: any;\n  defaultParams?: any;\n  shortName?: any;\n  fake?: boolean;\n  version?: string;\n  description?: string;\n}\n\nfunction addFuncDef(funcDef: FuncDef) {\n  funcDef.params = funcDef.params || [];\n  funcDef.defaultParams = funcDef.defaultParams || [];\n\n  index[funcDef.name] = funcDef;\n  if (funcDef.shortName) {\n    index[funcDef.shortName] = funcDef;\n  }\n}\n\nconst optionalSeriesRefArgs = [{ name: 'other', type: 'value_or_series', optional: true, multiple: true }];\n\naddFuncDef({\n  name: 'scaleToSeconds',\n  category: 'Transform',\n  params: [{ name: 'seconds', type: 'int' }],\n  defaultParams: [1],\n});\n\naddFuncDef({\n  name: 'perSecond',\n  category: 'Transform',\n  params: [{ name: 'max value', type: 'int', optional: true }],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'holtWintersForecast',\n  category: 'Calculate',\n});\n\naddFuncDef({\n  name: 'holtWintersConfidenceBands',\n  category: 'Calculate',\n  params: [{ name: 'delta', type: 'int' }],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'holtWintersAberration',\n  category: 'Calculate',\n  params: [{ name: 'delta', type: 'int' }],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'nPercentile',\n  category: 'Calculate',\n  params: [{ name: 'Nth percentile', type: 'int' }],\n  defaultParams: [95],\n});\n\naddFuncDef({\n  name: 'diffSeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'stddevSeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: [''],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'divideSeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'multiplySeries',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'asPercent',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'group',\n  params: optionalSeriesRefArgs,\n  defaultParams: ['#A', '#B'],\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'sumSeries',\n  shortName: 'sum',\n  category: 'Combine',\n  params: optionalSeriesRefArgs,\n  defaultParams: [''],\n});\n\naddFuncDef({\n  name: 'averageSeries',\n  shortName: 'avg',\n  category: 'Combine',\n  params: optionalSeriesRefArgs,\n  defaultParams: [''],\n});\n\naddFuncDef({\n  name: 'rangeOfSeries',\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'percentileOfSeries',\n  category: 'Combine',\n  params: [\n    { name: 'n', type: 'int' },\n    { name: 'interpolate', type: 'boolean', options: ['true', 'false'] },\n  ],\n  defaultParams: [95, 'false'],\n});\n\naddFuncDef({\n  name: 'sumSeriesWithWildcards',\n  category: 'Combine',\n  params: [{ name: 'node', type: 'int', multiple: true }],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'maxSeries',\n  shortName: 'max',\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'minSeries',\n  shortName: 'min',\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'averageSeriesWithWildcards',\n  category: 'Combine',\n  params: [{ name: 'node', type: 'int', multiple: true }],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'alias',\n  category: 'Alias',\n  params: [{ name: 'alias', type: 'string' }],\n  defaultParams: ['alias'],\n});\n\naddFuncDef({\n  name: 'aliasSub',\n  category: 'Alias',\n  params: [\n    { name: 'search', type: 'string' },\n    { name: 'replace', type: 'string' },\n  ],\n  defaultParams: ['', '\\\\1'],\n});\n\naddFuncDef({\n  name: 'consolidateBy',\n  category: 'Special',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['sum', 'average', 'min', 'max'],\n    },\n  ],\n  defaultParams: ['max'],\n});\n\naddFuncDef({\n  name: 'cumulative',\n  category: 'Special',\n  params: [],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'groupByNode',\n  category: 'Combine',\n  params: [\n    {\n      name: 'node',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    },\n    {\n      name: 'function',\n      type: 'string',\n      options: ['sum', 'avg', 'maxSeries'],\n    },\n  ],\n  defaultParams: [3, 'sum'],\n});\n\naddFuncDef({\n  name: 'aliasByNode',\n  category: 'Alias',\n  params: [\n    {\n      name: 'node',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n      multiple: true,\n    },\n  ],\n  defaultParams: [3],\n});\n\naddFuncDef({\n  name: 'substr',\n  category: 'Special',\n  params: [\n    {\n      name: 'start',\n      type: 'int',\n      options: [-6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    },\n    {\n      name: 'stop',\n      type: 'int',\n      options: [-6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    },\n  ],\n  defaultParams: [0, 0],\n});\n\naddFuncDef({\n  name: 'sortByName',\n  category: 'Sorting',\n  params: [\n    {\n      name: 'natural',\n      type: 'boolean',\n      options: ['true', 'false'],\n      optional: true,\n    },\n  ],\n  defaultParams: ['false'],\n});\n\naddFuncDef({\n  name: 'sortByMaxima',\n  category: 'Sorting',\n});\n\naddFuncDef({\n  name: 'sortByMinima',\n  category: 'Sorting',\n});\n\naddFuncDef({\n  name: 'sortByTotal',\n  category: 'Sorting',\n});\n\naddFuncDef({\n  name: 'aliasByMetric',\n  category: 'Alias',\n});\n\naddFuncDef({\n  name: 'randomWalk',\n  fake: true,\n  category: 'Special',\n  params: [{ name: 'name', type: 'string' }],\n  defaultParams: ['randomWalk'],\n});\n\naddFuncDef({\n  name: 'countSeries',\n  category: 'Combine',\n});\n\naddFuncDef({\n  name: 'constantLine',\n  category: 'Special',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [10],\n});\n\naddFuncDef({\n  name: 'cactiStyle',\n  category: 'Special',\n});\n\naddFuncDef({\n  name: 'keepLastValue',\n  category: 'Transform',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [100],\n});\n\naddFuncDef({\n  name: 'changed',\n  category: 'Special',\n  params: [],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'scale',\n  category: 'Transform',\n  params: [{ name: 'factor', type: 'int' }],\n  defaultParams: [1],\n});\n\naddFuncDef({\n  name: 'offset',\n  category: 'Transform',\n  params: [{ name: 'amount', type: 'int' }],\n  defaultParams: [10],\n});\n\naddFuncDef({\n  name: 'transformNull',\n  category: 'Transform',\n  params: [{ name: 'amount', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'integral',\n  category: 'Transform',\n});\n\naddFuncDef({\n  name: 'derivative',\n  category: 'Transform',\n});\n\naddFuncDef({\n  name: 'nonNegativeDerivative',\n  category: 'Transform',\n  params: [{ name: 'max value or 0', type: 'int', optional: true }],\n  defaultParams: [''],\n});\n\naddFuncDef({\n  name: 'timeShift',\n  category: 'Transform',\n  params: [\n    {\n      name: 'amount',\n      type: 'select',\n      options: ['1h', '6h', '12h', '1d', '2d', '7d', '14d', '30d'],\n    },\n  ],\n  defaultParams: ['1d'],\n});\n\naddFuncDef({\n  name: 'timeStack',\n  category: 'Transform',\n  params: [\n    {\n      name: 'timeShiftUnit',\n      type: 'select',\n      options: ['1h', '6h', '12h', '1d', '2d', '7d', '14d', '30d'],\n    },\n    { name: 'timeShiftStart', type: 'int' },\n    { name: 'timeShiftEnd', type: 'int' },\n  ],\n  defaultParams: ['1d', 0, 7],\n});\n\naddFuncDef({\n  name: 'summarize',\n  category: 'Transform',\n  params: [\n    { name: 'interval', type: 'string' },\n    {\n      name: 'func',\n      type: 'select',\n      options: ['sum', 'avg', 'min', 'max', 'last'],\n    },\n    {\n      name: 'alignToFrom',\n      type: 'boolean',\n      optional: true,\n      options: ['false', 'true'],\n    },\n  ],\n  defaultParams: ['1h', 'sum', 'false'],\n});\n\naddFuncDef({\n  name: 'smartSummarize',\n  category: 'Transform',\n  params: [\n    { name: 'interval', type: 'string' },\n    {\n      name: 'func',\n      type: 'select',\n      options: ['sum', 'avg', 'min', 'max', 'last'],\n    },\n  ],\n  defaultParams: ['1h', 'sum'],\n});\n\naddFuncDef({\n  name: 'absolute',\n  category: 'Transform',\n});\n\naddFuncDef({\n  name: 'hitcount',\n  category: 'Transform',\n  params: [{ name: 'interval', type: 'string' }],\n  defaultParams: ['10s'],\n});\n\naddFuncDef({\n  name: 'log',\n  category: 'Transform',\n  params: [{ name: 'base', type: 'int' }],\n  defaultParams: ['10'],\n});\n\naddFuncDef({\n  name: 'averageAbove',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [25],\n});\n\naddFuncDef({\n  name: 'averageBelow',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [25],\n});\n\naddFuncDef({\n  name: 'currentAbove',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [25],\n});\n\naddFuncDef({\n  name: 'currentBelow',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [25],\n});\n\naddFuncDef({\n  name: 'maximumAbove',\n  category: 'Filter Series',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'maximumBelow',\n  category: 'Filter Series',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'minimumAbove',\n  category: 'Filter Series',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'minimumBelow',\n  category: 'Filter Series',\n  params: [{ name: 'value', type: 'int' }],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'limit',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'mostDeviant',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [10],\n});\n\naddFuncDef({\n  name: 'exclude',\n  category: 'Filter Series',\n  params: [{ name: 'exclude', type: 'string' }],\n  defaultParams: ['exclude'],\n});\n\naddFuncDef({\n  name: 'highestCurrent',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'highestMax',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'lowestCurrent',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'movingAverage',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n});\n\naddFuncDef({\n  name: 'movingMedian',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: ['5'],\n});\n\naddFuncDef({\n  name: 'stdev',\n  category: 'Calculate',\n  params: [\n    { name: 'n', type: 'int' },\n    { name: 'tolerance', type: 'int' },\n  ],\n  defaultParams: [5, 0.1],\n});\n\naddFuncDef({\n  name: 'highestAverage',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'lowestAverage',\n  category: 'Filter Series',\n  params: [{ name: 'count', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'removeAbovePercentile',\n  category: 'Filter Data',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'removeAboveValue',\n  category: 'Filter Data',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'removeBelowPercentile',\n  category: 'Filter Data',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'removeBelowValue',\n  category: 'Filter Data',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [5],\n});\n\naddFuncDef({\n  name: 'useSeriesAbove',\n  category: 'Filter Series',\n  params: [\n    { name: 'value', type: 'int' },\n    { name: 'search', type: 'string' },\n    { name: 'replace', type: 'string' },\n  ],\n  defaultParams: [0, 'search', 'replace'],\n});\n\n////////////////////\n// Graphite 1.0.x //\n////////////////////\n\naddFuncDef({\n  name: 'aggregateLine',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'func',\n      type: 'select',\n      options: ['sum', 'avg', 'min', 'max', 'last'],\n    },\n  ],\n  defaultParams: ['avg'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'averageOutsidePercentile',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [95],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'delay',\n  category: 'Transform',\n  params: [{ name: 'steps', type: 'int' }],\n  defaultParams: [1],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'exponentialMovingAverage',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'fallbackSeries',\n  category: 'Special',\n  params: [{ name: 'fallback', type: 'string' }],\n  defaultParams: ['constantLine(0)'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'grep',\n  category: 'Filter Series',\n  params: [{ name: 'grep', type: 'string' }],\n  defaultParams: ['grep'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'groupByNodes',\n  category: 'Combine',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['sum', 'avg', 'maxSeries'],\n    },\n    {\n      name: 'node',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n      multiple: true,\n    },\n  ],\n  defaultParams: ['sum', 3],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'integralByInterval',\n  category: 'Transform',\n  params: [\n    {\n      name: 'intervalUnit',\n      type: 'select',\n      options: ['1h', '6h', '12h', '1d', '2d', '7d', '14d', '30d'],\n    },\n  ],\n  defaultParams: ['1d'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'interpolate',\n  category: 'Transform',\n  params: [{ name: 'limit', type: 'int', optional: true }],\n  defaultParams: [],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'invert',\n  category: 'Transform',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'isNonNull',\n  category: 'Combine',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'linearRegression',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'startSourceAt',\n      type: 'select',\n      options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n      optional: true,\n    },\n    {\n      name: 'endSourceAt',\n      type: 'select',\n      options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n      optional: true,\n    },\n  ],\n  defaultParams: [],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'mapSeries',\n  shortName: 'map',\n  params: [{ name: 'node', type: 'int' }],\n  defaultParams: [3],\n  category: 'Combine',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'movingMin',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'movingMax',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'movingSum',\n  category: 'Calculate',\n  params: [\n    {\n      name: 'windowSize',\n      type: 'int_or_interval',\n      options: ['5', '7', '10', '5min', '10min', '30min', '1hour'],\n    },\n  ],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'multiplySeriesWithWildcards',\n  category: 'Combine',\n  params: [\n    {\n      name: 'position',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n      multiple: true,\n    },\n  ],\n  defaultParams: [2],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'offsetToZero',\n  category: 'Transform',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'pow',\n  category: 'Transform',\n  params: [{ name: 'factor', type: 'int' }],\n  defaultParams: [10],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'powSeries',\n  category: 'Transform',\n  params: optionalSeriesRefArgs,\n  defaultParams: [''],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'reduceSeries',\n  shortName: 'reduce',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['asPercent', 'diffSeries', 'divideSeries'],\n    },\n    {\n      name: 'reduceNode',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],\n    },\n    { name: 'reduceMatchers', type: 'string', multiple: true },\n  ],\n  defaultParams: ['asPercent', 2, 'used_bytes'],\n  category: 'Combine',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'removeBetweenPercentile',\n  category: 'Filter Series',\n  params: [{ name: 'n', type: 'int' }],\n  defaultParams: [95],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'removeEmptySeries',\n  category: 'Filter Series',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'squareRoot',\n  category: 'Transform',\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'timeSlice',\n  category: 'Transform',\n  params: [\n    {\n      name: 'startSliceAt',\n      type: 'select',\n      options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n    },\n    {\n      name: 'endSliceAt',\n      type: 'select',\n      options: ['-1h', '-6h', '-12h', '-1d', '-2d', '-7d', '-14d', '-30d'],\n      optional: true,\n    },\n  ],\n  defaultParams: ['-1h'],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'weightedAverage',\n  category: 'Combine',\n  params: [\n    { name: 'other', type: 'value_or_series', optional: true },\n    {\n      name: 'node',\n      type: 'int',\n      options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12],\n    },\n  ],\n  defaultParams: ['#A', 4],\n  version: '1.0',\n});\n\naddFuncDef({\n  name: 'seriesByTag',\n  category: 'Special',\n  params: [{ name: 'tagExpression', type: 'string', multiple: true }],\n  version: '1.1',\n});\n\naddFuncDef({\n  name: 'groupByTags',\n  category: 'Combine',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['sum', 'avg', 'maxSeries'],\n    },\n    { name: 'tag', type: 'string', multiple: true },\n  ],\n  defaultParams: ['sum', 'tag'],\n  version: '1.1',\n});\n\naddFuncDef({\n  name: 'aliasByTags',\n  category: 'Alias',\n  params: [{ name: 'tag', type: 'string', multiple: true }],\n  defaultParams: ['tag'],\n  version: '1.1',\n});\n\nfunction isVersionRelatedFunction(obj: { version: string }, graphiteVersion: string) {\n  return !obj.version || isVersionGtOrEq(graphiteVersion, obj.version);\n}\n\nexport class FuncInstance {\n  def: any;\n  params: any;\n  text: any;\n  added: boolean;\n\n  constructor(funcDef: any, options?: { withDefaultParams: any }) {\n    this.def = funcDef;\n    this.params = [];\n\n    if (options && options.withDefaultParams) {\n      this.params = funcDef.defaultParams.slice(0);\n    }\n\n    this.updateText();\n  }\n\n  render(metricExp: string, replaceVariables: InterpolateFunction): string {\n    const str = this.def.name + '(';\n\n    const parameters = map(this.params, (value, index) => {\n      let paramType;\n\n      if (index < this.def.params.length) {\n        paramType = this.def.params[index].type;\n      } else if (get(last(this.def.params), 'multiple')) {\n        paramType = get(last(this.def.params), 'type');\n      }\n\n      // param types that should never be quoted\n      if (includes(['value_or_series', 'boolean', 'int', 'float', 'node', 'int_or_infinity'], paramType)) {\n        return value;\n      }\n\n      const valueInterpolated = isString(value) ? replaceVariables(value) : value;\n\n      // param types that might be quoted\n      // To quote variables correctly we need to interpolate it to check if it contains a numeric or string value\n      if (includes(['int_or_interval', 'node_or_tag'], paramType) && isFinite(+valueInterpolated)) {\n        return toString(value);\n      }\n\n      return \"'\" + value + \"'\";\n    });\n\n    // don't send any blank parameters to graphite\n    while (parameters[parameters.length - 1] === '') {\n      parameters.pop();\n    }\n\n    if (metricExp) {\n      parameters.unshift(metricExp);\n    }\n\n    return str + parameters.join(', ') + ')';\n  }\n\n  _hasMultipleParamsInString(strValue: any, index: number) {\n    if (strValue.indexOf(',') === -1) {\n      return false;\n    }\n\n    if (this.def.params[index + 1] && this.def.params[index + 1].optional) {\n      return true;\n    }\n\n    if (index + 1 >= this.def.params.length && get(last(this.def.params), 'multiple')) {\n      return true;\n    }\n\n    return false;\n  }\n\n  updateParam(strValue: any, index: any) {\n    // handle optional parameters\n    // if string contains ',' and next param is optional, split and update both\n    if (this._hasMultipleParamsInString(strValue, index)) {\n      each(strValue.split(','), (partVal, idx) => {\n        this.updateParam(partVal.trim(), index + idx);\n      });\n      return;\n    }\n\n    if (strValue === '' && (index >= this.def.params.length || this.def.params[index].optional)) {\n      this.params.splice(index, 1);\n    } else {\n      this.params[index] = strValue;\n    }\n\n    this.updateText();\n  }\n\n  updateText() {\n    if (this.params.length === 0) {\n      this.text = this.def.name + '()';\n      return;\n    }\n\n    let text = this.def.name + '(';\n    text += this.params.join(', ');\n    text += ')';\n    this.text = text;\n  }\n}\n\nfunction createFuncInstance(funcDef: any, options?: { withDefaultParams: any }, idx?: any) {\n  if (isString(funcDef)) {\n    funcDef = getFuncDef(funcDef, idx);\n  }\n  return new FuncInstance(funcDef, options);\n}\n\nfunction getFuncDef(name: string, idx?: any) {\n  if (!(idx || index)[name]) {\n    return { name: name, params: [{ multiple: true }], unknown: true };\n  }\n  return (idx || index)[name];\n}\n\nfunction getFuncDefs(graphiteVersion: string, idx?: any) {\n  const funcs: any = {};\n  forEach(idx || index, (funcDef) => {\n    if (isVersionRelatedFunction(funcDef, graphiteVersion)) {\n      funcs[funcDef.name] = assign({}, funcDef, {\n        params: filter(funcDef.params, (param) => {\n          return isVersionRelatedFunction(param, graphiteVersion);\n        }),\n      });\n    }\n  });\n  return funcs;\n}\n\n// parse response from graphite /functions endpoint into internal format\nfunction parseFuncDefs(rawDefs: any) {\n  const funcDefs: any = {};\n\n  forEach(rawDefs || {}, (funcDef, funcName) => {\n    // skip graphite graph functions\n    if (funcDef.group === 'Graph') {\n      return;\n    }\n\n    let description = funcDef.description;\n    if (description) {\n      // tidy up some pydoc syntax that rst2html can't handle\n      description = description\n        .replace(/:py:func:`(.+)( <[^>]*>)?`/g, '``$1``')\n        .replace(/.. seealso:: /g, 'See also: ')\n        .replace(/.. code-block *:: *none/g, '.. code-block::');\n    }\n\n    const func: FuncDef = {\n      name: funcDef.name,\n      description,\n      category: funcDef.group,\n      params: [],\n      defaultParams: [],\n      fake: false,\n    };\n\n    // get rid of the first \"seriesList\" param\n    if (/^seriesLists?$/.test(get(funcDef, 'params[0].type', ''))) {\n      // handle functions that accept multiple seriesLists\n      // we leave the param in place but mark it optional, so users can add more series if they wish\n      if (funcDef.params[0].multiple) {\n        funcDef.params[0].required = false;\n        // otherwise chop off the first param, it'll be handled separately\n      } else {\n        funcDef.params.shift();\n      }\n      // tag function as fake\n    } else {\n      func.fake = true;\n    }\n\n    forEach(funcDef.params, (rawParam) => {\n      const param: any = {\n        name: rawParam.name,\n        type: 'string',\n        optional: !rawParam.required,\n        multiple: !!rawParam.multiple,\n        options: undefined,\n      };\n\n      if (rawParam.default !== undefined) {\n        if (rawParam.default === Infinity) {\n          func.defaultParams.push('inf');\n        } else {\n          func.defaultParams.push(toString(rawParam.default));\n        }\n      } else if (rawParam.suggestions) {\n        func.defaultParams.push(toString(rawParam.suggestions[0]));\n      } else {\n        func.defaultParams.push('');\n      }\n\n      if (rawParam.type === 'boolean') {\n        param.type = 'boolean';\n        param.options = ['true', 'false'];\n      } else if (rawParam.type === 'integer') {\n        param.type = 'int';\n      } else if (rawParam.type === 'float') {\n        param.type = 'float';\n      } else if (rawParam.type === 'node') {\n        param.type = 'node';\n        param.options = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n      } else if (rawParam.type === 'nodeOrTag') {\n        param.type = 'node_or_tag';\n        param.options = ['name', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n      } else if (rawParam.type === 'intOrInterval') {\n        param.type = 'int_or_interval';\n      } else if (rawParam.type === 'seriesList') {\n        param.type = 'value_or_series';\n      } else if (rawParam.type === 'intOrInf') {\n        param.type = 'int_or_infinity';\n      }\n\n      if (rawParam.options) {\n        param.options = map(rawParam.options, toString);\n      } else if (rawParam.suggestions) {\n        param.options = map(rawParam.suggestions, toString);\n      }\n\n      func.params.push(param);\n    });\n\n    funcDefs[funcName] = func;\n  });\n\n  return funcDefs;\n}\n\nexport default {\n  createFuncInstance: createFuncInstance,\n  getFuncDef: getFuncDef,\n  getFuncDefs: getFuncDefs,\n  parseFuncDefs: parseFuncDefs,\n};\n","import { DataQuery, DataSourceJsonData } from '@grafana/data';\n\nexport interface GraphiteQuery extends DataQuery {\n  target?: string;\n}\n\nexport interface GraphiteOptions extends DataSourceJsonData {\n  graphiteVersion: string;\n  graphiteType: GraphiteType;\n  rollupIndicatorEnabled?: boolean;\n  importConfiguration: GraphiteQueryImportConfiguration;\n}\n\nexport enum GraphiteType {\n  Default = 'default',\n  Metrictank = 'metrictank',\n}\n\nexport interface MetricTankRequestMeta {\n  [key: string]: any;\n}\n\nexport interface MetricTankSeriesMeta {\n  'schema-name': string;\n  'schema-retentions': string; //\"1s:35d:20min:5:1542274085,1min:38d:2h:1:true,10min:120d:6h:1:true,2h:2y:6h:2\",\n  'archive-read': number;\n  'archive-interval': number;\n  'aggnum-norm': number;\n  'consolidator-normfetch': string; //\"MaximumConsolidator\",\n  'aggnum-rc': number;\n  'consolidator-rc': string; //\"MaximumConsolidator\",\n  count: number;\n}\n\nexport interface MetricTankMeta {\n  request: MetricTankRequestMeta;\n  info: MetricTankSeriesMeta[];\n}\n\nexport type GraphiteQueryImportConfiguration = {\n  loki: GraphiteToLokiQueryImportConfiguration;\n};\n\nexport type GraphiteToLokiQueryImportConfiguration = {\n  mappings: GraphiteLokiMapping[];\n};\n\nexport type GraphiteLokiMapping = {\n  matchers: GraphiteMetricLokiMatcher[];\n};\n\nexport type GraphiteMetricLokiMatcher = {\n  value: string;\n  labelName?: string;\n};\n","import { MetricTankSeriesMeta } from './types';\nimport { QueryResultMetaNotice } from '@grafana/data';\n\n// https://github.com/grafana/metrictank/blob/master/scripts/config/storage-schemas.conf#L15-L46\n\nexport interface RetentionInfo {\n  interval: string;\n  retention?: string;\n  chunkspan?: string;\n  numchunks?: number;\n  ready?: boolean | number; // whether, or as of what data timestamp, the archive is ready for querying.\n}\n\nfunction toInteger(val?: string): number | undefined {\n  if (val) {\n    return parseInt(val, 10);\n  }\n  return undefined;\n}\n\nfunction toBooleanOrTimestamp(val?: string): number | boolean | undefined {\n  if (val) {\n    if (val === 'true') {\n      return true;\n    }\n    if (val === 'false') {\n      return false;\n    }\n    return parseInt(val, 10);\n  }\n  return undefined;\n}\n\nexport function getRollupNotice(metaList: MetricTankSeriesMeta[]): QueryResultMetaNotice | null {\n  for (const meta of metaList) {\n    const archiveIndex = meta['archive-read'];\n\n    if (archiveIndex > 0) {\n      const schema = parseSchemaRetentions(meta['schema-retentions']);\n      const intervalString = schema[archiveIndex].interval;\n      const func = (meta['consolidator-normfetch'] ?? '').replace('Consolidator', '');\n\n      return {\n        text: `Data is rolled up, aggregated over ${intervalString} using ${func} function`,\n        severity: 'info',\n        inspect: 'meta',\n      };\n    }\n  }\n\n  return null;\n}\n\nexport function getRuntimeConsolidationNotice(metaList: MetricTankSeriesMeta[]): QueryResultMetaNotice | null {\n  for (const meta of metaList) {\n    const runtimeNr = meta['aggnum-rc'];\n\n    if (runtimeNr > 0) {\n      const func = (meta['consolidator-rc'] ?? '').replace('Consolidator', '');\n\n      return {\n        text: `Data is runtime consolidated, ${runtimeNr} datapoints combined using ${func} function`,\n        severity: 'info',\n        inspect: 'meta',\n      };\n    }\n  }\n\n  return null;\n}\n\nexport function parseSchemaRetentions(spec: string): RetentionInfo[] {\n  if (!spec) {\n    return [];\n  }\n  return spec.split(',').map((str) => {\n    const vals = str.split(':');\n    return {\n      interval: vals[0],\n      retention: vals[1],\n      chunkspan: vals[2],\n      numchunks: toInteger(vals[3]),\n      ready: toBooleanOrTimestamp(vals[4]),\n    };\n  });\n}\n","import { last } from 'lodash';\n\nexport const GRAPHITE_VERSIONS = ['0.9', '1.0', '1.1'];\n\nexport const DEFAULT_GRAPHITE_VERSION = last(GRAPHITE_VERSIONS)!;\n","import { each, indexOf, isArray, isString, map as _map } from 'lodash';\nimport {\n  DataFrame,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  dateMath,\n  QueryResultMetaStat,\n  ScopedVars,\n  toDataFrame,\n  TimeRange,\n  MetricFindValue,\n} from '@grafana/data';\nimport { isVersionGtOrEq, SemVersion } from 'app/core/utils/version';\nimport gfunc from './gfunc';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { getTemplateSrv, TemplateSrv } from 'app/features/templating/template_srv';\n// Types\nimport {\n  GraphiteOptions,\n  GraphiteQuery,\n  GraphiteQueryImportConfiguration,\n  GraphiteType,\n  GraphiteLokiMapping,\n  MetricTankRequestMeta,\n} from './types';\nimport { getRollupNotice, getRuntimeConsolidationNotice } from 'app/plugins/datasource/graphite/meta';\nimport { getSearchFilterScopedVar } from '../../../features/variables/utils';\nimport { Observable, of, OperatorFunction, pipe, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { DEFAULT_GRAPHITE_VERSION } from './versions';\nimport { reduceError } from './utils';\n\nexport class GraphiteDatasource extends DataSourceApi<\n  GraphiteQuery,\n  GraphiteOptions,\n  GraphiteQueryImportConfiguration\n> {\n  basicAuth: string;\n  url: string;\n  name: string;\n  graphiteVersion: any;\n  supportsTags: boolean;\n  isMetricTank: boolean;\n  rollupIndicatorEnabled: boolean;\n  cacheTimeout: any;\n  withCredentials: boolean;\n  funcDefs: any = null;\n  funcDefsPromise: Promise<any> | null = null;\n  _seriesRefLetters: string;\n  private readonly metricMappings: GraphiteLokiMapping[];\n\n  constructor(instanceSettings: any, private readonly templateSrv: TemplateSrv = getTemplateSrv()) {\n    super(instanceSettings);\n    this.basicAuth = instanceSettings.basicAuth;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    // graphiteVersion is set when a datasource is created but it hadn't been set in the past so we're\n    // still falling back to the default behavior here for backwards compatibility (see also #17429)\n    this.graphiteVersion = instanceSettings.jsonData.graphiteVersion || DEFAULT_GRAPHITE_VERSION;\n    this.metricMappings = instanceSettings.jsonData.importConfiguration?.loki?.mappings || [];\n    this.isMetricTank = instanceSettings.jsonData.graphiteType === GraphiteType.Metrictank;\n    this.supportsTags = supportsTags(this.graphiteVersion);\n    this.cacheTimeout = instanceSettings.cacheTimeout;\n    this.rollupIndicatorEnabled = instanceSettings.jsonData.rollupIndicatorEnabled;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.funcDefs = null;\n    this.funcDefsPromise = null;\n    this._seriesRefLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  }\n\n  getQueryOptionsInfo() {\n    return {\n      maxDataPoints: true,\n      cacheTimeout: true,\n      links: [\n        {\n          text: 'Help',\n          url: 'http://docs.grafana.org/features/datasources/graphite/#using-graphite-in-grafana',\n        },\n      ],\n    };\n  }\n\n  getImportQueryConfiguration(): GraphiteQueryImportConfiguration {\n    return {\n      loki: {\n        mappings: this.metricMappings,\n      },\n    };\n  }\n\n  query(options: DataQueryRequest<GraphiteQuery>): Observable<DataQueryResponse> {\n    const graphOptions = {\n      from: this.translateTime(options.range.raw.from, false, options.timezone),\n      until: this.translateTime(options.range.raw.to, true, options.timezone),\n      targets: options.targets,\n      format: (options as any).format,\n      cacheTimeout: options.cacheTimeout || this.cacheTimeout,\n      maxDataPoints: options.maxDataPoints,\n    };\n\n    const params = this.buildGraphiteParams(graphOptions, options.scopedVars);\n    if (params.length === 0) {\n      return of({ data: [] });\n    }\n\n    if (this.isMetricTank) {\n      params.push('meta=true');\n    }\n\n    const httpOptions: any = {\n      method: 'POST',\n      url: '/render',\n      data: params.join('&'),\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    };\n\n    this.addTracingHeaders(httpOptions, options);\n\n    if (options.panelId) {\n      httpOptions.requestId = this.name + '.panelId.' + options.panelId;\n    }\n\n    return this.doGraphiteRequest(httpOptions).pipe(map(this.convertResponseToDataFrames));\n  }\n\n  addTracingHeaders(httpOptions: { headers: any }, options: { dashboardId?: number; panelId?: number }) {\n    const proxyMode = !this.url.match(/^http/);\n    if (proxyMode) {\n      if (options.dashboardId) {\n        httpOptions.headers['X-Dashboard-Id'] = options.dashboardId;\n      }\n      if (options.panelId) {\n        httpOptions.headers['X-Panel-Id'] = options.panelId;\n      }\n    }\n  }\n\n  convertResponseToDataFrames = (result: any): DataQueryResponse => {\n    const data: DataFrame[] = [];\n    if (!result || !result.data) {\n      return { data };\n    }\n\n    // Series are either at the root or under a node called 'series'\n    const series = result.data.series || result.data;\n\n    if (!isArray(series)) {\n      throw { message: 'Missing series in result', data: result };\n    }\n\n    for (let i = 0; i < series.length; i++) {\n      const s = series[i];\n\n      // Disables Grafana own series naming\n      s.title = s.target;\n\n      for (let y = 0; y < s.datapoints.length; y++) {\n        s.datapoints[y][1] *= 1000;\n      }\n\n      const frame = toDataFrame(s);\n\n      // Metrictank metadata\n      if (s.meta) {\n        frame.meta = {\n          custom: {\n            requestMetaList: result.data.meta, // info for the whole request\n            seriesMetaList: s.meta, // Array of metadata\n          },\n        };\n\n        if (this.rollupIndicatorEnabled) {\n          const rollupNotice = getRollupNotice(s.meta);\n          const runtimeNotice = getRuntimeConsolidationNotice(s.meta);\n\n          if (rollupNotice) {\n            frame.meta.notices = [rollupNotice];\n          } else if (runtimeNotice) {\n            frame.meta.notices = [runtimeNotice];\n          }\n        }\n\n        // only add the request stats to the first frame\n        if (i === 0 && result.data.meta.stats) {\n          frame.meta.stats = this.getRequestStats(result.data.meta);\n        }\n      }\n\n      data.push(frame);\n    }\n\n    return { data };\n  };\n\n  getRequestStats(meta: MetricTankRequestMeta): QueryResultMetaStat[] {\n    const stats: QueryResultMetaStat[] = [];\n\n    for (const key in meta.stats) {\n      let unit: string | undefined = undefined;\n\n      if (key.endsWith('.ms')) {\n        unit = 'ms';\n      }\n\n      stats.push({ displayName: key, value: meta.stats[key], unit });\n    }\n\n    return stats;\n  }\n\n  parseTags(tagString: string) {\n    let tags: string[] = [];\n    tags = tagString.split(',');\n    if (tags.length === 1) {\n      tags = tagString.split(' ');\n      if (tags[0] === '') {\n        tags = [];\n      }\n    }\n    return tags;\n  }\n\n  interpolateVariablesInQueries(queries: GraphiteQuery[], scopedVars: ScopedVars): GraphiteQuery[] {\n    let expandedQueries = queries;\n    if (queries && queries.length > 0) {\n      expandedQueries = queries.map((query) => {\n        const expandedQuery = {\n          ...query,\n          datasource: this.name,\n          target: this.templateSrv.replace(query.target ?? '', scopedVars),\n        };\n        return expandedQuery;\n      });\n    }\n    return expandedQueries;\n  }\n\n  annotationQuery(options: any) {\n    // Graphite metric as annotation\n    if (options.annotation.target) {\n      const target = this.templateSrv.replace(options.annotation.target, {}, 'glob');\n      const graphiteQuery = ({\n        range: options.range,\n        targets: [{ target: target }],\n        format: 'json',\n        maxDataPoints: 100,\n      } as unknown) as DataQueryRequest<GraphiteQuery>;\n\n      return this.query(graphiteQuery)\n        .pipe(\n          map((result: any) => {\n            const list = [];\n\n            for (let i = 0; i < result.data.length; i++) {\n              const target = result.data[i];\n\n              for (let y = 0; y < target.length; y++) {\n                const time = target.fields[0].values.get(y);\n                const value = target.fields[1].values.get(y);\n\n                if (!value) {\n                  continue;\n                }\n\n                list.push({\n                  annotation: options.annotation,\n                  time,\n                  title: target.name,\n                });\n              }\n            }\n\n            return list;\n          })\n        )\n        .toPromise();\n    } else {\n      // Graphite event as annotation\n      const tags = this.templateSrv.replace(options.annotation.tags);\n      return this.events({ range: options.range, tags: tags }).then((results: any) => {\n        const list = [];\n        if (!isArray(results.data)) {\n          console.error(`Unable to get annotations from ${results.url}.`);\n          return [];\n        }\n        for (let i = 0; i < results.data.length; i++) {\n          const e = results.data[i];\n\n          let tags = e.tags;\n          if (isString(e.tags)) {\n            tags = this.parseTags(e.tags);\n          }\n\n          list.push({\n            annotation: options.annotation,\n            time: e.when * 1000,\n            title: e.what,\n            tags: tags,\n            text: e.data,\n          });\n        }\n\n        return list;\n      });\n    }\n  }\n\n  events(options: { range: TimeRange; tags: any; timezone?: any }) {\n    try {\n      let tags = '';\n      if (options.tags) {\n        tags = '&tags=' + options.tags;\n      }\n      return this.doGraphiteRequest({\n        method: 'GET',\n        url:\n          '/events/get_data?from=' +\n          this.translateTime(options.range.raw.from, false, options.timezone) +\n          '&until=' +\n          this.translateTime(options.range.raw.to, true, options.timezone) +\n          tags,\n      }).toPromise();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n\n  targetContainsTemplate(target: GraphiteQuery) {\n    return this.templateSrv.variableExists(target.target ?? '');\n  }\n\n  translateTime(date: any, roundUp: any, timezone: any) {\n    if (isString(date)) {\n      if (date === 'now') {\n        return 'now';\n      } else if (date.indexOf('now-') >= 0 && date.indexOf('/') === -1) {\n        date = date.substring(3);\n        date = date.replace('m', 'min');\n        date = date.replace('M', 'mon');\n        return date;\n      }\n      date = dateMath.parse(date, roundUp, timezone);\n    }\n\n    // graphite' s from filter is exclusive\n    // here we step back one minute in order\n    // to guarantee that we get all the data that\n    // exists for the specified range\n    if (roundUp) {\n      if (date.get('s')) {\n        date.add(1, 's');\n      }\n    } else if (roundUp === false) {\n      if (date.get('s')) {\n        date.subtract(1, 's');\n      }\n    }\n\n    return date.unix();\n  }\n\n  metricFindQuery(query: string, optionalOptions?: any): Promise<MetricFindValue[]> {\n    const options: any = optionalOptions || {};\n\n    // First attempt to check for tag-related functions (using empty wildcard for interpolation)\n    let interpolatedQuery = this.templateSrv.replace(\n      query,\n      getSearchFilterScopedVar({ query, wildcardChar: '', options: optionalOptions })\n    );\n\n    // special handling for tag_values(<tag>[,<expression>]*), this is used for template variables\n    let allParams = interpolatedQuery.match(/^tag_values\\((.*)\\)$/);\n    let expressions = allParams ? allParams[1].split(',').filter((p) => !!p) : undefined;\n    if (expressions) {\n      options.limit = 10000;\n      return this.getTagValuesAutoComplete(expressions.slice(1), expressions[0], undefined, options);\n    }\n\n    // special handling for tags(<expression>[,<expression>]*), this is used for template variables\n    allParams = interpolatedQuery.match(/^tags\\((.*)\\)$/);\n    expressions = allParams ? allParams[1].split(',').filter((p) => !!p) : undefined;\n    if (expressions) {\n      options.limit = 10000;\n      return this.getTagsAutoComplete(expressions, undefined, options);\n    }\n\n    // If no tag-related query was found, perform metric-based search (using * as the wildcard for interpolation)\n    let useExpand = query.match(/^expand\\((.*)\\)$/);\n    query = useExpand ? useExpand[1] : query;\n\n    interpolatedQuery = this.templateSrv.replace(\n      query,\n      getSearchFilterScopedVar({ query, wildcardChar: '*', options: optionalOptions })\n    );\n\n    let range;\n    if (options.range) {\n      range = {\n        from: this.translateTime(options.range.from, false, options.timezone),\n        until: this.translateTime(options.range.to, true, options.timezone),\n      };\n    }\n\n    if (useExpand) {\n      return this.requestMetricExpand(interpolatedQuery, options.requestId, range);\n    } else {\n      return this.requestMetricFind(interpolatedQuery, options.requestId, range);\n    }\n  }\n\n  /**\n   * Search for metrics matching giving pattern using /metrics/find endpoint. It will\n   * return all possible values at the last level of the query, for example:\n   *\n   * metrics: prod.servers.001.cpu, prod.servers.002.cpu\n   * query: *.servers.*\n   * result: 001, 002\n   *\n   * For more complex searches use requestMetricExpand\n   */\n  private requestMetricFind(\n    query: string,\n    requestId: string,\n    range?: { from: any; until: any }\n  ): Promise<MetricFindValue[]> {\n    const httpOptions: any = {\n      method: 'POST',\n      url: '/metrics/find',\n      params: {},\n      data: `query=${query}`,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      // for cancellations\n      requestId: requestId,\n    };\n\n    if (range) {\n      httpOptions.params.from = range.from;\n      httpOptions.params.until = range.until;\n    }\n\n    return this.doGraphiteRequest(httpOptions)\n      .pipe(\n        map((results: any) => {\n          return _map(results.data, (metric) => {\n            return {\n              text: metric.text,\n              expandable: metric.expandable ? true : false,\n            };\n          });\n        })\n      )\n      .toPromise();\n  }\n\n  /**\n   * Search for metrics matching giving pattern using /metrics/expand endpoint.\n   * The result will contain all metrics (with full name) matching provided query.\n   * It's a more flexible version of /metrics/find endpoint (@see requestMetricFind)\n   */\n  private requestMetricExpand(\n    query: string,\n    requestId: string,\n    range?: { from: any; until: any }\n  ): Promise<MetricFindValue[]> {\n    const httpOptions: any = {\n      method: 'GET',\n      url: '/metrics/expand',\n      params: { query },\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      // for cancellations\n      requestId,\n    };\n\n    if (range) {\n      httpOptions.params.from = range.from;\n      httpOptions.params.until = range.until;\n    }\n\n    return this.doGraphiteRequest(httpOptions)\n      .pipe(\n        map((results: any) => {\n          return _map(results.data.results, (metric) => {\n            return {\n              text: metric,\n              expandable: false,\n            };\n          });\n        })\n      )\n      .toPromise();\n  }\n\n  getTags(optionalOptions: any) {\n    const options = optionalOptions || {};\n\n    const httpOptions: any = {\n      method: 'GET',\n      url: '/tags',\n      // for cancellations\n      requestId: options.requestId,\n    };\n\n    if (options.range) {\n      httpOptions.params.from = this.translateTime(options.range.from, false, options.timezone);\n      httpOptions.params.until = this.translateTime(options.range.to, true, options.timezone);\n    }\n\n    return this.doGraphiteRequest(httpOptions)\n      .pipe(\n        map((results: any) => {\n          return _map(results.data, (tag) => {\n            return {\n              text: tag.tag,\n              id: tag.id,\n            };\n          });\n        })\n      )\n      .toPromise();\n  }\n\n  getTagValues(options: any = {}) {\n    const httpOptions: any = {\n      method: 'GET',\n      url: '/tags/' + this.templateSrv.replace(options.key),\n      // for cancellations\n      requestId: options.requestId,\n    };\n\n    if (options.range) {\n      httpOptions.params.from = this.translateTime(options.range.from, false, options.timezone);\n      httpOptions.params.until = this.translateTime(options.range.to, true, options.timezone);\n    }\n\n    return this.doGraphiteRequest(httpOptions)\n      .pipe(\n        map((results: any) => {\n          if (results.data && results.data.values) {\n            return _map(results.data.values, (value) => {\n              return {\n                text: value.value,\n                id: value.id,\n              };\n            });\n          } else {\n            return [];\n          }\n        })\n      )\n      .toPromise();\n  }\n\n  getTagsAutoComplete(expressions: any[], tagPrefix: any, optionalOptions?: any) {\n    const options = optionalOptions || {};\n\n    const httpOptions: any = {\n      method: 'GET',\n      url: '/tags/autoComplete/tags',\n      params: {\n        expr: _map(expressions, (expression) => this.templateSrv.replace((expression || '').trim())),\n      },\n      // for cancellations\n      requestId: options.requestId,\n    };\n\n    if (tagPrefix) {\n      httpOptions.params.tagPrefix = tagPrefix;\n    }\n    if (options.limit) {\n      httpOptions.params.limit = options.limit;\n    }\n    if (options.range) {\n      httpOptions.params.from = this.translateTime(options.range.from, false, options.timezone);\n      httpOptions.params.until = this.translateTime(options.range.to, true, options.timezone);\n    }\n    return this.doGraphiteRequest(httpOptions).pipe(mapToTags()).toPromise();\n  }\n\n  getTagValuesAutoComplete(expressions: any[], tag: any, valuePrefix: any, optionalOptions: any) {\n    const options = optionalOptions || {};\n\n    const httpOptions: any = {\n      method: 'GET',\n      url: '/tags/autoComplete/values',\n      params: {\n        expr: _map(expressions, (expression) => this.templateSrv.replace((expression || '').trim())),\n        tag: this.templateSrv.replace((tag || '').trim()),\n      },\n      // for cancellations\n      requestId: options.requestId,\n    };\n\n    if (valuePrefix) {\n      httpOptions.params.valuePrefix = valuePrefix;\n    }\n    if (options.limit) {\n      httpOptions.params.limit = options.limit;\n    }\n    if (options.range) {\n      httpOptions.params.from = this.translateTime(options.range.from, false, options.timezone);\n      httpOptions.params.until = this.translateTime(options.range.to, true, options.timezone);\n    }\n    return this.doGraphiteRequest(httpOptions).pipe(mapToTags()).toPromise();\n  }\n\n  getVersion(optionalOptions: any) {\n    const options = optionalOptions || {};\n\n    const httpOptions = {\n      method: 'GET',\n      url: '/version',\n      requestId: options.requestId,\n    };\n\n    return this.doGraphiteRequest(httpOptions)\n      .pipe(\n        map((results: any) => {\n          if (results.data) {\n            const semver = new SemVersion(results.data);\n            return semver.isValid() ? results.data : '';\n          }\n          return '';\n        }),\n        catchError(() => {\n          return of('');\n        })\n      )\n      .toPromise();\n  }\n\n  createFuncInstance(funcDef: any, options?: any) {\n    return gfunc.createFuncInstance(funcDef, options, this.funcDefs);\n  }\n\n  getFuncDef(name: string) {\n    return gfunc.getFuncDef(name, this.funcDefs);\n  }\n\n  waitForFuncDefsLoaded() {\n    return this.getFuncDefs();\n  }\n\n  getFuncDefs() {\n    if (this.funcDefsPromise !== null) {\n      return this.funcDefsPromise;\n    }\n\n    if (!supportsFunctionIndex(this.graphiteVersion)) {\n      this.funcDefs = gfunc.getFuncDefs(this.graphiteVersion);\n      this.funcDefsPromise = Promise.resolve(this.funcDefs);\n      return this.funcDefsPromise;\n    }\n\n    const httpOptions = {\n      method: 'GET',\n      url: '/functions',\n    };\n\n    return this.doGraphiteRequest(httpOptions)\n      .pipe(\n        map((results: any) => {\n          if (results.status !== 200 || typeof results.data !== 'object') {\n            if (typeof results.data === 'string') {\n              // Fix for a Graphite bug: https://github.com/graphite-project/graphite-web/issues/2609\n              // There is a fix for it https://github.com/graphite-project/graphite-web/pull/2612 but\n              // it was merged to master in July 2020 but it has never been released (the last Graphite\n              // release was 1.1.7 - March 2020). The bug was introduced in Graphite 1.1.7, in versions\n              // 1.1.0 - 1.1.6 /functions endpoint returns a valid JSON\n              const fixedData = JSON.parse(results.data.replace(/\"default\": ?Infinity/g, '\"default\": 1e9999'));\n              this.funcDefs = gfunc.parseFuncDefs(fixedData);\n            } else {\n              this.funcDefs = gfunc.getFuncDefs(this.graphiteVersion);\n            }\n          } else {\n            this.funcDefs = gfunc.parseFuncDefs(results.data);\n          }\n          return this.funcDefs;\n        }),\n        catchError((error: any) => {\n          console.error('Fetching graphite functions error', error);\n          this.funcDefs = gfunc.getFuncDefs(this.graphiteVersion);\n          return of(this.funcDefs);\n        })\n      )\n      .toPromise();\n  }\n\n  testDatasource() {\n    const query = ({\n      panelId: 3,\n      rangeRaw: { from: 'now-1h', to: 'now' },\n      range: {\n        raw: { from: 'now-1h', to: 'now' },\n      },\n      targets: [{ target: 'constantLine(100)' }],\n      maxDataPoints: 300,\n    } as unknown) as DataQueryRequest<GraphiteQuery>;\n\n    return this.query(query)\n      .toPromise()\n      .then(() => ({ status: 'success', message: 'Data source is working' }));\n  }\n\n  doGraphiteRequest(options: {\n    method?: string;\n    url: any;\n    requestId?: any;\n    withCredentials?: any;\n    headers?: any;\n    inspect?: any;\n  }) {\n    if (this.basicAuth || this.withCredentials) {\n      options.withCredentials = true;\n    }\n    if (this.basicAuth) {\n      options.headers = options.headers || {};\n      options.headers.Authorization = this.basicAuth;\n    }\n\n    options.url = this.url + options.url;\n    options.inspect = { type: 'graphite' };\n\n    return getBackendSrv()\n      .fetch(options)\n      .pipe(\n        catchError((err: any) => {\n          return throwError(reduceError(err));\n        })\n      );\n  }\n\n  buildGraphiteParams(options: any, scopedVars?: ScopedVars): string[] {\n    const graphiteOptions = ['from', 'until', 'rawData', 'format', 'maxDataPoints', 'cacheTimeout'];\n    const cleanOptions = [],\n      targets: any = {};\n    let target, targetValue, i;\n    const regex = /\\#([A-Z])/g;\n    const intervalFormatFixRegex = /'(\\d+)m'/gi;\n    let hasTargets = false;\n\n    options['format'] = 'json';\n\n    function fixIntervalFormat(match: any) {\n      return match.replace('m', 'min').replace('M', 'mon');\n    }\n\n    for (i = 0; i < options.targets.length; i++) {\n      target = options.targets[i];\n      if (!target.target) {\n        continue;\n      }\n\n      if (!target.refId) {\n        target.refId = this._seriesRefLetters[i];\n      }\n\n      targetValue = this.templateSrv.replace(target.target, scopedVars);\n      targetValue = targetValue.replace(intervalFormatFixRegex, fixIntervalFormat);\n      targets[target.refId] = targetValue;\n    }\n\n    function nestedSeriesRegexReplacer(match: any, g1: string | number) {\n      return targets[g1] || match;\n    }\n\n    for (i = 0; i < options.targets.length; i++) {\n      target = options.targets[i];\n      if (!target.target) {\n        continue;\n      }\n\n      targetValue = targets[target.refId];\n      targetValue = targetValue.replace(regex, nestedSeriesRegexReplacer);\n      targets[target.refId] = targetValue;\n\n      if (!target.hide) {\n        hasTargets = true;\n        cleanOptions.push('target=' + encodeURIComponent(targetValue));\n      }\n    }\n\n    each(options, (value, key) => {\n      if (indexOf(graphiteOptions, key) === -1) {\n        return;\n      }\n      if (value) {\n        cleanOptions.push(key + '=' + encodeURIComponent(value));\n      }\n    });\n\n    if (!hasTargets) {\n      return [];\n    }\n\n    return cleanOptions;\n  }\n}\n\nfunction supportsTags(version: string): boolean {\n  return isVersionGtOrEq(version, '1.1');\n}\n\nfunction supportsFunctionIndex(version: string): boolean {\n  return isVersionGtOrEq(version, '1.1');\n}\n\nfunction mapToTags(): OperatorFunction<any, Array<{ text: string }>> {\n  return pipe(\n    map((results: any) => {\n      if (results.data) {\n        return _map(results.data, (value) => {\n          return { text: value };\n        });\n      } else {\n        return [];\n      }\n    })\n  );\n}\n","import { last } from 'lodash';\n\n/**\n * Graphite-web before v1.6 returns HTTP 500 with full stack traces in an HTML page\n * when a query fails. It results in massive error alerts with HTML tags in the UI.\n * This function removes all HTML tags and keeps only the last line from the stack\n * trace which should be the most meaningful.\n */\nexport function reduceError(error: any): any {\n  if (error && error.status === 500 && error.data?.message?.startsWith('<body')) {\n    // Remove all HTML tags and take the last line from the stack trace\n    const newMessage = last<string>(\n      error.data.message\n        .replace(/(<([^>]+)>)/gi, '')\n        .trim()\n        .split(/\\n/)\n    )!.replace(/u?&#[^;]+;/g, '');\n    error.data.message = `Graphite encountered an unexpected error while handling your request. ${newMessage}`;\n  }\n  return error;\n}\n","import { map, find, forEach, sortBy } from 'lodash';\nimport $ from 'jquery';\n// @ts-ignore\nimport Drop from 'tether-drop';\nimport coreModule from 'app/core/core_module';\nimport { FuncDef } from './gfunc';\n\n/** @ngInject */\nexport function graphiteAddFunc($compile: any) {\n  const inputTemplate =\n    '<input type=\"text\"' + ' class=\"gf-form-input\"' + ' spellcheck=\"false\" style=\"display:none\"></input>';\n\n  const buttonTemplate =\n    '<a class=\"gf-form-label dropdown-toggle\"' +\n    ' tabindex=\"1\" gf-dropdown=\"functionMenu\" data-toggle=\"dropdown\">' +\n    '<icon name=\"\\'plus\\'\" size=\"\\'sm\\'\"></name></a>';\n\n  return {\n    link: function ($scope: any, elem: JQuery) {\n      const ctrl = $scope.ctrl;\n\n      const $input = $(inputTemplate);\n      const $button = $(buttonTemplate);\n\n      $input.appendTo(elem);\n      $button.appendTo(elem);\n\n      ctrl.datasource.getFuncDefs().then((funcDefs: FuncDef[]) => {\n        const allFunctions = map(funcDefs, 'name').sort();\n\n        $scope.functionMenu = createFunctionDropDownMenu(funcDefs);\n\n        $input.attr('data-provide', 'typeahead');\n        $input.typeahead({\n          source: allFunctions,\n          minLength: 1,\n          items: 10,\n          updater: (value: any) => {\n            let funcDef: any = ctrl.datasource.getFuncDef(value);\n            if (!funcDef) {\n              // try find close match\n              value = value.toLowerCase();\n              funcDef = find(allFunctions, (funcName) => {\n                return funcName.toLowerCase().indexOf(value) === 0;\n              });\n\n              if (!funcDef) {\n                return '';\n              }\n            }\n\n            $scope.$apply(() => {\n              ctrl.addFunction(funcDef);\n            });\n\n            $input.trigger('blur');\n            return '';\n          },\n        });\n\n        $button.click(() => {\n          $button.hide();\n          $input.show();\n          $input.focus();\n        });\n\n        $input.keyup(() => {\n          elem.toggleClass('open', $input.val() === '');\n        });\n\n        $input.blur(() => {\n          // clicking the function dropdown menu won't\n          // work if you remove class at once\n          setTimeout(() => {\n            $input.val('');\n            $input.hide();\n            $button.show();\n            elem.removeClass('open');\n          }, 200);\n        });\n\n        $compile(elem.contents())($scope);\n      });\n\n      let drop: any;\n      const cleanUpDrop = () => {\n        if (drop) {\n          drop.destroy();\n          drop = null;\n        }\n      };\n\n      $(elem)\n        .on('mouseenter', 'ul.dropdown-menu li', async () => {\n          cleanUpDrop();\n\n          let funcDef;\n          try {\n            funcDef = ctrl.datasource.getFuncDef($('a', this).text());\n          } catch (e) {\n            // ignore\n          }\n\n          if (funcDef && funcDef.description) {\n            let shortDesc = funcDef.description;\n            if (shortDesc.length > 500) {\n              shortDesc = shortDesc.substring(0, 497) + '...';\n            }\n\n            const contentElement = document.createElement('div');\n            // @ts-ignore\n            const { default: rst2html } = await import(/* webpackChunkName: \"rst2html\" */ 'rst2html');\n            contentElement.innerHTML = '<h4>' + funcDef.name + '</h4>' + rst2html(shortDesc);\n\n            drop = new Drop({\n              target: this,\n              content: contentElement,\n              classes: 'drop-popover',\n              openOn: 'always',\n              tetherOptions: {\n                attachment: 'bottom left',\n                targetAttachment: 'bottom right',\n              },\n            });\n          }\n        })\n        .on('mouseout', 'ul.dropdown-menu li', () => {\n          cleanUpDrop();\n        });\n\n      $scope.$on('$destroy', cleanUpDrop);\n    },\n  };\n}\n\ncoreModule.directive('graphiteAddFunc', graphiteAddFunc);\n\nfunction createFunctionDropDownMenu(funcDefs: FuncDef[]) {\n  const categories: any = {};\n\n  forEach(funcDefs, (funcDef) => {\n    if (!funcDef.category) {\n      return;\n    }\n    if (!categories[funcDef.category]) {\n      categories[funcDef.category] = [];\n    }\n    categories[funcDef.category].push({\n      text: funcDef.name,\n      click: \"ctrl.addFunction('\" + funcDef.name + \"')\",\n    });\n  });\n\n  return sortBy(\n    map(categories, (submenu, category) => {\n      return {\n        text: category,\n        submenu: sortBy(submenu, 'text'),\n      };\n    }),\n    'text'\n  );\n}\n","import { assign, clone, each, last, map, partial } from 'lodash';\nimport $ from 'jquery';\nimport coreModule from 'app/core/core_module';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\n\n/** @ngInject */\nexport function graphiteFuncEditor($compile: any, templateSrv: TemplateSrv) {\n  const funcSpanTemplate = `\n    <function-editor\n      func=\"func\"\n      onRemove=\"ctrl.handleRemoveFunction\"\n      onMoveLeft=\"ctrl.handleMoveLeft\"\n      onMoveRight=\"ctrl.handleMoveRight\">\n    </function-editor>\n    <span>(</span>\n  `;\n  const paramTemplate =\n    '<input type=\"text\" style=\"display:none\"' + ' class=\"input-small tight-form-func-param\"></input>';\n\n  return {\n    restrict: 'A',\n    link: function postLink($scope: any, elem: JQuery) {\n      const $funcLink = $(funcSpanTemplate);\n      const ctrl = $scope.ctrl;\n      const func = $scope.func;\n      let scheduledRelink = false;\n      let paramCountAtLink = 0;\n      let cancelBlur: any = null;\n\n      ctrl.handleRemoveFunction = (func: any) => {\n        ctrl.removeFunction(func);\n      };\n\n      ctrl.handleMoveLeft = (func: any) => {\n        ctrl.moveFunction(func, -1);\n      };\n\n      ctrl.handleMoveRight = (func: any) => {\n        ctrl.moveFunction(func, 1);\n      };\n\n      function clickFuncParam(this: any, paramIndex: any) {\n        const $link = $(this);\n        const $comma = $link.prev('.comma');\n        const $input = $link.next();\n\n        $input.val(func.params[paramIndex]);\n\n        $comma.removeClass('query-part__last');\n        $link.hide();\n        $input.show();\n        $input.focus();\n        $input.select();\n\n        const typeahead = $input.data('typeahead');\n        if (typeahead) {\n          $input.val('');\n          typeahead.lookup();\n        }\n      }\n\n      function scheduledRelinkIfNeeded() {\n        if (paramCountAtLink === func.params.length) {\n          return;\n        }\n\n        if (!scheduledRelink) {\n          scheduledRelink = true;\n          setTimeout(() => {\n            relink();\n            scheduledRelink = false;\n          }, 200);\n        }\n      }\n\n      function paramDef(index: number) {\n        if (index < func.def.params.length) {\n          return func.def.params[index];\n        }\n        if ((last(func.def.params) as any).multiple) {\n          return assign({}, last(func.def.params), { optional: true });\n        }\n        return {};\n      }\n\n      function switchToLink(inputElem: HTMLElement, paramIndex: any) {\n        const $input = $(inputElem);\n\n        clearTimeout(cancelBlur);\n        cancelBlur = null;\n\n        const $link = $input.prev();\n        const $comma = $link.prev('.comma');\n        const newValue = $input.val() as any;\n\n        // remove optional empty params\n        if (newValue !== '' || paramDef(paramIndex).optional) {\n          func.updateParam(newValue, paramIndex);\n          $link.html(newValue ? templateSrv.highlightVariablesAsHtml(newValue) : '&nbsp;');\n        }\n\n        scheduledRelinkIfNeeded();\n\n        $scope.$apply(() => {\n          ctrl.targetChanged();\n        });\n\n        if ($link.hasClass('query-part__last') && newValue === '') {\n          $comma.addClass('query-part__last');\n        } else {\n          $link.removeClass('query-part__last');\n        }\n\n        $input.hide();\n        $link.show();\n      }\n\n      // this = input element\n      function inputBlur(this: any, paramIndex: any) {\n        const inputElem = this;\n        // happens long before the click event on the typeahead options\n        // need to have long delay because the blur\n        cancelBlur = setTimeout(() => {\n          switchToLink(inputElem, paramIndex);\n        }, 200);\n      }\n\n      function inputKeyPress(this: any, paramIndex: any, e: any) {\n        if (e.which === 13) {\n          $(this).blur();\n        }\n      }\n\n      function inputKeyDown(this: any) {\n        this.style.width = (3 + this.value.length) * 8 + 'px';\n      }\n\n      function addTypeahead($input: any, paramIndex: any) {\n        $input.attr('data-provide', 'typeahead');\n\n        let options = paramDef(paramIndex).options;\n        if (paramDef(paramIndex).type === 'int') {\n          options = map(options, (val) => {\n            return val.toString();\n          });\n        }\n\n        $input.typeahead({\n          source: options,\n          minLength: 0,\n          items: 20,\n          updater: (value: any) => {\n            $input.val(value);\n            switchToLink($input[0], paramIndex);\n            return value;\n          },\n        });\n\n        const typeahead = $input.data('typeahead');\n        typeahead.lookup = function () {\n          this.query = this.$element.val() || '';\n          return this.process(this.source);\n        };\n      }\n\n      function addElementsAndCompile() {\n        $funcLink.appendTo(elem);\n\n        if (func.def.unknown) {\n          elem.addClass('unknown-function');\n        }\n\n        const defParams: any = clone(func.def.params);\n        const lastParam: any = last(func.def.params);\n\n        while (func.params.length >= defParams.length && lastParam && lastParam.multiple) {\n          defParams.push(assign({}, lastParam, { optional: true }));\n        }\n\n        each(defParams, (param: any, index: number) => {\n          if (param.optional && func.params.length < index) {\n            return false;\n          }\n\n          let paramValue = templateSrv.highlightVariablesAsHtml(func.params[index]);\n          const hasValue = paramValue !== null && paramValue !== undefined && paramValue !== '';\n          const last = index >= func.params.length - 1 && param.optional && !hasValue;\n          let linkClass = 'query-part__link';\n\n          if (last) {\n            linkClass += ' query-part__last';\n          }\n\n          if (last && param.multiple) {\n            paramValue = '+';\n          } else if (!hasValue) {\n            // for params with no value default to param name\n            paramValue = param.name;\n            linkClass += ' query-part__link--no-value';\n          }\n\n          if (index > 0) {\n            $('<span class=\"comma' + (last ? ' query-part__last' : '') + '\">, </span>').appendTo(elem);\n          }\n\n          const $paramLink = $(`<a ng-click=\"\" class=\"${linkClass}\">${paramValue}</a>`);\n          const $input = $(paramTemplate);\n          $input.attr('placeholder', param.name);\n\n          paramCountAtLink++;\n\n          $paramLink.appendTo(elem);\n          $input.appendTo(elem);\n\n          $input.blur(partial(inputBlur, index));\n          $input.keyup(inputKeyDown);\n          $input.keypress(partial(inputKeyPress, index));\n          $paramLink.click(partial(clickFuncParam, index));\n\n          if (param.options) {\n            addTypeahead($input, index);\n          }\n\n          return true;\n        });\n\n        $('<span>)</span>').appendTo(elem);\n\n        $compile(elem.contents())($scope);\n      }\n\n      function ifJustAddedFocusFirstParam() {\n        if ($scope.func.added) {\n          $scope.func.added = false;\n          setTimeout(() => {\n            elem.find('.query-part__link').first().click();\n          }, 10);\n        }\n      }\n\n      function relink() {\n        elem.children().remove();\n        addElementsAndCompile();\n        ifJustAddedFocusFirstParam();\n      }\n\n      relink();\n    },\n  };\n}\n\ncoreModule.directive('graphiteFuncEditor', graphiteFuncEditor);\n","import './add_graphite_func';\nimport './func_editor';\n\nimport { each, eachRight, map, remove } from 'lodash';\nimport GraphiteQuery, { GraphiteTagOperator } from './graphite_query';\nimport { QueryCtrl } from 'app/plugins/sdk';\nimport { promiseToDigest } from 'app/core/utils/promiseToDigest';\nimport { auto } from 'angular';\nimport { TemplateSrv } from '@grafana/runtime';\nimport { dispatch } from 'app/store/store';\nimport { notifyApp } from 'app/core/actions';\nimport { createErrorNotification } from 'app/core/copy/appNotification';\n\nconst GRAPHITE_TAG_OPERATORS = ['=', '!=', '=~', '!=~'];\nconst TAG_PREFIX = 'tag: ';\n\nexport class GraphiteQueryCtrl extends QueryCtrl {\n  static templateUrl = 'partials/query.editor.html';\n\n  queryModel: GraphiteQuery;\n  segments: any[] = [];\n  addTagSegments: any[] = [];\n  removeTagValue: string;\n  supportsTags = false;\n  paused = false;\n\n  // to avoid error flooding, these errors are shown only once per session\n  private _tagsAutoCompleteErrorShown = false;\n  private _metricAutoCompleteErrorShown = false;\n\n  /** @ngInject */\n  constructor(\n    $scope: any,\n    $injector: auto.IInjectorService,\n    private uiSegmentSrv: any,\n    private templateSrv: TemplateSrv,\n    $timeout: any\n  ) {\n    super($scope, $injector);\n    this.supportsTags = this.datasource.supportsTags;\n    this.paused = false;\n    this.target.target = this.target.target || '';\n\n    this.datasource.waitForFuncDefsLoaded().then(() => {\n      this.queryModel = new GraphiteQuery(this.datasource, this.target, templateSrv);\n      this.buildSegments(false);\n    });\n\n    this.removeTagValue = '-- remove tag --';\n  }\n\n  parseTarget() {\n    this.queryModel.parseTarget();\n    this.buildSegments();\n  }\n\n  toggleEditorMode() {\n    this.target.textEditor = !this.target.textEditor;\n    this.parseTarget();\n  }\n\n  buildSegments(modifyLastSegment = true) {\n    this.segments = map(this.queryModel.segments, (segment) => {\n      return this.uiSegmentSrv.newSegment(segment);\n    });\n\n    const checkOtherSegmentsIndex = this.queryModel.checkOtherSegmentsIndex || 0;\n\n    promiseToDigest(this.$scope)(this.checkOtherSegments(checkOtherSegmentsIndex, modifyLastSegment));\n\n    if (this.queryModel.seriesByTagUsed) {\n      this.fixTagSegments();\n    }\n  }\n\n  addSelectMetricSegment() {\n    this.queryModel.addSelectMetricSegment();\n    this.segments.push(this.uiSegmentSrv.newSelectMetric());\n  }\n\n  checkOtherSegments(fromIndex: number, modifyLastSegment = true) {\n    if (this.queryModel.segments.length === 1 && this.queryModel.segments[0].type === 'series-ref') {\n      return Promise.resolve();\n    }\n\n    if (fromIndex === 0) {\n      this.addSelectMetricSegment();\n      return Promise.resolve();\n    }\n\n    const path = this.queryModel.getSegmentPathUpTo(fromIndex + 1);\n    if (path === '') {\n      return Promise.resolve();\n    }\n\n    return this.datasource\n      .metricFindQuery(path)\n      .then((segments: any) => {\n        if (segments.length === 0) {\n          if (path !== '' && modifyLastSegment) {\n            this.queryModel.segments = this.queryModel.segments.splice(0, fromIndex);\n            this.segments = this.segments.splice(0, fromIndex);\n            this.addSelectMetricSegment();\n          }\n        } else if (segments[0].expandable) {\n          if (this.segments.length === fromIndex) {\n            this.addSelectMetricSegment();\n          } else {\n            return this.checkOtherSegments(fromIndex + 1);\n          }\n        }\n      })\n      .catch((err: any) => {\n        this.handleMetricsAutoCompleteError(err);\n      });\n  }\n\n  setSegmentFocus(segmentIndex: any) {\n    each(this.segments, (segment, index) => {\n      segment.focus = segmentIndex === index;\n    });\n  }\n\n  getAltSegments(index: number, prefix: string) {\n    let query = prefix && prefix.length > 0 ? '*' + prefix + '*' : '*';\n    if (index > 0) {\n      query = this.queryModel.getSegmentPathUpTo(index) + '.' + query;\n    }\n    const options = {\n      range: this.panelCtrl.range,\n      requestId: 'get-alt-segments',\n    };\n\n    return this.datasource\n      .metricFindQuery(query, options)\n      .then((segments: any[]) => {\n        const altSegments = map(segments, (segment) => {\n          return this.uiSegmentSrv.newSegment({\n            value: segment.text,\n            expandable: segment.expandable,\n          });\n        });\n\n        if (index > 0 && altSegments.length === 0) {\n          return altSegments;\n        }\n\n        // add query references\n        if (index === 0) {\n          eachRight(this.panelCtrl.panel.targets, (target) => {\n            if (target.refId === this.queryModel.target.refId) {\n              return;\n            }\n\n            altSegments.unshift(\n              this.uiSegmentSrv.newSegment({\n                type: 'series-ref',\n                value: '#' + target.refId,\n                expandable: false,\n              })\n            );\n          });\n        }\n\n        // add template variables\n        eachRight(this.templateSrv.getVariables(), (variable) => {\n          altSegments.unshift(\n            this.uiSegmentSrv.newSegment({\n              type: 'template',\n              value: '$' + variable.name,\n              expandable: true,\n            })\n          );\n        });\n\n        // add wildcard option\n        altSegments.unshift(this.uiSegmentSrv.newSegment('*'));\n\n        if (this.supportsTags && index === 0) {\n          this.removeTaggedEntry(altSegments);\n          return this.addAltTagSegments(prefix, altSegments);\n        } else {\n          return altSegments;\n        }\n      })\n      .catch((err: any): any[] => {\n        this.handleMetricsAutoCompleteError(err);\n        return [];\n      });\n  }\n\n  addAltTagSegments(prefix: string, altSegments: any[]) {\n    return this.getTagsAsSegments(prefix).then((tagSegments: any[]) => {\n      tagSegments = map(tagSegments, (segment) => {\n        segment.value = TAG_PREFIX + segment.value;\n        return segment;\n      });\n      return altSegments.concat(...tagSegments);\n    });\n  }\n\n  removeTaggedEntry(altSegments: any[]) {\n    altSegments = remove(altSegments, (s) => s.value === '_tagged');\n  }\n\n  segmentValueChanged(segment: { type: string; value: string; expandable: any }, segmentIndex: number) {\n    this.error = null;\n    this.queryModel.updateSegmentValue(segment, segmentIndex);\n\n    if (this.queryModel.functions.length > 0 && this.queryModel.functions[0].def.fake) {\n      this.queryModel.functions = [];\n    }\n\n    if (segment.type === 'tag') {\n      const tag = removeTagPrefix(segment.value);\n      this.pause();\n      this.addSeriesByTagFunc(tag);\n      return null;\n    }\n\n    if (segment.expandable) {\n      return promiseToDigest(this.$scope)(\n        this.checkOtherSegments(segmentIndex + 1).then(() => {\n          this.setSegmentFocus(segmentIndex + 1);\n          this.targetChanged();\n        })\n      );\n    } else {\n      this.spliceSegments(segmentIndex + 1);\n    }\n\n    this.setSegmentFocus(segmentIndex + 1);\n    this.targetChanged();\n\n    return null;\n  }\n\n  spliceSegments(index: any) {\n    this.segments = this.segments.splice(0, index);\n    this.queryModel.segments = this.queryModel.segments.splice(0, index);\n  }\n\n  emptySegments() {\n    this.queryModel.segments = [];\n    this.segments = [];\n  }\n\n  targetTextChanged() {\n    this.updateModelTarget();\n    this.refresh();\n  }\n\n  updateModelTarget() {\n    this.queryModel.updateModelTarget(this.panelCtrl.panel.targets);\n  }\n\n  targetChanged() {\n    if (this.queryModel.error) {\n      return;\n    }\n\n    const oldTarget = this.queryModel.target.target;\n    this.updateModelTarget();\n\n    if (this.queryModel.target !== oldTarget && !this.paused) {\n      this.panelCtrl.refresh();\n    }\n  }\n\n  addFunction(funcDef: any) {\n    const newFunc = this.datasource.createFuncInstance(funcDef, {\n      withDefaultParams: true,\n    });\n    newFunc.added = true;\n    this.queryModel.addFunction(newFunc);\n    this.smartlyHandleNewAliasByNode(newFunc);\n\n    if (this.segments.length === 1 && this.segments[0].fake) {\n      this.emptySegments();\n    }\n\n    if (!newFunc.params.length && newFunc.added) {\n      this.targetChanged();\n    }\n\n    if (newFunc.def.name === 'seriesByTag') {\n      this.parseTarget();\n    }\n  }\n\n  removeFunction(func: any) {\n    this.queryModel.removeFunction(func);\n    this.targetChanged();\n  }\n\n  moveFunction(func: any, offset: any) {\n    this.queryModel.moveFunction(func, offset);\n    this.targetChanged();\n  }\n\n  addSeriesByTagFunc(tag: string) {\n    const newFunc = this.datasource.createFuncInstance('seriesByTag', {\n      withDefaultParams: false,\n    });\n    const tagParam = `${tag}=`;\n    newFunc.params = [tagParam];\n    this.queryModel.addFunction(newFunc);\n    newFunc.added = true;\n\n    this.emptySegments();\n    this.targetChanged();\n    this.parseTarget();\n  }\n\n  smartlyHandleNewAliasByNode(func: { def: { name: string }; params: number[]; added: boolean }) {\n    if (func.def.name !== 'aliasByNode') {\n      return;\n    }\n\n    for (let i = 0; i < this.segments.length; i++) {\n      if (this.segments[i].value.indexOf('*') >= 0) {\n        func.params[0] = i;\n        func.added = false;\n        this.targetChanged();\n        return;\n      }\n    }\n  }\n\n  getAllTags() {\n    return this.datasource.getTags().then((values: any[]) => {\n      const altTags = map(values, 'text');\n      altTags.splice(0, 0, this.removeTagValue);\n      return mapToDropdownOptions(altTags);\n    });\n  }\n\n  getTags(index: number, tagPrefix: any) {\n    const tagExpressions = this.queryModel.renderTagExpressions(index);\n    return this.datasource\n      .getTagsAutoComplete(tagExpressions, tagPrefix)\n      .then((values: any) => {\n        const altTags = map(values, 'text');\n        altTags.splice(0, 0, this.removeTagValue);\n        return mapToDropdownOptions(altTags);\n      })\n      .catch((err: any) => {\n        this.handleTagsAutoCompleteError(err);\n      });\n  }\n\n  getTagsAsSegments(tagPrefix: string) {\n    const tagExpressions = this.queryModel.renderTagExpressions();\n    return this.datasource\n      .getTagsAutoComplete(tagExpressions, tagPrefix)\n      .then((values: any) => {\n        return map(values, (val) => {\n          return this.uiSegmentSrv.newSegment({\n            value: val.text,\n            type: 'tag',\n            expandable: false,\n          });\n        });\n      })\n      .catch((err: any) => {\n        this.handleTagsAutoCompleteError(err);\n      });\n  }\n\n  getTagOperators() {\n    return mapToDropdownOptions(GRAPHITE_TAG_OPERATORS);\n  }\n\n  getAllTagValues(tag: { key: any }) {\n    const tagKey = tag.key;\n    return this.datasource.getTagValues(tagKey).then((values: any[]) => {\n      const altValues = map(values, 'text');\n      return mapToDropdownOptions(altValues);\n    });\n  }\n\n  getTagValues(tag: { key: any }, index: number, valuePrefix: any) {\n    const tagExpressions = this.queryModel.renderTagExpressions(index);\n    const tagKey = tag.key;\n    return this.datasource.getTagValuesAutoComplete(tagExpressions, tagKey, valuePrefix).then((values: any[]) => {\n      const altValues = map(values, 'text');\n      // Add template variables as additional values\n      eachRight(this.templateSrv.getVariables(), (variable) => {\n        altValues.push('${' + variable.name + ':regex}');\n      });\n      return mapToDropdownOptions(altValues);\n    });\n  }\n\n  tagChanged(tag: any, tagIndex: any) {\n    this.queryModel.updateTag(tag, tagIndex);\n    this.targetChanged();\n  }\n\n  addNewTag(segment: { value: any }) {\n    const newTagKey = segment.value;\n    const newTag = { key: newTagKey, operator: '=' as GraphiteTagOperator, value: '' };\n    this.queryModel.addTag(newTag);\n    this.targetChanged();\n    this.fixTagSegments();\n  }\n\n  removeTag(index: any) {\n    this.queryModel.removeTag(index);\n    this.targetChanged();\n  }\n\n  fixTagSegments() {\n    // Adding tag with the same name as just removed works incorrectly if single segment is used (instead of array)\n    this.addTagSegments = [this.uiSegmentSrv.newPlusButton()];\n  }\n\n  showDelimiter(index: number) {\n    return index !== this.queryModel.tags.length - 1;\n  }\n\n  pause() {\n    this.paused = true;\n  }\n\n  unpause() {\n    this.paused = false;\n    this.panelCtrl.refresh();\n  }\n\n  getCollapsedText() {\n    return this.target.target;\n  }\n\n  private handleTagsAutoCompleteError(error: Error): void {\n    console.error(error);\n    if (!this._tagsAutoCompleteErrorShown) {\n      this._tagsAutoCompleteErrorShown = true;\n      dispatch(notifyApp(createErrorNotification(`Fetching tags failed: ${error.message}.`)));\n    }\n  }\n\n  private handleMetricsAutoCompleteError(error: Error): void {\n    console.error(error);\n    if (!this._metricAutoCompleteErrorShown) {\n      this._metricAutoCompleteErrorShown = true;\n      dispatch(notifyApp(createErrorNotification(`Fetching metrics failed: ${error.message}.`)));\n    }\n  }\n}\n\nfunction mapToDropdownOptions(results: any[]) {\n  return map(results, (value) => {\n    return { text: value, value: value };\n  });\n}\n\nfunction removeTagPrefix(value: string): string {\n  return value.replace(TAG_PREFIX, '');\n}\n","import { Alert } from '@grafana/ui';\nimport React from 'react';\n\ntype Props = {\n  onDismiss: () => void;\n};\n\nexport default function MappingsHelp(props: Props): JSX.Element {\n  return (\n    <Alert severity=\"info\" title=\"How to map Graphite metrics to labels?\" onRemove={props.onDismiss}>\n      <p>Mappings are currently supported only between Graphite and Loki queries.</p>\n      <p>\n        When you switch your data source from Graphite to Loki, your queries are mapped according to the mappings\n        defined in the example below. To define a mapping, write the full path of the metric and replace nodes you want\n        to map to label with the label name in parentheses. The value of the label is extracted from your Graphite query\n        when you switch data sources.\n      </p>\n      <p>\n        All tags are automatically mapped to labels regardless of the mapping configuration. Graphite matching patterns\n        (using &#123;&#125;) are converted to Loki&apos;s regular expressions matching patterns. When you use functions\n        in your queries, the metrics, and tags are extracted to match them with defined mappings.\n      </p>\n      <p>\n        Example: for a mapping = <code>servers.(cluster).(server).*</code>:\n      </p>\n      <table>\n        <thead>\n          <tr>\n            <th>Graphite query</th>\n            <th>Mapped to Loki query</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <code>\n                alias(servers.<u>west</u>.<u>001</u>.cpu,1,2)\n              </code>\n            </td>\n            <td>\n              <code>\n                &#123;cluster=&quot;<u>west</u>&quot;, server=&quot;<u>001</u>&quot;&#125;\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>\n                alias(servers.*.<u>&#123;001,002&#125;</u>.*,1,2)\n              </code>\n            </td>\n            <td>\n              <code>\n                &#123;server=~&quot;<u>(001|002)</u>&quot;&#125;\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>interpolate(seriesByTag(&apos;foo=bar&apos;, &apos;server=002&apos;), inf))</code>\n            </td>\n            <td>\n              <code>&#123;foo=&quot;bar&quot;, server=&quot;002&quot;&#125;</code>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </Alert>\n  );\n}\n","import React, { ChangeEvent, useState } from 'react';\nimport { Button, Icon, InlineField, InlineFieldRow, Input } from '@grafana/ui';\nimport MappingsHelp from './MappingsHelp';\n\ntype Props = {\n  mappings: string[];\n  onChange: (mappings: string[]) => void;\n  onDismiss: () => void;\n  onRestoreHelp: () => void;\n  showHelp: boolean;\n};\n\nexport const MappingsConfiguration = (props: Props): JSX.Element => {\n  const [mappings, setMappings] = useState(props.mappings || []);\n\n  return (\n    <div>\n      <h3 className=\"page-heading\">Label mappings</h3>\n      {!props.showHelp && (\n        <p>\n          <Button variant=\"link\" onClick={props.onRestoreHelp}>\n            Learn how label mappings work\n          </Button>\n        </p>\n      )}\n      {props.showHelp && <MappingsHelp onDismiss={props.onDismiss} />}\n\n      <div className=\"gf-form-group\">\n        {mappings.map((mapping, i) => (\n          <InlineFieldRow key={i}>\n            <InlineField label={`Mapping (${i + 1})`}>\n              <Input\n                width={50}\n                onChange={(changeEvent: ChangeEvent<HTMLInputElement>) => {\n                  let newMappings = mappings.concat();\n                  newMappings[i] = changeEvent.target.value;\n                  setMappings(newMappings);\n                }}\n                onBlur={() => {\n                  props.onChange(mappings);\n                }}\n                placeholder=\"e.g. test.metric.(labelName).*\"\n                value={mapping}\n              />\n            </InlineField>\n            <Button\n              type=\"button\"\n              aria-label=\"Remove header\"\n              variant=\"secondary\"\n              size=\"xs\"\n              onClick={(_) => {\n                let newMappings = mappings.concat();\n                newMappings.splice(i, 1);\n                setMappings(newMappings);\n                props.onChange(newMappings);\n              }}\n            >\n              <Icon name=\"trash-alt\" />\n            </Button>\n          </InlineFieldRow>\n        ))}\n        <Button\n          variant=\"secondary\"\n          icon=\"plus\"\n          type=\"button\"\n          onClick={() => {\n            setMappings([...mappings, '']);\n          }}\n        >\n          Add label mapping\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import { GraphiteLokiMapping } from '../types';\n\n/**\n * Converts a simple string used in LokiLogsMappings component (e.g. \"servers.(name).*\")\n * to data model saved in data source configuration.\n */\nexport function fromString(text: string): GraphiteLokiMapping {\n  return {\n    matchers: text.split('.').map((metricNode) => {\n      if (metricNode.startsWith('(') && metricNode.endsWith(')')) {\n        return {\n          value: '*',\n          labelName: metricNode.slice(1, -1),\n        };\n      } else {\n        return { value: metricNode };\n      }\n    }),\n  };\n}\n\n/**\n * Coverts configuration stored in data source configuration into a string displayed in LokiLogsMappings component.\n */\nexport function toString(mapping: GraphiteLokiMapping): string {\n  return mapping.matchers\n    .map((matcher) => {\n      return matcher.labelName ? `(${matcher.labelName})` : `${matcher.value}`;\n    })\n    .join('.');\n}\n","import React, { PureComponent } from 'react';\nimport { DataSourceHttpSettings, InlineFormLabel, LegacyForms } from '@grafana/ui';\nconst { Select, Switch } = LegacyForms;\nimport {\n  DataSourcePluginOptionsEditorProps,\n  updateDatasourcePluginJsonDataOption,\n  onUpdateDatasourceJsonDataOptionSelect,\n  onUpdateDatasourceJsonDataOptionChecked,\n} from '@grafana/data';\nimport { GraphiteOptions, GraphiteType } from '../types';\nimport { DEFAULT_GRAPHITE_VERSION, GRAPHITE_VERSIONS } from '../versions';\nimport { MappingsConfiguration } from './MappingsConfiguration';\nimport { fromString, toString } from './parseLokiLabelMappings';\nimport store from 'app/core/store';\n\nexport const SHOW_MAPPINGS_HELP_KEY = 'grafana.datasources.graphite.config.showMappingsHelp';\n\nconst graphiteVersions = GRAPHITE_VERSIONS.map((version) => ({ label: `${version}.x`, value: version }));\n\nconst graphiteTypes = Object.entries(GraphiteType).map(([label, value]) => ({\n  label,\n  value,\n}));\n\nexport type Props = DataSourcePluginOptionsEditorProps<GraphiteOptions>;\n\ntype State = {\n  showMappingsHelp: boolean;\n};\n\nexport class ConfigEditor extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      showMappingsHelp: store.getObject(SHOW_MAPPINGS_HELP_KEY, true),\n    };\n  }\n\n  renderTypeHelp = () => {\n    return (\n      <p>\n        There are different types of Graphite compatible backends. Here you can specify the type you are using. If you\n        are using{' '}\n        <a href=\"https://github.com/grafana/metrictank\" className=\"pointer\" target=\"_blank\" rel=\"noreferrer\">\n          Metrictank\n        </a>{' '}\n        then select that here. This will enable Metrictank specific features like query processing meta data. Metrictank\n        is a multi-tenant timeseries engine for Graphite and friends.\n      </p>\n    );\n  };\n\n  componentDidMount() {\n    updateDatasourcePluginJsonDataOption(this.props, 'graphiteVersion', this.currentGraphiteVersion);\n  }\n\n  render() {\n    const { options, onOptionsChange } = this.props;\n\n    const currentVersion = graphiteVersions.find((item) => item.value === this.currentGraphiteVersion);\n\n    return (\n      <>\n        <DataSourceHttpSettings\n          defaultUrl=\"http://localhost:8080\"\n          dataSourceConfig={options}\n          onChange={onOptionsChange}\n        />\n        <h3 className=\"page-heading\">Graphite details</h3>\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form\">\n              <InlineFormLabel tooltip=\"This option controls what functions are available in the Graphite query editor.\">\n                Version\n              </InlineFormLabel>\n              <Select\n                value={currentVersion}\n                options={graphiteVersions}\n                width={8}\n                onChange={onUpdateDatasourceJsonDataOptionSelect(this.props, 'graphiteVersion')}\n              />\n            </div>\n          </div>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form\">\n              <InlineFormLabel tooltip={this.renderTypeHelp}>Type</InlineFormLabel>\n              <Select\n                options={graphiteTypes}\n                value={graphiteTypes.find((type) => type.value === options.jsonData.graphiteType)}\n                width={8}\n                onChange={onUpdateDatasourceJsonDataOptionSelect(this.props, 'graphiteType')}\n              />\n            </div>\n          </div>\n          {options.jsonData.graphiteType === GraphiteType.Metrictank && (\n            <div className=\"gf-form-inline\">\n              <div className=\"gf-form\">\n                <Switch\n                  label=\"Rollup indicator\"\n                  labelClass={'width-10'}\n                  tooltip=\"Shows up as an info icon in panel headers when data is aggregated\"\n                  checked={!!options.jsonData.rollupIndicatorEnabled}\n                  onChange={onUpdateDatasourceJsonDataOptionChecked(this.props, 'rollupIndicatorEnabled')}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n        <MappingsConfiguration\n          mappings={(options.jsonData.importConfiguration?.loki?.mappings || []).map(toString)}\n          showHelp={this.state.showMappingsHelp}\n          onDismiss={() => {\n            this.setState({ showMappingsHelp: false });\n            store.setObject(SHOW_MAPPINGS_HELP_KEY, false);\n          }}\n          onRestoreHelp={() => {\n            this.setState({ showMappingsHelp: true });\n            store.setObject(SHOW_MAPPINGS_HELP_KEY, true);\n          }}\n          onChange={(mappings) => {\n            onOptionsChange({\n              ...options,\n              jsonData: {\n                ...options.jsonData,\n                importConfiguration: {\n                  ...options.jsonData.importConfiguration,\n                  loki: {\n                    mappings: mappings.map(fromString),\n                  },\n                },\n              },\n            });\n          }}\n        />\n      </>\n    );\n  }\n\n  private get currentGraphiteVersion() {\n    return this.props.options.jsonData.graphiteVersion || DEFAULT_GRAPHITE_VERSION;\n  }\n}\n","import { css, cx } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport { MetadataInspectorProps, rangeUtil } from '@grafana/data';\nimport { GraphiteDatasource } from './datasource';\nimport { GraphiteQuery, GraphiteOptions, MetricTankSeriesMeta } from './types';\nimport { parseSchemaRetentions, getRollupNotice, getRuntimeConsolidationNotice } from './meta';\nimport { stylesFactory } from '@grafana/ui';\nimport { config } from 'app/core/config';\n\nexport type Props = MetadataInspectorProps<GraphiteDatasource, GraphiteQuery, GraphiteOptions>;\n\nexport interface State {\n  index: number;\n}\n\nexport class MetricTankMetaInspector extends PureComponent<Props, State> {\n  renderMeta(meta: MetricTankSeriesMeta, key: string) {\n    const styles = getStyles();\n    const buckets = parseSchemaRetentions(meta['schema-retentions']);\n    const rollupNotice = getRollupNotice([meta]);\n    const runtimeNotice = getRuntimeConsolidationNotice([meta]);\n    const normFunc = (meta['consolidator-normfetch'] ?? '').replace('Consolidator', '');\n\n    const totalSeconds = buckets.reduce(\n      (acc, bucket) => acc + (bucket.retention ? rangeUtil.intervalToSeconds(bucket.retention) : 0),\n      0\n    );\n\n    return (\n      <div className={styles.metaItem} key={key}>\n        <div className={styles.metaItemHeader}>\n          Schema: {meta['schema-name']}\n          <div className=\"small muted\">Series count: {meta.count}</div>\n        </div>\n        <div className={styles.metaItemBody}>\n          <div className={styles.step}>\n            <div className={styles.stepHeading}>Step 1: Fetch</div>\n            <div className={styles.stepDescription}>\n              First data is fetched, either from raw data archive or a rollup archive\n            </div>\n\n            {rollupNotice && <p>{rollupNotice.text}</p>}\n            {!rollupNotice && <p>No rollup archive was used</p>}\n\n            <div>\n              {buckets.map((bucket, index) => {\n                const bucketLength = bucket.retention ? rangeUtil.intervalToSeconds(bucket.retention) : 0;\n                const lengthPercent = (bucketLength / totalSeconds) * 100;\n                const isActive = index === meta['archive-read'];\n\n                return (\n                  <div key={bucket.retention} className={styles.bucket}>\n                    <div className={styles.bucketInterval}>{bucket.interval}</div>\n                    <div\n                      className={cx(styles.bucketRetention, { [styles.bucketRetentionActive]: isActive })}\n                      style={{ flexGrow: lengthPercent }}\n                    />\n                    <div style={{ flexGrow: 100 - lengthPercent }}>{bucket.retention}</div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          <div className={styles.step}>\n            <div className={styles.stepHeading}>Step 2: Normalization</div>\n            <div className={styles.stepDescription}>\n              Normalization happens when series with different intervals between points are combined.\n            </div>\n\n            {meta['aggnum-norm'] > 1 && <p>Normalization did occur using {normFunc}</p>}\n            {meta['aggnum-norm'] === 1 && <p>No normalization was needed</p>}\n          </div>\n\n          <div className={styles.step}>\n            <div className={styles.stepHeading}>Step 3: Runtime consolidation</div>\n            <div className={styles.stepDescription}>\n              If there are too many data points at this point Metrictank will consolidate them down to below max data\n              points (set in queries tab).\n            </div>\n\n            {runtimeNotice && <p>{runtimeNotice.text}</p>}\n            {!runtimeNotice && <p>No runtime consolidation</p>}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { data } = this.props;\n\n    // away to dedupe them\n    const seriesMetas: Record<string, MetricTankSeriesMeta> = {};\n\n    for (const series of data) {\n      if (series.meta && series.meta.custom) {\n        for (const metaItem of series.meta.custom.seriesMetaList as MetricTankSeriesMeta[]) {\n          // key is to dedupe as many series will have identitical meta\n          const key = `${JSON.stringify(metaItem)}`;\n\n          if (seriesMetas[key]) {\n            seriesMetas[key].count += metaItem.count;\n          } else {\n            seriesMetas[key] = metaItem;\n          }\n        }\n      }\n    }\n\n    if (Object.keys(seriesMetas).length === 0) {\n      return <div>No response meta data</div>;\n    }\n\n    return (\n      <div>\n        <h2 className=\"page-heading\">Metrictank Lineage</h2>\n        {Object.keys(seriesMetas).map((key) => this.renderMeta(seriesMetas[key], key))}\n      </div>\n    );\n  }\n}\n\nconst getStyles = stylesFactory(() => {\n  const { theme } = config;\n  const borderColor = theme.isDark ? theme.palette.gray25 : theme.palette.gray85;\n  const background = theme.isDark ? theme.palette.dark1 : theme.palette.white;\n  const headerBg = theme.isDark ? theme.palette.gray15 : theme.palette.gray85;\n\n  return {\n    metaItem: css`\n      background: ${background};\n      border: 1px solid ${borderColor};\n      margin-bottom: ${theme.spacing.md};\n    `,\n    metaItemHeader: css`\n      background: ${headerBg};\n      padding: ${theme.spacing.xs} ${theme.spacing.md};\n      font-size: ${theme.typography.size.md};\n      display: flex;\n      justify-content: space-between;\n    `,\n    metaItemBody: css`\n      padding: ${theme.spacing.md};\n    `,\n    stepHeading: css`\n      font-size: ${theme.typography.size.md};\n    `,\n    stepDescription: css`\n      font-size: ${theme.typography.size.sm};\n      color: ${theme.colors.textWeak};\n      margin-bottom: ${theme.spacing.sm};\n    `,\n    step: css`\n      margin-bottom: ${theme.spacing.lg};\n\n      &:last-child {\n        margin-bottom: 0;\n      }\n    `,\n    bucket: css`\n      display: flex;\n      margin-bottom: ${theme.spacing.sm};\n      border-radius: ${theme.border.radius.md};\n    `,\n    bucketInterval: css`\n      flex-grow: 0;\n      width: 60px;\n    `,\n    bucketRetention: css`\n      background: linear-gradient(0deg, ${theme.palette.blue85}, ${theme.palette.blue95});\n      text-align: center;\n      color: ${theme.palette.white};\n      margin-right: ${theme.spacing.md};\n      border-radius: ${theme.border.radius.md};\n    `,\n    bucketRetentionActive: css`\n      background: linear-gradient(0deg, ${theme.palette.greenBase}, ${theme.palette.greenShade});\n    `,\n  };\n});\n","import { GraphiteDatasource } from './datasource';\nimport { GraphiteQueryCtrl } from './query_ctrl';\nimport { DataSourcePlugin } from '@grafana/data';\nimport { ConfigEditor } from './configuration/ConfigEditor';\nimport { MetricTankMetaInspector } from './MetricTankMetaInspector';\n\nclass AnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n}\n\nexport const plugin = new DataSourcePlugin(GraphiteDatasource)\n  .setQueryCtrl(GraphiteQueryCtrl)\n  .setConfigEditor(ConfigEditor)\n  .setMetadataInspector(MetricTankMetaInspector)\n  .setAnnotationQueryCtrl(AnnotationsQueryCtrl);\n"],"sourceRoot":""}