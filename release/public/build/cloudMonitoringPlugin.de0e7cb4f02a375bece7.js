(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{z35t:function(e,t,a){"use strict";a.r(t);var r=a("Obii"),s=a("LvDl"),i=a("5kRJ"),c=a("NPB1"),n=a("qs2D"),l=a("F/XL"),o=a("67Y/"),u=a("9Z1F"),p=a("t8hP"),h=a("Xmxp"),d=a("GQ3c"),y=a("DqrJ");function j(){return(j=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e}).apply(this,arguments)}class b{constructor(e){this.cache=void 0,this.defaultOptions=void 0,this.baseUrl=e,this.cache={},this.defaultOptions={useCache:!0,responseMap:e=>e,baseUrl:this.baseUrl}}get(e,t){const{useCache:a,responseMap:r,baseUrl:s}=j({},this.defaultOptions,t);return a&&this.cache[e]?Promise.resolve(this.cache[e]):Object(p.getBackendSrv)().fetch({url:s+e,method:"GET"}).pipe(Object(o.a)(t=>{const s=e.match(/([^\/]*)\/*$/)[1].split("?")[0];let i=[];return t&&t.data&&t.data[s]&&(i=t.data[s].map(r)),a&&(this.cache[e]=i),i}),Object(u.a)(e=>(h.b.emit(d.CoreEvents.dsRequestError,{error:{data:{error:Object(y.b)(e)}}}),Object(l.a)([])))).toPromise()}post(e){return Object(p.getBackendSrv)().fetch({url:"/api/tsdb/query",method:"POST",data:e})}test(e){return Object(p.getBackendSrv)().fetch({url:`${this.baseUrl}${e}/metricDescriptors`,method:"GET"}).toPromise()}}var g=a("0/uQ"),m=a("psW0"),v=a("/yDe");function O(){return(O=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e}).apply(this,arguments)}class f{constructor(e){this.datasource=e}async execute(e){try{switch(e.projectName||(e.projectName=this.datasource.getDefaultProject()),e.selectedQueryType){case n.d.Projects:return this.handleProjectsQuery();case n.d.Services:return this.handleServiceQuery(e);case n.d.MetricTypes:return this.handleMetricTypesQuery(e);case n.d.LabelKeys:return this.handleLabelKeysQuery(e);case n.d.LabelValues:return this.handleLabelValuesQuery(e);case n.d.ResourceTypes:return this.handleResourceTypeQuery(e);case n.d.Aligners:return this.handleAlignersQuery(e);case n.d.AlignmentPeriods:return this.handleAlignmentPeriodQuery();case n.d.Aggregations:return this.handleAggregationQuery(e);case n.d.SLOServices:return this.handleSLOServicesQuery(e);case n.d.SLO:return this.handleSLOQuery(e);case n.d.Selectors:return this.handleSelectorQuery();default:return[]}}catch(t){return console.error("Could not run CloudMonitoringMetricFindQuery "+e,t),[]}}async handleProjectsQuery(){return(await this.datasource.getProjects()).map(e=>({text:e.label,value:e.value,expandable:!0}))}async handleServiceQuery({projectName:e}){const t=await this.datasource.getMetricTypes(e);return Object(y.a)(t).map(e=>({text:e.serviceShortName,value:e.service,expandable:!0}))}async handleMetricTypesQuery({selectedService:e,projectName:t}){if(!e)return[];const a=await this.datasource.getMetricTypes(t);return Object(y.h)(a,this.datasource.templateSrv.replace(e)).map(e=>({text:e.displayName,value:e.type,expandable:!0}))}async handleLabelKeysQuery({selectedMetricType:e,projectName:t}){if(!e)return[];return(await Object(y.f)(this.datasource,e,t)).map(this.toFindQueryResult)}async handleLabelValuesQuery({selectedMetricType:e,labelKey:t,projectName:a}){if(!e)return[];const r=await this.datasource.getLabels(e,"handleLabelValuesQuery",a,[t]),s=this.datasource.templateSrv.replace(t);return(r.hasOwnProperty(s)?r[s]:[]).map(this.toFindQueryResult)}async handleResourceTypeQuery({selectedMetricType:e,projectName:t}){var a,r;if(!e)return[];return null!==(a=null===(r=(await this.datasource.getLabels(e,"handleResourceTypeQueryQueryType",t))["resource.type"])||void 0===r?void 0:r.map(this.toFindQueryResult))&&void 0!==a?a:[]}async handleAlignersQuery({selectedMetricType:e,projectName:t}){if(!e)return[];const a=(await this.datasource.getMetricTypes(t)).find(t=>t.type===this.datasource.templateSrv.replace(e));return a?Object(y.d)(a.valueType,a.metricKind).map(this.toFindQueryResult):[]}async handleAggregationQuery({selectedMetricType:e,projectName:t}){if(!e)return[];const a=(await this.datasource.getMetricTypes(t)).find(t=>t.type===this.datasource.templateSrv.replace(e));return a?Object(y.c)(a.valueType,a.metricKind).map(this.toFindQueryResult):[]}async handleSLOServicesQuery({projectName:e}){return(await this.datasource.getSLOServices(e)).map(this.toFindQueryResult)}async handleSLOQuery({selectedSLOService:e,projectName:t}){return(await this.datasource.getServiceLevelObjectives(t,e)).map(this.toFindQueryResult)}async handleSelectorQuery(){return v.h.map(this.toFindQueryResult)}handleAlignmentPeriodQuery(){return v.c.map(this.toFindQueryResult)}toFindQueryResult(e){return Object(s.isString)(e)?{text:e,expandable:!0}:O({},e,{expandable:!0})}}var S,T=a("q1tI"),x=a("/Rrz"),C=a("nKUr");function w(){return(w=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e}).apply(this,arguments)}class P extends T.PureComponent{constructor(e){super(e),this.queryTypes=[{value:n.d.Projects,label:"Projects"},{value:n.d.Services,label:"Services"},{value:n.d.MetricTypes,label:"Metric Types"},{value:n.d.LabelKeys,label:"Label Keys"},{value:n.d.LabelValues,label:"Label Values"},{value:n.d.ResourceTypes,label:"Resource Types"},{value:n.d.Aggregations,label:"Aggregations"},{value:n.d.Aligners,label:"Aligners"},{value:n.d.AlignmentPeriods,label:"Alignment Periods"},{value:n.d.Selectors,label:"Selectors"},{value:n.d.SLOServices,label:"SLO Services"},{value:n.d.SLO,label:"Service Level Objectives (SLO)"}],this.defaults={selectedQueryType:this.queryTypes[0].value,metricDescriptors:[],selectedService:"",selectedMetricType:"",labels:[],labelKey:"",metricTypes:[],services:[],sloServices:[],selectedSLOService:"",projects:[],projectName:"",loading:!0},this.onPropsChange=()=>{const e=function(e,t){if(null==e)return{};var a,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(s[a]=e[a]);return s}(this.state,["metricDescriptors","labels","metricTypes","services"]);this.props.onChange(w({},e,{refId:"CloudMonitoringVariableQueryEditor-VariableQuery"}))},this.state=Object.assign(this.defaults,{projectName:this.props.datasource.getDefaultProject()},this.props.query)}async componentDidMount(){const e=await this.props.datasource.getProjects(),t=await this.props.datasource.getMetricTypes(this.props.query.projectName||this.props.datasource.getDefaultProject()),a=Object(y.a)(t).map(e=>({value:e.service,label:e.serviceShortName}));let r="";a.some(e=>e.value===Object(p.getTemplateSrv)().replace(this.state.selectedService))?r=this.state.selectedService:a&&a.length>0&&(r=a[0].value);const{metricTypes:s,selectedMetricType:i}=Object(y.g)(t,this.state.selectedMetricType,Object(p.getTemplateSrv)().replace(this.state.selectedMetricType),Object(p.getTemplateSrv)().replace(r)),c=await this.props.datasource.getSLOServices(this.state.projectName),n=w({services:a,selectedService:r,metricTypes:s,selectedMetricType:i,metricDescriptors:t,projects:e},await this.getLabels(i,this.state.projectName),{sloServices:c,loading:!1});this.setState(n,()=>this.onPropsChange())}async onQueryTypeChange(e){const t=w({selectedQueryType:e},await this.getLabels(this.state.selectedMetricType,this.state.projectName,e));this.setState(t)}async onProjectChange(e){const t=await this.props.datasource.getMetricTypes(e),a=await this.getLabels(this.state.selectedMetricType,e),{metricTypes:r,selectedMetricType:s}=Object(y.g)(t,this.state.selectedMetricType,Object(p.getTemplateSrv)().replace(this.state.selectedMetricType),Object(p.getTemplateSrv)().replace(this.state.selectedService)),i=await this.props.datasource.getSLOServices(e);this.setState(w({},a,{metricTypes:r,selectedMetricType:s,metricDescriptors:t,projectName:e,sloServices:i}),()=>this.onPropsChange())}async onServiceChange(e){const{metricTypes:t,selectedMetricType:a}=Object(y.g)(this.state.metricDescriptors,this.state.selectedMetricType,Object(p.getTemplateSrv)().replace(this.state.selectedMetricType),Object(p.getTemplateSrv)().replace(e)),r=w({selectedService:e,metricTypes:t,selectedMetricType:a},await this.getLabels(a,this.state.projectName));this.setState(r,()=>this.onPropsChange())}async onMetricTypeChange(e){const t=w({selectedMetricType:e},await this.getLabels(e,this.state.projectName));this.setState(t,()=>this.onPropsChange())}onLabelKeyChange(e){this.setState({labelKey:e},()=>this.onPropsChange())}componentDidUpdate(e,t){const a=t.selectedQueryType!==this.state.selectedQueryType,r=this.state.selectedSLOService!==t.selectedSLOService;(a||r)&&this.onPropsChange()}async getLabels(e,t,a=this.state.selectedQueryType){let r={labels:this.state.labels,labelKey:this.state.labelKey};if(e&&a===n.d.LabelValues){const a=await Object(y.f)(this.props.datasource,e,t),s=a.some(e=>e===Object(p.getTemplateSrv)().replace(this.state.labelKey))?this.state.labelKey:a[0];r={labels:a,labelKey:s}}return r}renderQueryTypeSwitch(e){const t={label:"Template Variables",expanded:!1,options:Object(p.getTemplateSrv)().getVariables().map(e=>({value:"$"+e.name,label:"$"+e.name}))};switch(e){case n.d.MetricTypes:return Object(C.jsxs)(C.Fragment,{children:[Object(C.jsx)(x.q,{allowCustomValue:!0,value:this.state.projectName,options:[t,...this.state.projects],onChange:e=>this.onProjectChange(e),label:"Project"}),Object(C.jsx)(x.q,{value:this.state.selectedService,options:[t,...this.state.services],onChange:e=>this.onServiceChange(e),label:"Service"})]});case n.d.LabelKeys:case n.d.LabelValues:case n.d.ResourceTypes:return Object(C.jsxs)(C.Fragment,{children:[Object(C.jsx)(x.q,{allowCustomValue:!0,value:this.state.projectName,options:[t,...this.state.projects],onChange:e=>this.onProjectChange(e),label:"Project"}),Object(C.jsx)(x.q,{value:this.state.selectedService,options:[t,...this.state.services],onChange:e=>this.onServiceChange(e),label:"Service"}),Object(C.jsx)(x.q,{value:this.state.selectedMetricType,options:[t,...this.state.metricTypes.map(({value:e,name:t})=>({value:e,label:t}))],onChange:e=>this.onMetricTypeChange(e),label:"Metric Type"}),e===n.d.LabelValues&&Object(C.jsx)(x.q,{value:this.state.labelKey,options:[t,...this.state.labels.map(e=>({value:e,label:e}))],onChange:e=>this.onLabelKeyChange(e),label:"Label Key"})]});case n.d.Aligners:case n.d.Aggregations:return Object(C.jsxs)(C.Fragment,{children:[Object(C.jsx)(x.q,{value:this.state.selectedService,options:[t,...this.state.services],onChange:e=>this.onServiceChange(e),label:"Service"}),Object(C.jsx)(x.q,{value:this.state.selectedMetricType,options:[t,...this.state.metricTypes.map(({value:e,name:t})=>({value:e,label:t}))],onChange:e=>this.onMetricTypeChange(e),label:"Metric Type"})]});case n.d.SLOServices:return Object(C.jsx)(C.Fragment,{children:Object(C.jsx)(x.q,{allowCustomValue:!0,value:this.state.projectName,options:[t,...this.state.projects],onChange:e=>this.onProjectChange(e),label:"Project"})});case n.d.SLO:return Object(C.jsxs)(C.Fragment,{children:[Object(C.jsx)(x.q,{allowCustomValue:!0,value:this.state.projectName,options:[t,...this.state.projects],onChange:e=>this.onProjectChange(e),label:"Project"}),Object(C.jsx)(x.q,{value:this.state.selectedSLOService,options:[t,...this.state.sloServices],onChange:e=>{this.setState(w({},this.state,{selectedSLOService:e}))},label:"SLO Service"})]});default:return""}}render(){return this.state.loading?S||(S=Object(C.jsxs)("div",{className:"gf-form max-width-21",children:[Object(C.jsx)("span",{className:"gf-form-label width-10 query-keyword",children:"Query Type"}),Object(C.jsx)("div",{className:"gf-form-select-wrapper max-width-12",children:Object(C.jsx)("select",{className:"gf-form-input",children:Object(C.jsx)("option",{children:"Loading..."})})})]})):Object(C.jsxs)(C.Fragment,{children:[Object(C.jsx)(x.q,{value:this.state.selectedQueryType,options:this.queryTypes,onChange:e=>this.onQueryTypeChange(e),label:"Query Type"}),this.renderQueryTypeSwitch(this.state.selectedQueryType)]})}}class Q extends r.CustomVariableSupport{constructor(e){super(),this.metricFindQuery=void 0,this.editor=P,this.datasource=e,this.metricFindQuery=new f(e),this.query=this.query.bind(this)}query(e){const t=Object(g.a)(this.metricFindQuery.execute(e.targets[0]));return Object(g.a)(this.datasource.ensureGCEDefaultProject()).pipe(Object(m.b)(()=>t),Object(o.a)(e=>({data:e})))}}var M=a("XlPw");function L(){return(L=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e}).apply(this,arguments)}class N extends p.DataSourceWithBackend{constructor(e,t=Object(i.a)(),a=Object(c.a)()){super(e),this.api=void 0,this.authenticationType=void 0,this.intervalMs=void 0,this.instanceSettings=e,this.templateSrv=t,this.timeSrv=a,this.authenticationType=e.jsonData.authenticationType||"jwt",this.api=new b(e.url+"/cloudmonitoring/v3/projects/"),this.variables=new Q(this),this.intervalMs=0}getVariables(){return this.templateSrv.getVariables().map(e=>"$"+e.name)}query(e){return e.targets=e.targets.map(t=>L({},this.migrateQuery(t),{intervalMs:e.intervalMs})),super.query(e)}async annotationQuery(e){await this.ensureGCEDefaultProject();const t=e.annotation,a=[{refId:"annotationQuery",type:"annotationQuery",datasourceId:this.id,view:"FULL",crossSeriesReducer:"REDUCE_NONE",perSeriesAligner:"ALIGN_NONE",metricType:this.templateSrv.replace(t.target.metricType,e.scopedVars||{}),title:this.templateSrv.replace(t.target.title,e.scopedVars||{}),text:this.templateSrv.replace(t.target.text,e.scopedVars||{}),tags:this.templateSrv.replace(t.target.tags,e.scopedVars||{}),projectName:this.templateSrv.replace(t.target.projectName?t.target.projectName:this.getDefaultProject(),e.scopedVars||{}),filters:this.interpolateFilters(t.target.filters||[],e.scopedVars)}];return this.api.post({from:e.range.from.valueOf().toString(),to:e.range.to.valueOf().toString(),queries:a}).pipe(Object(o.a)(({data:e})=>{const a=Object(p.toDataQueryResponse)({data:e}),r=[];if(0!==a.data.length)for(let e=0;e<a.data.length;e++)for(let s=0;s<a.data[e].fields[0].values.length;s++)r.push({annotation:t,time:Date.parse(a.data[e].fields[0].values.get(s)),title:a.data[e].fields[1].values.get(s),tags:[],text:a.data[e].fields[3].values.get(s)});return r})).toPromise()}applyTemplateVariables({metricQuery:e,refId:t,queryType:a,sloQuery:r},s){return{datasourceId:this.id,refId:t,intervalMs:this.intervalMs,type:"timeSeriesQuery",queryType:a,metricQuery:L({},this.interpolateProps(e,s),{projectName:this.templateSrv.replace(e.projectName?e.projectName:this.getDefaultProject(),s),filters:this.interpolateFilters(e.filters||[],s),groupBys:this.interpolateGroupBys(e.groupBys||[],s),view:e.view||"FULL",editorMode:e.editorMode}),sloQuery:r&&this.interpolateProps(r,s)}}async getLabels(e,t,a,r){const s={targets:[{refId:t,datasourceId:this.id,queryType:n.g.METRICS,metricQuery:{projectName:this.templateSrv.replace(a),metricType:this.templateSrv.replace(e),groupBys:this.interpolateGroupBys(r||[],{}),crossSeriesReducer:"REDUCE_NONE",view:"HEADERS"}}],range:this.timeSrv.timeRange()},i=s.targets;return i.length?Object(g.a)(this.ensureGCEDefaultProject()).pipe(Object(m.b)(()=>this.api.post({from:s.range.from.valueOf().toString(),to:s.range.to.valueOf().toString(),queries:i})),Object(o.a)(({data:e})=>e),Object(o.a)(e=>{const a=e.results[t];return a&&a.meta?a.meta.labels:{}})).toPromise():Object(l.a)({results:[]}).toPromise()}async testDatasource(){let e,t;try{await this.ensureGCEDefaultProject();const a=await this.api.test(this.getDefaultProject());200===a.status?(e="success",t="Successfully queried the Google Cloud Monitoring API."):(e="error",t=a.statusText?a.statusText:"Cannot connect to Google Cloud Monitoring API")}catch(a){e="error",Object(s.isString)(a)?t=a:(t="Google Cloud Monitoring: ",t+=a.statusText?a.statusText:"Cannot connect to Google Cloud Monitoring API",a.data&&a.data.error&&a.data.error.code&&(t+=": "+a.data.error.code+". "+a.data.error.message))}finally{return{status:e,message:t}}}async getGCEDefaultProject(){return this.api.post({queries:[{refId:"getGCEDefaultProject",type:"getGCEDefaultProject",datasourceId:this.id}]}).pipe(Object(o.a)(({data:e})=>e&&e.results&&e.results.getGCEDefaultProject&&e.results.getGCEDefaultProject.meta?e.results.getGCEDefaultProject.meta.defaultProject:""),Object(u.a)(e=>Object(M.a)(e.data.error))).toPromise()}getDefaultProject(){const{defaultProject:e,authenticationType:t,gceDefaultProject:a}=this.instanceSettings.jsonData;return"gce"===t?a||"":e||""}async ensureGCEDefaultProject(){const{authenticationType:e,gceDefaultProject:t}=this.instanceSettings.jsonData;"gce"!==e||t||(this.instanceSettings.jsonData.gceDefaultProject=await this.getGCEDefaultProject())}async getMetricTypes(e){return e?this.api.get(this.templateSrv.replace(e)+"/metricDescriptors",{responseMap:e=>{const[t]=e.type.split("/"),[a]=t.split(".");return e.service=t,e.serviceShortName=a,e.displayName=e.displayName||e.type,e}}):[]}async getSLOServices(e){return this.api.get(this.templateSrv.replace(e)+"/services?pageSize=1000",{responseMap:({name:e,displayName:t})=>({value:e.match(/([^\/]*)\/*$/)[1],label:t||e.match(/([^\/]*)\/*$/)[1]})})}async getServiceLevelObjectives(e,t){if(!t)return Promise.resolve([]);let{projectName:a,serviceId:r}=this.interpolateProps({projectName:e,serviceId:t});return this.api.get(`${a}/services/${r}/serviceLevelObjectives`,{responseMap:({name:e,displayName:t,goal:a})=>({value:e.match(/([^\/]*)\/*$/)[1],label:t,goal:a})})}getProjects(){return this.api.get("projects",{responseMap:({projectId:e,name:t})=>({value:e,label:t}),baseUrl:this.instanceSettings.url+"/cloudresourcemanager/v1/"})}migrateQuery(e){if(!e.hasOwnProperty("metricQuery")){const t=e,{hide:a,refId:r,intervalMs:s,type:i}=t,c=function(e,t){if(null==e)return{};var a,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(s[a]=e[a]);return s}(t,["hide","refId","datasource","key","queryType","maxLines","metric","intervalMs","type"]);return{refId:r,intervalMs:s,type:i,hide:a,queryType:n.g.METRICS,metricQuery:L({},c,{view:c.view||"FULL"})}}return e}interpolateProps(e,t={}){return Object.entries(e).reduce((e,[a,r])=>L({},e,{[a]:r&&Object(s.isString)(r)?this.templateSrv.replace(r,t):r}),{})}filterQuery(e){if(e.hide)return!1;if(e.queryType&&e.queryType===n.g.SLO&&e.sloQuery){const{selectorName:t,serviceId:a,sloId:r,projectName:s}=e.sloQuery;return!!(t&&a&&r&&s)}if(e.queryType&&e.queryType===n.g.METRICS&&e.metricQuery.editorMode===n.c.MQL)return!!e.metricQuery.projectName&&!!e.metricQuery.query;const{metricType:t}=e.metricQuery;return!!t}interpolateVariablesInQueries(e,t){return e.map(e=>this.applyTemplateVariables(e,t))}interpolateFilters(e,t){const a=Object(s.chunk)(e,4).map(([e,t,a,r])=>L({key:e,operator:t,value:a},r&&{condition:r})).reduce((e,t)=>t.value?[...e,t]:e,[]);return Object(s.flatten)(a.map(({key:e,operator:a,value:r,condition:s})=>[this.templateSrv.replace(e,t||{}),a,this.templateSrv.replace(r,t||{},"regex"),...s?[s]:[]]))||[]}interpolateGroupBys(e,t){let a=[];return(e||[]).forEach(e=>{const r=this.templateSrv.replace(e,t||{},"csv").split(",");Array.isArray(r)?a=a.concat(r):a.push(r)}),a}}var D,q=a("u1gj"),F=a("kDLi"),E=a("vF1F");const G=["project_id","private_key","client_email","token_uri"];function k({onChange:e,isConfigured:t}){const a=Object(F.useStyles)(A),[r,i]=Object(T.useState)(!t),[c,n]=Object(T.useState)(null);return r?Object(C.jsxs)(C.Fragment,{children:[Object(C.jsx)(F.FileUpload,{className:a,accept:"application/json",onFileUpload:t=>{var a,r;if(1===(null==t||null===(a=t.currentTarget)||void 0===a||null===(r=a.files)||void 0===r?void 0:r.length)){n(null);const a=new FileReader,r=()=>t=>{const a=JSON.parse(t.target.result);(e=>!!(e.token_uri&&e.client_email&&e.project_id&&e.project_id))(a)?(e(a),i(!1)):n("Invalid JWT file")};a.onload=r(),a.readAsText(t.currentTarget.files[0])}else n("You can only upload one file")},children:"Upload service account key file"}),c&&Object(C.jsx)("p",{className:Object(E.cx)(a,"alert"),children:c})]}):Object(C.jsxs)(C.Fragment,{children:[G.map((e,t)=>Object(C.jsx)(F.InlineField,{label:Object(s.startCase)(e),labelWidth:20,disabled:!0,children:D||(D=Object(C.jsx)(F.Input,{width:40,placeholder:"configured"}))},t)),Object(C.jsx)(F.Button,{variant:"secondary",onClick:()=>i(!0),className:a,children:"Upload another JWT file"}),Object(C.jsx)(F.Alert,{title:"",className:a,severity:"info",children:"Do not forget to save your changes after uploading a file"})]})}const A=e=>E.css`
  margin: ${e.spacing.md} 0 0;
`;var I,R,V,_,K,U,$,J,B,W,z,X,Y,H,Z,ee,te,ae,re,se,ie,ce,ne;function le(){return(le=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e}).apply(this,arguments)}class oe extends T.PureComponent{render(){const{options:e,onOptionsChange:t}=this.props,{secureJsonFields:a,jsonData:s}=e;return s.hasOwnProperty("authenticationType")||(s.authenticationType=n.b.JWT),Object(C.jsxs)(C.Fragment,{children:[I||(I=Object(C.jsx)("div",{className:"gf-form-group",children:Object(C.jsxs)("div",{className:"grafana-info-box",children:[Object(C.jsx)("h4",{children:"Google Cloud Monitoring Authentication"}),Object(C.jsx)("p",{children:"There are two ways to authenticate the Google Cloud Monitoring plugin - either by uploading a Service Account key file or by automatically retrieving credentials from the Google metadata server. The latter option is only available when running Grafana on a GCE virtual machine."}),Object(C.jsx)("h5",{children:"Uploading a Service Account Key File"}),Object(C.jsx)("p",{children:"There are two ways to authenticate the Google Cloud Monitoring plugin. You can upload a Service Account key file or automatically retrieve credentials from the Google metadata server. The latter option is only available when running Grafana on a GCE virtual machine."}),Object(C.jsxs)("p",{children:["The ",Object(C.jsx)("strong",{children:"Monitoring Viewer"})," role provides all the permissions that Grafana needs. The following API needs to be enabled on GCP for the data source to work:"," ",Object(C.jsx)("a",{className:"external-link",target:"_blank",rel:"noopener noreferrer",href:"https://console.cloud.google.com/apis/library/monitoring.googleapis.com",children:"Monitoring API"})]}),Object(C.jsx)("h5",{children:"GCE Default Service Account"}),Object(C.jsx)("p",{children:"If Grafana is running on a Google Compute Engine (GCE) virtual machine, it is possible for Grafana to automatically retrieve the default project id and authentication token from the metadata server. In order for this to work, you need to make sure that you have a service account that is setup as the default account for the virtual machine and that the service account has been given read access to the Google Cloud Monitoring Monitoring API."}),Object(C.jsxs)("p",{children:["Detailed instructions on how to create a Service Account can be found"," ",Object(C.jsx)("a",{className:"external-link",target:"_blank",rel:"noopener noreferrer",href:"https://grafana.com/docs/grafana/latest/datasources/google-cloud-monitoring/",children:"in the documentation."})]})]})})),Object(C.jsxs)(F.FieldSet,{children:[Object(C.jsx)(F.InlineField,{label:"Authentication type",labelWidth:20,children:Object(C.jsx)(F.Select,{width:40,value:n.i.find(e=>e.value===s.authenticationType)||n.i[0],options:n.i,defaultValue:s.authenticationType,onChange:Object(r.onUpdateDatasourceJsonDataOptionSelect)(this.props,"authenticationType")})}),s.authenticationType===n.b.JWT&&Object(C.jsx)(k,{isConfigured:a&&!!a.jwt,onChange:({private_key:a,client_email:r,project_id:s,token_uri:i})=>{t(le({},e,{secureJsonData:le({},e.secureJsonData,{privateKey:a}),jsonData:le({},e.jsonData,{defaultProject:s,clientEmail:r,tokenUri:i})}))}})]}),s.authenticationType===n.b.GCE&&(R||(R=Object(C.jsx)(F.Alert,{title:"",severity:"info",children:"Verify GCE default service account by clicking Save & Test"})))]})}}class ue extends T.PureComponent{render(){return Object(C.jsxs)("div",{children:[V||(V=Object(C.jsx)("h2",{children:"Cloud Monitoring alias patterns"})),Object(C.jsxs)("div",{children:[_||(_=Object(C.jsx)("p",{children:"Format the legend keys any way you want by using alias patterns. Format the legend keys any way you want by using alias patterns."})),"Example:",K||(K=Object(C.jsx)("code",{children:"{{metric.name}} - {{metric.label.instance_name}}"})),U||(U=Object(C.jsx)("br",{})),"Result:   ",$||($=Object(C.jsx)("code",{children:"cpu/usage_time - server1-europe-west-1"})),J||(J=Object(C.jsx)("br",{})),B||(B=Object(C.jsx)("br",{})),W||(W=Object(C.jsx)("label",{children:"Patterns"})),z||(z=Object(C.jsx)("br",{})),Object(C.jsxs)("ul",{className:E.css`
              list-style: none;
            `,children:[X||(X=Object(C.jsxs)("li",{children:[Object(C.jsx)("code",{children:"{{metric.type}}"})," = metric type e.g. compute.googleapis.com/instance/cpu/usage_time"]})),Y||(Y=Object(C.jsxs)("li",{children:[Object(C.jsx)("code",{children:"{{metric.name}}"})," = name part of metric e.g. instance/cpu/usage_time"]})),H||(H=Object(C.jsxs)("li",{children:[Object(C.jsx)("code",{children:"{{metric.service}}"})," = service part of metric e.g. compute"]})),Z||(Z=Object(C.jsxs)("li",{children:[Object(C.jsx)("code",{children:"{{metric.label.label_name}}"})," = Metric label metadata e.g. metric.label.instance_name"]})),ee||(ee=Object(C.jsxs)("li",{children:[Object(C.jsx)("code",{children:"{{resource.label.label_name}}"})," = Resource label metadata e.g. resource.label.zone"]})),te||(te=Object(C.jsxs)("li",{children:[Object(C.jsx)("code",{children:"{{metadata.system_labels.name}}"})," = Meta data system labels e.g. metadata.system_labels.name. For this to work, the needs to be included in the group by"]})),ae||(ae=Object(C.jsxs)("li",{children:[Object(C.jsx)("code",{children:"{{metadata.user_labels.name}}"})," = Meta data user labels e.g. metadata.user_labels.name. For this to work, the needs to be included in the group by"]})),re||(re=Object(C.jsxs)("li",{children:[Object(C.jsx)("code",{children:"{{bucket}}"})," = bucket boundary for distribution metrics when using a heatmap in Grafana"]})),se||(se=Object(C.jsxs)("li",{children:[Object(C.jsx)("code",{children:"{{project}}"})," = The project name that was specified in the query editor"]})),ie||(ie=Object(C.jsxs)("li",{children:[Object(C.jsx)("code",{children:"{{service}}"})," = The service id that was specified in the SLO query editor"]})),ce||(ce=Object(C.jsxs)("li",{children:[Object(C.jsx)("code",{children:"{{slo}}"})," = The SLO id that was specified in the SLO query editor"]})),ne||(ne=Object(C.jsxs)("li",{children:[Object(C.jsx)("code",{children:"{{selector}}"})," = The Selector function that was specified in the SLO query editor"]}))]})]})]})}}class pe{constructor(e){this.annotation=e.ctrl.annotation||{},this.annotation.target=e.ctrl.annotation.target||{},this.onQueryChange=this.onQueryChange.bind(this)}onQueryChange(e){Object.assign(this.annotation.target,e)}}pe.$inject=["$scope"],pe.templateUrl="partials/annotations.editor.html",a.d(t,"plugin",(function(){return he}));const he=new r.DataSourcePlugin(N).setQueryEditorHelp(ue).setQueryEditor(q.a).setConfigEditor(oe).setAnnotationQueryCtrl(pe).setVariableQueryEditor(P)}}]);
//# sourceMappingURL=cloudMonitoringPlugin.de0e7cb4f02a375bece7.js.map