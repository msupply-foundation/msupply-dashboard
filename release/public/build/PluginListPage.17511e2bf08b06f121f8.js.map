{"version":3,"sources":["webpack:///./public/app/core/components/PageActionBar/PageActionBar.tsx","webpack:///./public/app/features/plugins/PluginListItem.tsx","webpack:///./public/app/features/plugins/PluginList.tsx","webpack:///./public/app/features/plugins/PluginListPage.tsx","webpack:///./public/app/features/plugins/PluginsErrorsInfo.tsx","webpack:///./public/app/features/plugins/state/selectors.ts"],"names":["PageActionBar","PureComponent","render","searchQuery","linkButton","setSearchQuery","target","placeholder","this","props","linkProps","href","className","value","onChange","title","PluginListItem","plugin","aria-label","selectors","pages","PluginsList","listItem","id","type","status","signature","hasUpdate","bs-tooltip","src","info","logos","small","name","author","PluginList","plugins","list","map","index","mapStateToProps","state","navModel","getNavModel","navIndex","getPlugins","getPluginsSearchQuery","hasFetched","mapDispatchToProps","loadPlugins","setPluginsSearchQuery","PluginListPage","connect","useAsync","async","actionTarget","config","pluginAdminEnabled","undefined","page","Contents","isLoading","query","hot","module","errors","getAllPluginsErrors","loadPluginsErrors","PluginsErrorsInfo","children","theme","useTheme","loading","length","signatureErrorNotice","severity","urlTitle","url","items","css","renderItem","e","spacing","sm","justify","align","pluginId","mapPluginErrorCodeToSignatureStatus","errorCode","code","PluginErrorCode","invalidSignature","PluginSignatureStatus","invalid","missingSignature","missing","modifiedSignature","modified","regex","RegExp","filter","item","test","description"],"mappings":"mYAYe,MAAMA,UAAsBC,gBACzCC,SACE,MAAM,YAAEC,EAAF,WAAeC,EAAf,eAA2BC,EAA3B,OAA2CC,EAA3C,YAAmDC,EAAc,0BAA6BC,KAAKC,MACnGC,EAAY,CAAEC,KAAMP,aAAF,EAAEA,EAAYO,MAMtC,OAJIL,IACDI,EAAkBJ,OAASA,GAI5B,sBAAKM,UAAU,kBAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,cAAC,IAAD,CAAaC,MAAOV,EAAaW,SAAUT,EAAgBE,YAAaA,MAEzEH,GAAc,cAAC,aAAD,KAAgBM,EAAhB,UAA4BN,EAAWW,e,sFCc/CC,MA/BoBP,IACjC,MAAM,OAAEQ,GAAWR,EAEnB,OACE,oBAAIG,UAAU,oBAAoBM,aAAYC,YAAUC,MAAMC,YAAYC,SAA1E,SACE,oBAAGV,UAAU,YAAYD,KAAO,WAAUM,EAAOM,MAAjD,UACE,sBAAKX,UAAU,mBAAf,UACE,qBAAKA,UAAU,iBAAf,SAAiCK,EAAOO,OACxC,qBAAKZ,UAAU,kBAAf,SACE,cAAC,uBAAD,CAAsBa,OAAQR,EAAOS,cAEtCT,EAAOU,YAAP,MACC,qBAAKf,UAAU,mBAAf,SACE,sBAAMgB,aAAW,uBAAjB,sCAIN,sBAAKhB,UAAU,iBAAf,UACE,wBAAQA,UAAU,mBAAlB,SACE,qBAAKiB,IAAKZ,EAAOa,KAAKC,MAAMC,UAE9B,sBAAKpB,UAAU,oBAAf,UACE,qBAAKA,UAAU,iBAAf,SAAiCK,EAAOgB,OACxC,qBAAKrB,UAAU,qBAAf,SAAsC,MAAKK,EAAOa,KAAKI,OAAOD,mBCT3DE,IAdgB1B,IAC7B,MAAM,QAAE2B,GAAY3B,EAEpB,OACE,yBAASG,UAAU,qCAAnB,SACE,oBAAIA,UAAU,YAAYM,aAAYC,YAAUC,MAAMC,YAAYgB,KAAlE,SACGD,EAAQE,IAAI,CAACrB,EAAQsB,IACb,cAAC,EAAD,CAAgBtB,OAAQA,GAAc,GAAEA,EAAOgB,QAAQM,Y,4RCAxE,MAAMC,EAAmBC,IAAD,CACtBC,SAAUC,YAAYF,EAAMG,SAAU,WACtCR,QAASS,YAAWJ,EAAML,SAC1BjC,YAAa2C,YAAsBL,EAAML,SACzCW,WAAYN,EAAML,QAAQW,aAGtBC,EAAqB,CACzBC,gBACAC,2BAMWC,GAHKC,kBAAQZ,EAAiBQ,GAGI,EAC7CD,aACAL,WACAN,UACAc,wBACA/C,cACA8C,kBAEAI,YAASC,UACPL,KACC,CAACA,IAEJ,IAAIM,EAAmC,SACvC,MAAMnD,EAAa,CACjBO,KAAM,6DACNI,MAAO,oCAST,OANIyC,SAAOC,qBACTrD,EAAWO,KAAO,+BAClBP,EAAWW,MAAQ,2BACnBwC,OAAeG,GAIf,cAAC,IAAD,CAAMhB,SAAUA,EAAUxB,aAAYC,YAAUC,MAAMC,YAAYsC,KAAlE,SACE,cAAC,IAAKC,SAAN,CAAeC,WAAYd,EAA3B,SACE,qCACE,cAAC,IAAD,CACE5C,YAAaA,EACbE,eAAiByD,GAAUZ,EAAsBY,GACjD1D,WAAYA,EACZG,YAAY,8CACZD,OAAQiD,IANZ,MAQE,cAAC,IAAD,KACCR,GAAcX,GAAW,cAAC,IAAD,CAAYA,QAASA,aAO1C2B,wBAAIC,EAAJD,CAAYX,kBAAQZ,EAAiBQ,EAAzBI,CAA6CD,K,2PC9DxE,MAAMX,EAAmBC,IAAD,CACtBwB,OAAQC,YAAoBzB,EAAML,WAG9BY,EAAqB,CACzBmB,uBAiEWC,GA3DKhB,kBAAQZ,EAAiBQ,GA2DVe,cAAIC,EAAJD,CAC/BX,kBAAQZ,EAAiBQ,EAAzBI,CAzD4E,EAC5Ee,oBACAF,SACAI,eAEA,MAAMC,EAAQC,sBAER,QAAEC,GAAYnB,IAASC,gBACrBa,KACL,CAAClB,MAEJ,OAAIuB,GAA6B,IAAlBP,EAAOQ,OACb,KAGP,cAAC,UAAD,CACEvD,aAAYC,YAAUC,MAAMC,YAAYqD,qBACxCC,SAAS,UACTC,SAAS,iCACTC,IAAI,qEAJN,SAME,sCACE,iMADF,sEAME,cAAC,OAAD,CACEC,MAAOb,EACPrD,UAAWmE,KAAI;;YAGfC,WAAaC,GACX,qBACErE,UAAWmE,KAAI;8BACCT,EAAMY,QAAQC;gBAFhC,SAKE,eAAC,kBAAD,CAAiBD,QAAQ,KAAKE,QAAQ,aAAaC,MAAM,SAAzD,UACE,iCAASJ,EAAEK,WACX,cAAC,uBAAD,CACE7D,OAAQ8D,EAAoCN,EAAEO,WAC9C5E,UAAWmE,KAAI;;6BAQxBV,WAUT,SAASkB,EAAoCE,GAC3C,OAAQA,GACN,KAAKC,kBAAgBC,iBACnB,OAAOC,wBAAsBC,QAC/B,KAAKH,kBAAgBI,iBACnB,OAAOF,wBAAsBG,QAC/B,KAAKL,kBAAgBM,kBACnB,OAAOJ,wBAAsBK,SAC/B,QACE,OAAOL,wBAAsBG,Y,2DC7FnC,sGAAO,MAAMlD,EAAcJ,IACzB,MAAMyD,EAAQ,IAAIC,OAAO1D,EAAMtC,YAAa,KAE5C,OAAOsC,EAAML,QAAQgE,OAAQC,GAEzBH,EAAMI,KAAKD,EAAKpE,OAChBiE,EAAMI,KAAKD,EAAKvE,KAAKI,OAAOD,OAC5BiE,EAAMI,KAAKD,EAAK7E,OAChB0E,EAAMI,KAAKD,EAAKvE,KAAKyE,eAIdrC,EAAuBzB,GAC3BA,EAAMwB,OAGFnB,EAAyBL,GAAwBA,EAAMtC","file":"PluginListPage.17511e2bf08b06f121f8.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { FilterInput } from '../FilterInput/FilterInput';\nimport { LinkButton } from '@grafana/ui';\n\nexport interface Props {\n  searchQuery: string;\n  setSearchQuery: (value: string) => void;\n  linkButton?: { href: string; title: string };\n  target?: string;\n  placeholder?: string;\n}\n\nexport default class PageActionBar extends PureComponent<Props> {\n  render() {\n    const { searchQuery, linkButton, setSearchQuery, target, placeholder = 'Search by name or type' } = this.props;\n    const linkProps = { href: linkButton?.href };\n\n    if (target) {\n      (linkProps as any).target = target;\n    }\n\n    return (\n      <div className=\"page-action-bar\">\n        <div className=\"gf-form gf-form--grow\">\n          <FilterInput value={searchQuery} onChange={setSearchQuery} placeholder={placeholder} />\n        </div>\n        {linkButton && <LinkButton {...linkProps}>{linkButton.title}</LinkButton>}\n      </div>\n    );\n  }\n}\n","import React, { FC } from 'react';\nimport { PluginMeta } from '@grafana/data';\nimport { PluginSignatureBadge } from '@grafana/ui';\nimport { selectors } from '@grafana/e2e-selectors';\n\ninterface Props {\n  plugin: PluginMeta;\n}\n\nconst PluginListItem: FC<Props> = (props) => {\n  const { plugin } = props;\n\n  return (\n    <li className=\"card-item-wrapper\" aria-label={selectors.pages.PluginsList.listItem}>\n      <a className=\"card-item\" href={`plugins/${plugin.id}/`}>\n        <div className=\"card-item-header\">\n          <div className=\"card-item-type\">{plugin.type}</div>\n          <div className=\"card-item-badge\">\n            <PluginSignatureBadge status={plugin.signature} />\n          </div>\n          {plugin.hasUpdate && (\n            <div className=\"card-item-notice\">\n              <span bs-tooltip=\"plugin.latestVersion\">Update available!</span>\n            </div>\n          )}\n        </div>\n        <div className=\"card-item-body\">\n          <figure className=\"card-item-figure\">\n            <img src={plugin.info.logos.small} />\n          </figure>\n          <div className=\"card-item-details\">\n            <div className=\"card-item-name\">{plugin.name}</div>\n            <div className=\"card-item-sub-name\">{`By ${plugin.info.author.name}`}</div>\n          </div>\n        </div>\n      </a>\n    </li>\n  );\n};\n\nexport default PluginListItem;\n","import React, { FC } from 'react';\nimport PluginListItem from './PluginListItem';\nimport { PluginMeta } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\ninterface Props {\n  plugins: PluginMeta[];\n}\n\nconst PluginList: FC<Props> = (props) => {\n  const { plugins } = props;\n\n  return (\n    <section className=\"card-section card-list-layout-list\">\n      <ol className=\"card-list\" aria-label={selectors.pages.PluginsList.list}>\n        {plugins.map((plugin, index) => {\n          return <PluginListItem plugin={plugin} key={`${plugin.name}-${index}`} />;\n        })}\n      </ol>\n    </section>\n  );\n};\n\nexport default PluginList;\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect, ConnectedProps } from 'react-redux';\nimport Page from 'app/core/components/Page/Page';\nimport PageActionBar from 'app/core/components/PageActionBar/PageActionBar';\nimport PluginList from './PluginList';\nimport { loadPlugins } from './state/actions';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { getPlugins, getPluginsSearchQuery } from './state/selectors';\nimport { StoreState } from 'app/types';\nimport { setPluginsSearchQuery } from './state/reducers';\nimport { useAsync } from 'react-use';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { PluginsErrorsInfo } from './PluginsErrorsInfo';\nimport { config } from '@grafana/runtime';\n\nconst mapStateToProps = (state: StoreState) => ({\n  navModel: getNavModel(state.navIndex, 'plugins'),\n  plugins: getPlugins(state.plugins),\n  searchQuery: getPluginsSearchQuery(state.plugins),\n  hasFetched: state.plugins.hasFetched,\n});\n\nconst mapDispatchToProps = {\n  loadPlugins,\n  setPluginsSearchQuery,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport type Props = ConnectedProps<typeof connector>;\n\nexport const PluginListPage: React.FC<Props> = ({\n  hasFetched,\n  navModel,\n  plugins,\n  setPluginsSearchQuery,\n  searchQuery,\n  loadPlugins,\n}) => {\n  useAsync(async () => {\n    loadPlugins();\n  }, [loadPlugins]);\n\n  let actionTarget: string | undefined = '_blank';\n  const linkButton = {\n    href: 'https://grafana.com/plugins?utm_source=grafana_plugin_list',\n    title: 'Find more plugins on Grafana.com',\n  };\n\n  if (config.pluginAdminEnabled) {\n    linkButton.href = '/a/grafana-plugin-admin-app/';\n    linkButton.title = 'Install & manage plugins';\n    actionTarget = undefined;\n  }\n\n  return (\n    <Page navModel={navModel} aria-label={selectors.pages.PluginsList.page}>\n      <Page.Contents isLoading={!hasFetched}>\n        <>\n          <PageActionBar\n            searchQuery={searchQuery}\n            setSearchQuery={(query) => setPluginsSearchQuery(query)}\n            linkButton={linkButton}\n            placeholder=\"Search by name, author, description or type\"\n            target={actionTarget}\n          />\n          <PluginsErrorsInfo />\n          {hasFetched && plugins && <PluginList plugins={plugins} />}\n        </>\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default hot(module)(connect(mapStateToProps, mapDispatchToProps)(PluginListPage));\n","import React from 'react';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { HorizontalGroup, InfoBox, List, PluginSignatureBadge, useTheme } from '@grafana/ui';\nimport { StoreState } from '../../types';\nimport { getAllPluginsErrors } from './state/selectors';\nimport { loadPlugins, loadPluginsErrors } from './state/actions';\nimport useAsync from 'react-use/lib/useAsync';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { hot } from 'react-hot-loader';\nimport { PluginErrorCode, PluginSignatureStatus } from '@grafana/data';\nimport { css } from '@emotion/css';\n\nconst mapStateToProps = (state: StoreState) => ({\n  errors: getAllPluginsErrors(state.plugins),\n});\n\nconst mapDispatchToProps = {\n  loadPluginsErrors,\n};\n\ninterface OwnProps {\n  children?: React.ReactNode;\n}\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PluginsErrorsInfoProps = ConnectedProps<typeof connector> & OwnProps;\n\nexport const PluginsErrorsInfoUnconnected: React.FC<PluginsErrorsInfoProps> = ({\n  loadPluginsErrors,\n  errors,\n  children,\n}) => {\n  const theme = useTheme();\n\n  const { loading } = useAsync(async () => {\n    await loadPluginsErrors();\n  }, [loadPlugins]);\n\n  if (loading || errors.length === 0) {\n    return null;\n  }\n  return (\n    <InfoBox\n      aria-label={selectors.pages.PluginsList.signatureErrorNotice}\n      severity=\"warning\"\n      urlTitle=\"Read more about plugin signing\"\n      url=\"https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/\"\n    >\n      <div>\n        <p>\n          Unsigned plugins were found during plugin initialization. Grafana Labs cannot guarantee the integrity of these\n          plugins. We recommend only using signed plugins.\n        </p>\n        The following plugins are disabled and not shown in the list below:\n        <List\n          items={errors}\n          className={css`\n            list-style-type: circle;\n          `}\n          renderItem={(e) => (\n            <div\n              className={css`\n                margin-top: ${theme.spacing.sm};\n              `}\n            >\n              <HorizontalGroup spacing=\"sm\" justify=\"flex-start\" align=\"center\">\n                <strong>{e.pluginId}</strong>\n                <PluginSignatureBadge\n                  status={mapPluginErrorCodeToSignatureStatus(e.errorCode)}\n                  className={css`\n                    margin-top: 0;\n                  `}\n                />\n              </HorizontalGroup>\n            </div>\n          )}\n        />\n        {children}\n      </div>\n    </InfoBox>\n  );\n};\n\nexport const PluginsErrorsInfo = hot(module)(\n  connect(mapStateToProps, mapDispatchToProps)(PluginsErrorsInfoUnconnected)\n);\n\nfunction mapPluginErrorCodeToSignatureStatus(code: PluginErrorCode) {\n  switch (code) {\n    case PluginErrorCode.invalidSignature:\n      return PluginSignatureStatus.invalid;\n    case PluginErrorCode.missingSignature:\n      return PluginSignatureStatus.missing;\n    case PluginErrorCode.modifiedSignature:\n      return PluginSignatureStatus.modified;\n    default:\n      return PluginSignatureStatus.missing;\n  }\n}\n","import { PluginsState } from 'app/types/plugins';\n\nexport const getPlugins = (state: PluginsState) => {\n  const regex = new RegExp(state.searchQuery, 'i');\n\n  return state.plugins.filter((item) => {\n    return (\n      regex.test(item.name) ||\n      regex.test(item.info.author.name) ||\n      regex.test(item.type) ||\n      regex.test(item.info.description)\n    );\n  });\n};\nexport const getAllPluginsErrors = (state: PluginsState) => {\n  return state.errors;\n};\n\nexport const getPluginsSearchQuery = (state: PluginsState) => state.searchQuery;\n"],"sourceRoot":""}